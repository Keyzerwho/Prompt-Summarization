You are given $n$ different binary words. A word is called binary if it contains only characters '0' and '1'.You want to order the words such that the first character of a word matches the last character of the previous word.If you cannot put the words in that order then you can reverse some words so that: the final set of $n$ words still contains different words; there is a way to put all words of the final set of words in the order specified.Input:The first line of the input contains one integer $t$ ($1 \le t \le 10^4$) — thenumber of test cases in the input. Then $t$ test cases follow.The first line of a test case contains one integer $n$ ($1 \le n \le2\cdot10^5$) — the number of words in the list. Next $n$ lines contain thesewords. The sum of word lengths doesn't exceed $4\cdot10^6$. All words are different.Output:Print answer for all of $t$ test cases in the order they appear.If there is no answer for the test case, print -1. Otherwise, the first line ofthe output should contain $k$ ($0 \le k \le n$) — the minimal number of wordsin the set which should be reversed. The second line of the output shouldcontain $k$ distinct integers — the indexes of the words in the set whichshould be reversed. Words are numerated from $1$ to $n$ in the order theyappear. If $k=0$ you can skip this line (or you can print an empty line). Ifthere are many answers you can print any of them.-----Example-----Input4400011000001101113010101020000000001401001000100001Output13 -1021 2