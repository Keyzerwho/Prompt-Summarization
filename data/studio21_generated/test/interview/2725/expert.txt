 Knapsack is the problem of packing items into knapsacks, such that the total weight of the items is at most a maximum weight. 
-----Input-----  - One line containing a single integer $1\leq n\leq 18$ the number of items.  - $2^n$ lines each containing a single integer $0\leq w\leq 2^{28}$, the combined weight of a subset of the items. Every subset occurs exactly once. -----Output----- Output non-negative integers $a_1, \dotsc , a_ n$ on $n$ lines in non-decreasing order such that $S\big ((a_1,\dotsc ,a_ n)\big )=\{ b_1,\dotsc ,b_{2^n}\} $, provided that such integers exist. Otherwise, output a single line containing impossible. -----Examples----- Sample Input 1: 1 0 5 Sample Output 1: 5 Sample Input 2: 3 7 5 2 4 1 6 3 0 Sample Output 2: 1 2 4 Sample Input 3: 2 0 1 2 4 Sample Output 3: impossible