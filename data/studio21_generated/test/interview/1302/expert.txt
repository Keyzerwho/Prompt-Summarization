 You are given an array $a$ consisting of one element $1$ ($a = [1]$). In one move, you can do one of the following things:   Increase some (single) element of $a$ by $1$ (choose some $i$ from $1$ to the current length of $a$ and increase $a_i$ by one);  Append the copy of some (single) element of $a$ to the end of the array (choose some $i$ from $1$ to the current length of $a$ and append $a_i$ to the end of the array).  Your task is to find the minimum number of moves required to obtain the array with the sum at least $n$. You have to answer $t$ independent test cases. 
-----Input----- The single line contains two integers n and k (1 ≤ n ≤ 10^5, 0 ≤ k ≤ n). -----Output----- In a single line print either any beautiful permutation or -1, if such permutation doesn’t exist. If there are multiple suitable permutations, you are allowed to print any of them. -----Examples----- Input 4 2 Output 2 4 3 1 Input 1 1 Output -1 -----Note----- In the first sample elements 4 and 3 are good because gcd(2, 4) = 2 > 1 and gcd(3, 3) = 3 > 1. Elements 2 and 1 are not good because gcd(1, 2) = 1 and gcd(4, 1) = 1. As there are exactly 2 good elements, the permutation is beautiful. The second sample has no beautiful permutations.