 You are given an array consisting of n numbers from 1 to n and the number i is located in the cell with the index 2i - 1 (Indices are numbered starting from one) and other cells of the array are empty. Each step you selects a non-empty array cell with the maximum index and moves the number written in it to the nearest empty cell to the left of the selected one. The process continues until all n numbers will appear in the first n cells of the array. For example if n = 4, the array is changing as follows: [Image]  You have to write a program that allows you to determine what number will be in the cell with index x (1   x   n) after your algorithm finishes. 
-----Input----- First line of input contains 4 integers n, p, q, r ( - 10^9 ≤ p, q, r ≤ 10^9, 1 ≤ n ≤ 10^5). Next line of input contains n space separated integers a_1, a_2, ... a_{n} ( - 10^9 ≤ a_{i} ≤ 10^9). -----Output----- Output a single integer the maximum value of p·a_{i} + q·a_{j} + r·a_{k} that can be obtained provided 1 ≤ i ≤ j ≤ k ≤ n. -----Examples----- Input 5 1 2 3 1 2 3 4 5 Output 30 Input 5 1 2 -3 -1 -2 -3 -4 -5 Output 12 -----Note----- In the first sample case, we can take i = j = k = 5, thus making the answer as 1·5 + 2·5 + 3·5 = 30. In second sample case, selecting i = j = 1 and k = 5 gives the answer 12.