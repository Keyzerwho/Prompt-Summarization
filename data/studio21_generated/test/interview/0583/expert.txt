 You are given a string $s$ of length $n$. You are allowed to apply cyclic shifts $i$ and $j$ to $s$. Return maximum beauty you can achieve. 
-----Input----- The first line contains an integer $n$ ($1 \le n \le 500$), the length of the string. The second line contains a string, consisting of exactly $n$ characters, where each of the characters is either "(" or ")". -----Output----- The first line should contain a single integer — the largest beauty of the string, which can be achieved by swapping some two characters. The second line should contain integers $l$ and $r$ ($1 \leq l, r \leq n$) — the indices of two characters, which should be swapped in order to maximize the string's beauty. In case there are several possible swaps, print any of them. -----Examples----- Input 10 ()()())(() Output 5 8 7 Input 12 )(()(()())() Output 4 5 10 Input 6 )))(() Output 0 1 1 -----Note----- In the first example, we can swap $7$-th and $8$-th character, obtaining a string "()()()()()". The cyclical shifts by $0, 2, 4, 6, 8$ of this string form a correct bracket sequence. In the second example, after swapping $5$-th and $10$-th character, we obtain a string ")(())()()(()". The cyclical shifts by $11, 7, 5, 3$ of this string form a correct bracket sequence. In the third example, swap of any two brackets results in $0$ cyclical shifts being correct bracket sequences.