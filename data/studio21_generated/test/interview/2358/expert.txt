 You are given a string formed by characters '(' and ')', where (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (), (
-----Input----- The only line of input contains a string $s$ ($1 \le |s| \le 1000$) formed by characters '(' and ')', where $|s|$ is the length of $s$. -----Output----- In the first line, print an integer $k$  — the minimum number of operations you have to apply. Then, print $2k$ lines describing the operations in the following format: For each operation, print a line containing an integer $m$  — the number of characters in the subsequence you will remove. Then, print a line containing $m$ integers $1 \le a_1 < a_2 < \dots < a_m$  — the indices of the characters you will remove. All integers must be less than or equal to the length of the current string, and the corresponding subsequence must form a simple string. If there are multiple valid sequences of operations with the smallest $k$, you may print any of them. -----Examples----- Input (()(( Output 1 2 1 3  Input )( Output 0 Input (()()) Output 1 4 1 2 5 6  -----Note----- In the first sample, the string is '(()(('. The operation described corresponds to deleting the bolded subsequence. The resulting string is '(((', and no more operations can be performed on it. Another valid answer is choosing indices $2$ and $3$, which results in the same final string. In the second sample, it is already impossible to perform any operations.