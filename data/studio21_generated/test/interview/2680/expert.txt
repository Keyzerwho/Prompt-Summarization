 You are given a list of $n$ integers. You want to split the integers into two lists. You want the largest integer in the first list $A$ to differ as little as possible from the smallest integer in the second list $B$. 
-----Input----- - The first line of each test case contains two integers N, denoting the dimension of the square matrix, and B denoting the number of bombs. This will be followed by two lines, where the first line will denote the x-coordinate of all the bombs, and the second line will denote the y-coordinate of all the bombs. x[0], y[0] will be the position of the first bomb, ... , x[B-1], y[B-1] will be the position of the Bth bomb. -----Output----- - Output a single line containing the minimum number of moves required. -----Subtasks----- - 1 ≤ N, B ≤ 100000: 50 points - 1 ≤ N, B ≤ 1000: 30 points - 1 ≤ N, B ≤ 10: 20 points -----Constraints----- - 1 ≤ N, B ≤ 100000 -----Example 1----- Input: 3 3 1 2 3 3 2 1 Output: 2 -----Example 2----- Input: 2 1 1 1 Output: 0 -----Explanation----- Example case 1:Only the bomb at {2,2} needs to be moved in two steps. Example case 2:No bomb needs to be moved anywhere.