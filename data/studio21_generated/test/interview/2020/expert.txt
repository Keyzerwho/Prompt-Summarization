 You are given an array of length $n$ and you want to split it into several non-empty sets. The value of $i$-th element is $a_i$. You want to generate the maximum number of sets from the list. There is a restriction for each set: the number of values in the team multiplied by the minimum value among all values in the team must be at least $x$. Each value should belong to at most one set. Some value may be left without being part of any set. 
-----Input----- The first line of the input contains integer n (1 ≤ n ≤ 10^5) — the number of the alarm clocks. The next n lines describe the clocks: the i-th line contains two integers x_{i}, y_{i} — the coordinates of the i-th alarm clock (0 ≤ x_{i}, y_{i} ≤ 100). Note that a single point in the room can contain any number of alarm clocks and the alarm clocks can lie on the sides of the square that represents the room. -----Output----- In a single line print a single integer — the minimum number of segments Inna will have to draw if she acts optimally. -----Examples----- Input 4 0 0 0 1 0 2 1 0 Output 2 Input 4 0 0 0 1 1 0 1 1 Output 2 Input 4 1 1 1 2 2 3 3 3 Output 3 -----Note----- In the first sample, Inna first chooses type "vertical segments", and then she makes segments with ends at : (0, 0), (0, 2); and, for example, (1, 0), (1, 1). If she paints horizontal segments, she will need at least 3 segments. In the third sample it is important to note that Inna doesn't have the right to change the type of the segments during the game. That's why she will need 3 horizontal or 3 vertical segments to end the game.