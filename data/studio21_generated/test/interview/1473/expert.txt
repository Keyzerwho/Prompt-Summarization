 You are given an array arr. Calculate and return the number of neighbors of each student in the queue. 
-----Input----- The first line contains integer n (2 ≤ n ≤ 2·10^5) — the number of students in the queue.  Then n lines follow, i-th line contains the pair of integers a_{i}, b_{i} (0 ≤ a_{i}, b_{i} ≤ 10^6), where a_{i} is the ID number of a person in front of a student and b_{i} is the ID number of a person behind a student. The lines are given in the arbitrary order. Value 0 is given instead of a neighbor's ID number if the neighbor doesn't exist. The ID numbers of all students are distinct. It is guaranteed that the records correspond too the queue where all the students stand in some order. -----Output----- Print a sequence of n integers x_1, x_2, ..., x_{n} — the sequence of ID numbers of all the students in the order they go in the queue from the first student to the last one. -----Examples----- Input 4 92 31 0 7 31 0 7 141 Output 92 7 31 141  -----Note----- The picture illustrates the queue for the first sample. [Image]