 count the number of squares that contain a digit between 0 and 9 inclusive. 
-----Input----- Input is given from Standard Input in the following format: H W c_{0,0} ... c_{0,9} : c_{9,0} ... c_{9,9} A_{1,1} ... A_{1,W} : A_{H,1} ... A_{H,W} -----Output----- Print the minimum total amount of MP required to turn every digit on the wall into 1 in the end. -----Sample Input----- 2 4 0 9 9 9 9 9 9 9 9 9 9 0 9 9 9 9 9 9 9 9 9 9 0 9 9 9 9 9 9 9 9 9 9 0 9 9 9 9 9 9 9 9 9 9 0 9 9 9 9 2 9 9 9 9 9 0 9 9 9 9 9 9 9 9 9 9 0 9 9 9 9 9 9 9 9 9 9 0 9 9 9 9 9 9 2 9 9 9 0 9 9 2 9 9 9 9 9 9 9 0 -1 -1 -1 -1 8 1 1 8 -----Sample Output----- 12 To turn a single 8 into 1, it is optimal to first turn 8 into 4, then turn 4 into 9, and finally turn 9 into 1, costing 6 MP. The wall contains two 8s, so the minimum total MP required is 6Ã—2=12.