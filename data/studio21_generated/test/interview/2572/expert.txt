 You are given an integer $m$. You are also given an integer $n$. You are also given an integer $k$. You are also given an integer $a$. You are also given an integer $b$. You are also given an integer $c$. You are also given an integer $d$. You are also given an integer $e$. You are also given an integer $f$. You are also given an integer $g$. You are also given an integer $h$. You are also given an integer $i$. You are also given an integer $j$. You are also given an integer $k$. You are also given an integer $l$. You are also given an integer $m$. You are also given an integer $n$. You are also given an integer $o$. You are also given an integer $p$. You are also given an integer $q$. You are also given an integer $r$. You are also given an integer $s$. You are also given an integer $t$. You are also given an integer $u$. You are also given an integer $v$. You are
-----Input----- The first line contains a single integer $t$ — the number of test cases ($1 \le t \le 10$). The $t$ tests follow. The first line of each test contains two integers $n$ and $m$ ($1 \le n, m \le 100$) — the size of the matrix. Each of the next $n$ lines contains $m$ integers $a_{i, j}$ ($0 \le a_{i, j} \le 10^9$) — the elements of the matrix. -----Output----- For each test output the smallest number of operations required to make the matrix nice. -----Example----- Input 2 4 2 4 2 2 4 4 2 2 4 3 4 1 2 3 4 5 6 7 8 9 10 11 18 Output 8 42 -----Note----- In the first test case we can, for example, obtain the following nice matrix in $8$ operations: 2 2 4 4 4 4 2 2 In the second test case we can, for example, obtain the following nice matrix in $42$ operations: 5 6 6 5 6 6 6 6 5 6 6 5