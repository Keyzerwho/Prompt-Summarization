 You are given two integer arrays of size $n$, array $x$ and array $y$. For each array, you want to make all its values equivalent such that $x_1$ = $x_2$ = $x_3$ = ... = $x_n$ and $y_1$ = $y_2$ = $y_3$ = ... = $y_n$ in the least number of moves possible. In one move, you can decrement the value of an element by 1 at $x_i$ or $y_i$, or at both $x_i$ and $y_i$ The value of an element can not go below 0. You have to answer $t$ independent test cases. 
-----Input----- The first line of the input contains two integers n (1 ≤ n ≤ 10^9) and x (1 ≤ x ≤ 100) — the number of heaps and the maximum number of objects in a heap, respectively. The second line contains x + 1 real numbers, given with up to 6 decimal places each: P(0), P(1), ... , P(X). Here, P(i) is the probability of a heap having exactly i objects in start of a game. It's guaranteed that the sum of all P(i) is equal to 1. -----Output----- Output a single real number, the probability that the first player wins. The answer will be judged as correct if it differs from the correct answer by at most 10^{ - 6}. -----Example----- Input 2 2 0.500000 0.250000 0.250000 Output 0.62500000