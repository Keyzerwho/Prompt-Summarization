 You are given a sequence of numbers. Sort the numbers so that: no number is repeated a number is repeated only if K other numbers have been repeated Return the number of possible combinations. As the answer can be very large, return it modulo 10^9 + 7. 
-----Input----- The first line contains integer n (1 ≤ n ≤ 100), n is the number of days. The second line contains a sequence of integers a_1, a_2, ..., a_{n} (|a_{i}| ≤ 100), where a_{i} means the company profit on the i-th day. It is possible that the company has no days with the negative a_{i}. -----Output----- Print an integer k — the required minimum number of folders. In the second line print a sequence of integers b_1, b_2, ..., b_{k}, where b_{j} is the number of day reports in the j-th folder. If there are multiple ways to sort the reports into k days, print any of them. -----Examples----- Input 11 1 2 3 -4 -5 -6 5 -5 -6 -7 6 Output 3 5 3 3  Input 5 0 -1 100 -1 0 Output 1 5  -----Note----- Here goes a way to sort the reports from the first sample into three folders:  1 2 3 -4 -5 | -6 5 -5 | -6 -7 6  In the second sample you can put all five reports in one folder.