 You are given a string $s$ of length $n$. You are asked to write a program which solves the following problem: Given $s$, write a program which reads $s$, and for each letter $i$ of $s$, reads $i$, and for each letter $j$ of $i$, reads $j$, and for each letter $k$ of $j$, reads $k$, and for each letter $l$ of $k$, reads $l$, and for each letter $m$ of $l$, reads $m$, and for each letter $n$ of $m$, reads $n$, and for each letter $o$ of $n$, reads $o$, and for each letter $p$ of $o$, reads $p$, and for each letter $q$ of $p$, reads $q$, and for each letter $r$ of $q$, reads $r$, and for each letter $s$
-----Input----- The first line of input contains the integer $Q$ ($1 \leq Q \leq 100000$), the number of policeman’s orders. Each of the following $Q$ lines contains one of the policeman’s order in the form of “SMJER $n$” (Croatian for direction) or “UPIT$n$ $x$” (Croatian for query). The order in the form “SMJER $n$” means that, after the nth spoken letter, Dominik must start saying the alphabet in reverse, whereas the order in the form “UPIT$n$ $x$” means that Dominik must say how many times so far he’s said the letter $x$ in the first $n$ spoken letters. The policeman’s order will be given chronologically in the input, or, the numbers $n$ ($1 \leq n \leq 10^9 $) from the orders will be strictly ascending. The character $x$ from the order in the form of “UPIT $n$ $x$” is a lowercase letter of the English alphabet. -----Output----- For each order in the form of “UPIT $n$$x$”, output how many times Dominik has said the letter $x$ in the first $n$ spoken letters. The answer to each query needs to be written in a separate line, and the queries need to be answered in the order given in the input. -----Examples----- Sample Input 1: 5 UPIT 1 b UPIT 3 b SMJER 4 UPIT 7 a UPIT 10 z Sample Output 1: 0 1 2 1 Sample Input 2: 5 SMJER 1 SMJER 2 SMJER 3 UPIT 5 a UPIT 7 w Sample Output 2: 2 1