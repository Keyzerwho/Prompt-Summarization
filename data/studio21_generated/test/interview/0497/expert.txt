 You are given a list of $n$ integers. You want to split the integers into two lists. You want the largest integer in the first list $A$ to differ as little as possible from the smallest integer in the second list $B$. 
-----Input----- The first line contains a single integer $n$ ($3 \leq n \leq 300\,000$) — the number of cities on the street. The second line contains $n$ integers $c_1, c_2, \ldots, c_n$ ($1 \leq c_i \leq n$) — the colors of the houses. It is guaranteed that there is at least one pair of indices $i$ and $j$ so that $1 \leq i < j \leq n$ and $c_i \neq c_j$. -----Output----- Print a single integer — the maximum possible distance Ilya can walk. -----Examples----- Input 5 1 2 3 2 3 Output 4 Input 3 1 2 1 Output 1 Input 7 1 1 3 1 1 1 1 Output 4 -----Note----- In the first example the optimal way is to walk from the first house to the last one, where Ilya can walk the distance of $5-1 = 4$ units. In the second example the optimal way is to either walk from the first house to the second or from the second to the third. Both these ways have the distance of $1$ unit. In the third example the optimal way is to walk from the third house to the last one, where Ilya can walk the distance of $7-3 = 4$ units.