 You are given an array of coins. You can choose two coins from the array, such that the sum of the values of the coins is maximum. Also, both sacks should be non-empty. 
Note:  Both the sack should be non-empty. A subarray is a contiguous part of an array. An array that is inside another array. A coin can be inserted in one and only one sacks i.e you cannot choose a coin more than one time. -----Input:----- - The first line contains $n$, the number of coins in the array $c$. - The next line will contain $n$ space integers denoting the value $coin$ $c[i]$. -----Output:----- One and the only line containing the maximum possible sum of values of all the coins in both sacks. -----Constraints----- - $2 \leq n \leq 10^5$ - $-10^5 \leq c[i] \leq 10^5$ -----Sample Input 1:----- 9 -1 2 3 4 -3 -5 6 7 1 -----Sample Output 1:----- 23 -----Sample Input 2:----- 6 -10 -1 -30 -40 -3 -11 -----Sample Output 2:----- -4 -----EXPLANATION:----- In first test case you can easily observe that the sum will be maximum if you choose [2,3,4] and [6,7,1] contiguous subarrays from the given array.