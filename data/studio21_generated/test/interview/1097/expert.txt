 You are given a list of integers $a_1, a_2, \dots a_k$. You want to find the smallest number $t$ such that the following conditions are satisfied: 
-----Input----- The first line contains three positive numbers n, t and k (2 ≤ n ≤ 2·10^5, 1 ≤ t, k < n) — the distance to the most distant city from the capital and the number of cities which should be dead-ends (the capital in this number is not taken into consideration).  The second line contains a sequence of t integers a_1, a_2, ..., a_{t} (1 ≤ a_{i} < n), the i-th number is the number of cities which should be at the distance i from the capital. It is guaranteed that the sum of all the values a_{i} equals n - 1. -----Output----- If it is impossible to built roads which satisfy all conditions, print -1. Otherwise, in the first line print one integer n — the number of cities in Berland. In the each of the next n - 1 line print two integers — the ids of cities that are connected by a road. Each road should be printed exactly once. You can print the roads and the cities connected by a road in any order. If there are multiple answers, print any of them. Remember that the capital has id 1. -----Examples----- Input 7 3 3 2 3 1 Output 7 1 3 2 1 2 6 2 4 7 4 3 5 Input 14 5 6 4 4 2 2 1 Output 14 3 1 1 4 11 6 1 2 10 13 6 10 10 12 14 12 8 4 5 1 3 7 2 6 5 9 Input 3 1 1 2 Output -1