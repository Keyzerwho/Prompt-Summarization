 Given two arrays $a$ and $b$ of length $n$. Find optimal order of positions to perform operation on them. 
-----Input----- The first line contains the integer $n$ ($1 \le n \le 2 \cdot 10^5$) — the length of arrays $a$ and $b$. The second line contains $n$ integers $a_1, a_2, \ldots, a_n$ ($−10^6 \le a_i \le 10^6$). The third line contains $n$ integers $b_1, b_2, \ldots, b_n$ ($1 \le b_i \le n$ or $b_i = -1$). Additional constraint: it's guaranteed that for any $i$ ($1 \le i \le n$) the sequence $b_i, b_{b_i}, b_{b_{b_i}}, \ldots$ is not cyclic, in other words it will always end with $-1$. -----Output----- In the first line, print the maximum $ans$ you can get. In the second line, print the order of operations: $n$ different integers $p_1, p_2, \ldots, p_n$ ($1 \le p_i \le n$). The $p_i$ is the position which should be chosen at the $i$-th step. If there are multiple orders, print any of them. -----Examples----- Input 3 1 2 3 2 3 -1 Output 10 1 2 3  Input 2 -1 100 2 -1 Output 99 2 1  Input 10 -10 -1 2 2 5 -2 -3 -4 2 -6 -1 -1 2 2 -1 5 5 7 7 9 Output -9 3 5 6 1 9 4 10 7 8 2