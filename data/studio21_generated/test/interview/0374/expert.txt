 You are given N different numbers you want to make combinations of L different numbers. Create combinations so that: every number is used atleast once a number can only be repeated only if K other numbers have been used Return the number of possible combinations. As the answer can be very large, return it modulo 10^9 + 7. 
-----Input----- The first line contains a single integer $n$ — the number of squares in the city ($2 \le n \le 2\cdot10^5$). The second line contains $n-1$ integers $p_2, p_3 \dots p_n$ meaning that there is a one-way road from the square $p_i$ to the square $i$ ($1 \le p_i < i$).  The third line contains $n$ integers $a_1, a_2, \dots, a_n$ — the number of citizens on each square initially ($0 \le a_i \le 10^9$). -----Output----- Print a single integer — the number of citizens the bandit will catch if both sides act optimally. -----Examples----- Input 3 1 1 3 1 2 Output 3 Input 3 1 1 3 1 3 Output 4 -----Note----- In the first example the citizens on the square $1$ can split into two groups $2 + 1$, so that the second and on the third squares will have $3$ citizens each. In the second example no matter how citizens act the bandit can catch at least $4$ citizens.