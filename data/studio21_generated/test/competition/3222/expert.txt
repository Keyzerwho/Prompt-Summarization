 You are given a list of places Emil wants to visit, and a list of streets connecting these places. For each place, you construct a list of trips, such that each place is included in exactly one trip. 
-----Input----- The first line of input consists of two integers $1\le N \le 100$ and $0 \le M \le 10000$, the number of places Emil wants to visit and the number of roads respectively. The places are numbered $0$ to $N-1$. The next $M$ lines consists of two integers $0 \le f, t \le N-1$, denoting that there is a one-way street from place $f$ to place $t$. -----Output----- Output begins with an integer $N$ on its own line, the number of trips made. Then, for every trip, output a line with the number of places included in the trip $K$, followed by $K$ lines, containing the numbers of said places in order of visit (the last place which Emil returns to should not be output twice). If the places canâ€™t be split into trips, Emil instead goes bowling. Then just output the string "Yeah!". If there are several solutions, output any of them. -----Examples----- Sample Input 1: 4 4 0 1 1 0 2 3 3 2 Sample Output 1: 2 2 0 1 2 2 3 Sample Input 2: 4 4 0 1 1 0 2 3 3 3 Sample Output 2: Yeah!