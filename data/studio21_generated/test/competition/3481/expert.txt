 Given a list of non-negative integers, return the maximum possible amount of money Doug can make. 
-----Input----- The first line of the input contains three integers $G$, $K$, and $R$: the number of gigs Doug has been offered, the number of venues in Graphland, and the number of roads connecting these venues. These integers satisfy $1 \leq G \leq 200000$, $1 \leq K \leq 100$, and $0 \leq R \leq \min \left(4000, K(K-1)/2\right)$. Then follow $R$ lines, each of which has three integers $A_ i$, $B_ i$, and $T_ i$, specifying the $i$-th (bidirectional) road. The $i$-th road connects venues $A_ i$ and $B_ i$ and it takes time $T_ i$ to travel the road in either direction. The values satisfy $1 \leq A_ i, B_ i \leq K$, $A_ i \neq B_ i$, and $1 \leq T_ i \leq 1000000$. Every road has two distinct endpoints, and there is at most one road between any pair of venues. Then follow $G$ lines, each of which has four integers $V_ i$, $S_ i$, $E_ i$, and $M_ i$. This means the $i$-th gig runs from time $S_ i$ (inclusive) to $E_ i$ (exclusive) at venue $V_ i$, and pays $M_ i$ cryptocents. These values satisfy the bounds $0 \leq S_ i < E_ i \leq 1000000000$ and $1 \leq M_ i \leq 1000000$. -----Output----- Output a single integer: the maximum number of cryptocents that DJ Polygon can make by taking on the right gigs. -----Sample Explanation----- In the first sample, There are two gigs at venue $1$ and one gig at venue $2$. Doug can either play both gigs at venue $1$ for $11$ cryptocents, or spend the first $10$ units of time traveling to venue $2$ and play that gig for $33$ cryptocents. He chooses the latter. In the second sample, Doug makes the most by staying at venue $1$ and playing both of those gigs to earn $70$ cryptocents. -----Examples----- Sample Input: 3 2 1 1 2 10 1 4 6 6 1 6 10 5 2 10 30 33 Sample Output: 33