 You are given 2 integer arrays of length $n$, array $x$ and array $y$. For each array, you want to make all its values equivalent such that $x_1$ = $x_2$ = $x_3$ = ... = $x_n$ and $y_1$ = $y_2$ = $y_3$ = ... = $y_n$ in the least number of moves possible. In one move, you can decrement the value of an element by 1 at $x_i$ or $y_i$, or at both $x_i$ and $y_i$ The value of an element can not go below 0. You have to answer $t$ independent test cases. 
-----Input----- The first line of input contains a line contains a line with four non-negative integers, $2 \le n \le 250$, $0 \le m \le 5000$, $0 \le s \le n-1$ and $0 \le t \le n-1$, separated by single spaces, where $n$ is the numbers of nodes in the graph, $m$ is the number of edges, $s$ is the source and $t$ is the sink ($s \ne t$). Nodes are numbered from $0$ to $n-1$. Then follow $m$ lines, each line consisting of four (space-separated) integers $u$, $v$, $c$ and $w$ indicating that there is an edge from $u$ to $v$ in the graph with capacity $1 \le c \le 10000$ and cost $1 \le w \le 1000$. -----Output----- Output a single line containing two integers; the size $F$ of a maximum flow from node $s$ to node $t$, and the cost of a mimimum cost flow of size $F$. You may assume that $F < 2^{31}$. -----Examples----- Sample Input 1: 4 4 0 3 0 1 4 10 1 2 2 10 0 2 4 30 2 3 4 10 Sample Output 1: 4 140 Sample Input 2: 2 1 0 1 0 1 1000 100 Sample Output 2: 1000 100000