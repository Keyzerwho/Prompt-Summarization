 You are given $k$ maps. You need to find a mapping system that completely covers the canyon, but each map covers as little area as possible, since a map with less area can be shown at a higher detail. All of the maps must be perfectly square, and must cover the same amount of area on the canyon. The maps can overlap.   
-----Input----- Each input will consist of a single test case. Note that your program may be run multiple times on different inputs. Each input begins with a line with two space-separated integers $n$ ($3 \le n \le 2000$) and $k$ ($1 \le k \le 3$), where $n$ is the number of vertices in the polygon, and $k$ is the number of square maps in the mapping system. The next $n$ lines each contain two space-separated integers $x$ $y$ ($-20000 \le x, y \le 20000$). These are the coordinates of the polygon, in order. No two edges of the polygon will intersect. All points will be distinct. No three consecutive points will be collinear. The polygon will be a simple polygon which does not touch or cross itself. It will not be degenerate, and will have positive area. -----Output----- Output a real number rounded to exactly two decimal places, representing the minimum side length with respect to the canyon for each square map in your mapping system, where the maps are identically sized, as small as possible, and the system still covers the entire canyon. -----Examples----- Sample Input 1: 4 1 1 1 5 1 5 5 4 2 Sample Output 1: 4.00 Sample Input 2: 6 3 -8 -8 0 -1 8 -8 1 0 0 10 -1 0 Sample Output 2: 9.00