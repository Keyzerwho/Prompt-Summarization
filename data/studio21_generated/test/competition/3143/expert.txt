 You are given a list of students. You need to find an optimal way for the students to change positions in the line. 
-----Input----- The first line of input contains two integers $N$ and $M$ $(1 \leq N, M \leq 3 \cdot 10^5)$ – the total number of students in the line and the number of names on the list respectively. The second line contains $M$ integers $a_1, a_2, \dots , a_ M$ $(1 \leq a_ i \leq N)$ – the names of students as they appear in the list (top-down). The third line contains $N$ integers $b_1, b_2, \dots , b_ N$ $(1 \leq b_ i \leq N)$ – the initial order of the students as they appear in line, where $b_ i$ is the name of $i$:th student in the line ($b_1$ is the name of the first student in the line). The students are numbered between $1$ and $N$. -----Output----- The output consists of two lines:  - The first line of output is $K$ – the minimal number of inspections that the principal needs to do.  - The second line of the output consists of $K$ integers. For every inspection, output a number for which position in the line the student has to go back to after the inspection. If there are multiple solutions which result in minimal number of inspections, then output any of them. -----Examples----- Sample Input 1: 1 1 1 1 Sample Output 1: 1 1  Sample Input 2: 4 5 4 1 2 4 4 4 3 2 1 Sample Output 2: 7 4 4 2 4 4 1 4