 You are given $n$ villages. Each village has a gold amount. The bandits want to steal gold from $k$ villages. In each move, they can steal gold from $1$ village. The bandits have to return to their village. So, in each move, they can not steal gold from village from which they stole gold in the previous move. The bandits want to steal gold from as few villages as possible. Also, they don t want to steal gold from village from which they got gold in previous move. 
-----Input----- There will be a single test case in the input. This test case will begin with a line with two integers, $n$ ($3 \le n \le 36$) and $m$ ($n-1 \le m \le n(n-1)/2$), where $n$ is the number of villages, and $m$ is the number of roads. The villages are numbered $1 \ldots n$. Village $1$ is the bandit’s home, and village $2$ holds the king’s castle. On the next line will be $n-2$ space-separated integers $g$ ($1 \le g \le 5000$), which are the amount of gold in each village $3, 4, \ldots , n$, skipping the bandit’s home and the king’s castle. On each of the following $m$ lines will be two integers, $a$ and $b$ ($1 \le a < b \le n$) indicating that there is a road between villages $a$ and $b$. All roads are two-way. All $m$ $(a,b)$ pairs will be unique. There will be a path, direct or indirect, from every village to every other village. -----Output----- Output a single integer, indicating the maximum amount of gold that the bandits can purloin and still get safely home. -----Examples----- Sample Input 1: 3 3 1 1 2 2 3 1 3 Sample Output 1: 0 Sample Input 2: 4 4 24 10 1 3 2 3 2 4 1 4 Sample Output 2: 24 Sample Input 3: 6 8 100 500 300 75 1 3 1 4 3 6 4 5 3 5 4 6 2 5 2 6 Sample Output 3: 800