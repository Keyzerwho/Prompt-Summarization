 You need to create a function `character` that accepts a string and returns a character. For an optimal solution, the following operation should complete within 6000ms
-----Input----- Input describes one full debate transcript. The first line of input contains two integers $N$ and $K$, denoting the number of candidates and the total number of utterances in the debate. The candidates are named by the integers $1$ to $N$. The next $K$ lines describe the utterances in the debate, sorted by time; the first such line describes the first utterance of the debate. Each such line consists of an integer, denoting the name of the speaker of the utterance, and the uttered statement, expressed in the language described above. Adjacent tokens on the same line will be separated by exactly one space character. -----Output----- Output $N$ lines. On the $i$th line, name the character type (truther, fabulist, or charlatan) of the candidate whose name is $i$. -----Limits and additional notes-----  - $1 \leq N \leq 7$  - $1 \leq K \leq 100$  - No line of input will be longer than $2049$ characters (including the line-feed character).  - All candidates know each other’s character types.  - Character type claims will only be about persons in a debate. I.e. for the propositions truther <n>, fabulist <n>, and charlatan <n>, one will always have $1 \leq \texttt{n} \leq N$. -----Examples----- Sample Input 1: 1 2 1 charlatan 1 1 not charlatan 1 Sample Output 1: charlatan Sample Input 2: 2 1 1 and fabulist 1 fabulist 2 Sample Output 2: fabulist truther