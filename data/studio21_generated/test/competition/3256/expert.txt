  You are given a circle with $N$ integers.  Divide circle into exactly $K$ contiguous non-empty sections, such that the bitwise AND of the powers of all sections is maximized.  The power of a contiguous section of integers is the bitwise OR of all integers in that section. 
Note: The binary bitwise operators OR and AND operate on the base-$2$ representation of the integers and correspond to the operators | and & respectively in C++ or Java. -----Input----- The first line contains integers $N$ and $K$ ($1 \leq K \leq N \leq 5\cdot 10^5$), namely the number of integers and the number of contiguous non-empty sections required. The next line contains $N$ integers, the $i^\textrm {th}$ of which is the integer $A_ i$ ($0 \leq A_ i \leq 10^9$). -----Output----- Output a single integer in one line: The maximum bitwise AND of the powers of the sections in an optimal division of the circle of integers. -----Explanation----- In the first sample, the circle is $(2, 3, 4, 1)$. A possible division is $(3, 4)$ and $(1, 2)$. $(3, 4)$ has power $7$ and $(1, 2)$ has power $3$. The bitwise AND of $7$ and $3$ is $3$. Note that a section can possibly wrap around the circle. In the second sample, a possible division is $(2, 2, 4)$, $(4)$, $(4, 2)$. The sectionsâ€™ powers are $6$, $4$ and $6$ respectively, which have bitwise AND of $4$. Note that we require the sections to be contiguous integers, so the division $(2, 4)$, $(2, 4)$, $(2, 4)$ is not permissible. In the third sample, we can only have one section. This section will have all the integers, and thus have power $3$. -----Examples----- Sample Input 1: 4 2 2 3 4 1 Sample Output 1: 3 Sample Input 2: 6 3 2 2 2 4 4 4 Sample Output 2: 4