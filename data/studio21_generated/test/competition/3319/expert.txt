 Given an initial set of planetoids, Prof. Mars is interested in determining how many planets will form and what their orbits are. Armed with your implementation of his model, he should now be able to answer these questions much more easily. 
-----Input----- The input will start with a line containing four positive integers $n$ $n_ x$ $n_ y$ $n_ z$, where $n \leq 100$ is the number of planetoids, and $n_ x$, $n_ y$ and $n_ z$ are the dimensions of the space the planetoids reside in, where $n_ x, n_ y, n_ z \leq 1000$. After this are $n$ lines of the form $m$$x$ $y$ $z$ $v_ x$ $v_ y$$v_ z$, specifying the mass, initial location and initial velocity of each planetoid at time $t=0$, where $1 \leq m \leq 100$, $0\leq x<n_ x, 0 \leq y<n_ y, 0\leq z<n_ z$, and $-1000 \leq v_ x, v_ y, v_ z \leq 1000$. No two planetoids will start in the same initial location. -----Output----- Output an integer $p$ indicating the number of planets in the system after no more collisions can occur. After this output $p$ lines, one per planet, listing a planet identifier P$i$, $(0 \leq i < p)$, the mass, location and velocity of each planet. Use the location of the planets at the time that the last collision occurred. If no collisions occur, then use their location at time $t=0$. The planets should be ordered from largest mass to smallest; break ties by using the lexicographic ordering of the $x,y,z$ location of the planet, starting with the smallest $x$ value. -----Examples----- Sample Input: 2 8 8 8 12 4 1 4 5 3 -2 10 1 2 1 8 -6 1 Sample Output: 1 P0: 22 1 4 2 6 -1 0