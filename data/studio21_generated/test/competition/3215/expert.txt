 You are given an array $A$ of $n$ integers. You need to find the smallest number of shuffles that could possibly put the array $A$ in that order. 
-----Input----- Each input will consist of a single test case. Note that your program may be run multiple times on different inputs. Each test case will begin with a single integer $n$ ($1 \le n \le 1000000$) indicating the number of cards in the deck. On the next line will be $n$ unique integers $c$ ($1 \le c \le n$), with a single space between them, indicating an ordering of the $n$ cards. The values $c$ are guaranteed to be a permutation of the numbers $1 \ldots n$. -----Output----- Output a single line with a single integer indicating the minimum number of shuffles that could possibly put the deck in the given order. -----Examples----- Sample Input 1: 10 1 2 7 3 8 9 4 5 10 6 Sample Output 1: 1 Sample Input 2: 10 3 8 1 9 4 5 2 7 10 6 Sample Output 2: 2