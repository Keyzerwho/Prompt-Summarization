 You are given an array of integers. Make sets of 3 numbers. Each should have numbers in ascending or descending order Return the number of such sets that can be formed. a number can be in multiple sets   
-----Input----- The input consists of a single test case. The first line of input consists of two integers $d$ and $w$ ($1 \le d \le {250}$ and $1 \le w \le {10000}$), where $d$ is the number of different dishes at the buffet and $w$ is the desired total weight of your meal in grams. Then follow $d$ lines, the $i^{th}$ of which describes the $i^{th}$ dish. Each dish description is in one of the following two forms:  - A description of the form “D $w_ i$ $t_ i$ $\Delta t_ i$” indicates that this is a discrete dish where each item weighs $w_ i$ grams, with initial tastiness $t_ i$ and decay of tastiness $\Delta t_ i$.  - A description of the form “C $t_ i$ $\Delta t_ i$” indicates that this is a continuous dish with initial tastiness $t_ i$ and decay of tastiness $\Delta t_ i$. The numbers $w_ i$, $t_ i$, and $\Delta t_ i$ are integers satisfying $1 \le w_ i \le {10000}$ and $0 \le t_ i, \Delta t_ i \le {10000}$. -----Output----- Display the maximum possible total tastiness of a meal of weight $w$ based on the available dishes. Give the answer with a relative or absolute error of at most $10^{-6}$. If it is impossible to make a meal of total weight exactly $w$ based on the available dishes, display impossible. -----Examples----- Sample Input 1: 2 15 D 4 10 1 C 6 1 Sample Output 1: 40.500000000 Sample Input 2: 3 15 D 4 10 1 C 6 1 C 9 3 Sample Output 2: 49.000000000