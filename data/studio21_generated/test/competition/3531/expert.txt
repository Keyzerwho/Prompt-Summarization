 You are given a list of $n$ integers and $m$ integers. On each day you must increment an element and decrement an adjacent positive element. Find the maximum value possible for element in first postion after $d$ days. 
-----Input----- Each input will consist of a single test case. Note that your program may be run multiple times on different inputs. The first line of input will contain four integers $n$, $m$, $k$ and $w$, where $n$ ($2 \le n \le 2 \cdot 10^5$) is the number of places, $m$ ($1 \le m \le 5 \cdot 10^5$) is the number of potential direct trails between places, $k$ ($1 \le k < n$) is the number of special places, and $w$ ($1 \le w \le n-1$) is the number of special-nonspecial direct trails the state wishes to blaze. The places are numbered $1$ to $n$. Each of the next $k$ lines holds a single integer $s$ ($1 \le s \le n$) indicating the special places. These values will be unique and will be in ascending order. Each of the next $m$ lines will describe a potential trail that the state could blaze. Each of these lines will consist of three integers, $a$, $b$ and $c$, where the trail would go between places $a$ and $b$ ($1 \le a,b \le n, a \ne b$) and would cost $c$ ($1 \le c \le 10^5$). No two places will have more than one potential trail between them, and a trail from $a$ to $b$ is the same as a trail from $b$ to $a$. -----Output----- Output a single integer, which is the minimum total cost for the state to blaze trails in their new park subject to their constraints, or $-1$ if it isnâ€™t possible. -----Examples----- Sample Input: 3 3 1 2 2 1 2 2 1 3 1 2 3 3 Sample Output: 5