 Given a list of words, can you determine the lexicographical order of the alphabet? 
-----Input----- The first line of input will contain $L$ and $N$, separated by a space, where $L$ is a lowercase character $\texttt{b} \le L \le \texttt{z}$ representing the highest character in the English alphabet that appears in the derived alphabet, and $N$ is an integer $1 \leq N \leq 1000$ that is equal to the number of strings in the list. Each of the next $N$ lines will contain a single nonempty string of length at most $1000$, consisting only of characters in the derived alphabet. No two strings will be the same. -----Output----- If the input is consistent with a unique ordering of the alphabet, output a string that designates that ordered alphabet. If the data is inconsistent with any ordering, output IMPOSSIBLE. If the data is consistent with multiple orderings, output AMBIGUOUS. -----Examples----- Sample Input 1: d 4 cab cda ccc badca Sample Output 1: adcb Sample Input 2: c 4 abc bca cab aca Sample Output 2: IMPOSSIBLE Sample Input 3: f 2 dea cfb Sample Output 3: AMBIGUOUS