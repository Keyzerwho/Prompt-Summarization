 You are given a set of $n$ areas on the mountain. Each area has exactly one snack stand. You are given a set of $k$ snack stands. For every area in the set, return the number of ways you can distribute snacks among snack stands so that each area has exactly one snack stand with snack.   
-----Input----- Each input will consist of a single test case. Note that your program may be run multiple times on different inputs. The first line of input will contain three space-separated integers $n$, $m$, and $q$, where $n$ ($1 \le n \le 10^5$) is the number of areas on the mountain, $m$ ($1 \le m \le n+50$) is the number of runs, and $q$ ($1 \le q \le 10^5$) is the number of queries. The next $m$ lines each contain two integers $x$ and $y$ ($1 \le x,y \le n, x \ne y$). This represents a ski run from area $x$ to area $y$. There will be at most one run between any two areas. It will be possible to reach each area from area 1 by some chain of ski runs. The next $q$ lines are each a sequence of space-separated integers, starting with $k$ and $a$, which are followed by $a$ integers $i$. Here, $k$ ($1 \le k \le 4$) represents the number of snack stands to stock with this guest’s favorite snack, $a$ ($1 \le a \le n$) represents the number of areas in the query set, and the $a$ integers $i$ ($1 \le i \le n$) are the labels of the areas in the query set. In any given query, no integer $i$ will be repeated. The sum of all $a$’s for all queries will not exceed $100000$. -----Output----- Output $q$ integers, each on its own line with no blank lines in between. These represent the number of ways to select snack stands to stock for each query, in the order that they appear in the input. Two ways are considered different if an area is selected in one configuration but not the other. -----Examples----- Sample Input 1: 4 4 4 1 2 1 3 2 4 3 4 1 1 4 2 1 4 1 1 3 2 2 3 2 Sample Output 1: 2 0 2 1 Sample Input 2: 8 10 4 1 2 2 3 1 3 3 6 6 8 2 4 2 5 4 7 5 7 7 8 2 3 4 5 6 2 2 6 8 1 1 6 1 1 8 Sample Output 2: 0 0 3 2