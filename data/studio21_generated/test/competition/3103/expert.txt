 You are given a map with $n$ currents. You are given a full rigged ship with $m$ sails. You are given $n$ points. Return the number of different routes that the ship can take to get home. 
-----Input----- The first line has three integers: $Y$ and $X$ and $x_{init}$, representing the number of rows and columns of the map, and which column the ship is currently placed at. The ship always starts on the bottom row. Then follow $Y$ rows, each with $X$ characters each. All characters $C_{x,y}$ is one of ‘~’, ‘#’, ‘@’, ‘>’ and ‘<’. ’~’ represents open sea without any currents, ‘#’ is impassable shallow waters, and ‘>’ and ‘<’ are currents moving the boat to the right and left respectively. ‘@’ represents Lysias’ castle. -----Output----- Output all the different distinct paths the ship could take to get back to the castle. Since there may be very many different ways to get back, output the answer modulo $1000003$. If there are no ways to get to the castle, output “begin repairs”. -----Limits-----  - $0 < Y \leq 300$  - $0 \leq x_{init} < X \leq 50000$  - If $C_{x,y} = \text {‘>’}$, then $x+1 < X$ and $C_{x+1,y} \notin \{ \text {‘<’}, \verb|`#'|\} $  - If $C_{x,y} = \text {‘<’}$, then $0 \leq x-1$ and $C_{x-1,y} \notin \{ \text {‘>’}, \verb|`#'|\} $  - There is exactly one ‘@’ tile on the map  - The boat will not start on a `#' tile -----Examples----- Sample Input 1: 2 2 0 >@ >~ Sample Output 1: 2 Sample Input 2: 3 5 1 >>@<< >~#~< >>>>~ Sample Output 2: 4