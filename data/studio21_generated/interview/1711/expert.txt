 You are given an algebraic data type and a function. You need to apply the function to all the elements and return a new algebraic data type.
Examples of Usage ```python numbers = Cons.from_array([1,2,3,4,5]) numbers.filter(lambda x: x % 2 == 0).to_array()  # yields [2,4] numbers.map(lambda x: x * x).to_array()  # yields [1,4,9,16,25] digits = Cons.from_array(["1","2","3","4","5"]) integers = digits.map(int) \                  .filter(lambda n: n > 3) \                  .to_array()  # yields [4,5] ``` In other words:  - The static method `Cons.fromArray` (or `from_array`, `from_iter`) produces `Cons(1, Cons(2, Cons(3, Cons 4, Cons 5, null)))))`.   - Above filter creates a new list: `Cons(2, Cons(4, null))`.  -  So does above map:  `Cons(1, Cos(4, Cons(9, Cons(16, Cons(25, null)))))`.