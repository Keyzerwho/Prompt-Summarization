 Given $M$ and $N$, for each level, find the minimum number of parking spots that need to be occupied so that the car can be stolen in minimum time. 
-----Input :----- - The first line of input contains a single integer $T$ (number of test cases). - First liine of each test case contains $M$ and $N$(number of levels and spots per each level)   - Next $M$ line contains $N$ space separated characters $C_{i, 1}, C_{i, 2} \ldots C_{i, N}$  where $(1\leq i\leq M)$ and $C_{i, j}$ is either $'P'$ or $'N'$ (without quotes). If the spot contains $'P'$, then a car is parked there. else, it’s not parked. -----Output :----- For each test case print a single integer, the minimum time in which thief can unlock all cars. -----Constraints :----- - $1\leq T \leq100.$  - $1\leq M,N \leq300$  -----Subtasks :----- -  Subtask 1 (20 points): $1\leq M \leq2.$  -  Subtask 2 (80 points): Original Constraints -----Sample Input :----- 2 4 5 N P N N P N N P N N N P N N N P N N N N 3 3 N P P P P P  P P N -----Sample Output :----- 10 6 -----Explanation:----- In the first case, He will select the spot $(1,2)$ and the path he takes will be $(1,2)→(1,3)→(1,4)→(1,5)→(2,5)→(2,4)→(2,3)→(2,2)→(3,2)→(4,2)→(4,1)$ So, he takes 10 steps to unlock all the cars. In the second case, He will select the spot $(1,2)$ and the path he takes will be $(1,2)→(1,3)→(2,3)→(2,2)→(2,1)→(3,1)→(3,2)$. So, he takes 6 steps.