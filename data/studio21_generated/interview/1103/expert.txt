 You have N integers, a1, a2, .... aN and an integer P such that X is divisible by P2. You need to return the P such that X is divisible by P2. 
-----Input----- The first line of the input contains an integer T denoting the number of test cases. T test cases follow. The first line of each test case contains one integer N denoting the number of intgers in presentation of X. The second line contains N space-separated integers a1, a2, .... aN. -----Output----- For each test case, output a single integer P deoting the answer for this test case. Note that P must be in range from 2 to 1018 inclusive. It's guaranteed that at least one answer exists. If there are more than one possible answers, print any. -----Constraints----- - 1 ≤ T ≤ 5 - 1 ≤ N ≤ 100 - 1 ≤ ai ≤ 1018 -----Subtasks----- - Subtask 1[19 points]: 1 ≤ a1*a2*...*aN ≤ 106 - Subtask 2[22 points]: 1 ≤ a1*a2*...*aN ≤ 1012 - Subtask 3[23 points]: 1 ≤ ai ≤ 1012 - Subtask 4[36 points]: no additional constraints -----Example----- Input: 1 3 21 11 6 Output: 3 -----Explanation----- Example case 1. X = 21 * 11 * 6 = 1386. It's divisible by 9 which is a square number, as 9 = 32. So P = 3.