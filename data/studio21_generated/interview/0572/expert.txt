 You are given two strings s and t both of length n and both consisting of lowercase Latin letters. One move is defined as taking contiguous substring of both s and t and reversing it. You need to find if it is possible to make s and t after some sequence of moves 
-----Input----- The first line of input contains a single integer T denoting the number of test cases. The first and only line of each test case contains 3 space separated integers — N, M and K — denoting the number of apples, number of oranges, and number of gold coins our little Chef has. -----Output----- For each test case, output the minimum possible difference between the number of apples and oranges that Chef can achieve. -----Constraints----- - 1 ≤ T ≤ 100 - 1 ≤ N, M, K ≤ 100 -----Example-----Input 3 3 4 1 5 2 1 3 4 3 Output 0 2 0 -----Explanation----- - Test 1: Chef will buy 1 apple by paying 1 gold coin and will have equal number of apples and oranges.  - Test 2: Chef will buy 1 orange by paying 1 gold coin and will have 5 apples and 3 oranges.