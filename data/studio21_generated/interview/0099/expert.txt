 You are given a connected graph of $n$ nodes and $m$ bidirectional edges. For each node $p = 1, 2, \dots, n$, you need to find a minimum spanning tree. Then output the minimum cost required to travel between node $1$ and node $p$. 
-----Input----- The first line contains the integer $t$ ($1 \le t \le 10^4$) — the number of test cases.  Next $2t$ lines contain test cases — one per two lines. The first line of each test case contains the integer $n$ ($1 \le n \le 10^5$) — the length of the string $s$. The second line contains the binary string $s$. The string $s$ is a string of length $n$ which consists only of zeroes and ones. It's guaranteed that sum of $n$ over test cases doesn't exceed $10^5$. -----Output----- Print $t$ answers — one per test case. The answer to the $i$-th test case is the cleanest string Lee can get after doing some number of moves (possibly zero). -----Example----- Input 5 10 0001111111 4 0101 8 11001101 10 1110000000 1 1 Output 0001111111 001 01 0 1 -----Note----- In the first test case, Lee can't perform any moves. In the second test case, Lee should erase $s_2$. In the third test case, Lee can make moves, for example, in the following order: 11001101 $\rightarrow$ 1100101 $\rightarrow$ 110101 $\rightarrow$ 10101 $\rightarrow$ 1101 $\rightarrow$ 101 $\rightarrow$ 01.