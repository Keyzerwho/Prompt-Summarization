 You are given an array containing $N$ integers. You need to find the number of slices that a family would have. If the number of slices would be sufficient, return 1. If the number of slices would be sufficient, but the family is short, return 2. If the number of slices would not be sufficient, return 3. If the number of slices would not be sufficient, but the family has extra, return 4. If the number of slices would not be sufficient, but the family is short and has extra, return 5. If the number of slices would not be sufficient, but the family is short, has extra, and is short of, return
-----Input :----- - First line of input will have a single integer $T$ i.e. the number of families in the locality - For next $T$ lines, each line will describe one family through 4 integers i.e. $S$, $N$, $K$, $R$ separated by spaces -----Output----- - First $T$ lines of output will show if slices are enough for the family or not, followed by extra or required slices. For example, if slices are sufficient, the output would be $POSSIBLE$ $10$ which implies 10 slices are extra. If slices are insufficient, the output would be $IMPOSSIBLE$ $15$ which implies 15 slices are required to fulfill the requirement. - Last line of output would be $IMPOSSIBLE$ or $POSSIBLE$ depending on whether each family would get enough slices after sharing. -----Constraints:----- - 1 ≤ $T$ ≤ 50 - 1 ≤ $N$ ≤ 15 - 1 ≤ $S$ ≤ 10^9 - 1 ≤ $K$ ≤ 5 - 1 ≤ $R$ ≤ 5 -----Sample Input:----- 5 100 4 2 2 100 4 3 2 100 4 3 3 200 4 4 2 10 3 2 2 -----Sample Output:----- POSSIBLE 70 POSSIBLE 55 IMPOSSIBLE 20 POSSIBLE 140 IMPOSSIBLE 4 POSSIBLE -----Explanation----- For the first home, the youngest member has got 2 slices, the one older than them gets 2 times more slices, and so forth. So, first home needs 2 + 4 + 8 + 16 = 30 slices. But since they made 100, they have 70 extra, hence we print 'POSSIBLE 70'. Doing the same for other houses, we find 20 + 4 = 24 slices extra are required so that all families have enough slices. In this case we have 70 + 55 + 140 = 265 extra slices which is > 24, so we print 'POSSIBLE' in last line.