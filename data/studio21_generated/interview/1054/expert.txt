 You are given a string s, where s has faded characters. For each faded character, replace that character by a lower case Latin alphabet. 
-----Input----- First line of input contains a single integer T denoting the number of test cases. T test cases follow. First and the only line of each case contains string s denoting the old string that chef has found in his garage. -----Output----- For each test case, print lexicographically smallest palindrome after filling each faded character - if it possible to construct one. Print -1 otherwise. -----Constraints----- - 1 ≤ T ≤ 50 - 1 ≤ |s| ≤ 12345 - String s consists of ['a'-'z'] and '.' only. -----Subtasks-----Subtask #1 (47 points) - 1 ≤ T ≤ 50, 1 ≤ |S| ≤ 123 Subtask #2 (53 points) - 1 ≤ T ≤ 50, 1 ≤ |S| ≤ 12345 -----Example-----Input 3 a.ba cb.bc a.b Output abba cbabc -1 -----Explanation----- In example 1, you can create a palindrome by filling the faded character by 'b'. In example 2, you can replace the faded character by any character from 'a' to 'z'. We fill it by 'a', as it will generate the lexicographically smallest palindrome. In example 3, it is not possible to make the string s a palindrome.