 You are given two arrays, A and B, of integers. You need to find the number of integers between A[i] and B[i]. For example, if A=[1, 2, 3, 4], B=[6, 5, 7, 8], then the number of integers between A[i] and B[i] is 2. 
-----Input----- The first line of input consists of a single integer N denoting the number of houses in Maahishmati. The second line of input consists of N space separated integers denoting A1, A2, ..., AN, where Ai denotes the number of gold plates in the ith house. The third line of input consists of a single integer Q denoting the number of values of K to follow. Each of the following Q lines consist of a single integer, where the value on the ith line denotes the value of K for the ith query. -----Output----- Output exactly Q integers on separate lines, where the output on the ith line denotes the answer for the ith value of K. -----Constraints----- - 1 ≤ N ≤ 105 - 1 ≤ Q ≤ 105 - 0 ≤ K ≤ N-1 - 1 ≤ Ai ≤ 104 -----Example----- Input: 4 3 2 1 4 2 0 2 Output: 10 3 -----Explanation----- For the first query, K = 0. Hence, Bhallaladeva cannot take gold plates from any of the houses for free. It will cost him 3 + 2 + 1 + 4 = 10 nimbdas. For the second query, K = 2. In the first step Bhallaladeva can pay 2 nimbdas for gold plates in house number 2, and take the gold in houses 1 and 4 for free (Note that house 1 has 3 gold plates and house 4 has 4 gold plates). Now, he has looted houses 1, 2 & 4. Now in the second step, he loots house 3, by paying 1 nimbda. Hence, the total cost = 1 + 2 = 3. Note that there might be multiple ways to achieve the minimum cost, and we have explained only one of them.