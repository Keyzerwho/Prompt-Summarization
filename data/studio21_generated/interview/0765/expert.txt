 You are given a number $n$ and a value $m$. For every number from $1$ to $n$ if the number is divisible by $m$, you store tthe last digit of this number. For example, if $n=15$ and $m=5$, numbers divisible by $m$ are $5, 10, 15$. Their last digits are $5, 0, 5$ correspondingly, their sum is $10$. 
-----Input----- There is a single test case. First line of input contains a single integer N, denoting number of cities in Chefland. Second line of the input contains N space separated integer - F1, F2, ..., FN, denoting the friendliness of the cities in order from 1 to N. Next line contains an integer Q, denoting number of queries. For each of the next Q queries, each line corresponds to one of the two types of the query. First there will be an integer denoting the type of the query, followed by the actual query. For query of type 1, there will be three space separated integers "1 p f" as defined above. For query of type 2, there will be two space separated integers "2 R ", as defined above. -----Output----- For each query of type 2, output two space separated integers, first digit of Chef's enjoyment in this trip followed by the value of enjoyment modulo 109 + 7. -----Constraints----- -  1 ≤ N, Q ≤ 105  -  1 ≤ Fi ≤ 10^9  -  1 ≤ f ≤ 10^9  -  1 ≤ p ≤ N  -  1 ≤ R ≤ N  -----Subtasks----- Subtask #1 (5 points) :  -  1 ≤ N ≤ 10  -  1 ≤ Q  ≤ 1000  -  1 ≤ Fi ≤ 10  -  1 ≤ f ≤ 10  Subtask #2 (15 points) :  -  1 ≤ N ≤ 1000  -  1 ≤ Q  ≤ 100  -  1 ≤ Fi ≤ 109  -  1 ≤ f ≤ 1000  Subtask #3 (80 points) :  - original constraints -----Example----- Input: 5 1 2 3 4 5 3 2 1 1 3 10 2 2 Output: 1 120 5 50 -----Explanation----- In the first query, Chef is going to visit cities 1, 2, 3, 4, 5 in order. At the end of the trip, his total enjoyment will be 1 * 2 * 3 * 4 * 5 = 120. First digit of enjoyment is 1 and 120 modulo 109 + 7 is 120. In the third query, Chef is going to visit cities 1, 3, 5 in order. At the end of the trip, his total enjoyment will be 1 * 10 * 5 = 50.