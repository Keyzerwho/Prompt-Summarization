 You are given two strings s and t both of length n and both consisting of lowercase Latin letters. One move is defined as taking contiguous substring of both s and t and reversing it. You need to find if it is possible to make s and t after some sequence of moves 
-----Input:----- - The first line contains an integer $T$, denoting the number of test cases.  - Each test case consists of a string $S$ containing only lowercase characters with no spaces. -----Output:----- For each test case on a new line, print the minimum number of operations for the corresponding test case. -----Constraints----- - $1<=T<=10$ - $1<=|S|<=10^7$, where $|S|$ denotes length of string S. -----Sample Input:----- 4  abc  abcba  abcd  cba -----Sample Output:----- 2  0 4 2 -----EXPLANATION:----- For the first test case string = “abc”  c->b->a so the string become “aba” which is a palindrome. For this we perform 2 operations