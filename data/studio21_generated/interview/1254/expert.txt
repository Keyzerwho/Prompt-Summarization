 You are given 2 lists of integers. Calculate the number of unique combinations. Note that the first list may contain duplicate values. Example: Input:  [1, 2, 2, 2, 2, 2, 2, 2] Output: 2 Explanation:  Since the value is 2 and 2 in 1, 2, 2, 2, 2, 2, 2, 2. 
-----Input----- The first line of the input contains an integer T denoting the number of test cases. The first line of each test case contains two space separated integers, N, P denoting the number of problems, number of participants respectively. The second line contains N space separated integers, i-th of which denotes number of participants solving the i-th problem. -----Output----- For each test case, output "yes" or "no" (without quotes) denoting whether the contest is balanced or not. -----Constraints----- - 1 ≤ T, N ≤ 500  - 1 ≤ P ≤ 108  - 1 ≤ Number of participants solving a problem ≤ P -----Subtasks----- - Subtask #1 (40 points): P is a multiple of 10 - Subtask #2 (60 points): Original constraints -----Example----- Input 6 3 100 10 1 100 3 100 11 1 100 3 100 10 1 10 3 100 10 1 50 4 100 50 50 50 50 4 100 1 1 1 1 Output yes no no yes no no -----Explanation----- Example case 1.: The problems are of hard, hard and cakewalk difficulty. There is 1 cakewalk and 2 hard problems, so the contest is balanced. Example case 2.: The second problem is hard and the third is cakewalk. There is 1 cakewalk and 1 hard problem, so the contest is not balanced. Example case 3.: All the three problems are hard. So the contest is not balanced. Example case 4.: The problems are of hard, hard, cakewalk difficulty. The contest is balanced. Example case 5.: All the problems are cakewalk. The contest is not balanced. Example case 6.: All the problems are hard. The contest is not balanced.