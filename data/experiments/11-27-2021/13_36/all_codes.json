{
    "0": "\n    s = input()\n    k = int(input())\n    print(s[k:] + s[:k])\n",
    "1": "\n    s = input()\n    n = len(s)\n    dp = [[0] * n for i in range(n)]\n    for i in range(n):\n        dp[i][i] = 1\n    for i in range(n - 1):\n        if s[i] == s[i + 1]:\n            dp[i][i + 1] = 1\n    for i in range(n - 2):\n        if s[i] == s[i + 2]:\n            dp[i][i + 2] = 1\n    for i in range(n - 3):\n        if s[i] == s[i + 3]:\n            dp[i][i + 3] = 1\n    for i in range(n - 4):\n        if s[i] == s[i + 4]:\n            dp[i][i + 4] = 1\n    for i in range(n - 5):\n        if s[i] == s[i + 5]:\n            dp[i][i + 5] = 1\n    for i in range(n - 6):\n        if s[i] == s[i + 6]:\n            dp[i][i + 6] = 1\n    for i in range(n - 7):\n        if s[i] == s[i + 7]:\n            dp[i][i + 7] = 1\n    for i in range(n - 8):\n        if s[i] == s[i + 8]:\n            dp[i][i + 8] = 1\n    for i in range(n - 9):\n        if s[i] == s[i + 9]:\n            dp[i][i + 9] = 1\n    for i in range(n - 10):\n        if s[i] == s[i + 10]:\n            dp[i][i + 10] = 1\n    for i in range(n - 11):\n        if s[i] == s[i + 11]:\n            dp[i][i + 11] = 1\n    for i in range(n - 12):\n        if s[i] == s[i + 12]:\n            dp[i",
    "2": "\n    n = int(input())\n    s = input().split()\n    stack = []\n    for i in s:\n        if i == '(':\n            stack.append(i)\n        elif i == ')':\n            stack.pop()\n        else:\n            stack.append(int(i))\n    print(sum(stack) % 1000000007)\n",
    "3": "\n    n = int(input())\n    s = input().split()\n    stack = []\n    for i in s:\n        if i == '(':\n            stack.append(i)\n        elif i == ')':\n            temp = []\n            while stack[-1] != '(':\n                temp.append(stack.pop())\n            stack.pop()\n            stack.append(temp)\n        else:\n            stack.append(int(i))\n    stack = stack[0]\n    for i in range(len(stack)):\n        if type(stack[i]) == list:\n            stack[i] = stack[i][0]\n    while len(stack) > 1:\n        temp = []\n        for i in range(0, len(stack), 2):\n            if stack[i] == '+':\n                temp.append(stack[i-1] + stack[i+1])\n            else:\n                temp.append(stack[i-1] * stack[i+1])\n        stack = temp\n    print(stack[0] % 1000000007)\n",
    "4": "\n    n, m, a, b = map(int, input().split())\n    graph = [[] for i in range(n)]\n    for i in range(m):\n        u, v, c = map(int, input().split())\n        graph[u-1].append((v-1, c))\n        graph[v-1].append((u-1, c))\n    min_cost = [float('inf')]*n\n    min_cost[0] = 0\n    queue = [0]\n    while queue:\n        u = queue.pop(0)\n        for v, c in graph[u]:\n            if min_cost[v] > min_cost[u] + c:\n                min_cost[v] = min_cost[u] + c\n                queue.append(v)\n    print(*min_cost)\n\nif __name__ == '__main__':\n    code()",
    "5": "\n    n, m, a, b = map(int, input().split())\n    roads = []\n    for i in range(m):\n        roads.append(list(map(int, input().split())))\n    p = int(input())\n    res = [0] * n\n    for i in range(p):\n        res[i] = float('inf')\n    res[0] = 0\n    for i in range(n):\n        for j in range(m):\n            if roads[j][0] == i + 1:\n                res[roads[j][1] - 1] = min(res[roads[j][1] - 1], res[i] + roads[j][2])\n            elif roads[j][1] == i + 1:\n                res[roads[j][0] - 1] = min(res[roads[j][0] - 1], res[i] + roads[j][2])\n    for i in range(p, n):\n        print(res[i], end=' ')\n    print()\n"
}