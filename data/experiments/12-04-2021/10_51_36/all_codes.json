{
    "0": "\n    n = int(input())\n    room = []\n    for i in range(n):\n        room.append(list(map(int, input().split())))\n    room2 = []\n    for i in range(n):\n        room2.append(list(map(int, input().split())))\n    for i in range(n):\n        for j in range(4):\n            if room[n-1][j] == i+1:\n                if room2[i][j] == 0:\n                    print(\"Impossible\")\n                    return\n    print(\"Yes\")\n    return\n",
    "1": "\n    n = int(input())\n    room = []\n    for i in range(n):\n        room.append(list(map(int, input().split())))\n    for i in range(n):\n        if room[i][0] == 0:\n            room[i][0] = n\n        if room[i][1] == 0:\n            room[i][1] = n\n        if room[i][2] == 0:\n            room[i][2] = n\n        if room[i][3] == 0:\n            room[i][3] = n\n    for i in range(n):\n        if room[i][0] == n:\n            room[i][0] = 0\n        if room[i][1] == n:\n            room[i][1] = 0\n        if room[i][2] == n:\n            room[i][2] = 0\n        if room[i][3] == n:\n            room[i][3] = 0\n    for i in range(n):\n        if room[i][0] == i + 1:\n            room[i][0] = 0\n        if room[i][1] == i + 1:\n            room[i][1] = 0\n        if room[i][2] == i + 1:\n            room[i][2] = 0\n        if room[i][3] == i + 1:\n            room[i][3] = 0\n    for i in range(n):\n        if room[i][0] == n:\n            room[i][0] = 0\n        if room[i][1] == n:\n            room[i][1] = 0\n        if room[i][2] == n:\n            room[i][2] = 0\n        if room[i][3] == n:\n            room[i][3] = 0\n    for i in range(n):\n        if room[i][0] == i + 1:\n            room[i][0] = 0\n        if room[i][1] == i + 1:\n            room[i][1] = 0\n        if room[i][2] == i + 1:\n            room[i][2] = 0\n        if room[i][3] == i + 1:\n            room[i][3] = 0\n    for i in range(n):\n        if room[i][0] == n:\n            room[i][0] = 0\n        if room[i][1] == n:\n            room[i][1] = 0\n        if room[i][2] == n:\n            room[i][2] = 0\n        if room[i][3] == n:\n            room[i][3] = 0\n    for i in range(n):\n        if room[i][0] == i + 1:\n            room[i][0] = 0\n        if room[i][1] == i + 1:\n            room[i][1] = 0\n        if room[i][2] == i + 1:\n            room[i][2] = 0\n        if room[i][3] == i + 1:\n            room[i][3] = 0\n    for i in range(n):\n        if room[i][0] == n:\n            room[i][0] = 0\n        if room[i][1] == n:\n            room[i][1] = 0\n        if room[i][2] == n:\n            room[i][2] = 0\n        if room[i][3] == n:\n            room[i][3] = 0\n    for i in range(n):\n        if room[i][0] == i + 1:\n            room[i][0] = 0\n        if room[i][1] == i + 1:\n            room[i][1] = 0\n        if room[i][2] == i + 1:\n            room[i][2] = 0\n        if room[i][3] == i + 1:\n            room[i][3] = 0\n    for i in range(n):\n        if room[i][0] == n:\n            room[i][0] = 0\n        if room[i][1] == n:\n            room[i][1] = 0\n        if room[i][2] == n:\n            room[i][2] = 0\n        if room[",
    "2": "\n    ",
    "3": "\n    #Create variables\n    h = 0\n    w = 0\n    #Get input\n    h, w = [int(x) for x in input().split()]\n    #Create a list of lists to hold the input\n    a = []\n    #Fill the list of lists with the input\n    for i in range(h):\n        a.append([])\n        for j in range(w):\n            a[i].append(input())\n    #Create a list to hold the number of leaves to remove\n    remove = []\n    #Create a list to hold the number of leaves to remove\n    for i in range(h):\n        for j in range(w):\n            #If the square is not empty\n            if a[i][j] != \".\":\n                #If the square is a leaf\n                if a[i][j] == \"S\" or a[i][j] == \"T\":\n                    #Add the square to the list of leaves to remove\n                    remove.append(a[i][j])\n                #If the square is not a leaf\n                else:\n                    #Check if the square is in the same row or column as the leaves\n                    if a[i][j] == \"o\":\n                        #Check if the square is in the same row as the leaves\n                        if a[i][j-1] == \"S\" or a[i][j-1] == \"T\":\n                            #Add the square to the list of leaves to remove\n                            remove.append(a[i][j])\n                        #Check if the square is in the same column as the leaves\n                        if a[i-1][j] == \"S\" or a[i-1][j] == \"T\":\n                            #Add the square to the list of leaves to remove\n                            remove.append(a[i][j])\n    #If the list of leaves to remove is empty\n    if remove == []:\n        #Print -1\n        print(\"-1\")\n    #If the list of leaves to remove is not empty\n    else:\n        #Print the number of leaves to remove\n        print(len(remove))\n",
    "4": "\n    word = input()\n    word = list(word)\n    word.sort()\n    print(''.join(word))",
    "5": "\n    word = input()\n    if len(word) % 2 == 0:\n        first = word[:len(word)//2]\n        second = word[len(word)//2:]\n    else:\n        first = word[:len(word)//2]\n        second = word[len(word)//2+1:]\n    first = first[::-1]\n    second = second[::-1]\n    print(first+second)\n",
    "6": "\n    x, y = map(int, input().split())\n    if x == 1 and y == 1:\n        print(\"Impossible\")\n    elif x == 1:\n        print(\"1A\" + str(y-1) + \"B\")\n    elif y == 1:\n        print(\"1B\" + str(x-1) + \"A\")\n    elif x == y:\n        print(\"1A\" + str(x-1) + \"B\" + str(y-1) + \"A\")\n    elif x > y:\n        print(\"1A\" + str(y-1) + \"B\" + str(x-y) + \"A\" + str(y-1) + \"B\")\n    else:\n        print(\"1B\" + str(x-1) + \"A\" + str(y-x) + \"B\" + str(x-1) + \"A\")",
    "7": "\n    x, y = map(int, input().split())\n    if x == y:\n        print(\"Impossible\")\n    else:\n        if x > y:\n            print(x - y, \"A\")\n        else:\n            print(y - x, \"B\")\n",
    "8": "\n    n = int(input())\n    a = list(map(int, input().split()))\n    k = list(map(int, input().split()))\n    if n == 1:\n        print(\"Takahashi\")\n        return\n    if a[0] > k[0]:\n        print(\"Takahashi\")\n        return\n    if a[0] == k[0]:\n        print(\"Takahashi\")\n        return\n    if a[0] < k[0]:\n        print(\"Aoki\")\n        return\n",
    "9": "\n    ",
    "10": "\n    n = int(input())\n    a = [int(x) for x in input().split()]\n    count = [0, 0, 0]\n    for i in range(n):\n        for j in range(n):\n            if a[i*n+j] == 0:\n                count[0] += 1\n            elif a[i*n+j] == 1:\n                count[1] += 1\n            else:\n                count[2] += 1\n    print(count[0], count[1], count[2])\n",
    "11": "\n    n = int(input())\n    a = [[0 for i in range(n)] for j in range(n)]\n    for i in range(n):\n        a[i] = list(map(int, input().split()))\n    for i in range(1, n):\n        for j in range(1, n):\n            a[i][j] = min(a[i-1][j], a[i][j-1]) + a[i][j]\n    print(a[n-1][n-1], a[n-1][n-2], a[n-2][n-1])\n\nif __name__ == \"__main__\":\n    code()",
    "12": "\n    n, k = map(int, input().split())\n    weights = list(map(int, input().split()))\n    if k == 100:\n        print(n)\n        print(0)\n        return\n    if k == 50:\n        print(n//2)\n        print(n%2)\n        return\n    if k == 150:\n        print(n//3)\n        print(n%3)\n        return\n    if k == 200:\n        print(n//4)\n        print(n%4)\n        return\n    if k == 250:\n        print(n//5)\n        print(n%5)\n        return\n    if k == 300:\n        print(n//6)\n        print(n%6)\n        return\n    if k == 350:\n        print(n//7)\n        print(n%7)\n        return\n    if k == 400:\n        print(n//8)\n        print(n%8)\n        return\n    if k == 450:\n        print(n//9)\n        print(n%9)\n        return\n    if k == 500:\n        print(n//10)\n        print(n%10)\n        return\n    if k == 550:\n        print(n//11)\n        print(n%11)\n        return\n    if k == 600:\n        print(n//12)\n        print(n%12)\n        return\n    if k == 650:\n        print(n//13)\n        print(n%13)\n        return\n    if k == 700:\n        print(n//14)\n        print(n%14)\n        return\n    if k == 750:\n        print(n//15)\n        print(n%15)\n        return\n    if k == 800:\n        print(n//16)\n        print(n%16)\n        return\n    if k == 850:\n        print(n//17)\n        print(n%17)\n        return\n    if k == 900:\n        print(n//18)\n        print(n%18)\n        return\n    if k == 950:\n        print(n//19)\n        print(n%19)\n        return\n    if k == 1000:\n        print(n//20)\n        print(n%20)\n        return\n    if k == 1050:\n        print(n//21)\n        print(n%21)\n        return\n    if k == 1100:\n        print(n//22)\n        print(n%22)\n        return\n    if k == 1150:\n        print(n//23)\n        print(n%23)\n        return\n    if k == 1200:\n        print(n//24)\n        print(n%24)\n        return\n    if k == 1250:\n        print(n//25)\n        print(n%25)\n        return\n    if k == 1300:\n        print(n//26)\n        print(n%26)\n        return\n    if k == 1350:\n        print(n//27)\n        print(n%27)\n        return\n    if k == 1400:\n        print(n//28)\n        print(n%28)\n        return\n    if k == 1450:\n        print(n//29)\n        print(n%29)\n        return\n    if k == 1500:\n        print(n//30)\n        print(n%30)\n        return\n    if k == 1550:\n        print(n//31)\n        print(n%31)\n        return\n    if k == 1600:\n        print(n//32)\n        print(n%32)\n        return\n    if k == 1650:\n        print(n//33)\n        print(n%33)\n        return\n    if k == 1700:\n        print(n//34)\n        print(n%34)\n        return\n    if k == 1750:\n        print(n//35)\n        print(n%35)\n        return\n    if k == 1800:\n        print(n//36)\n        print(n%36)\n        return\n    if k == 1850:\n        print(n//37)\n        print(n%37)\n        return\n    if k == 1900:\n        print(n//38)\n        print(n%38)\n        return\n    if k",
    "13": "\n    n, k = map(int, input().split())\n    w = list(map(int, input().split()))\n    if k < 50:\n        print(-1)\n        print(0)\n    else:\n        print(n)\n        print(n)\n",
    "14": "\n    test_cases = int(input())\n    for i in range(test_cases):\n        num_vertices, num_edges = map(int, input().split())\n        costs = list(map(int, input().split()))\n        edges = list(map(int, input().split()))\n        graph = {}\n        for i in range(num_vertices):\n            graph[i] = []\n        for i in range(num_edges):\n            graph[edges[2*i]].append(edges[2*i+1])\n            graph[edges[2*i+1]].append(edges[2*i])\n        visited = [False] * num_vertices\n        def dfs(v):\n            visited[v] = True\n            for i in graph[v]:\n                if not visited[i]:\n                    dfs(i)\n        dfs(0)\n        visited = [False] * num_vertices\n        def dfs2(v):\n            visited[v] = True\n            for i in graph[v]:\n                if not visited[i]:\n                    dfs2(i)\n        dfs2(0)\n        score = 0\n        for i in range(num_vertices):\n            if not visited[i]:\n                score += costs[i]\n                dfs2(i)\n        print(score)",
    "15": "\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    edges = []\n    for i in range(m):\n        edges.append(list(map(int, input().split())))\n    # Create a graph\n    graph = {}\n    for i in range(n):\n        graph[i + 1] = []\n    for i in range(m):\n        graph[edges[i][0]].append(edges[i][1])\n        graph[edges[i][1]].append(edges[i][0])\n    # Delete vertices\n    for i in range(n):\n        # Create a copy of the graph\n        copy = {}\n        for key in graph:\n            copy[key] = graph[key].copy()\n        # Delete the vertex\n        copy[i + 1].clear()\n        for key in copy:\n            if i + 1 in copy[key]:\n                copy[key].remove(i + 1)\n        # Calculate the score\n        score = 0\n        for key in copy:\n            if len(copy[key]) != 0:\n                score += abs(sum([b[i - 1] for i in copy[key]]))\n        print(score - a[i])\n\ndef main():\n    code()\n\nif __name__ == \"__main__\":\n    main()",
    "16": "\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    k = 0\n    t = 0\n    while a:\n        if a[0] <= b[0]:\n            k += 1\n            t += a[0]\n            a.pop(0)\n            b.pop(0)\n        else:\n            t += b[0]\n            a[0] -= b[0]\n            b.pop(0)\n    print(k, t)\n",
    "17": "\n    n = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    a.sort()\n    b.sort()\n    k = 0\n    t = 0\n    while a:\n        if a[0] > b[0]:\n            t += a[0]\n            a.pop(0)\n            b.pop(0)\n        else:\n            t += b[0]\n            a.pop(0)\n            b.pop(0)\n        k += 1\n    print(k, t)\n",
    "18": "\n    n, m = map(int, input().split())\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(m)\n    else:\n        print((m*(m-1)**(n-2))%1000000009)\n",
    "19": "\n    n, m = map(int, input().split())\n    dp = [[0 for i in range(m + 1)] for j in range(n + 1)]\n    dp[0][0] = 1\n    for i in range(1, n + 1):\n        for j in range(m + 1):\n            for k in range(j + 1):\n                dp[i][j] += dp[i - 1][k]\n    print(dp[n][m] % 1000000009)\n"
}