{
    "0": "\n    s = input()\n    n = len(s)\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n+1):\n            if s[i:j] == \"lol\":\n                count += 1\n    print(count)\n",
    "1": "\n    s = input()\n    d = {}\n    for i in range(len(s)):\n        for j in range(i+1, len(s)+1):\n            if s[i:j] in d:\n                d[s[i:j]] += 1\n            else:\n                d[s[i:j]] = 1\n    print(max(d.values()))\n",
    "2": "\n    n = int(input())\n    a = [0] * n\n    s = [0] * n\n    for i in range(n):\n        s[i], a[i] = input().split()\n        a[i] = int(a[i])\n    s.sort(key=lambda x: x[0])\n    a.sort()\n    alice = 0\n    bob = 0\n    for i in range(n):\n        if s[i][0] == '1':\n            alice += a[i]\n        else:\n            bob += a[i]\n    if alice > bob:\n        print(alice)\n    else:\n        print(bob)\n",
    "3": "\n    n = int(input())\n    a = []\n    for i in range(n):\n        s, ai = input().split()\n        a.append(int(ai))\n    a.sort()\n    a.reverse()\n    m = sum(a)\n    if m % 2 == 1:\n        print(0)\n        return\n    m //= 2\n    ai = 0\n    ai2 = 0\n    for i in range(n):\n        if a[i] > m:\n            print(0)\n            return\n        if a[i] == m:\n            ai2 = i\n            break\n        ai += 1\n    if ai2 == 0:\n        print(m)\n        return\n    print(m + a[ai2] + a[ai2 + 1])\n",
    "4": "\n    n, m, k = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    count = 0\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 1:\n                count += 1\n    if k >= count:\n        print(0)\n    else:\n        print(-1)",
    "5": "\n    n, m, k = map(int, input().split())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    #print(a)\n    #print(n, m, k)\n    #print(a)\n    #print(a[0][0])\n    #print(a[0][1])\n    #print(a[1][0])\n    #print(a[1][1])\n    #print(a[2][0])\n    #print(a[2][1])\n    #print(a[3][0])\n    #print(a[3][1])\n    #print(a[4][0])\n    #print(a[4][1])\n    #print(a[0][0], a[0][1], a[1][0], a[1][1], a[2][0], a[2][1], a[3][0], a[3][1], a[4][0], a[4][1])\n    #print(a[0][0], a[0][1], a[1][0], a[1][1], a[2][0], a[2][1], a[3][0], a[3][1], a[4][0], a[4][1])\n    #print(a[0][0], a[0][1], a[1][0], a[1][1], a[2][0], a[2][1], a[3][0], a[3][1], a[4][0], a[4][1])\n    #print(a[0][0], a[0][1], a[1][0], a[1][1], a[2][0], a[2][1], a[3][0], a[3][1], a[4][0], a[4][1])\n    #print(a[0][0], a[0][1], a[1][0], a[1][1], a[2][0], a[2][1], a[3][0], a[3][1], a[4][0], a[4][1])\n    #print(a[0][0], a[0][1], a[1][0], a[1][1], a[2][0], a[2][1], a[3][0], a[3][1], a[4][0], a[4][1])\n    #print(a[0][0], a[0][1], a[1][0], a[1][1], a[2][0], a[2][1], a[3][0], a[3][1], a[4][0], a[4][1])\n    #print(a[0][0], a[0][1], a[1][0], a[1][1], a[2][0], a[2][1], a[3][0], a[3][1], a[4][0], a[4][1])\n    #print(a[0][0], a[0][1], a[1][0], a[1][1], a[2][0], a[2][1], a[3][0], a[3][1], a[4][0], a[4][1])\n    #print(a[0][0], a[0][1], a[1][0], a[1][1], a[2][0], a[2][1], a[3][0], a[3][1], a[4][0], a[4][1])\n    #print(a[0][0], a[0][1], a[1][0], a[1][1], a[2][0], a[2][1], a[3][0], a[3][1], a[4][0], a[4][1])\n    #print(a[0][0], a[0][1], a[1][0], a[1][1], a[2][0], a[2][1], a[3][0], a[3][1], a[4][0], a[4][1])\n    #print(a[0][0], a[0][1], a[1][0], a[1][1], a[2][0], a[2][1], a[3][0], a[3][1], a[4][0], a[4",
    "6": "\n    n, d, w = map(int, input().split())\n    inscr = []\n    for i in range(n):\n        inscr.append(input())\n    inscr = \"\".join(inscr)\n    inscr = inscr.split(\".\")\n    inscr = [i for i in inscr if i != \"\"]\n    inscr = \".\".join(inscr)\n    inscr = inscr.split(\" \")\n    inscr = [i for i in inscr if i != \"\"]\n    inscr = \" \".join(inscr)\n    inscr = inscr.split(\"\\n\")\n    inscr = [i for i in inscr if i != \"\"]\n    inscr = \"\\n\".join(inscr)\n    inscr = inscr.split(\"\\r\")\n    inscr = [i for i in inscr if i != \"\"]\n    inscr = \"\\r\".join(inscr)\n    inscr = inscr.split(\"\\t\")\n    inscr = [i for i in inscr if i != \"\"]\n    inscr = \"\\t\".join(inscr)\n    inscr = inscr.split(\"\\v\")\n    inscr = [i for i in inscr if i != \"\"]\n    inscr = \"\\v\".join(inscr)\n    inscr = inscr.split(\"\\f\")\n    inscr = [i for i in inscr if i != \"\"]\n    inscr = \"\\f\".join(inscr)\n    inscr = inscr.split(\"\\b\")\n    inscr = [i for i in inscr if i != \"\"]\n    inscr = \"\\b\".join(inscr)\n    inscr = inscr.split(\"\\a\")\n    inscr = [i for i in inscr if i != \"\"]\n    inscr = \"\\a\".join(inscr)\n    inscr = inscr.split(\"\\000\")\n    inscr = [i for i in inscr if i != \"\"]\n    inscr = \"\\000\".join(inscr)\n    inscr = inscr.split(\"\\x00\")\n    inscr = [i for i in inscr if i != \"\"]\n    inscr = \"\\x00\".join(inscr)\n    inscr = inscr.split(\"\\u0000\")\n    inscr = [i for i in inscr if i != \"\"]\n    inscr = \"\\u0000\".join(inscr)\n    inscr = inscr.split(\"\\U00000000\")\n    inscr = [i for i in inscr if i != \"\"]\n    inscr = \"\\U00000000\".join(inscr)\n    inscr = inscr.split(\"\\N{NULL}\")\n    inscr = [i for i in inscr if i != \"\"]\n    inscr = \"\\N{NULL}\".join(inscr)\n    inscr = inscr.split(\"\\N{U+0000}\")\n    inscr = [i for i in inscr if i != \"\"]\n    inscr = \"\\N{U+0000}\".join(inscr)\n    inscr = inscr.split(\"\\N{ZERO WIDTH NO-BREAK SPACE}\")\n    inscr = [i for i in inscr if i != \"\"]\n    inscr = \"\\N{ZERO WIDTH NO-BREAK SPACE}\".join(inscr)\n    inscr = inscr.split(\"\\N{ZERO WIDTH SPACE}\")\n    inscr = [i for i in inscr if i != \"\"]\n    inscr = \"\\N{ZERO WIDTH SPACE}\".join(inscr)\n    inscr = inscr.split(\"\\N{ZERO WIDTH NON-JOINER}\")\n    inscr = [i for i in inscr if i != \"\"]\n    inscr = \"\\N{ZERO WIDTH NON-JOINER}\".join(inscr)\n    inscr = inscr.split(\"\\N{ZERO WIDTH JOINER}\")\n    inscr = [i for i in inscr if i != \"\"]\n    inscr = \"\\N{ZERO WIDTH JOINER}\".join(inscr)\n    inscr = inscr.split(\"\\N{LEFT-TO-RIGHT MARK}\")\n    inscr = [i for i in inscr if i != \"\"]\n    inscr = \"\\N{LEFT-TO-",
    "7": "\n    n, d, w = [int(x) for x in input().split()]\n    inscr = []\n    for i in range(n):\n        inscr.append(input())\n    inscr = ''.join(inscr)\n    inscr = inscr.split('.')\n    inscr = [x for x in inscr if x != '']\n    inscr = '.'.join(inscr)\n    inscr = inscr.split('\\n')\n    inscr = [x for x in inscr if x != '']\n    inscr = '\\n'.join(inscr)\n    inscr = inscr.split(' ')\n    inscr = [x for x in inscr if x != '']\n    inscr = ' '.join(inscr)\n    inscr = inscr.split('\\n\\n')\n    inscr = [x for x in inscr if x != '']\n    inscr = '\\n\\n'.join(inscr)\n    inscr = inscr.split('\\n ')\n    inscr = [x for x in inscr if x != '']\n    inscr = '\\n '.join(inscr)\n    inscr = inscr.split(' \\n')\n    inscr = [x for x in inscr if x != '']\n    inscr = ' \\n'.join(inscr)\n    inscr = inscr.split('\\n\\n')\n    inscr = [x for x in inscr if x != '']\n    inscr = '\\n\\n'.join(inscr)\n    inscr = inscr.split('\\n ')\n    inscr = [x for x in inscr if x != '']\n    inscr = '\\n '.join(inscr)\n    inscr = inscr.split(' \\n')\n    inscr = [x for x in inscr if x != '']\n    inscr = ' \\n'.join(inscr)\n    inscr = inscr.split('\\n\\n')\n    inscr = [x for x in inscr if x != '']\n    inscr = '\\n\\n'.join(inscr)\n    inscr = inscr.split('\\n ')\n    inscr = [x for x in inscr if x != '']\n    inscr = '\\n '.join(inscr)\n    inscr = inscr.split(' \\n')\n    inscr = [x for x in inscr if x != '']\n    inscr = ' \\n'.join(inscr)\n    inscr = inscr.split('\\n\\n')\n    inscr = [x for x in inscr if x != '']\n    inscr = '\\n\\n'.join(inscr)\n    inscr = inscr.split('\\n ')\n    inscr = [x for x in inscr if x != '']\n    inscr = '\\n '.join(inscr)\n    inscr = inscr.split(' \\n')\n    inscr = [x for x in inscr if x != '']\n    inscr = ' \\n'.join(inscr)\n    inscr = inscr.split('\\n\\n')\n    inscr = [x for x in inscr if x != '']\n    inscr = '\\n\\n'.join(inscr)\n    inscr = inscr.split('\\n ')\n    inscr = [x for x in inscr if x != '']\n    inscr = '\\n '.join(inscr)\n    inscr = inscr.split(' \\n')\n    inscr = [x for x in inscr if x != '']\n    inscr = ' \\n'.join(inscr)\n    inscr = inscr.split('\\n\\n')\n    inscr = [x for x in inscr if x != '']\n    inscr = '\\n\\n'.join(inscr)\n    inscr = inscr.split('\\n ')\n    inscr = [x for x in inscr if x != '']\n    inscr = '\\n '.join(inscr)\n    inscr = inscr.split(' \\n')\n    inscr = [x for x in inscr if x != '']\n    inscr = ' \\n'.join(inscr)\n    inscr = inscr.split('\\n\\n')\n    ins",
    "8": "\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    roads = []\n    for i in range(m):\n        roads.append(list(map(int, input().split())))\n    roads.sort(key=lambda x: x[0])\n    roads.sort(key=lambda x: x[1])\n    roads.sort(key=lambda x: a[x[0] - 1])\n    roads.sort(key=lambda x: a[x[1] - 1])\n    #print(roads)\n    max_value = 0\n    for i in range(m):\n        if roads[i][0] != roads[i - 1][0]:\n            max_value = max(max_value, a[roads[i][0] - 1])\n        else:\n            max_value = max(max_value, a[roads[i][1] - 1])\n        a[roads[i][0] - 1] = max_value\n        a[roads[i][1] - 1] = max_value\n    #print(a)\n    sum_value = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            sum_value += a[i]\n    print(sum_value / (n * (n - 1)))\n",
    "9": "\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    roads = []\n    for i in range(m):\n        roads.append(list(map(int, input().split())))\n    roads.sort(key=lambda x: x[0])\n    roads.sort(key=lambda x: x[1])\n    # print(roads)\n    # print(a)\n    # print(n, m)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n    # print(a)\n    # print(roads)\n",
    "10": "\n    n, m = map(int, input().split())\n    if n == 1 or m == 1:\n        print(1)\n    else:\n        print((n-2)*(m-2) % (10**9 + 7))\n",
    "11": "\n    n, m = map(int, input().split())\n    if n == 1 or m == 1:\n        print(n*m)\n        return\n    if n == 2 or m == 2:\n        print(n*m - 2)\n        return\n    if n == 3 or m == 3:\n        print(n*m - 4)\n        return\n    if n == 4 or m == 4:\n        print(n*m - 6)\n        return\n    if n == 5 or m == 5:\n        print(n*m - 8)\n        return\n    if n == 6 or m == 6:\n        print(n*m - 10)\n        return\n    if n == 7 or m == 7:\n        print(n*m - 12)\n        return\n    if n == 8 or m == 8:\n        print(n*m - 14)\n        return\n    if n == 9 or m == 9:\n        print(n*m - 16)\n        return\n    if n == 10 or m == 10:\n        print(n*m - 18)\n        return\n    if n == 11 or m == 11:\n        print(n*m - 20)\n        return\n    if n == 12 or m == 12:\n        print(n*m - 22)\n        return\n    if n == 13 or m == 13:\n        print(n*m - 24)\n        return\n    if n == 14 or m == 14:\n        print(n*m - 26)\n        return\n    if n == 15 or m == 15:\n        print(n*m - 28)\n        return\n    if n == 16 or m == 16:\n        print(n*m - 30)\n        return\n    if n == 17 or m == 17:\n        print(n*m - 32)\n        return\n    if n == 18 or m == 18:\n        print(n*m - 34)\n        return\n    if n == 19 or m == 19:\n        print(n*m - 36)\n        return\n    if n == 20 or m == 20:\n        print(n*m - 38)\n        return\n    if n == 21 or m == 21:\n        print(n*m - 40)\n        return\n    if n == 22 or m == 22:\n        print(n*m - 42)\n        return\n    if n == 23 or m == 23:\n        print(n*m - 44)\n        return\n    if n == 24 or m == 24:\n        print(n*m - 46)\n        return\n    if n == 25 or m == 25:\n        print(n*m - 48)\n        return\n    if n == 26 or m == 26:\n        print(n*m - 50)\n        return\n    if n == 27 or m == 27:\n        print(n*m - 52)\n        return\n    if n == 28 or m == 28:\n        print(n*m - 54)\n        return\n    if n == 29 or m == 29:\n        print(n*m - 56)\n        return\n    if n == 30 or m == 30:\n        print(n*m - 58)\n        return\n    if n == 31 or m == 31:\n        print(n*m - 60)\n        return\n    if n == 32 or m == 32:\n        print(n*m - 62)\n        return\n    if n == 33 or m == 33:\n        print(n*m - 64)\n        return\n    if n == 34 or m == 34:\n        print(n*m - 66)\n        return\n    if n == 35 or m == 35:\n        print(n*m - 68)\n        return\n    if n == 36 or m == 36:\n        print(n*m - 70)\n        return\n    if n == 37 or m == 37:\n        print(n*m - 72)\n        return\n    if n == 38 or m == 38:\n        print(n*m - 74)\n        return\n    if n == 39 or m == 39:\n        print(n*m - 76)\n        return\n    if n == 40 or m == 40:\n        print(n*m - 78)\n        return\n    if n == 41 or m == 41:\n        print(n*m - 80)\n        return\n    if n == 42 or m == 42:\n        print(n*m - 82)\n        return\n    if n",
    "12": "\n    p, k = map(int, input().split())\n    piles = []\n    for i in range(p):\n        piles.append(list(map(int, input().split())))\n    for i in range(p):\n        if piles[i][-1] == 1:\n            piles[i].pop()\n    for i in range(p):\n        if len(piles[i]) == 0:\n            piles[i].append(0)\n    for i in range(p):\n        if piles[i][-1] == 0:\n            piles[i].pop()\n    for i in range(p):\n        if len(piles[i]) == 0:\n            piles[i].append(0)\n    for i in range(p):\n        if piles[i][-1] == 0:\n            piles[i].pop()\n    for i in range(p):\n        if len(piles[i]) == 0:\n            piles[i].append(0)\n    for i in range(p):\n        if piles[i][-1] == 0:\n            piles[i].pop()\n    for i in range(p):\n        if len(piles[i]) == 0:\n            piles[i].append(0)\n    for i in range(p):\n        if piles[i][-1] == 0:\n            piles[i].pop()\n    for i in range(p):\n        if len(piles[i]) == 0:\n            piles[i].append(0)\n    for i in range(p):\n        if piles[i][-1] == 0:\n            piles[i].pop()\n    for i in range(p):\n        if len(piles[i]) == 0:\n            piles[i].append(0)\n    for i in range(p):\n        if piles[i][-1] == 0:\n            piles[i].pop()\n    for i in range(p):\n        if len(piles[i]) == 0:\n            piles[i].append(0)\n    for i in range(p):\n        if piles[i][-1] == 0:\n            piles[i].pop()\n    for i in range(p):\n        if len(piles[i]) == 0:\n            piles[i].append(0)\n    for i in range(p):\n        if piles[i][-1] == 0:\n            piles[i].pop()\n    for i in range(p):\n        if len(piles[i]) == 0:\n            piles[i].append(0)\n    for i in range(p):\n        if piles[i][-1] == 0:\n            piles[i].pop()\n    for i in range(p):\n        if len(piles[i]) == 0:\n            piles[i].append(0)\n    for i in range(p):\n        if piles[i][-1] == 0:\n            piles[i].pop()\n    for i in range(p):\n        if len(piles[i]) == 0:\n            piles[i].append(0)\n    for i in range(p):\n        if piles[i][-1] == 0:\n            piles[i].pop()\n    for i in range(p):\n        if len(piles[i]) == 0:\n            piles[i].append(0)\n    for i in range(p):\n        if piles[i][-1] == 0:\n            piles[i].pop()\n    for i in range(p):\n        if len(piles[i]) == 0:\n            piles[i].append(0)\n    for i in range(p):\n        if piles[i][-1] == 0:\n            piles[i].pop()\n    for i in range(p):\n        if len(piles[i]) == 0:\n            piles[i].append(0)\n    for i in range(p):\n        if piles[i][-1] == 0:\n            piles[i].pop()\n    for i in range(p):\n        if len(piles[i]) == 0:\n            piles[i].append(0)\n    for i in range(p):\n        if piles[i][-1] == 0:\n            piles[i].pop()\n    for i in range(p):\n        if len(piles[i])",
    "13": "\n    p, k = map(int, input().split())\n    piles = []\n    for i in range(p):\n        piles.append(list(map(int, input().split())))\n    for i in range(p):\n        if piles[i][0] == k:\n            print(\"Alice will win.\")\n            return\n    print(\"Bob will win.\")\n",
    "14": "\n    import math\n    C = int(input())\n    if C < 2 or C > 100000:\n        return\n    else:\n        points = []\n        for i in range(C):\n            x, y = input().split()\n            x = int(x)\n            y = int(y)\n            if abs(x) > 1000 or abs(y) > 1000:\n                return\n            else:\n                points.append((x,y))\n        if len(points) < 2:\n            return\n        else:\n            max_dist = 0\n            for i in range(len(points)):\n                for j in range(i+1, len(points)):\n                    dist = math.sqrt((points[i][0] - points[j][0])**2 + (points[i][1] - points[j][1])**2)\n                    if dist > max_dist:\n                        max_dist = dist\n            print(max_dist)\n",
    "15": "\n    C = int(input())\n    shots = []\n    for i in range(C):\n        shots.append(list(map(int, input().split())))\n    shots = [shot for shot in shots if len(shot) == 2]\n    if len(shots) < 2:\n        print(\"0.0\")\n    else:\n        longest = 0\n        for i in range(len(shots)):\n            for j in range(i+1, len(shots)):\n                distance = ((shots[i][0] - shots[j][0])**2 + (shots[i][1] - shots[j][1])**2)**0.5\n                if distance > longest:\n                    longest = distance\n        print(longest)\n",
    "16": "\n    m = int(input())\n    animals = []\n    for i in range(m):\n        animals.append(int(input()))\n    animals.sort()\n    animals.reverse()\n    target = 0\n    for i in range(len(animals)):\n        if animals[i] < 20000:\n            target += animals[i]\n        else:\n            target += animals[i]\n            break\n    print(target)",
    "17": "\n    m = int(input())\n    animals = []\n    for i in range(m):\n        animals.append(int(input()))\n    animals.sort()\n    target = animals[0]\n    for i in range(1, m):\n        if animals[i] == target:\n            target += 1\n            continue\n        if animals[i] % target == 0:\n            target = animals[i]\n        else:\n            target = animals[i] + target - animals[i] % target\n    print(target)\n",
    "18": "\n    x = input()\n    y = input()\n    if x.count('0') == y.count('0'):\n        if x.count('1') == y.count('1'):\n            if x.count('2') == y.count('2'):\n                if x.count('3') == y.count('3'):\n                    if x.count('4') == y.count('4'):\n                        if x.count('5') == y.count('5'):\n                            if x.count('6') == y.count('6'):\n                                if x.count('7') == y.count('7'):\n                                    if x.count('8') == y.count('8'):\n                                        if x.count('9') == y.count('9'):\n                                            print('yes')\n                                        else:\n                                            print('no')\n                                    else:\n                                        print('no')\n                                else:\n                                    print('no')\n                            else:\n                                print('no')\n                        else:\n                            print('no')\n                    else:\n                        print('no')\n                else:\n                    print('no')\n            else:\n                print('no')\n        else:\n            print('no')\n    else:\n        print('no')",
    "19": "\n    x, y = input().split()\n    if x.count('0') == y.count('0'):\n        if x.count('1') == y.count('1'):\n            if x.count('2') == y.count('2'):\n                if x.count('3') == y.count('3'):\n                    if x.count('4') == y.count('4'):\n                        if x.count('5') == y.count('5'):\n                            if x.count('6') == y.count('6'):\n                                if x.count('7') == y.count('7'):\n                                    if x.count('8') == y.count('8'):\n                                        if x.count('9') == y.count('9'):\n                                            print('yes')\n                                        else:\n                                            print('no')\n                                    else:\n                                        print('no')\n                                else:\n                                    print('no')\n                            else:\n                                print('no')\n                        else:\n                            print('no')\n                    else:\n                        print('no')\n                else:\n                    print('no')\n            else:\n                print('no')\n        else:\n            print('no')\n    else:\n        print('no')"
}