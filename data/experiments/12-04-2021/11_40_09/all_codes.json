{
    "0": "\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in a:\n        if len(str(i)) <= k:\n            count += 1\n    print(count)\n",
    "1": "\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in a:\n        if len(str(i)) <= k:\n            count += 1\n    print(count)\n",
    "2": "\n    t, a, b = map(int, input().split())\n    if a == b:\n        print(1)\n    elif a > b:\n        print(0)\n    else:\n        if t == 1:\n            print(1)\n        else:\n            print(0)\n",
    "3": "\n    t, a, b = map(int, input().split())\n    if a == b:\n        print(1)\n    elif a > b:\n        print(0)\n    else:\n        if t == 1:\n            print(1)\n        else:\n            print(0)\n",
    "4": "\n    ",
    "5": "\n    r, s, m, d, n = map(int, input().split())\n    b = list(map(int, input().split()))\n    starter = []\n    main = []\n    dessert = []\n    for i in range(s):\n        k = int(input())\n        starter.append(list(map(int, input().split())))\n    for i in range(m):\n        k = int(input())\n        main.append(list(map(int, input().split())))\n    for i in range(d):\n        k = int(input())\n        dessert.append(list(map(int, input().split())))\n    incomp = []\n    for i in range(n):\n        incomp.append(list(map(int, input().split())))\n    #print(starter, main, dessert, incomp)\n    #print(b)\n    #print(r, s, m, d, n)\n    #print(b)\n    #print(incomp)\n    #print(len(incomp))\n    #print(len(incomp) > 10**18)\n    if len(incomp) > 10**18:\n        print(\"too many\")\n    else:\n        print(len(incomp))\n",
    "6": "\n    n, k1, k2 = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    A.sort()\n    B.sort()\n    if k1 > k2:\n        A, B = B, A\n        k1, k2 = k2, k1\n    E = 0\n    for i in range(n):\n        E += (A[i] - B[i]) ** 2\n    if k1 == 0:\n        print(E)\n        return\n    for i in range(k1):\n        A[i] += 1\n        E -= 2\n    for i in range(k2):\n        B[i] += 1\n        E -= 2\n    print(E)\n",
    "7": "\n    n, k1, k2 = map(int, input().split())\n    A = list(map(int, input().split()))\n    B = list(map(int, input().split()))\n    A.sort()\n    B.sort()\n    if k1 > k2:\n        A, B = B, A\n        k1, k2 = k2, k1\n    if k1 == 0:\n        print(sum([(a - b)**2 for a, b in zip(A, B)]))\n    else:\n        if A[0] < B[0]:\n            A[0] += 1\n            k1 -= 1\n        else:\n            B[0] += 1\n            k2 -= 1\n        print(min(sum([(a - b)**2 for a, b in zip(A, B)]) + k1, sum([(a - b)**2 for a, b in zip(A, B)]) + k2))\n",
    "8": "\n    n = int(input())\n    recipes = []\n    for i in range(n):\n        recipes.append(list(map(int, input().split())))\n    for i in range(n):\n        recipes[i][0] = 1\n    for i in range(n):\n        for j in range(1, recipes[i][0]):\n            recipes[i][j] = recipes[i][j] - 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            if recipes[i][0] == recipes[j][0]:\n                for k in range(1, recipes[i][0]):\n                    if recipes[i][k] == recipes[j][k]:\n                        recipes[j][0] = 0\n    for i in range(n):\n        if recipes[i][0] == 0:\n            recipes[i][0] = -1\n    for i in range(n):\n        if recipes[i][0] == 1:\n            recipes[i][0] = -1\n    for i in range(n):\n        if recipes[i][0] == -1:\n            recipes[i][0] = 0\n    for i in range(n):\n        if recipes[i][0] == -1:\n            recipes[i][0] = 0\n    for i in range(n):\n        if recipes[i][0] == 1:\n            recipes[i][0] = -1\n    for i in range(n):\n        if recipes[i][0] == -1:\n            recipes[i][0] = 0\n    for i in range(n):\n        if recipes[i][0] == 1:\n            recipes[i][0] = -1\n    for i in range(n):\n        if recipes[i][0] == -1:\n            recipes[i][0] = 0\n    for i in range(n):\n        if recipes[i][0] == 1:\n            recipes[i][0] = -1\n    for i in range(n):\n        if recipes[i][0] == -1:\n            recipes[i][0] = 0\n    for i in range(n):\n        if recipes[i][0] == 1:\n            recipes[i][0] = -1\n    for i in range(n):\n        if recipes[i][0] == -1:\n            recipes[i][0] = 0\n    for i in range(n):\n        if recipes[i][0] == 1:\n            recipes[i][0] = -1\n    for i in range(n):\n        if recipes[i][0] == -1:\n            recipes[i][0] = 0\n    for i in range(n):\n        if recipes[i][0] == 1:\n            recipes[i][0] = -1\n    for i in range(n):\n        if recipes[i][0] == -1:\n            recipes[i][0] = 0\n    for i in range(n):\n        if recipes[i][0] == 1:\n            recipes[i][0] = -1\n    for i in range(n):\n        if recipes[i][0] == -1:\n            recipes[i][0] = 0\n    for i in range(n):\n        if recipes[i][0] == 1:\n            recipes[i][0] = -1\n    for i in range(n):\n        if recipes[i][0] == -1:\n            recipes[i][0] = 0\n    for i in range(n):\n        if recipes[i][0] == 1:\n            recipes[i][0] = -1\n    for i in range(n):\n        if recipes[i][0] == -1:\n            recipes[i][0] = 0\n    for i in range(n):\n        if recipes[i][0] == 1:\n            recipes[i][0] = -1\n    for i in range(n):\n        if recipes[i][0] == -1:\n            recipes[i][0] = 0\n    for i in range(n):\n        if recipes[i][0] == 1:\n            recipes[i][0] = -1\n    for i in range(n):\n        if recipes[i][0] == -1:\n            recipes[i][0] = 0\n    for i in range(n):\n        if",
    "9": "\n    n = int(input())\n    recipes = []\n    for i in range(n):\n        recipes.append(list(map(int, input().split())))\n    for i in range(n):\n        recipes[i][0] = set(recipes[i][1:])\n    for i in range(n):\n        for j in range(i+1, n):\n            if recipes[i][0] & recipes[j][0]:\n                recipes[i][0] = recipes[i][0] | recipes[j][0]\n                recipes[j][0] = set()\n    count = 0\n    for i in range(n):\n        if recipes[i][0]:\n            count += 1\n    print(count)\n",
    "10": "\n    rebus = input()\n    rebus = rebus.split()\n    n = int(rebus[-1])\n    rebus = rebus[:-1]\n    if len(rebus) == 1:\n        if rebus[0] == '?':\n            print(\"Possible\")\n            print(n)\n        else:\n            print(\"Impossible\")\n    else:\n        if rebus[0] == '?':\n            rebus[0] = 1\n        if rebus[-1] == '?':\n            rebus[-1] = n\n        for i in range(1, len(rebus)):\n            if rebus[i] == '?':\n                if rebus[i-1] == '+':\n                    rebus[i] = rebus[i-2] + 1\n                elif rebus[i-1] == '-':\n                    rebus[i] = rebus[i-2] - 1\n        if rebus[1] - rebus[0] == rebus[2] - rebus[1]:\n            print(\"Possible\")\n            print(*rebus)\n        else:\n            print(\"Impossible\")",
    "11": "\n    rebus = input()\n    rebus = rebus.split()\n    n = int(rebus[-1])\n    del rebus[-1]\n    if len(rebus) == 1:\n        if rebus[0] == '?':\n            print(\"Possible\")\n            print(n, end=' ')\n        else:\n            print(\"Impossible\")\n    else:\n        if '?' in rebus:\n            print(\"Possible\")\n            for i in range(len(rebus)):\n                if rebus[i] == '?':\n                    rebus[i] = str(n)\n            print(' '.join(rebus))\n        else:\n            print(\"Impossible\")\n\nif __name__ == '__main__':\n    code()",
    "12": "\n    n, e = map(int, input().split())\n    count = 0\n    for i in range(n+1):\n        if str(2**e) in str(i):\n            count += 1\n    print(count)",
    "13": "\n    n, e = [int(x) for x in input().split()]\n    count = 0\n    for i in range(n+1):\n        if str(2**e) in str(i):\n            count += 1\n    print(count)\n",
    "14": "\n    n = int(input())\n    points = []\n    for i in range(n):\n        points.append(list(map(int, input().split())))\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if (points[i][0] - points[j][0])**2 + (points[i][1] - points[j][1])**2 == 2018:\n                count += 1\n    print(count)\n",
    "15": "\n    n = int(input())\n    points = []\n    for i in range(n):\n        points.append(list(map(int, input().split())))\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if (points[i][0] - points[j][0])**2 + (points[i][1] - points[j][1])**2 == 2018**2:\n                count += 1\n    print(count)\n",
    "16": "\n    n = int(input())\n    cards = []\n    for i in range(n):\n        cards.append(input())\n    k = int(input())\n    used = []\n    for i in range(k):\n        used.append(input())\n    #print(cards)\n    #print(used)\n    #print(cards.count(\"R1\"))\n    #print(cards.count(\"R2\"))\n    #print(cards.count(\"R3\"))\n    #print(cards.count(\"R4\"))\n    #print(cards.count(\"R5\"))\n    #print(cards.count(\"G1\"))\n    #print(cards.count(\"G2\"))\n    #print(cards.count(\"G3\"))\n    #print(cards.count(\"G4\"))\n    #print(cards.count(\"G5\"))\n    #print(cards.count(\"B1\"))\n    #print(cards.count(\"B2\"))\n    #print(cards.count(\"B3\"))\n    #print(cards.count(\"B4\"))\n    #print(cards.count(\"B5\"))\n    #print(cards.count(\"Y1\"))\n    #print(cards.count(\"Y2\"))\n    #print(cards.count(\"Y3\"))\n    #print(cards.count(\"Y4\"))\n    #print(cards.count(\"Y5\"))\n    #print(cards.count(\"W1\"))\n    #print(cards.count(\"W2\"))\n    #print(cards.count(\"W3\"))\n    #print(cards.count(\"W4\"))\n    #print(cards.count(\"W5\"))\n    #print(used.count(\"R1\"))\n    #print(used.count(\"R2\"))\n    #print(used.count(\"R3\"))\n    #print(used.count(\"R4\"))\n    #print(used.count(\"R5\"))\n    #print(used.count(\"G1\"))\n    #print(used.count(\"G2\"))\n    #print(used.count(\"G3\"))\n    #print(used.count(\"G4\"))\n    #print(used.count(\"G5\"))\n    #print(used.count(\"B1\"))\n    #print(used.count(\"B2\"))\n    #print(used.count(\"B3\"))\n    #print(used.count(\"B4\"))\n    #print(used.count(\"B5\"))\n    #print(used.count(\"Y1\"))\n    #print(used.count(\"Y2\"))\n    #print(used.count(\"Y3\"))\n    #print(used.count(\"Y4\"))\n    #print(used.count(\"Y5\"))\n    #print(used.count(\"W1\"))\n    #print(used.count(\"W2\"))\n    #print(used.count(\"W3\"))\n    #print(used.count(\"W4\"))\n    #print(used.count(\"W5\"))\n    #print(cards.count(\"R1\")-used.count(\"R1\"))\n    #print(cards.count(\"R2\")-used.count(\"R2\"))\n    #print(cards.count(\"R3\")-used.count(\"R3\"))\n    #print(cards.count(\"R4\")-used.count(\"R4\"))\n    #print(cards.count(\"R5\")-used.count(\"R5\"))\n    #print(cards.count(\"G1\")-used.count(\"G1\"))\n    #print(cards.count(\"G2\")-used.count(\"G2\"))\n    #print(cards.count(\"G3\")-used.count(\"G3\"))\n    #print(cards.count(\"G4\")-used.count(\"G4\"))\n    #print(cards.count(\"G5\")-used.count(\"G5\"))\n    #print(cards.count(\"B1\")-used.count(\"B1\"))\n    #print(cards.count(\"B2\")-used.count(\"B2\"))\n    #print(cards.count(\"B3\")-used.count(\"B3\"))\n    #print(cards.count(\"B4\")-used.count(\"B4\"))\n    #print(cards.count(\"B5\")-used.count(\"B5\"))\n    #print(cards.count(\"Y1\")-used.count(\"Y1\"))\n    #print(cards.count(\"Y2\")-used.count(\"Y2\"))\n    #print(cards.count(\"Y",
    "17": "\n    n = int(input())\n    cards = input().split()\n    colors = {'R': 0, 'G': 0, 'B': 0, 'Y': 0, 'W': 0}\n    values = {'1': 0, '2': 0, '3': 0, '4': 0, '5': 0}\n    for card in cards:\n        colors[card[0]] += 1\n        values[card[1]] += 1\n    print(min(colors['R'], values['1']) + min(colors['G'], values['2']) + min(colors['B'], values['3']) + min(colors['Y'], values['4']) + min(colors['W'], values['5']))\n",
    "18": "\n    n = int(input())\n    count = 0\n    for i in range(n):\n        x1, y1 = map(int, input().split())\n        for j in range(i+1, n):\n            x2, y2 = map(int, input().split())\n            for k in range(j+1, n):\n                x3, y3 = map(int, input().split())\n                if (x1 == x2 or x1 == x3 or x2 == x3) and (y1 == y2 or y1 == y3 or y2 == y3):\n                    count += 1\n    print(count)\n",
    "19": "\n    n = int(input())\n    points = []\n    for i in range(n):\n        points.append(list(map(int, input().split())))\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if points[i][0] == points[j][0] == points[k][0] or points[i][1] == points[j][1] == points[k][1]:\n                    count += 1\n    print(count)\n"
}