{
    "0": "\n    pass\n\nif __name__ == \"__main__\":\n    code()",
    "1": "\n    n, m = map(int, input().split())\n    grid = [input() for _ in range(n)]\n    # print(grid)\n    # print(n, m)\n    # print(grid[0][0])\n    # print(grid[0][1])\n    # print(grid[1][0])\n    # print(grid[1][1])\n    # print(grid[2][0])\n    # print(grid[2][1])\n    # print(grid[3][0])\n    # print(grid[3][1])\n    # print(grid[4][0])\n    # print(grid[4][1])\n    # print(grid[5][0])\n    # print(grid[5][1])\n    # print(grid[6][0])\n    # print(grid[6][1])\n    # print(grid[7][0])\n    # print(grid[7][1])\n    # print(grid[8][0])\n    # print(grid[8][1])\n    # print(grid[9][0])\n    # print(grid[9][1])\n    # print(grid[10][0])\n    # print(grid[10][1])\n    # print(grid[11][0])\n    # print(grid[11][1])\n    # print(grid[12][0])\n    # print(grid[12][1])\n    # print(grid[13][0])\n    # print(grid[13][1])\n    # print(grid[14][0])\n    # print(grid[14][1])\n    # print(grid[15][0])\n    # print(grid[15][1])\n    # print(grid[16][0])\n    # print(grid[16][1])\n    # print(grid[17][0])\n    # print(grid[17][1])\n    # print(grid[18][0])\n    # print(grid[18][1])\n    # print(grid[19][0])\n    # print(grid[19][1])\n    # print(grid[20][0])\n    # print(grid[20][1])\n    # print(grid[21][0])\n    # print(grid[21][1])\n    # print(grid[22][0])\n    # print(grid[22][1])\n    # print(grid[23][0])\n    # print(grid[23][1])\n    # print(grid[24][0])\n    # print(grid[24][1])\n    # print(grid[25][0])\n    # print(grid[25][1])\n    # print(grid[26][0])\n    # print(grid[26][1])\n    # print(grid[27][0])\n    # print(grid[27][1])\n    # print(grid[28][0])\n    # print(grid[28][1])\n    # print(grid[29][0])\n    # print(grid[29][1])\n    # print(grid[30][0])\n    # print(grid[30][1])\n    # print(grid[31][0])\n    # print(grid[31][1])\n    # print(grid[32][0])\n    # print(grid[32][1])\n    # print(grid[33][0])\n    # print(grid[33][1])\n    # print(grid[34][0])\n    # print(grid[34][1])\n    # print(grid[35][0])\n    # print(grid[35][1])\n    # print(grid[36][0])\n    # print(grid[36][1])\n    # print(grid[37][0])\n    # print(grid[37][1])\n    # print(grid[38][0])\n    # print(grid[38][1])\n    # print(grid[39][0])\n    # print(grid[39][1])\n    # print(grid[40][0])\n    # print(grid[40][1])\n    # print(grid[41][0])\n    # print(grid[41][1])\n    # print(grid[42][0])\n    # print(grid[42][1])\n    # print(grid[43][0])\n    # print(grid[43][1])\n    # print(grid[44][0])\n",
    "2": "\n    q = int(input())\n    for i in range(q):\n        n, k = map(int, input().split())\n        s = input()\n        print(s[k-1])\n",
    "3": "\n    q = int(input())\n    for i in range(q):\n        n, k = map(int, input().split())\n        if n == 0:\n            print(\".\")\n        else:\n            print(f[n][k-1])\n\nf = [[\"What are you doing at the end of the world? Are you busy? Will you save us?\"]]\nfor i in range(1, 100000):\n    f.append(f[i-1][:] + [\"What are you doing while sending \" + f[i-1][-1] + \"? Are you busy? Will you send \" + f[i-1][-1] + \"?\"])\n",
    "4": "\n    n = int(input())\n    a = [float(x) for x in input().split()]\n    b = [float(x) for x in input().split()]\n    c = [float(x) for x in input().split()]\n    d = [float(x) for x in input().split()]\n    e = [float(x) for x in input().split()]\n    f = [float(x) for x in input().split()]\n    g = [float(x) for x in input().split()]\n    h = [float(x) for x in input().split()]\n    i = [float(x) for x in input().split()]\n    j = [float(x) for x in input().split()]\n    k = [float(x) for x in input().split()]\n    l = [float(x) for x in input().split()]\n    m = [float(x) for x in input().split()]\n    n = [float(x) for x in input().split()]\n    o = [float(x) for x in input().split()]\n    p = [float(x) for x in input().split()]\n    q = [float(x) for x in input().split()]\n    r = [float(x) for x in input().split()]\n    s = [float(x) for x in input().split()]\n    t = [float(x) for x in input().split()]\n    u = [float(x) for x in input().split()]\n    v = [float(x) for x in input().split()]\n    w = [float(x) for x in input().split()]\n    x = [float(x) for x in input().split()]\n    y = [float(x) for x in input().split()]\n    z = [float(x) for x in input().split()]\n    a = [float(x) for x in input().split()]\n    b = [float(x) for x in input().split()]\n    c = [float(x) for x in input().split()]\n    d = [float(x) for x in input().split()]\n    e = [float(x) for x in input().split()]\n    f = [float(x) for x in input().split()]\n    g = [float(x) for x in input().split()]\n    h = [float(x) for x in input().split()]\n    i = [float(x) for x in input().split()]\n    j = [float(x) for x in input().split()]\n    k = [float(x) for x in input().split()]\n    l = [float(x) for x in input().split()]\n    m = [float(x) for x in input().split()]\n    n = [float(x) for x in input().split()]\n    o = [float(x) for x in input().split()]\n    p = [float(x) for x in input().split()]\n    q = [float(x) for x in input().split()]\n    r = [float(x) for x in input().split()]\n    s = [float(x) for x in input().split()]\n    t = [float(x) for x in input().split()]\n    u = [float(x) for x in input().split()]\n    v = [float(x) for x in input().split()]\n    w = [float(x) for x in input().split()]\n    x = [float(x) for x in input().split()]\n    y = [float(x) for x in input().split()]\n    z = [float(x) for x in input().split()]\n    a = [float(x) for x in input().split()]\n    b = [float(x) for x in input().split()]\n    c = [float(x) for x in input().split()]\n    d = [float(x) for x in input().split()]\n    e = [float(x) for x in input().split()]\n    f = [float(x) for x in input().split()]\n    g = [float(x) for x in input().split()]\n    h = [float(x) for x in input",
    "5": "\n    n = int(input())\n    a = [float(x) for x in input().split()]\n    a.sort()\n    a = [int(x) if x - int(x) < 0.5 else int(x) + 1 for x in a]\n    print(sum(a) - sum(a[n:]))\n",
    "6": "\n    n, m = map(int, input().split())\n    graph = [[] for i in range(n + 1)]\n    for i in range(m):\n        u, v = map(int, input().split())\n        graph[u].append(v)\n        graph[v].append(u)\n    for i in range(1, n + 1):\n        graph[i].sort()\n    visited = [False] * (n + 1)\n    visited[1] = True\n    queue = [1]\n    while queue:\n        u = queue.pop(0)\n        for v in graph[u]:\n            if not visited[v]:\n                visited[v] = True\n                queue.append(v)\n    if not visited[n]:\n        print(-1)\n    else:\n        print(n - 1)\n",
    "7": "\n    n, m = map(int, input().split())\n    graph = [[] for i in range(n + 1)]\n    for i in range(m):\n        u, v = map(int, input().split())\n        graph[u].append(v)\n        graph[v].append(u)\n    for i in range(1, n + 1):\n        graph[i].sort()\n    # print(graph)\n    # print(graph[1])\n    # print(graph[2])\n    # print(graph[3])\n    # print(graph[4])\n    # print(graph[5])\n    # print(graph[6])\n    # print(graph[7])\n    # print(graph[8])\n    # print(graph[9])\n    # print(graph[10])\n    # print(graph[11])\n    # print(graph[12])\n    # print(graph[13])\n    # print(graph[14])\n    # print(graph[15])\n    # print(graph[16])\n    # print(graph[17])\n    # print(graph[18])\n    # print(graph[19])\n    # print(graph[20])\n    # print(graph[21])\n    # print(graph[22])\n    # print(graph[23])\n    # print(graph[24])\n    # print(graph[25])\n    # print(graph[26])\n    # print(graph[27])\n    # print(graph[28])\n    # print(graph[29])\n    # print(graph[30])\n    # print(graph[31])\n    # print(graph[32])\n    # print(graph[33])\n    # print(graph[34])\n    # print(graph[35])\n    # print(graph[36])\n    # print(graph[37])\n    # print(graph[38])\n    # print(graph[39])\n    # print(graph[40])\n    # print(graph[41])\n    # print(graph[42])\n    # print(graph[43])\n    # print(graph[44])\n    # print(graph[45])\n    # print(graph[46])\n    # print(graph[47])\n    # print(graph[48])\n    # print(graph[49])\n    # print(graph[50])\n    # print(graph[51])\n    # print(graph[52])\n    # print(graph[53])\n    # print(graph[54])\n    # print(graph[55])\n    # print(graph[56])\n    # print(graph[57])\n    # print(graph[58])\n    # print(graph[59])\n    # print(graph[60])\n    # print(graph[61])\n    # print(graph[62])\n    # print(graph[63])\n    # print(graph[64])\n    # print(graph[65])\n    # print(graph[66])\n    # print(graph[67])\n    # print(graph[68])\n    # print(graph[69])\n    # print(graph[70])\n    # print(graph[71])\n    # print(graph[72])\n    # print(graph[73])\n    # print(graph[74])\n    # print(graph[75])\n    # print(graph[76])\n    # print(graph[77])\n    # print(graph[78])\n    # print(graph[79])\n    # print(graph[80])\n    # print(graph[81])\n    # print(graph[82])\n    # print(graph[83])\n    # print(graph[84])\n    # print(graph[85])\n    # print(graph[86])\n    # print(graph[87])\n    # print(graph[88])\n    # print(graph[89])\n    # print(graph[90])\n    # print(graph[91])\n    # print(graph[92])\n    # print(graph[93])\n    # print(graph[94])\n    # print(graph[95])\n    # print(graph[96])\n    # print(graph[97])\n    # print(graph[98])\n    # print(graph[99])\n    # print(graph[100])\n    # print(graph[101])\n    # print(graph[102])\n    # print(graph",
    "8": "\n    n, k = map(int, input().split())\n    if k == 1:\n        print(1)\n    else:\n        print(0)\n",
    "9": "\n    n, k = map(int, input().split())\n    mod = 10**9 + 7\n    if k == 1:\n        print(1)\n    else:\n        print((n - k + 1) * (k - 1) % mod)\n\nif __name__ == \"__main__\":\n    code()",
    "10": "\n    n = int(input())\n    hype = list(map(int, input().split()))\n    hype.sort()\n    hype.reverse()\n    count = 0\n    for i in range(n):\n        count += hype[i] * (n - i)\n    print(count % (10**9 + 7))\n",
    "11": "\n    n = int(input())\n    hype = list(map(int, input().split()))\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if hype[i] == 1 and hype[j] == 2 and hype[k] == 3:\n                    count += 1\n    print(count)\n",
    "12": "\n    h, w = map(int, input().split())\n    matrix = []\n    for i in range(h):\n        matrix.append(list(input()))\n    #print(matrix)\n    #print(matrix[0][0])\n    #print(matrix[0][1])\n    #print(matrix[0][2])\n    #print(matrix[1][0])\n    #print(matrix[1][1])\n    #print(matrix[1][2])\n    #print(matrix[2][0])\n    #print(matrix[2][1])\n    #print(matrix[2][2])\n    #print(matrix[3][0])\n    #print(matrix[3][1])\n    #print(matrix[3][2])\n    #print(matrix[4][0])\n    #print(matrix[4][1])\n    #print(matrix[4][2])\n    #print(matrix[5][0])\n    #print(matrix[5][1])\n    #print(matrix[5][2])\n    #print(matrix[6][0])\n    #print(matrix[6][1])\n    #print(matrix[6][2])\n    #print(matrix[7][0])\n    #print(matrix[7][1])\n    #print(matrix[7][2])\n    #print(matrix[8][0])\n    #print(matrix[8][1])\n    #print(matrix[8][2])\n    #print(matrix[9][0])\n    #print(matrix[9][1])\n    #print(matrix[9][2])\n    #print(matrix[10][0])\n    #print(matrix[10][1])\n    #print(matrix[10][2])\n    #print(matrix[11][0])\n    #print(matrix[11][1])\n    #print(matrix[11][2])\n    #print(matrix[12][0])\n    #print(matrix[12][1])\n    #print(matrix[12][2])\n    #print(matrix[13][0])\n    #print(matrix[13][1])\n    #print(matrix[13][2])\n    #print(matrix[14][0])\n    #print(matrix[14][1])\n    #print(matrix[14][2])\n    #print(matrix[15][0])\n    #print(matrix[15][1])\n    #print(matrix[15][2])\n    #print(matrix[16][0])\n    #print(matrix[16][1])\n    #print(matrix[16][2])\n    #print(matrix[17][0])\n    #print(matrix[17][1])\n    #print(matrix[17][2])\n    #print(matrix[18][0])\n    #print(matrix[18][1])\n    #print(matrix[18][2])\n    #print(matrix[19][0])\n    #print(matrix[19][1])\n    #print(matrix[19][2])\n    #print(matrix[20][0])\n    #print(matrix[20][1])\n    #print(matrix[20][2])\n    #print(matrix[21][0])\n    #print(matrix[21][1])\n    #print(matrix[21][2])\n    #print(matrix[22][0])\n    #print(matrix[22][1])\n    #print(matrix[22][2])\n    #print(matrix[23][0])\n    #print(matrix[23][1])\n    #print(matrix[23][2])\n    #print(matrix[24][0])\n    #print(matrix[24][1])\n    #print(matrix[24][2])\n    #print(matrix[25][0])\n    #print(matrix[25][1])\n    #print(matrix[25][2])\n    #print(matrix[26][0])\n    #print(matrix[26][1])\n    #print(matrix[26][2])\n    #print(",
    "13": "\n    h, w = map(int, input().split())\n    matrix = []\n    for i in range(h):\n        matrix.append(list(input()))\n    for i in range(h):\n        for j in range(w):\n            if matrix[i][j] == 'X':\n                matrix[i][j] = '1'\n            else:\n                matrix[i][j] = '0'\n    for i in range(h):\n        for j in range(w):\n            if matrix[i][j] == '1':\n                matrix[i][j] = '0'\n                if i > 0 and matrix[i-1][j] == '1':\n                    matrix[i][j] = '1'\n                if j > 0 and matrix[i][j-1] == '1':\n                    matrix[i][j] = '1'\n    for i in range(h):\n        for j in range(w):\n            if matrix[i][j] == '1':\n                matrix[i][j] = '0'\n                if i > 0 and matrix[i-1][j] == '1':\n                    matrix[i][j] = '1'\n                if j > 0 and matrix[i][j-1] == '1':\n                    matrix[i][j] = '1'\n    for i in range(h):\n        for j in range(w):\n            if matrix[i][j] == '1':\n                matrix[i][j] = '0'\n                if i > 0 and matrix[i-1][j] == '1':\n                    matrix[i][j] = '1'\n                if j > 0 and matrix[i][j-1] == '1':\n                    matrix[i][j] = '1'\n    for i in range(h):\n        for j in range(w):\n            if matrix[i][j] == '1':\n                matrix[i][j] = '0'\n                if i > 0 and matrix[i-1][j] == '1':\n                    matrix[i][j] = '1'\n                if j > 0 and matrix[i][j-1] == '1':\n                    matrix[i][j] = '1'\n    for i in range(h):\n        for j in range(w):\n            if matrix[i][j] == '1':\n                matrix[i][j] = '0'\n                if i > 0 and matrix[i-1][j] == '1':\n                    matrix[i][j] = '1'\n                if j > 0 and matrix[i][j-1] == '1':\n                    matrix[i][j] = '1'\n    for i in range(h):\n        for j in range(w):\n            if matrix[i][j] == '1':\n                matrix[i][j] = '0'\n                if i > 0 and matrix[i-1][j] == '1':\n                    matrix[i][j] = '1'\n                if j > 0 and matrix[i][j-1] == '1':\n                    matrix[i][j] = '1'\n    for i in range(h):\n        for j in range(w):\n            if matrix[i][j] == '1':\n                matrix[i][j] = '0'\n                if i > 0 and matrix[i-1][j] == '1':\n                    matrix[i][j] = '1'\n                if j > 0 and matrix[i][j-1] == '1':\n                    matrix[i][j] = '1'\n    for i in range(h):\n        for j in range(w):\n            if matrix[i][j] == '1':\n                matrix[i][j] = '0'\n                if i > 0 and matrix[i-1][j] == '1':\n                    matrix[i][j] = '1'\n                if j > 0 and matrix[i][j-1] == '1':\n                    matrix[i][j] = '1'\n    for i in range(h):\n        for j in range(w):\n            if matrix[i][j] == '1':\n                matrix[i][j] = '0'\n                if i > 0 and matrix[i-1][j] == '1':\n                    matrix[i][j] = '1'\n                if j > 0 and matrix[i][j",
    "14": "\n    R, C = map(int, input().split())\n    grid = []\n    for i in range(R):\n        grid.append(list(input()))\n    for i in range(R):\n        for j in range(C):\n            if grid[i][j] == 'a':\n                grid[i][j] = '.'\n                if i > 0:\n                    grid[i-1][j] = 'a'\n                if i < R-1:\n                    grid[i+1][j] = 'a'\n                if j > 0:\n                    grid[i][j-1] = 'a'\n                if j < C-1:\n                    grid[i][j+1] = 'a'\n    for i in range(R):\n        print(''.join(grid[i]))",
    "15": "\n    R, C = map(int, input().split())\n    grid = []\n    for i in range(R):\n        grid.append(list(input()))\n    for i in range(R):\n        for j in range(C):\n            if grid[i][j] == 'a':\n                grid[i][j] = '.'\n                if i < R - 1:\n                    if grid[i + 1][j] == '.':\n                        grid[i + 1][j] = 'a'\n                if j < C - 1:\n                    if grid[i][j + 1] == '.':\n                        grid[i][j + 1] = 'a'\n                if i > 0:\n                    if grid[i - 1][j] == '.':\n                        grid[i - 1][j] = 'a'\n                if j > 0:\n                    if grid[i][j - 1] == '.':\n                        grid[i][j - 1] = 'a'\n    for i in range(R):\n        print(''.join(grid[i]))",
    "16": "\n    k = int(input())\n    if k == 1:\n        print(\"a\")\n    elif k == 2:\n        print(\"b\")\n    elif k == 3:\n        print(\"c\")\n    elif k == 4:\n        print(\"d\")\n    elif k == 5:\n        print(\"e\")\n    elif k == 6:\n        print(\"f\")\n    elif k == 7:\n        print(\"g\")\n    elif k == 8:\n        print(\"h\")\n    elif k == 9:\n        print(\"i\")\n    elif k == 10:\n        print(\"j\")\n    elif k == 11:\n        print(\"k\")\n    elif k == 12:\n        print(\"l\")\n    elif k == 13:\n        print(\"m\")\n    elif k == 14:\n        print(\"n\")\n    elif k == 15:\n        print(\"o\")\n    elif k == 16:\n        print(\"p\")\n    elif k == 17:\n        print(\"q\")\n    elif k == 18:\n        print(\"r\")\n    elif k == 19:\n        print(\"s\")\n    elif k == 20:\n        print(\"t\")\n    elif k == 21:\n        print(\"u\")\n    elif k == 22:\n        print(\"v\")\n    elif k == 23:\n        print(\"w\")\n    elif k == 24:\n        print(\"x\")\n    elif k == 25:\n        print(\"y\")\n    elif k == 26:\n        print(\"z\")\n    else:\n        print(\"Error\")\n",
    "17": "\n    k = int(input())\n    if k == 1:\n        print(\"a\")\n    else:\n        n = 1\n        while True:\n            if (26**n) >= k:\n                break\n            n += 1\n        n -= 1\n        k -= (26**n)\n        s = \"\"\n        while n >= 0:\n            s += chr(96 + (k % 26))\n            k //= 26\n            n -= 1\n        print(s)\n",
    "18": "\n    n, a, b = map(int, input().split())\n    if a == b:\n        print(\"Final!\")\n        return\n    if n == 2:\n        print(1)\n        return\n    if n % 2 == 0:\n        print(n)\n        return\n    if n % 4 == 1:\n        print(n - 1)\n        return\n    if n % 4 == 3:\n        print(n - 2)\n        return\n",
    "19": "\n    n, a, b = map(int, input().split())\n    if a == b:\n        print(\"Final!\")\n    else:\n        if n % 2 == 0:\n            print(n // 2)\n        else:\n            print(n // 2 + 1)\n"
}