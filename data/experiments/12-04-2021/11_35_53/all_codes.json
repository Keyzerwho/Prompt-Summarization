{
    "0": "\n    a, b = map(int, input().split())\n    h, w = map(int, input().split())\n    if a == 1 and b == 1:\n        print(h, w)\n        for i in range(h):\n            print('#.' * w)\n    elif a == 1 and b == 2:\n        print(h, w)\n        for i in range(h):\n            if i % 2 == 0:\n                print('#.' * w)\n            else:\n                print('.#' * w)\n    elif a == 2 and b == 1:\n        print(h, w)\n        for i in range(h):\n            if i % 2 == 0:\n                print('.#' * w)\n            else:\n                print('#.' * w)\n    elif a == 2 and b == 2:\n        print(h, w)\n        for i in range(h):\n            if i % 2 == 0:\n                print('#.' * w)\n            else:\n                print('.#' * w)\n    elif a == 3 and b == 3:\n        print(h, w)\n        for i in range(h):\n            if i % 3 == 0:\n                print('#.' * w)\n            elif i % 3 == 1:\n                print('.#' * w)\n            else:\n                print('..' * w)\n    elif a == 3 and b == 4:\n        print(h, w)\n        for i in range(h):\n            if i % 3 == 0:\n                print('#.' * w)\n            elif i % 3 == 1:\n                print('.#' * w)\n            else:\n                print('..' * w)\n    elif a == 4 and b == 3:\n        print(h, w)\n        for i in range(h):\n            if i % 3 == 0:\n                print('#.' * w)\n            elif i % 3 == 1:\n                print('.#' * w)\n            else:\n                print('..' * w)\n    elif a == 4 and b == 4:\n        print(h, w)\n        for i in range(h):\n            if i % 4 == 0:\n                print('#.' * w)\n            elif i % 4 == 1:\n                print('.#' * w)\n            elif i % 4 == 2:\n                print('..' * w)\n            else:\n                print('..' * w)\n    elif a == 4 and b == 5:\n        print(h, w)\n        for i in range(h):\n            if i % 4 == 0:\n                print('#.' * w)\n            elif i % 4 == 1:\n                print('.#' * w)\n            elif i % 4 == 2:\n                print('..' * w)\n            else:\n                print('..' * w)\n    elif a == 5 and b == 4:\n        print(h, w)\n        for i in range(h):\n            if i % 4 == 0:\n                print('#.' * w)\n            elif i % 4 == 1:\n                print('.#' * w)\n            elif i % 4 == 2:\n                print('..' * w)\n            else:\n                print('..' * w)\n    elif a == 5 and b == 5:\n        print(h, w)\n        for i in range(h):\n            if i % 5 == 0:\n                print('#.' * w)\n            elif i % 5 == 1:\n                print('.#' * w)\n            elif i % 5 == 2:\n                print('..' * w)\n            elif i % 5 == 3:\n                print('...' * w)\n            else:\n                print('..' * w)\n    elif a == 5 and b == 6:\n        print(h, w)\n        for i in range(h):\n            if i % 5 == 0:\n                print('#.' * w)\n            elif i % 5 == 1:\n                print('.#' * w)\n            elif i % 5 == 2:\n                print('..' * w)\n            elif i % 5 == 3:\n                print('...' * w)\n            else:\n                print('..' * w)\n    el",
    "1": "\n    ",
    "2": "\n    n = int(input())\n    t = [int(i) for i in input().split()]\n    if n == 2:\n        print(t[1] + t[0])\n    else:\n        print(t[n-1] + (n-1)*(t[n-1] - t[n-2]))\n",
    "3": "\n    n = int(input())\n    t = list(map(int, input().split()))\n    if len(t) != n:\n        print(\"Wrong input\")\n        return\n    if len(set(t)) == 1:\n        print(t[0])\n        return\n    if t[1] - t[0] == t[2] - t[1]:\n        print(t[0] + t[1] - t[0])\n        return\n    print(t[0])\n",
    "4": "\n    n = int(input())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                a[i][j] = 0\n    for i in range(n):\n        for j in range(n):\n            if a[i][j] == 0:\n                for k in range(n):\n                    if a[i][k] != 0 and a[k][j] != 0:\n                        a[i][j] = a[i][k] + a[k][j]\n                        break\n    for i in range(n):\n        print(a[i][i], end=' ')\n",
    "5": "\n    n = int(input())\n    a = []\n    for i in range(n):\n        a.append(list(map(int, input().split())))\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                a[i][j] = 0\n    for i in range(n):\n        for j in range(n):\n            if a[i][j] == 0:\n                for k in range(n):\n                    if k != i and a[k][j] != 0:\n                        a[i][j] = a[k][j]\n                        break\n    for i in range(n):\n        for j in range(n):\n            if a[i][j] == 0:\n                for k in range(n):\n                    if k != j and a[i][k] != 0:\n                        a[i][j] = a[i][k]\n                        break\n    for i in range(n):\n        for j in range(n):\n            if a[i][j] == 0:\n                for k in range(n):\n                    if k != i and k != j and a[k][k] != 0:\n                        a[i][j] = a[k][k]\n                        break\n    for i in range(n):\n        for j in range(n):\n            if a[i][j] == 0:\n                for k in range(n):\n                    if k != i and k != j and a[i][k] != 0:\n                        a[i][j] = a[i][k]\n                        break\n    for i in range(n):\n        for j in range(n):\n            if a[i][j] == 0:\n                for k in range(n):\n                    if k != i and k != j and a[k][j] != 0:\n                        a[i][j] = a[k][j]\n                        break\n    for i in range(n):\n        for j in range(n):\n            if a[i][j] == 0:\n                a[i][j] = 1\n    for i in range(n):\n        print(*a[i])",
    "6": "\n    n, m = map(int, input().split())\n    log = []\n    for i in range(m):\n        log.append(input().split())\n    log.sort()\n    leaders = []\n    for i in range(m):\n        if log[i][0] == '+':\n            leaders.append(int(log[i][1]))\n        else:\n            leaders.remove(int(log[i][1]))\n    print(len(leaders))\n    print(*leaders)\n",
    "7": "\n    n, m = map(int, input().split())\n    log = []\n    for i in range(m):\n        log.append(input())\n    log.sort()\n    leaders = []\n    for i in range(m):\n        if log[i][0] == '+':\n            leaders.append(int(log[i][2:]))\n        else:\n            leaders.remove(int(log[i][2:]))\n    if len(leaders) == 0:\n        print(0)\n    else:\n        print(len(leaders))\n        print(*leaders)",
    "8": "\n    n, m = map(int, input().split())\n    parents = [0] + list(map(int, input().split()))\n    reds = list(map(int, input().split()))\n    reds.sort()\n    reds = [0] + reds\n    subsets = [0] * (n + 1)\n    subsets[0] = 1\n    for i in range(1, n + 1):\n        subsets[i] = subsets[i - 1]\n        if i in reds:\n            subsets[i] += 1\n        if parents[i] != 0:\n            subsets[i] += subsets[parents[i]]\n    for i in range(m + 1):\n        print(subsets[i] % 1000000007)\n",
    "9": "\n    n, m = map(int, input().split())\n    parents = [0] + list(map(int, input().split()))\n    reds = list(map(int, input().split()))\n    reds.sort()\n    reds = [0] + reds\n    reds_count = [0] * (n + 1)\n    for i in range(1, n + 1):\n        reds_count[i] = reds_count[parents[i]] + (1 if reds[i] else 0)\n    dp = [0] * (m + 1)\n    dp[0] = 1\n    for i in range(1, n + 1):\n        for j in range(m, reds_count[i] - 1, -1):\n            dp[j] += dp[j - reds_count[i]]\n    for i in range(m + 1):\n        dp[i] %= 10 ** 9 + 7\n    for i in range(m + 1):\n        print(dp[i])\n\nif __name__ == '__main__':\n    code()",
    "10": "\n    n, k = input().split()\n    n = int(n)\n    k = int(k)\n    if k == n:\n        print(\"-1\")\n    else:\n        for i in range(1, n+1):\n            if i == 1:\n                print(chr(97), end=\"\")\n            elif i == n:\n                print(chr(97+k-1))\n            else:\n                print(chr(97+k-1), end=\"\")\n",
    "11": "\n    n, k = map(int, input().split())\n    if k == n:\n        print(\"a\"*n)\n    elif k == 1:\n        print(\"a\"*n)\n    elif k == 2:\n        print(\"ab\"*(n//2))\n    elif k == 3:\n        print(\"abc\"*(n//3))\n    elif k == 4:\n        print(\"abcd\"*(n//4))\n    elif k == 5:\n        print(\"abcde\"*(n//5))\n    elif k == 6:\n        print(\"abcdef\"*(n//6))\n    elif k == 7:\n        print(\"abcdefg\"*(n//7))\n    elif k == 8:\n        print(\"abcdefgh\"*(n//8))\n    elif k == 9:\n        print(\"abcdefghi\"*(n//9))\n    elif k == 10:\n        print(\"abcdefghij\"*(n//10))\n    elif k == 11:\n        print(\"abcdefghijk\"*(n//11))\n    elif k == 12:\n        print(\"abcdefghijkl\"*(n//12))\n    elif k == 13:\n        print(\"abcdefghijklm\"*(n//13))\n    elif k == 14:\n        print(\"abcdefghijklmn\"*(n//14))\n    elif k == 15:\n        print(\"abcdefghijklmno\"*(n//15))\n    elif k == 16:\n        print(\"abcdefghijklmnop\"*(n//16))\n    elif k == 17:\n        print(\"abcdefghijklmnopq\"*(n//17))\n    elif k == 18:\n        print(\"abcdefghijklmnopqr\"*(n//18))\n    elif k == 19:\n        print(\"abcdefghijklmnopqrs\"*(n//19))\n    elif k == 20:\n        print(\"abcdefghijklmnopqrst\"*(n//20))\n    elif k == 21:\n        print(\"abcdefghijklmnopqrstu\"*(n//21))\n    elif k == 22:\n        print(\"abcdefghijklmnopqrstuv\"*(n//22))\n    elif k == 23:\n        print(\"abcdefghijklmnopqrstuvw\"*(n//23))\n    elif k == 24:\n        print(\"abcdefghijklmnopqrstuvwx\"*(n//24))\n    elif k == 25:\n        print(\"abcdefghijklmnopqrstuvwxy\"*(n//25))\n    elif k == 26:\n        print(\"abcdefghijklmnopqrstuvwxyz\"*(n//26))\n    else:\n        print(\"-1\")\n",
    "12": "\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n > 1000:\n        return -1\n    if k == 1:\n        return 1\n    if k == 2:\n        if n > a[0] + a[1]:\n            return -1\n        else:\n            return 1\n    if n > a[0] + a[1]:\n        return -1\n    if n == a[0] + a[1]:\n        return 1\n    if n < a[0] + a[1]:\n        return 0\n    if n == a[0] + a[1] + a[2]:\n        return 2\n    if n > a[0] + a[1] + a[2]:\n        return -1\n    if n < a[0] + a[1] + a[2]:\n        return 0\n    if n == a[0] + a[1] + a[2] + a[3]:\n        return 3\n    if n > a[0] + a[1] + a[2] + a[3]:\n        return -1\n    if n < a[0] + a[1] + a[2] + a[3]:\n        return 0\n    if n == a[0] + a[1] + a[2] + a[3] + a[4]:\n        return 4\n    if n > a[0] + a[1] + a[2] + a[3] + a[4]:\n        return -1\n    if n < a[0] + a[1] + a[2] + a[3] + a[4]:\n        return 0\n    if n == a[0] + a[1] + a[2] + a[3] + a[4] + a[5]:\n        return 5\n    if n > a[0] + a[1] + a[2] + a[3] + a[4] + a[5]:\n        return -1\n    if n < a[0] + a[1] + a[2] + a[3] + a[4] + a[5]:\n        return 0\n    if n == a[0] + a[1] + a[2] + a[3] + a[4] + a[5] + a[6]:\n        return 6\n    if n > a[0] + a[1] + a[2] + a[3] + a[4] + a[5] + a[6]:\n        return -1\n    if n < a[0] + a[1] + a[2] + a[3] + a[4] + a[5] + a[6]:\n        return 0\n    if n == a[0] + a[1] + a[2] + a[3] + a[4] + a[5] + a[6] + a[7]:\n        return 7\n    if n > a[0] + a[1] + a[2] + a[3] + a[4] + a[5] + a[6] + a[7]:\n        return -1\n    if n < a[0] + a[1] + a[2] + a[3] + a[4] + a[5] + a[6] + a[7]:\n        return 0\n    if n == a[0] + a[1] + a[2] + a[3] + a[4] + a[5] + a[6] + a[7] + a[8]:\n        return 8\n    if n > a[0] + a[1] + a[2] + a[3] + a[4] + a[5] + a[6] + a[7] + a[8]:\n        return -1\n    if n < a[0] + a[1] + a[2] + a[3] + a[4] + a[5] + a[6] + a[7] + a[8]:\n        return 0\n    if n == a[0] + a[1] + a[2] + a[3] + a[4] + a[5] + a[6] + a[7] + a[8] + a[9]:\n        return 9\n    if n > a[0] + a[1]",
    "13": "\n    n, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n > 1000:\n        print(-1)\n        return\n    if k == 1:\n        print(1)\n        return\n    if n == 0:\n        print(0)\n        return\n    if n < a[0]:\n        print(-1)\n        return\n    if n == a[0]:\n        print(1)\n        return\n    if n > a[-1]:\n        print(-1)\n        return\n    if n == a[-1]:\n        print(k)\n        return\n    if n < a[-1]:\n        print(-1)\n        return\n    if n > a[-1]:\n        print(-1)\n        return\n    if n == a[-1]:\n        print(k)\n        return\n    if n < a[-1]:\n        print(-1)\n        return\n    if n > a[-1]:\n        print(-1)\n        return\n    if n == a[-1]:\n        print(k)\n        return\n    if n < a[-1]:\n        print(-1)\n        return\n    if n > a[-1]:\n        print(-1)\n        return\n    if n == a[-1]:\n        print(k)\n        return\n    if n < a[-1]:\n        print(-1)\n        return\n    if n > a[-1]:\n        print(-1)\n        return\n    if n == a[-1]:\n        print(k)\n        return\n    if n < a[-1]:\n        print(-1)\n        return\n    if n > a[-1]:\n        print(-1)\n        return\n    if n == a[-1]:\n        print(k)\n        return\n    if n < a[-1]:\n        print(-1)\n        return\n    if n > a[-1]:\n        print(-1)\n        return\n    if n == a[-1]:\n        print(k)\n        return\n    if n < a[-1]:\n        print(-1)\n        return\n    if n > a[-1]:\n        print(-1)\n        return\n    if n == a[-1]:\n        print(k)\n        return\n    if n < a[-1]:\n        print(-1)\n        return\n    if n > a[-1]:\n        print(-1)\n        return\n    if n == a[-1]:\n        print(k)\n        return\n    if n < a[-1]:\n        print(-1)\n        return\n    if n > a[-1]:\n        print(-1)\n        return\n    if n == a[-1]:\n        print(k)\n        return\n    if n < a[-1]:\n        print(-1)\n        return\n    if n > a[-1]:\n        print(-1)\n        return\n    if n == a[-1]:\n        print(k)\n        return\n    if n < a[-1]:\n        print(-1)\n        return\n    if n > a[-1]:\n        print(-1)\n        return\n    if n == a[-1]:\n        print(k)\n        return\n    if n < a[-1]:\n        print(-1)\n        return\n    if n > a[-1]:\n        print(-1)\n        return\n    if n == a[-1]:\n        print(k)\n        return\n    if n < a[-1]:\n        print(-1)\n        return\n    if n > a[-1]:\n        print(-1)\n        return\n    if n == a[-1]:\n        print(k)\n        return\n    if n < a[-1]:\n        print(-1)\n        return\n    if n > a[-1]:\n        print(-1)\n        return\n    if n == a[-1]:\n        print(k)\n        return\n    if n < a[-1]:\n        print(-1)\n        return\n    if n > a[-1]:\n        print(-1)\n        return\n    if n == a[-1]:\n        print(k)\n        return\n    if n < a[-1]:\n       ",
    "14": "\n    n, m = map(int, input().split())\n    grid = []\n    for i in range(n):\n        grid.append(list(input()))\n    #print(grid)\n    #print(grid[0][0])\n    #print(grid[n-1][m-1])\n    #print(grid[0][m-1])\n    #print(grid[n-1][0])\n    if grid[0][0] == grid[n-1][m-1] and grid[0][m-1] == grid[n-1][0]:\n        print(0)\n    else:\n        print(-1)\n",
    "15": "\n    n, m = map(int, input().split())\n    grid = []\n    for i in range(n):\n        grid.append(list(input()))\n    start = [0, 0]\n    end = [n-1, m-1]\n    queue = [[start, 0]]\n    visited = []\n    while queue:\n        current = queue.pop(0)\n        if current[0] == end:\n            return current[1]\n        if current[0] not in visited:\n            visited.append(current[0])\n            if current[0][0] > 0:\n                if grid[current[0][0]-1][current[0][1]] == grid[current[0][0]][current[0][1]]:\n                    queue.append([[current[0][0]-1, current[0][1]], current[1]+1])\n            if current[0][0] < n-1:\n                if grid[current[0][0]+1][current[0][1]] == grid[current[0][0]][current[0][1]]:\n                    queue.append([[current[0][0]+1, current[0][1]], current[1]+1])\n            if current[0][1] > 0:\n                if grid[current[0][0]][current[0][1]-1] == grid[current[0][0]][current[0][1]]:\n                    queue.append([[current[0][0], current[0][1]-1], current[1]+1])\n            if current[0][1] < m-1:\n                if grid[current[0][0]][current[0][1]+1] == grid[current[0][0]][current[0][1]]:\n                    queue.append([[current[0][0], current[0][1]+1], current[1]+1])\n    return -1\n\nprint(code())",
    "16": "\n    n, k = map(int, input().split())\n    prices = list(map(int, input().split()))\n    max_profit = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            profit = prices[j] - prices[i]\n            if profit > max_profit:\n                max_profit = profit\n    print(max_profit)\n",
    "17": "\n    N, K = map(int, input().split())\n    prices = list(map(int, input().split()))\n    max_profit = 0\n    for i in range(N):\n        for j in range(i+1, N):\n            profit = prices[j] - prices[i]\n            if profit > max_profit:\n                max_profit = profit\n    if max_profit > 0:\n        max_profit -= K*(N-1)\n    print(max_profit)\n",
    "18": "\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(2)\n    else:\n        print(n)\n",
    "19": "\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(2)\n    else:\n        print(n//2 + 1)\n"
}