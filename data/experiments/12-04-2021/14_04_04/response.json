{
    "id": "cmpl-4BWUJeBej5ECmNkA3cPOD1FGrAToY",
    "object": "text_completion",
    "created": 1638651839,
    "model": "davinci-codex:2021-08-03",
    "choices": [
        {
            "text": "\n    if n < 0:\n        return None\n    elif n == 0:\n        return 1\n    else:\n        fact = 1\n        for i in range(1,n+1):\n            fact *= i\n        return fact",
            "index": 0,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    if n < 0:\n        return None\n    elif n == 0:\n        return 1\n    else:\n        return n * factorial(n-1)",
            "index": 1,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    if len(number) == 15 and (number.startswith('34') or number.startswith('37')):\n        return 'AMEX'\n    elif len(number) == 16 and number.startswith('6011'):\n        return 'Discover'\n    elif len(number) == 16 and (number.startswith('51') or number.startswith('52') or number.startswith('53') or number.startswith('54') or number.startswith('55')):\n        return 'Mastercard'\n    elif len(number) == 13 and number.startswith('4'):\n        return 'VISA'\n    elif len(number) == 16 and number.startswith('4'):\n        return 'VISA'\n\n    return 'Unknown'",
            "index": 2,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    if len(number) == 15 and number[:2] in [\"34\", \"37\"]:\n        return \"AMEX\"\n    elif len(number) == 16 and number[:4] == \"6011\":\n        return \"Discover\"\n    elif len(number) == 16 and number[0] == \"5\" and number[1] in [\"1\", \"2\", \"3\", \"4\", \"5\"]:\n        return \"Mastercard\"\n    elif (len(number) == 13 or len(number) == 16) and number[0] == '4':\n        return \"VISA\"\n\n    return 'Unknown'",
            "index": 3,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        s = input()\n        if n % 2 == 0:\n            print(n // 2)\n        else:\n            print((n - 1) // 2)\n\n\ncode()",
            "index": 4,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        s = input()\n        if n % 2 == 0:\n            if s[:n//2] == s[n//2:]:\n                print(0)\n            else:\n                print(1)\n\n        else:\n            if s[:n//2] == s[n//2+1:]:\n                print(0)\n\n            elif s[:n//2] == \"0\"*((n-1)//2) and s[n//2+1:] == \"1\"*((n-1)//2):\n                print(1)\n\n            else:\n                print(2)",
            "index": 5,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    s = input()\n    n = len(s)\n    count = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            if s[i] == s[j]:\n                for k in range(j+1,n):\n                    if s[i] == s[k] and s[j] == s[k]:\n                        count += 1\n\n    print(count)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncode()",
            "index": 6,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    s = input()\n    n = len(s)\n    ans = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if s[i] == s[j]:\n                k = 1\n                while i-k >= 0 and j+k < n and s[i-k] == s[j+k]:\n                    ans += 1\n                    k += 1\n\n    print(ans)\n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \ncode()",
            "index": 7,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        p, q = map(int, input().split())\n        while p % q != 0:\n            p += 1\n        print(p)\n\n\ncode()",
            "index": 8,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        p, q = map(int, input().split())\n        while p % q == 0:\n            p //= q\n        print(p)",
            "index": 9,
            "logprobs": null,
            "finish_reason": "stop"
        }
    ]
}