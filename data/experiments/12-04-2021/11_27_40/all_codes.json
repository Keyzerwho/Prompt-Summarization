{
    "0": "\n    n = int(input())\n    if n == 1:\n        return 1\n    else:\n        return 1/code()*n\nprint(code())",
    "1": "\n    n = int(input())\n    x = n\n    while x != 1:\n        x = (x + n/x)/2\n    print(x)\n",
    "2": "\n    n, m = map(int, input().split())\n    teleporters = []\n    for i in range(m):\n        a, b, t = map(int, input().split())\n        teleporters.append((a, b, t))\n    dragon_balls = list(map(int, input().split()))\n    teleporters.sort(key=lambda x: x[2])\n    visited = [False] * n\n    visited[0] = True\n    queue = [(0, 0)]\n    while queue:\n        city, coins = queue.pop(0)\n        for a, b, t in teleporters:\n            if visited[a] and not visited[b]:\n                if b in dragon_balls:\n                    return coins + t\n                visited[b] = True\n                queue.append((b, coins + t))\n            elif visited[b] and not visited[a]:\n                if a in dragon_balls:\n                    return coins + t\n                visited[a] = True\n                queue.append((a, coins + t))\n    return -1\n\nprint(code())",
    "3": "\n    n, m = map(int, input().split())\n    teleports = []\n    for i in range(m):\n        a, b, t = map(int, input().split())\n        teleports.append((a, b, t))\n    teleports.sort(key=lambda x: x[2])\n    dragonballs = list(map(int, input().split()))\n    visited = [False] * n\n    visited[0] = True\n    queue = [(0, 0)]\n    while queue:\n        city, coins = queue.pop(0)\n        for a, b, t in teleports:\n            if a == city and not visited[b]:\n                if b in dragonballs:\n                    dragonballs.remove(b)\n                    if not dragonballs:\n                        return coins + t\n                else:\n                    queue.append((b, coins + t))\n                    visited[b] = True\n            elif b == city and not visited[a]:\n                if a in dragonballs:\n                    dragonballs.remove(a)\n                    if not dragonballs:\n                        return coins + t\n                else:\n                    queue.append((a, coins + t))\n                    visited[a] = True\n    return -1\n\nprint(code())",
    "4": "\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    w = [w[i] if a[i] == 1 else 0 for i in range(n)]\n    w = [w[i] % 998244353 for i in range(n)]\n    w = [w[i] * pow(2, m, 998244353) for i in range(n)]\n    w = [w[i] % 998244353 for i in range(n)]\n    print(*w)\n",
    "5": "\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    w = list(map(int, input().split()))\n    r = [0] * n\n    for i in range(m):\n        for j in range(n):\n            if a[j] == 1:\n                w[j] += 1\n            else:\n                w[j] -= 1\n        for j in range(n):\n            if w[j] == 0:\n                continue\n            if w[j] > 0:\n                r[j] += w[j]\n            else:\n                r[j] += w[j] * 998244353 + 1\n    for i in range(n):\n        r[i] = r[i] % 998244353\n    print(*r)\n\nif __name__ == '__main__':\n    code()",
    "6": "\n    n = int(input())\n    points = []\n    for i in range(n):\n        points.append(list(map(int, input().split())))\n    points.sort(key=lambda x: x[0]+x[1], reverse=True)\n    for i in range(n):\n        print(points.index(points[i])+1, end=\" \")\n        print(n-points.index(points[i])+1)",
    "7": "\n    n = int(input())\n    for i in range(n):\n        a, b = map(int, input().split())\n        if a > b:\n            print(1, 2)\n        elif a < b:\n            print(2, 1)\n        else:\n            print(1, 1)\n",
    "8": "\n    n = int(input())\n    m = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if n == 2:\n        print(m)\n    else:\n        if m < n - 2:\n            print(-1)\n        else:\n            fuel = m - (n - 2)\n            for i in range(n):\n                fuel -= a[i]\n                if fuel < 0:\n                    print(-1)\n                    break\n                fuel -= b[i]\n                if fuel < 0:\n                    print(-1)\n                    break\n            else:\n                print(fuel)\n",
    "9": "\n    n = int(input())\n    m = int(input())\n    a = list(map(int, input().split()))\n    b = list(map(int, input().split()))\n    if n == 2:\n        if m > a[0] + b[1]:\n            print(-1)\n        else:\n            print(m - a[0] - b[1])\n    else:\n        if m > a[0] + b[1] + a[2]:\n            print(-1)\n        else:\n            print(m - a[0] - b[1] - a[2])\n",
    "10": "\n    n = int(input())\n    a = [1]\n    k = 1\n    while sum(a) < n:\n        a.append(a[-1])\n        k += 1\n    print(k)\n    print(*a)",
    "11": "\n    n = int(input())\n    row = [1]\n    for i in range(n-1):\n        row.append(row[-1]+1)\n    print(*row)",
    "12": "\n    d, L, v1, v2 = map(int, input().split())\n    if v1 == v2:\n        print(L/v1)\n    else:\n        print((L-d)/(v2-v1))\n",
    "13": "\n    d, L, v1, v2 = map(int, input().split())\n    if v1 == v2:\n        print(L / d)\n    else:\n        print((L - d) / (v2 - v1))\n",
    "14": "\n    n, m = map(int, input().split())\n    cables = []\n    for i in range(m):\n        cables.append(list(map(int, input().split())))\n    houses = [i for i in range(1, n+1)]\n    for i in cables:\n        if i[0] in houses:\n            houses.remove(i[0])\n        if i[1] in houses:\n            houses.remove(i[1])\n    if len(houses) == 0:\n        print(\"Connected\")\n    else:\n        for i in houses:\n            print(i)",
    "15": "\n    n, m = map(int, input().split())\n    connections = set()\n    for i in range(m):\n        a, b = map(int, input().split())\n        connections.add((a, b))\n        connections.add((b, a))\n    for i in range(1, n+1):\n        for j in range(i+1, n+1):\n            if (i, j) not in connections:\n                print(i, j)\n                return\n    print(\"Connected\")\n",
    "16": "\n    n, k = map(int, input().split())\n    s = input()\n    t = input()\n    if s == t:\n        print(n)\n    else:\n        print(n - 1)\n",
    "17": "\n    n, k = map(int, input().split())\n    s = input()\n    t = input()\n    if s == t:\n        print(k)\n    else:\n        print(k*2)\n",
    "18": "\n    n, s = map(int, input().split())\n    cards = list(map(int, input().split()))\n    for i in range(n):\n        for j in range(i+1, n):\n            if cards[i] + cards[j] == s:\n                print(\"YES\")\n                return\n    print(\"NO\")\n",
    "19": "\n    n, s = map(int, input().split())\n    nums = list(map(int, input().split()))\n    for i in range(n):\n        for j in range(i+1, n):\n            if nums[i] + nums[j] == s:\n                print(\"YES\")\n                return\n    print(\"NO\")\n"
}