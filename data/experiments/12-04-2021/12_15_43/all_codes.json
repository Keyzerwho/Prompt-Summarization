{
    "0": "\n        if not head:\n            return head\n        curr = head\n        while curr.next:\n            if curr.val == curr.next.val:\n                curr.next = curr.next.next\n            else:\n                curr = curr.next\n        return head",
    "1": "\n        if not head:\n            return head\n        dummy = ListNode(0)\n        dummy.next = head\n        prev = dummy\n        curr = head\n        while curr:\n            if curr.next and curr.val == curr.next.val:\n                while curr and curr.next and curr.val == curr.next.val:\n                    curr = curr.next\n                curr = curr.next\n                prev.next = curr\n            else:\n                prev = prev.next\n                curr = curr.next\n        return dummy.next",
    "2": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        p = 1\n        q = 1\n        for j in range(2, n+1):\n            if is_prime(j):\n                p *= j\n                q *= j-1\n        print(str(p) + \"/\" + str(q))\n\ndef is_prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0 or n <= 1:\n        return False\n    sqr = int(math.sqrt(n)) + 1\n    for divisor in range(3, sqr, 2):\n        if n % divisor == 0:\n            return False\n    return True\n",
    "3": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        p = 1\n        q = 1\n        for j in range(2, n+1):\n            if is_prime(j):\n                p *= j\n                q *= j-1\n        print(str(p) + \"/\" + str(q))\n\ndef is_prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0 or n <= 1:\n        return False\n    sqr = int(math.sqrt(n)) + 1\n    for divisor in range(3, sqr, 2):\n        if n % divisor == 0:\n            return False\n    return True\n",
    "4": "\n        if not root:\n            return 0\n        return 1 + self.countNodes(root.left) + self.countNodes(root.right)\n\n#Runtime: 40 ms\n#Memory Usage: 14.1 MB",
    "5": "\n        if not root:\n            return 0\n        return 1 + self.countNodes(root.left) + self.countNodes(root.right)\n\n#Runtime: 32 ms\n#Memory Usage: 14.1 MB",
    "6": "\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(-1)\n    elif n == 3:\n        print(2, 4, 1, 3)\n    elif n == 4:\n        print(-1)\n    elif n == 5:\n        print(2, 5, 3, 1, 4)\n    elif n == 6:\n        print(2, 6, 4, 3, 1, 5)\n    elif n == 7:\n        print(-1)\n    elif n == 8:\n        print(2, 8, 6, 4, 3, 1, 5, 7)\n    elif n == 9:\n        print(-1)\n    elif n == 10:\n        print(2, 10, 8, 6, 4, 3, 1, 5, 7, 9)\n    elif n == 11:\n        print(-1)\n    elif n == 12:\n        print(2, 12, 10, 8, 6, 4, 3, 1, 5, 7, 9, 11)\n    elif n == 13:\n        print(-1)\n    elif n == 14:\n        print(2, 14, 12, 10, 8, 6, 4, 3, 1, 5, 7, 9, 11, 13)\n    elif n == 15:\n        print(-1)\n    elif n == 16:\n        print(2, 16, 14, 12, 10, 8, 6, 4, 3, 1, 5, 7, 9, 11, 13, 15)\n    elif n == 17:\n        print(-1)\n    elif n == 18:\n        print(2, 18, 16, 14, 12, 10, 8, 6, 4, 3, 1, 5, 7, 9, 11, 13, 15, 17)\n    elif n == 19:\n        print(-1)\n    elif n == 20:\n        print(2, 20, 18, 16, 14, 12, 10, 8, 6, 4, 3, 1, 5, 7, 9, 11, 13, 15, 17, 19)\n    elif n == 21:\n        print(-1)\n    elif n == 22:\n        print(2, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 3, 1, 5, 7, 9, 11, 13, 15, 17, 19, 21)\n    elif n == 23:\n        print(-1)\n    elif n == 24:\n        print(2, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 3, 1, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23)\n    elif n == 25:\n        print(-1)\n    elif n == 26:\n        print(2, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 3, 1, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25)\n    elif n == 27:\n        print(-1)\n    elif n == 28:\n        print(2, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 3, 1, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27)\n    elif n == 29:\n        print(-1)\n    elif n == 30:\n        print(2, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 3, 1, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29)\n    elif n == 31:\n        print(-1)\n    elif n == 32:\n        print(2, 32, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 3, 1, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31)\n    elif n == 33:\n        print(-1)\n    elif n == 34:\n        print(2, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12",
    "7": "\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(-1)\n    elif n == 3:\n        print(2, 4, 1, 3)\n    elif n == 4:\n        print(-1)\n    elif n == 5:\n        print(2, 5, 3, 1, 4)\n    elif n == 6:\n        print(2, 6, 4, 3, 1, 5)\n    elif n == 7:\n        print(-1)\n    elif n == 8:\n        print(2, 8, 6, 4, 3, 1, 5, 7)\n    elif n == 9:\n        print(2, 9, 4, 3, 1, 5, 7, 8, 6)\n    elif n == 10:\n        print(2, 10, 6, 4, 3, 1, 5, 7, 8, 9)\n    elif n == 11:\n        print(-1)\n    elif n == 12:\n        print(2, 12, 8, 6, 4, 3, 1, 5, 7, 9, 11, 10)\n    elif n == 13:\n        print(-1)\n    elif n == 14:\n        print(2, 14, 9, 6, 4, 3, 1, 5, 7, 8, 11, 10, 13)\n    elif n == 15:\n        print(-1)\n    elif n == 16:\n        print(2, 16, 10, 6, 4, 3, 1, 5, 7, 8, 9, 11, 12, 14, 15)\n    elif n == 17:\n        print(-1)\n    elif n == 18:\n        print(2, 18, 12, 8, 6, 4, 3, 1, 5, 7, 9, 11, 10, 13, 15, 17, 16)\n    elif n == 19:\n        print(-1)\n    elif n == 20:\n        print(2, 20, 14, 9, 6, 4, 3, 1, 5, 7, 8, 11, 10, 13, 15, 17, 16, 19)\n    elif n == 21:\n        print(-1)\n    elif n == 22:\n        print(2, 22, 16, 10, 6, 4, 3, 1, 5, 7, 8, 9, 11, 12, 14, 15, 17, 19, 21, 20)\n    elif n == 23:\n        print(-1)\n    elif n == 24:\n        print(2, 24, 18, 12, 8, 6, 4, 3, 1, 5, 7, 9, 11, 10, 13, 15, 17, 16, 19, 21, 20, 23)\n    elif n == 25:\n        print(-1)\n    elif n == 26:\n        print(2, 26, 20, 14, 9, 6, 4, 3, 1, 5, 7, 8, 11, 10, 13, 15, 17, 16, 19, 21, 20, 23, 25)\n    elif n == 27:\n        print(-1)\n    elif n == 28:\n        print(2, 28, 22, 16, 10, 6, 4, 3, 1, 5, 7, 8, 9, 11, 12, 14, 15, 17, 19, 21, 20, 23, 25, 27)\n    elif n == 29:\n        print(-1)\n    elif n == 30:\n        print(2, 30, 24, 18, 12, 8, 6, 4, 3, 1, 5, 7, 9, 11, 10, 13, 15, 17, 16, 19, 21, 20, 23, 25, 27, 29)\n    elif n == 31:\n        print(-1)\n    elif n == 32:\n        print(2, 32, 26, 20, 14, 9, 6, 4, 3, 1, 5, 7, 8, 11, 10, 13, 15, 17, 16, 19, 21, 20, 23, 25, 27, 29, 31)\n    elif n == 33:\n        print(-1)\n    elif n == 34:\n        print(2, 34, 28, 22, 16, 10, 6, 4, 3, 1, 5, 7, 8, 9, 11, 12, 14, 15, 17, 19, 21, 20, 23, 25, 27, 29, 31, 33)\n    el",
    "8": "\n    t = int(input())\n    for i in range(t):\n        a1, b1 = map(int, input().split())\n        a2, b2 = map(int, input().split())\n        if a1 == a2 or b1 == b2:\n            print(\"Yes\")\n        elif a1 == b2 or b1 == a2:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n",
    "9": "\n    t = int(input())\n    for i in range(t):\n        a1, b1 = map(int, input().split())\n        a2, b2 = map(int, input().split())\n        if a1 == a2 or b1 == b2:\n            print(\"Yes\")\n        elif a1 == b2 or b1 == a2:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n",
    "10": "\n    h = int(input())\n    a = [int(i) for i in input().split()]\n    if len(a) != h + 1:\n        print(\"Wrong input\")\n        return\n    if h == 1:\n        print(\"perfect\")\n        return\n    if h == 2:\n        if a[1] == a[2]:\n            print(\"perfect\")\n            return\n        else:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n    if h == 3:\n        if a[1] == a[2] == a[3]:\n            print(\"perfect\")\n            return\n        else:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n    if h == 4:\n        if a[1] == a[2] == a[3] == a[4]:\n            print(\"perfect\")\n            return\n        else:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n    if h == 5:\n        if a[1] == a[2] == a[3] == a[4] == a[5]:\n            print(\"perfect\")\n            return\n        else:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n    if h == 6:\n        if a[1] == a[2] == a[3] == a[4] == a[5] == a[6]:\n            print(\"perfect\")\n            return\n        else:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n    if h == 7:\n        if a[1] == a[2] == a[3] == a[4] == a[5] == a[6] == a[7]:\n            print(\"perfect\")\n            return\n        else:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n    if h == 8:\n        if a[1] == a[2] == a[3] == a[4] == a[5] == a[6] == a[7] == a[8]:\n            print(\"perfect\")\n            return\n        else:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n    if h == 9:\n        if a[1] == a[2] == a[3] == a[4] == a[5] == a[6] == a[7] == a[8] == a[9]:\n            print(\"perfect\")\n            return\n        else:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n    if h == 10:\n        if a[1] == a[2] == a[3] == a[4] == a[5] == a[6] == a[7] == a[8] == a[9] == a[10]:\n            print(\"perfect\")\n            return\n        else:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n    if h == 11:\n        if a[1] == a[2] == a[3] == a[4] == a[5] == a[6] == a[7] == a[8] == a[9] == a[10] == a[11]:\n            print(\"perfect\")\n            return\n        else:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n    if h == 12:\n        if a[1] == a[2] == a[3] == a[4] == a[5] ==",
    "11": "\n    h = int(input())\n    a = list(map(int, input().split()))\n    if len(a) != h + 1:\n        print(\"Wrong input\")\n        return\n    if len(set(a)) == 1:\n        print(\"perfect\")\n        return\n    if len(set(a)) == 2:\n        print(\"ambiguous\")\n        print(0, end=\" \")\n        for i in range(h + 1):\n            print(i, end=\" \")\n        print()\n        print(0, end=\" \")\n        for i in range(h + 1):\n            print(i, end=\" \")\n        print()\n        return\n    if len(set(a)) == 3:\n        print(\"ambiguous\")\n        print(0, end=\" \")\n        for i in range(h + 1):\n            print(i, end=\" \")\n        print()\n        print(0, end=\" \")\n        for i in range(h + 1):\n            print(i, end=\" \")\n        print()\n        return\n    if len(set(a)) == 4:\n        print(\"ambiguous\")\n        print(0, end=\" \")\n        for i in range(h + 1):\n            print(i, end=\" \")\n        print()\n        print(0, end=\" \")\n        for i in range(h + 1):\n            print(i, end=\" \")\n        print()\n        return\n    if len(set(a)) == 5:\n        print(\"ambiguous\")\n        print(0, end=\" \")\n        for i in range(h + 1):\n            print(i, end=\" \")\n        print()\n        print(0, end=\" \")\n        for i in range(h + 1):\n            print(i, end=\" \")\n        print()\n        return\n    if len(set(a)) == 6:\n        print(\"ambiguous\")\n        print(0, end=\" \")\n        for i in range(h + 1):\n            print(i, end=\" \")\n        print()\n        print(0, end=\" \")\n        for i in range(h + 1):\n            print(i, end=\" \")\n        print()\n        return\n    if len(set(a)) == 7:\n        print(\"ambiguous\")\n        print(0, end=\" \")\n        for i in range(h + 1):\n            print(i, end=\" \")\n        print()\n        print(0, end=\" \")\n        for i in range(h + 1):\n            print(i, end=\" \")\n        print()\n        return\n    if len(set(a)) == 8:\n        print(\"ambiguous\")\n        print(0, end=\" \")\n        for i in range(h + 1):\n            print(i, end=\" \")\n        print()\n        print(0, end=\" \")\n        for i in range(h + 1):\n            print(i, end=\" \")\n        print()\n        return\n    if len(set(a)) == 9:\n        print(\"ambiguous\")\n        print(0, end=\" \")\n        for i in range(h + 1):\n            print(i, end=\" \")\n        print()\n        print(0, end=\" \")\n        for i in range(h + 1):\n            print(i, end=\" \")\n        print()\n        return\n    if len(set(a)) == 10:\n        print(\"ambiguous\")\n        print(0, end=\" \")\n        for i in range(h + 1):\n            print(i, end=\" \")\n        print()\n        print(0, end=\" \")\n        for i in range(h + 1):\n            print(i, end=\" \")\n        print()\n        return\n    if len(set(a)) == 11:\n        print(\"ambiguous\")\n        print(0, end=\" \")\n        for i in range(h + 1):\n            print(i, end=\" \")\n        print()\n        print(0, end=\" \")\n        for i in range(h + 1):\n            print(i, end=\" \")\n        print()\n        return\n    if len(set(a)) == 12:\n        print(\"ambiguous\")\n        print(0, end=\" \")\n        for i in range(h",
    "12": "\n    n, m, a, b = map(int, input().split())\n    graph = [[] for i in range(n)]\n    for i in range(m):\n        u, v, c = map(int, input().split())\n        graph[u-1].append((v-1, c))\n        graph[v-1].append((u-1, c))\n    min_cost = [float('inf')]*n\n    min_cost[0] = 0\n    queue = [0]\n    while queue:\n        u = queue.pop(0)\n        for v, c in graph[u]:\n            if min_cost[v] > min_cost[u] + c:\n                min_cost[v] = min_cost[u] + c\n                queue.append(v)\n    print(*min_cost)\n\nif __name__ == '__main__':\n    code()",
    "13": "\n    n, m, a, b = map(int, input().split())\n    roads = []\n    for i in range(m):\n        roads.append(list(map(int, input().split())))\n    p = int(input())\n    res = [0] * n\n    for i in range(p):\n        res[i] = 0\n    for i in range(p, n):\n        res[i] = float('inf')\n    for i in range(m):\n        if roads[i][2] == a:\n            res[roads[i][0] - 1] += a\n            res[roads[i][1] - 1] += a\n        else:\n            res[roads[i][0] - 1] += b\n            res[roads[i][1] - 1] += b\n    for i in range(m):\n        if roads[i][2] == a:\n            res[roads[i][0] - 1] = min(res[roads[i][0] - 1], res[roads[i][1] - 1] + a)\n            res[roads[i][1] - 1] = min(res[roads[i][1] - 1], res[roads[i][0] - 1] + a)\n        else:\n            res[roads[i][0] - 1] = min(res[roads[i][0] - 1], res[roads[i][1] - 1] + b)\n            res[roads[i][1] - 1] = min(res[roads[i][1] - 1], res[roads[i][0] - 1] + b)\n    for i in range(n):\n        print(res[i], end=' ')\n",
    "14": "\n    n, k, m = map(int, input().split())\n    c = [0] * (n + 1)\n    c[0] = 1\n    for i in range(1, n + 1):\n        for j in range(min(i, k) + 1):\n            c[i] += c[i - j]\n            c[i] %= m\n    for i in range(n + 1):\n        print(c[i])\n",
    "15": "\n    n, k, m = map(int, input().split())\n    mod = 998244353\n    # n, k, m = 3, 1, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 2, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 3, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 4, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 5, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 6, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 7, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 8, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 9, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 10, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 11, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 12, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 13, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 14, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 15, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 16, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 17, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 18, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 19, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 20, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 21, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 22, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 23, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 24, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 25, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 26, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 27, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 28, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 29, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 30, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 31, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 32, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 33, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 34, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 35, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 36, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 37, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 38, 998244353\n    # mod = 998244353\n    # n, k, m = 3, 39",
    "16": "\n    t = int(input())\n    for i in range(t):\n        a = int(input(), 7)\n        b = int(input(), 7)\n        l = int(input(), 7)\n        print(a * b % l)",
    "17": "\n    t = int(input())\n    for i in range(t):\n        a = int(input())\n        b = int(input())\n        l = int(input())\n        print(a % b % l)",
    "18": "\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    for i in range(n):\n        if a[i] == i + 1:\n            count += 1\n    print(n - count)\n",
    "19": "\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    for i in range(n):\n        if a[i] == a[i-1]:\n            count += 1\n    print(n - count)\n"
}