{
    "0": "\n    n = int(input())\n    pylons = []\n    for i in range(n):\n        x, y, a = map(int, input().split())\n        pylons.append((x, y, a))\n    pylons.sort()\n    pylons.append((pylons[-1][0]+1, pylons[-1][1]+1, pylons[-1][2]))\n    pylons.append((pylons[0][0]-1, pylons[0][1]-1, pylons[0][2]))\n    pylons.append((pylons[0][0]-1, pylons[0][1]+1, pylons[0][2]))\n    pylons.append((pylons[-1][0]+1, pylons[-1][1]-1, pylons[-1][2]))\n    pylons.sort()\n    pylons.append((pylons[0][0]-1, pylons[0][1]-1, pylons[0][2]))\n    pylons.append((pylons[-1][0]+1, pylons[-1][1]+1, pylons[-1][2]))\n    pylons.sort()\n    pylons.append((pylons[0][0]-1, pylons[0][1]-1, pylons[0][2]))\n    pylons.append((pylons[-1][0]+1, pylons[-1][1]+1, pylons[-1][2]))\n    pylons.sort()\n    pylons.append((pylons[0][0]-1, pylons[0][1]-1, pylons[0][2]))\n    pylons.append((pylons[-1][0]+1, pylons[-1][1]+1, pylons[-1][2]))\n    pylons.sort()\n    pylons.append((pylons[0][0]-1, pylons[0][1]-1, pylons[0][2]))\n    pylons.append((pylons[-1][0]+1, pylons[-1][1]+1, pylons[-1][2]))\n    pylons.sort()\n    pylons.append((pylons[0][0]-1, pylons[0][1]-1, pylons[0][2]))\n    pylons.append((pylons[-1][0]+1, pylons[-1][1]+1, pylons[-1][2]))\n    pylons.sort()\n    pylons.append((pylons[0][0]-1, pylons[0][1]-1, pylons[0][2]))\n    pylons.append((pylons[-1][0]+1, pylons[-1][1]+1, pylons[-1][2]))\n    pylons.sort()\n    pylons.append((pylons[0][0]-1, pylons[0][1]-1, pylons[0][2]))\n    pylons.append((pylons[-1][0]+1, pylons[-1][1]+1, pylons[-1][2]))\n    pylons.sort()\n    pylons.append((pylons[0][0]-1, pylons[0][1]-1, pylons[0][2]))\n    pylons.append((pylons[-1][0]+1, pylons[-1][1]+1, pylons[-1][2]))\n    pylons.sort()\n    pylons.append((pylons[0][0]-1, pylons[0][1]-1, pylons[0][2]))\n    pylons.append((pylons[-1][0]+1, pylons[-1][1]+1, pylons[-1][2]))\n    pylons.sort()\n    pylons.append((pylons[0][0]-1, pylons[0][1]-1, pylons[0][2",
    "1": "\n    n = int(input())\n    pylons = []\n    for i in range(n):\n        x, y, a = map(int, input().split())\n        pylons.append((x, y, a))\n    pylons.sort()\n    #print(pylons)\n    #print(pylons[0])\n    #print(pylons[1])\n    #print(pylons[2])\n    #print(pylons[3])\n    #print(pylons[4])\n    #print(pylons[5])\n    #print(pylons[6])\n    #print(pylons[7])\n    #print(pylons[8])\n    #print(pylons[9])\n    #print(pylons[10])\n    #print(pylons[11])\n    #print(pylons[12])\n    #print(pylons[13])\n    #print(pylons[14])\n    #print(pylons[15])\n    #print(pylons[16])\n    #print(pylons[17])\n    #print(pylons[18])\n    #print(pylons[19])\n    #print(pylons[20])\n    #print(pylons[21])\n    #print(pylons[22])\n    #print(pylons[23])\n    #print(pylons[24])\n    #print(pylons[25])\n    #print(pylons[26])\n    #print(pylons[27])\n    #print(pylons[28])\n    #print(pylons[29])\n    #print(pylons[30])\n    #print(pylons[31])\n    #print(pylons[32])\n    #print(pylons[33])\n    #print(pylons[34])\n    #print(pylons[35])\n    #print(pylons[36])\n    #print(pylons[37])\n    #print(pylons[38])\n    #print(pylons[39])\n    #print(pylons[40])\n    #print(pylons[41])\n    #print(pylons[42])\n    #print(pylons[43])\n    #print(pylons[44])\n    #print(pylons[45])\n    #print(pylons[46])\n    #print(pylons[47])\n    #print(pylons[48])\n    #print(pylons[49])\n    #print(pylons[50])\n    #print(pylons[51])\n    #print(pylons[52])\n    #print(pylons[53])\n    #print(pylons[54])\n    #print(pylons[55])\n    #print(pylons[56])\n    #print(pylons[57])\n    #print(pylons[58])\n    #print(pylons[59])\n    #print(pylons[60])\n    #print(pylons[61])\n    #print(pylons[62])\n    #print(pylons[63])\n    #print(pylons[64])\n    #print(pylons[65])\n    #print(pylons[66])\n    #print(pylons[67])\n    #print(pylons[68])\n    #print(pylons[69])\n    #print(pylons[70])\n    #print(pylons[71])\n    #print(pylons[72])\n    #print(pylons[73])\n    #print(pylons[74])\n    #print(pylons[75])\n    #print(pylons[76])\n    #print(pylons[77])\n    #print(pylons[78])\n    #print(pylons[79])\n    #print(pylons[80])\n    #print(pylons[81])\n    #print(pylons[82])\n    #print(pylons[83])\n    #print(pylons[84])\n    #print(pylons[85])\n    #print(pyl",
    "2": "\n    N = int(input())\n    R = [float(x) for x in input().split()]\n    S = input()\n    R_eq = 0\n    if S[0] == '(' and S[-1] == ')':\n        S = S[1:-1]\n        if S.count('-') == 0:\n            S = S.replace('|', '-')\n        if S.count('|') == 0:\n            S = S.replace('-', '|')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '-')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '|')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '-')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '|')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '-')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '|')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '-')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '|')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '-')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '|')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '-')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '|')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '-')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '|')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '-')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '|')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '-')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '|')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '-')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '|')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '-')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '|')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '-')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '|')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '-')\n        if S.count('-') == 0 and S.count('|') == 0:\n            S = S.replace('R', '|')\n        if S.count('-') == 0 and S.count('|') == 0:\n",
    "3": "\n    N = int(input())\n    R = [float(x) for x in input().split()]\n    S = input()\n    if S.count('(') != S.count(')'):\n        return \"0.00000\"\n    if S.count('(') == 0:\n        return str(sum(R))\n    if S.count('(') == 1:\n        return str(R[int(S[1])-1])\n    if S.count('(') == 2:\n        if S[1] == '|':\n            return str(1/R[int(S[3])-1])\n        else:\n            return str(R[int(S[3])-1])\n    if S.count('(') == 3:\n        if S[1] == '|':\n            return str(1/(1/R[int(S[3])-1]+1/R[int(S[5])-1]))\n        else:\n            return str(1/R[int(S[3])-1]+1/R[int(S[5])-1])\n    if S.count('(') == 4:\n        if S[1] == '|':\n            return str(1/(1/R[int(S[3])-1]+1/R[int(S[5])-1]+1/R[int(S[7])-1]))\n        else:\n            return str(1/R[int(S[3])-1]+1/R[int(S[5])-1]+1/R[int(S[7])-1])\n    if S.count('(') == 5:\n        if S[1] == '|':\n            return str(1/(1/R[int(S[3])-1]+1/R[int(S[5])-1]+1/R[int(S[7])-1]+1/R[int(S[9])-1]))\n        else:\n            return str(1/R[int(S[3])-1]+1/R[int(S[5])-1]+1/R[int(S[7])-1]+1/R[int(S[9])-1])\n    if S.count('(') == 6:\n        if S[1] == '|':\n            return str(1/(1/R[int(S[3])-1]+1/R[int(S[5])-1]+1/R[int(S[7])-1]+1/R[int(S[9])-1]+1/R[int(S[11])-1]))\n        else:\n            return str(1/R[int(S[3])-1]+1/R[int(S[5])-1]+1/R[int(S[7])-1]+1/R[int(S[9])-1]+1/R[int(S[11])-1])\n    if S.count('(') == 7:\n        if S[1] == '|':\n            return str(1/(1/R[int(S[3])-1]+1/R[int(S[5])-1]+1/R[int(S[7])-1]+1/R[int(S[9])-1]+1/R[int(S[11])-1]+1/R[int(S[13])-1]))\n        else:\n            return str(1/R[int(S[3])-1]+1/R[int(S[5])-1]+1/R[int(S[7])-1]+1/R[int(S[9])-1]+1/R[int(S[11])-1]+1/R[int(S[13])-1])\n    if S.count('(') == 8:\n        if S[1] == '|':\n            return str(1/(1/R[int(S[3])-1]+1/R[int(S[5])-1]+1/R[int(S[7])-1]+1/R[int(S[9])-1]+1/R[int(S[11])-1]+1/R[int(S[13])-1]+1/R[int(S[15])-1]))\n        else:\n            return str(1/R[int(S[",
    "4": "\n    n, q = map(int, input().split())\n    cnt = [0] * n\n    for i in range(q):\n        t, l, r, v = map(int, input().split())\n        if t == 1:\n            for j in range(l - 1, r):\n                cnt[j] += v\n        else:\n            if sum(cnt[l - 1:r]) == v:\n                print(sum(cnt))\n            else:\n                print(-1)\n",
    "5": "\n    n, q = map(int, input().split())\n    facts = []\n    for i in range(q):\n        facts.append(list(map(int, input().split())))\n    if q == 0:\n        print(n)\n        return\n    if q == 1:\n        if facts[0][0] == 1:\n            print(n*(n+1)//2)\n        else:\n            print(n*(n+1)//2 - facts[0][3]*(facts[0][3]+1)//2)\n        return\n    if q == 2:\n        if facts[0][0] == 1 and facts[1][0] == 2:\n            print(n*(n+1)//2 - facts[0][3]*(facts[0][3]+1)//2 + facts[1][3]*(facts[1][3]+1)//2)\n        elif facts[0][0] == 2 and facts[1][0] == 1:\n            print(n*(n+1)//2 - facts[1][3]*(facts[1][3]+1)//2 + facts[0][3]*(facts[0][3]+1)//2)\n        else:\n            print(-1)\n        return\n    if q == 3:\n        if facts[0][0] == 1 and facts[1][0] == 2 and facts[2][0] == 2:\n            print(n*(n+1)//2 - facts[0][3]*(facts[0][3]+1)//2 + facts[1][3]*(facts[1][3]+1)//2 + facts[2][3]*(facts[2][3]+1)//2)\n        else:\n            print(-1)\n        return\n    if q == 4:\n        if facts[0][0] == 1 and facts[1][0] == 2 and facts[2][0] == 2 and facts[3][0] == 2:\n            print(n*(n+1)//2 - facts[0][3]*(facts[0][3]+1)//2 + facts[1][3]*(facts[1][3]+1)//2 + facts[2][3]*(facts[2][3]+1)//2 + facts[3][3]*(facts[3][3]+1)//2)\n        else:\n            print(-1)\n        return\n    if q == 5:\n        if facts[0][0] == 1 and facts[1][0] == 2 and facts[2][0] == 2 and facts[3][0] == 2 and facts[4][0] == 2:\n            print(n*(n+1)//2 - facts[0][3]*(facts[0][3]+1)//2 + facts[1][3]*(facts[1][3]+1)//2 + facts[2][3]*(facts[2][3]+1)//2 + facts[3][3]*(facts[3][3]+1)//2 + facts[4][3]*(facts[4][3]+1)//2)\n        else:\n            print(-1)\n        return\n    if q == 6:\n        if facts[0][0] == 1 and facts[1][0] == 2 and facts[2][0] == 2 and facts[3][0] == 2 and facts[4][0] == 2 and facts[5][0] == 2:\n            print(n*(n+1)//2 - facts[0][3]*(facts[0][3]+1)//2 + facts[1][3]*(facts[1][3]+1)//2 + facts[2][3]*(facts[2][3]+1)//2 + facts[3][3]*(facts[3][3]+1)//2 + facts[4][3]*(facts[4][3]+1)//2 + facts[5][3]*(facts[5][3]+1)//2)\n        else:\n            print(-1)\n        return\n    if q == 7:\n        if facts[0][0] == 1 and facts[1][0] == 2 and facts[2][0] == 2 and facts[3][0] == 2 and facts[4][0] == 2 and facts[5][0] == 2 and facts[6][0] ==",
    "6": "\n    n, a, b, k = map(int, input().split())\n    s = input()\n    res = 0\n    for i in range(k):\n        res += int(s[i]) * pow(a, n - i, 10**9 + 9) * pow(b, i, 10**9 + 9)\n    print(res % (10**9 + 9))\n",
    "7": "\n    n, a, b, k = map(int, input().split())\n    s = input()\n    s = s[:k]\n    res = 0\n    for i in range(k):\n        res += int(s[i]) * a ** (k - 1 - i) * b ** i\n    print(res % (10 ** 9 + 9))\n",
    "8": "\n    n, r, avg = map(int, input().split())\n    a = []\n    b = []\n    for i in range(n):\n        ai, bi = map(int, input().split())\n        a.append(ai)\n        b.append(bi)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r, avg)\n    #print(a, b)\n    #print(n, r,",
    "9": "\n    n, r, avg = map(int, input().split())\n    a = []\n    b = []\n    for i in range(n):\n        ai, bi = map(int, input().split())\n        a.append(ai)\n        b.append(bi)\n    a.sort()\n    b.sort()\n    if avg <= a[0]:\n        print(0)\n    else:\n        count = 0\n        for i in range(n):\n            if avg <= a[i]:\n                break\n            if avg <= a[i] + b[i]:\n                count += 1\n                break\n            else:\n                count += 1\n                avg -= a[i]\n        print(count)\n",
    "10": "\n    n = int(input())\n    words = []\n    for i in range(n):\n        words.append(input())\n    words.sort(key=len)\n    words.sort(key=lambda x: ''.join(sorted(x)))\n    d = {}\n    for word in words:\n        d[word] = d.get(word, 0) + 1\n    max_len = 0\n    for word in words:\n        if d[word] == 1:\n            continue\n        for i in range(len(word)):\n            for j in range(i + 1, len(word)):\n                new_word = word[:i] + word[j] + word[i + 1:j] + word[i] + word[j + 1:]\n                if new_word in d:\n                    d[new_word] -= 1\n                    if d[new_word] == 0:\n                        del d[new_word]\n        max_len = max(max_len, len(word))\n    print(max_len)\n",
    "11": "\n    n = int(input())\n    words = [input() for _ in range(n)]\n    words.sort(key=len, reverse=True)\n    for i in range(n):\n        for j in range(i+1, n):\n            if len(words[i]) == len(words[j]):\n                if words[i] == words[j]:\n                    print(len(words[i]))\n                    return\n                else:\n                    break\n    print(len(words[0]))\n",
    "12": "\n    n = int(input())\n    boys = list(map(int, input().split()))\n    a, b = map(int, input().split())\n    boys.sort()\n    ans = 0\n    for i in range(n):\n        ans = max(ans, min(abs(boys[i] - a), abs(boys[i] - b)))\n    print(ans)\n",
    "13": "\n    N = int(input())\n    boys = [int(x) for x in input().split()]\n    A, B = [int(x) for x in input().split()]\n    if A % 2 == 1:\n        A += 1\n    if B % 2 == 0:\n        B -= 1\n    if N == 1:\n        print(B)\n        return\n    if N == 2:\n        print(B - A)\n        return\n    if N == 3:\n        print(B - A - 1)\n        return\n    if N == 4:\n        print(B - A - 2)\n        return\n    if N == 5:\n        print(B - A - 3)\n        return\n    if N == 6:\n        print(B - A - 4)\n        return\n    if N == 7:\n        print(B - A - 5)\n        return\n    if N == 8:\n        print(B - A - 6)\n        return\n    if N == 9:\n        print(B - A - 7)\n        return\n    if N == 10:\n        print(B - A - 8)\n        return\n    if N == 11:\n        print(B - A - 9)\n        return\n    if N == 12:\n        print(B - A - 10)\n        return\n    if N == 13:\n        print(B - A - 11)\n        return\n    if N == 14:\n        print(B - A - 12)\n        return\n    if N == 15:\n        print(B - A - 13)\n        return\n    if N == 16:\n        print(B - A - 14)\n        return\n    if N == 17:\n        print(B - A - 15)\n        return\n    if N == 18:\n        print(B - A - 16)\n        return\n    if N == 19:\n        print(B - A - 17)\n        return\n    if N == 20:\n        print(B - A - 18)\n        return\n    if N == 21:\n        print(B - A - 19)\n        return\n    if N == 22:\n        print(B - A - 20)\n        return\n    if N == 23:\n        print(B - A - 21)\n        return\n    if N == 24:\n        print(B - A - 22)\n        return\n    if N == 25:\n        print(B - A - 23)\n        return\n    if N == 26:\n        print(B - A - 24)\n        return\n    if N == 27:\n        print(B - A - 25)\n        return\n    if N == 28:\n        print(B - A - 26)\n        return\n    if N == 29:\n        print(B - A - 27)\n        return\n    if N == 30:\n        print(B - A - 28)\n        return\n    if N == 31:\n        print(B - A - 29)\n        return\n    if N == 32:\n        print(B - A - 30)\n        return\n    if N == 33:\n        print(B - A - 31)\n        return\n    if N == 34:\n        print(B - A - 32)\n        return\n    if N == 35:\n        print(B - A - 33)\n        return\n    if N == 36:\n        print(B - A - 34)\n        return\n    if N == 37:\n        print(B - A - 35)\n        return\n    if N == 38:\n        print(B - A - 36)\n        return\n    if N == 39:\n        print(B - A - 37)\n        return\n    if N == 40:\n        print(B - A - 38)\n        return\n    if N == 41:\n        print(B - A - 39)\n        return\n    if N == 42:\n        print(B - A - 40)\n        return\n    if N == 43:\n        print(B - A - 41)\n        return\n    if N == 44:\n        print(B - A - 42)\n        return\n    if N == 45:\n        print(B - A - 43)\n        return\n    if N == 46:\n        print(B - A - 44)\n        return\n    if N == 47:\n        print(B - A - 45)\n        return\n    if N == 48:\n        print(B - A - 46)\n",
    "14": "\n    n = int(input())\n    s = list(map(int, input().split()))\n    k, x, a, b = map(int, input().split())\n    if sum(s) <= k*x:\n        print(sum(s))\n    else:\n        print(\"impossible\")",
    "15": "\n    n = int(input())\n    s = list(map(int, input().split()))\n    k, x, a, b = map(int, input().split())\n    if k*x < n:\n        print(\"impossible\")\n    else:\n        print(n)\n",
    "16": "\n    K = int(input())\n    if K == 1:\n        print(2)\n        print(1, 1)\n    elif K == 2:\n        print(0)\n        print(1, 1)\n        print(1, 1)\n    else:\n        print(K*(K-1)**(K-1))\n        for i in range(1, K+1):\n            print(K*(K-1)**(i-1), end=\" \")\n        print()\n        for i in range(1, K+1):\n            print(K*(K-1)**(i-1), end=\" \")\n            for j in range(1, K+1):\n                if j == i:\n                    print(K*(K-1)**(j-1), end=\" \")\n                else:\n                    print(0, end=\" \")\n            print()\n",
    "17": "\n\tk = int(input())\n\tfor i in range(2*k):\n\t\tprint(i*(i-1)//2)\n",
    "18": "\n    n, m = map(int, input().split())\n    unlockings = 0\n    for i in range(n):\n        a, s = map(int, input().split())\n        if a > m:\n            unlockings += 1\n        elif a + s > m:\n            unlockings += 1\n    print(unlockings)\n",
    "19": "\n    n, m = map(int, input().split())\n    schedule = []\n    for i in range(n):\n        schedule.append(list(map(int, input().split())))\n    schedule.sort(key=lambda x: x[0])\n    unlockings = 0\n    for i in range(n):\n        if schedule[i][0] > m:\n            break\n        if schedule[i][1] > m:\n            unlockings += 1\n    print(unlockings)\n"
}