{
    "id": "cmpl-4BWSmB46gkvvAkfKyLClxpSK7bLkU",
    "object": "text_completion",
    "created": 1638651744,
    "model": "davinci-codex:2021-08-03",
    "choices": [
        {
            "text": "\n        nums.sort()\n        for i in range(1, len(nums)):\n            if nums[i] == nums[i-1]:\n                return nums[i]\n",
            "index": 0,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n        slow = nums[0]\n        fast = nums[nums[0]]\n        while slow != fast:\n            slow = nums[slow]\n            fast = nums[nums[fast]]\n\n        fast = 0\n        while slow != fast:\n            slow = nums[slow]\n            fast = nums[fast]\n\n        return slow",
            "index": 1,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    ",
            "index": 2,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    ",
            "index": 3,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    T = int(input())\n    for i in range(T):\n        n = int(input())\n        print((n**2 + n)/2)",
            "index": 4,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    T = int(input())\n    for i in range(T):\n        n = int(input())\n        print((n**2 + n)/2)",
            "index": 5,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = [0] * (m + 1)\n    for i in range(n):\n        for j in range(a[i], m + 1):\n            p[j] += p[j - a[i]] % 998244353\n    print(*p)\n\n\nif __name__ == \"__main__\":\n    code()",
            "index": 6,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    p = [0] * (m + 1)\n    for i in range(n):\n        for j in range(m + 1):\n            if a[i] & (1 << j):\n                p[j] += 1\n    print(*p)\n\n    \nif __name__ == \"__main__\":\n    code()",
            "index": 7,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t=int(input())\n    for i in range(t):\n        n=int(input())\n        s=input()\n        l=[]\n        for j in range(n-1):\n            if ord(s[j])>ord(s[j+1]):\n                l.append(s[:j]+s[j+1]+s[j]+s[j+2:])\n            else:\n                l.append(s)\n        print(min(l))",
            "index": 8,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    testCases = int(input())\n    while testCases:\n        length = int(input())\n        string = input()\n        if length == 1:\n            print(string)\n        else:\n            for i in range(length):\n                temp = list(string)\n                temp.pop(i)\n                temp.insert(i, string[length-1])\n                if ''.join(temp) < string:\n                    string = ''.join(temp)\n\n            print(string)\n\n        testCases -= 1\n\n    return 0\n\n    \n\n    \n\n    \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n        \n\n    \ncode()",
            "index": 9,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        fact = 1\n        for j in range(1,n+1):\n            fact *= j\n        print(fact%1589540031)",
            "index": 10,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        print(factorial(N)%1589540031)\n        \ndef factorial(n):\n    if n == 1:\n        return 1\n    else:\n        return n*factorial(n-1)",
            "index": 11,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n = input()\n    n = list(n)\n    for i in range(len(n)):\n        if n[i] == '1':\n            n[i] = '0'\n        else:\n            n[i] = '1'\n    print(''.join(n))\n\n    \nif __name__ == \"__main__\":\n    code()",
            "index": 12,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    a = input()\n    b = []\n    for i in range(len(a)):\n        if a[i] == '1':\n            b.append(i)\n\n    if len(b) == 1:\n        print(a[:b[0]] + a[b[0]+1:])\n    else:\n        print(a[:b[0]] + a[b[0]+1:] + '0'*(len(a)-b[-1]-1))\n\n\nif __name__ == '__main__':\n    code()",
            "index": 13,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        for j in range(n-1):\n            if arr[j] == 0 and arr[j+1] == 1:\n                print(j)\n                break\n\n\ncode()",
            "index": 14,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    ",
            "index": 15,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    string = input()\n    if len(string)%2 == 0:\n        print(string[:len(string)//2] + string[len(string)//2-1::-1])\n    else:\n        print(string[:len(string)//2] + string[len(string)//2::-1])",
            "index": 16,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    A = input()\n    B = A[::-1]\n    print(B)\ncode()",
            "index": 17,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    count = 0\n    for i in range(1, n+1):\n        if i % 2 != 0 and is_prime(i) == False:\n            count += 1\n    return count\n\n\ndef is_prime(n):\n    if n <= 1:\n        return False\n\n    for i in range(2, n//2 + 1):\n        if n % i == 0:\n            return False\n\n    return True\n\n\nif __name__ == '__main__':\n\n    print(\"Enter a number\")\n    num = int(input())\n\n    print(\"Number of odd numbers less than or equal to the number that are not prime is\", odd_not_prime(num))",
            "index": 18,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    count = 0\n    for i in range(1, n+1):\n        if i % 2 != 0 and not is_prime(i):\n            count += 1\n    return count\n\n\ndef is_prime(n):\n    if n == 1:\n        return False\n\n    for i in range(2, int(n**0.5) + 1):\n        if n % i == 0:\n            return False\n\n    return True",
            "index": 19,
            "logprobs": null,
            "finish_reason": "stop"
        }
    ]
}