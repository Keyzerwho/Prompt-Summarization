{
    "id": "cmpl-4BTlMgqQEayZ3Fw6vWIZMuTohlWyS",
    "object": "text_completion",
    "created": 1638641364,
    "model": "davinci-codex:2021-08-03",
    "choices": [
        {
            "text": "\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    if x1 == x2:\n        if y1 > y2:\n            print(x1 + abs(y1 - y2))\n        else:\n            print(x1 + abs(y2 - y1))\n    elif y1 == y2:\n        if x1 > x2:\n            print(y1 + abs(x1 - x2))\n        else:\n            print(y1 + abs(x2 - x1))\n    else:\n        if x1 > x2:\n            print(x1 + abs(y1 - y2) + abs(x1 - x2))\n        else:\n            print(x2 + abs(y1 - y2) + abs(x2 - x1))\ncode()",
            "index": 0,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    x1, y1 = map(int, input().split())\n    x2, y2 = map(int, input().split())\n    if x1 == x2:\n        if y1 > y2:\n            print(x1 + abs(y1 - y2) * 2)\n        else:\n            print(x1 + abs(y1 - y2) * 2)\n    elif y1 == y2:\n        if x1 > x2:\n            print(y1 + abs(x1 - x2) * 2)\n        else:\n            print(y1 + abs(x1 - x2) * 2)\n    else:\n        if x1 > x2:\n            print(abs(x1 - x2) + abs(y1 - y2) * 2)\n        else:\n            print(abs(x1 - x2) + abs(y1 - y2) * 2)\n\nif __name__ == \"__main__\":\n    code()",
            "index": 1,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    e, e_success, e_failure = [int(x) for x in input().split()]\n    while e > 0:\n        e -= e_success\n        if e > 0:\n            e -= e_failure\n    print(e_success)\n\ncode()",
            "index": 2,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    e, e_success, e_failure = [int(x) for x in input().split()]\n    d = 0\n    while e > 0:\n        d += 1\n        e -= e_success\n        if e < 0:\n            break\n        e -= e_failure\n    print(d)\n\ncode()",
            "index": 3,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n = int(input())\n    lawn = []\n    for i in range(n):\n        s, g = map(int, input().split())\n        lawn.append([s, g])\n    lawn.sort(key=lambda x: x[1])\n    total = 0\n    for i in range(n):\n        total += lawn[i][1]\n        lawn[i][0] += lawn[i][1]\n    print(total)\n    for i in range(n):\n        print(lawn[i][0], end=' ')\n\ncode()",
            "index": 4,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n = int(input())\n    s = []\n    g = []\n    for i in range(n):\n        s.append(int(input().split()[0]))\n        g.append(int(input().split()[1]))\n    s_new = []\n    g_new = []\n    for i in range(n):\n        if s[i] + g[i] > 100:\n            s_new.append(s[i] + g[i] - 100)\n            g_new.append(100)\n        else:\n            s_new.append(s[i])\n            g_new.append(g[i])\n    for i in range(n-1):\n        if s_new[i] + 1 != s_new[i+1]:\n            print(-1)\n            return\n    print(sum(g_new))\n    for i in range(n):\n        print(s_new[i], end=\" \")\ncode()",
            "index": 5,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    q, n, D = map(int, input().split())\n    f1 = input()\n    f2 = input()\n    f1 = [int(i) for i in f1]\n    f2 = [int(i) for i in f2]\n    count = 0\n    for i in range(q**n):\n        x = [int(j) for j in list(bin(i)[2:].zfill(n))]\n        if sum(map(lambda x, y: abs(x - y), x, f1)) + sum(map(lambda x, y: abs(x - y), x, f2)) == D:\n            count += 1\n    print(count)\n\nif __name__ == \"__main__\":\n    code()",
            "index": 6,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    q, n, D = map(int, input().split())\n    f1 = input()\n    f2 = input()\n    count = 0\n    for i in range(q**n):\n        x = i\n        y = i\n        for j in range(n):\n            x = x // q\n            y = y % q\n            if x != y:\n                count += 1\n    print(count)\n\ncode()",
            "index": 7,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n = int(input())\n    B = set(map(int, input().split()))\n    if len(B) == 1:\n        print(0)\n        return\n    for i in range(1, n):\n        if len(B) == 1:\n            break\n        B.discard(i)\n    print(len(B))\n    print(*B)\n\ncode()",
            "index": 8,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n = int(input())\n    B = list(map(int, input().split()))\n    B.sort()\n    B = set(B)\n    if len(B) == 1:\n        print(0)\n        print()\n    else:\n        for i in range(len(B)):\n            if i == len(B) - 1:\n                break\n            if B[i] + 1 != B[i + 1]:\n                print(1)\n                print(B[i] + 1)\n                break\n        else:\n            print(0)\n            print()\n\ncode()",
            "index": 9,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n = int(input())\n    cards = input().split()\n    for i in range(n):\n        line = input().split()\n        if line[0] == \"M\":\n            if line[1] in cards:\n                if line[2] in cards:\n                    if line[3] in cards:\n                        if line[4] in cards:\n                            if line[5] in cards:\n                                if line[6] in cards:\n                                    if line[7] in cards:\n                                        if line[8] in cards:\n                                            if line[9] in cards:\n                                                if line[10] in cards:\n                                                    if line[11] in cards:\n                                                        if line[12] in cards:\n                                                            if line[13] in cards:\n                                                                if line[14] in cards:\n                                                                    if line[15] in cards:\n                                                                        if line[16] in cards:\n                                                                            if line[17] in cards:\n                                                                                if line[18] in cards:\n                                                                                    if line[19] in cards:\n                                                                                        if line[20] in cards:\n                                                                                            if line[21] in cards:\n                                                                                                if line[22] in cards:\n                                                                                                    if line[23] in cards:\n                                                                                                        if line[24] in cards:\n                                                                                                            if line[25] in cards:\n                                                                                                                if line[26] in cards:\n                                                                                                                    if line[27] in cards:\n                                                                                                                        if line[28] in cards:\n                                                                                                                            if line[29] in cards:\n                                                                                                                                if line[30] in cards:\n                                                                                                                                    if line[31] in cards:\n                                                                                                                                        if line[32] in cards:\n                                                                                                                                            if line[33] in cards:\n                                                                                                                                                if line[34] in cards:\n                                                                                                                                                    if line[35] in cards:\n                                                                                                                                                        if line[36] in cards:\n                                                                                                                                                            if line[37] in cards:\n                                                                                                                                                                if line[38] in cards:\n                                                                                                                                                                    if line[39] in cards:\n                                                                                                                                                                        if line[40] in cards:\n                                                                                                                                                                            if line[41] in cards:\n                                                                                                                                                                                if line[42] in cards:\n                                                                                                                                                                                    if line[43] in cards:\n                                                                                                                                                                                        if line[44] in cards:\n                                                                                                                                                                                            if line[45] in cards:\n                                                                                                                                                                                                if line[46] in cards:\n                                                                                                                                                                                                    if line[47] in cards:\n                                                                                                                                                                                                        if line[48] in cards:\n                                                                                                                                                                                                            if line[49] in cards:\n                                                                                                                                                                                                                if line[50] in cards:\n                                                                                                                                                                                                                    if line[51] in cards:\n                                                                                                                                                                                                                        if line[52] in cards:\n                                                                                                                                                                                                                            if line[53] in cards:\n                                                                                                                                                                                                                                if line[54] in cards:\n                                                                                                                                                                                                                                    if line[55] in cards:\n                                                                                                                                                                                                                                        if line[56] in cards:\n                                                                                                                                                                                                                                            if line[57] in cards:\n                                                                                                                                                                                                                                                if line[58] in cards:\n                                                                                                                ",
            "index": 10,
            "logprobs": null,
            "finish_reason": "length"
        },
        {
            "text": "\n    n = int(input())\n    cards = input().split()\n    for i in range(n):\n        suggestion = input().split()\n        person = suggestion[0]\n        weapon = suggestion[1]\n        room = suggestion[2]\n        for j in range(3, len(suggestion)):\n            if suggestion[j] == '-':\n                continue\n            elif suggestion[j] == '*':\n                if person in cards:\n                    person = '?'\n                if weapon in cards:\n                    weapon = '?'\n                if room in cards:\n                    room = '?'\n            else:\n                if suggestion[j] == person:\n                    person = '?'\n                if suggestion[j] == weapon:\n                    weapon = '?'\n                if suggestion[j] == room:\n                    room = '?'\n        print(person + weapon + room)\n\ncode()",
            "index": 11,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n == 2:\n        print(\"Yes\")\n    else:\n        for i in range(n-1):\n            if a[i] % a[i+1] != 0:\n                print(\"No\")\n                return\n        print(\"Yes\")\n\ncode()",
            "index": 12,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n == 2:\n        print(\"Yes\")\n    else:\n        for i in range(n-1):\n            if a[i] % a[i+1] != 0:\n                print(\"No\")\n                return\n        print(\"Yes\")\n\ncode()",
            "index": 13,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n, m, k = map(int, input().split())\n    maze = []\n    for i in range(n):\n        maze.append(list(input()))\n    for i in range(n):\n        for j in range(m):\n            if maze[i][j] == \".\":\n                maze[i][j] = \"X\"\n    for i in range(k):\n        for j in range(n):\n            for k in range(m):\n                if maze[j][k] == \"X\":\n                    if j > 0 and maze[j-1][k] == \".\":\n                        maze[j-1][k] = \"X\"\n                    if j < n-1 and maze[j+1][k] == \".\":\n                        maze[j+1][k] = \"X\"\n                    if k > 0 and maze[j][k-1] == \".\":\n                        maze[j][k-1] = \"X\"\n                    if k < m-1 and maze[j][k+1] == \".\":\n                        maze[j][k+1] = \"X\"\n    for i in range(n):\n        for j in range(m):\n            print(maze[i][j], end=\"\")\n        print()\ncode()",
            "index": 14,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n, m, k = map(int, input().split())\n    maze = [input() for i in range(n)]\n    for i in range(k):\n        for j in range(n):\n            for k in range(m):\n                if maze[j][k] == \".\":\n                    maze[j] = maze[j][:k] + \"X\" + maze[j][k+1:]\n                    break\n    for i in range(n):\n        print(maze[i])\n\ncode()",
            "index": 15,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n = int(input())\n    if n == 1:\n        print(0)\n    elif n == 2:\n        print(3)\n    else:\n        print((n-1)*(n-2)//2)\n\ncode()",
            "index": 16,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n = int(input())\n    if n == 1:\n        print(1)\n    elif n == 2:\n        print(3)\n    elif n == 3:\n        print(10)\n    else:\n        print(n*(n-1)*(n-2) % (10**9 + 7))\n\ncode()",
            "index": 17,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n, t = map(int, input().split())\n    times = list(map(int, input().split()))\n    times.sort()\n    p = 1\n    for i in range(n):\n        p *= (t - times[i])\n        p %= 998244353\n        p *= (n - i)\n        p %= 998244353\n    print(p)\n\ncode()",
            "index": 18,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n, t = map(int, input().split())\n    times = list(map(int, input().split()))\n    times.sort()\n    total = 0\n    for i in range(n):\n        total += times[i]\n        if total > t:\n            return 0\n    return 1\n\nprint(code())",
            "index": 19,
            "logprobs": null,
            "finish_reason": "stop"
        }
    ]
}