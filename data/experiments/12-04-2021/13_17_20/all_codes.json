{
    "0": "\n    n = int(input())\n    a = []\n    for i in range(n):\n        a.append(int(input()))\n    max_mod = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if (a[i]%a[j]) > max_mod:\n                max_mod = a[i]%a[j]\n\n    print(max_mod)",
    "1": "\n    n = int(input())\n    arr = []\n    for i in range(n):\n        arr.append(int(input()))\n    max_val = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if (arr[i]%arr[j]) > max_val:\n                max_val = arr[i]%arr[j]\n\n    print(max_val)",
    "2": "\n    try:\n        float(string)\n        return True\n    except ValueError:\n        return False",
    "3": "\n    try:\n        float(string)\n        return True\n    except ValueError:\n        return False",
    "4": "\n    # Code here\n    score = 0\n    for card in cards:\n        if card == 'A':\n            score += 11\n        elif card == 'J' or card == 'Q' or card == 'K':\n            score += 10\n        else:\n            score += int(card)\n\n    if score <= 21:\n        return score\n\n    for i in range(len(cards)):\n        if cards[i] == 'A':\n            cards[i] = 1\n\n    return sum(cards)",
    "5": "\n    score = 0\n    aces = 0\n    for card in cards:\n        if card == 'A':\n            aces += 1\n        elif card in ['J', 'Q', 'K']:\n            score += 10\n        else:\n            score += int(card)\n\n    for _ in range(aces):\n        if score + 11 > 21:\n            score += 1\n        else:\n            score += 11\n\n    return score",
    "6": "\n    return all(i.lower() in arr[0].lower() for i in arr[1])",
    "7": "\n    return all(i.lower() in arr[0].lower() for i in arr[1])",
    "8": "\n    n, s = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    if n % 2 == 0:\n        m1 = a[n // 2 - 1]\n        m2 = a[n // 2]\n        if s >= m1 and s <= m2:\n            print(0)\n        elif s < m1:\n            print(abs(m1 - s))\n        else:\n            print(abs(m2 - s))\n\n    else:\n\n        if s >= a[n // 2]:\n            print(abs(a[n // 2] - s))\n\n        else:\n\n            print(abs((a[n // 2] + 1) - s))",
    "9": "\n    n, s = map(int, input().split())\n    a = list(map(int, input().split()))\n    if n % 2 == 0:\n        a.sort()\n        if s > a[n//2]:\n            print(s - a[n//2] - 1)\n        else:\n            print(a[n//2] - s - 1)\n\n    else:\n        a.sort()\n        if s > a[n//2]:\n            print(s - a[n//2])\n        else:\n            print(a[n//2] - s)",
    "10": "\n    if len(arg1) < 2:\n        return arg1\n    else:\n        return sorted(list(set(arg1)), reverse=True)[:2]",
    "11": "\n    if arg1 == []:\n        return []\n    else:\n        return sorted(list(set(arg1)), reverse=True)[:2]",
    "12": "\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(1, n):\n        if a[i] < a[i-1]:\n            count += 1\n            if a[i] < 0:\n                a[i] = (a[i] + m) % m\n            else:\n                a[i] = (a[i] - 1) % m\n\n    print(count)",
    "13": "\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    count = 0\n    for i in range(n-1):\n        if a[i] > a[i+1]:\n            count += 1\n            for j in range(i+1, n):\n                a[j] = (a[j]+1) % m\n\n    print(count)\n\n\nif __name__ == '__main__':\n    code()",
    "14": "\n    leet = {'A': '@', 'B': '8', 'C': '(', 'D': 'D', 'E': '3',\n            'F': 'F', 'G': '6', 'H': '[-]',\n            'I': '!',\n            #'J':'j',\n            #'K':'k',\n            #'L':'l',\n            #'M':'m',\n            #'N':'n',\n            #'O':'o',\n            #'P':'p',\n            #'Q':'?','R''R','S','S','T','T','U','U','V','V','W','W','X''X''Y''Y''Z''Z''['],'a',\"a\",\"b\",\"b\",\"c\",\"c\",\"d\",\"d\", \"e\", \"e\", \"f\", \"f\", \"g\", \"g\", \"h\", \"h\", \"i\", \"i\" ,\"j\" ,\"j\" ,\"k\" ,\"k\" ,\"l\" ,\"l\" ,\"m\" ,\"m\" ,\"n\" ,\"n\" ,  ]\n\n    }\n\n    for i in str:\n\n        if i in leet:\n\n            str = str.replace(i, leet[i])\n\n    return str",
    "15": "\n    return str.translate(str.maketrans('ABCDEFGHIJKLMNOPQRSTUVWXYZ', '@8(D3F6#!JK1MN0PQR57UV2'))",
    "16": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        moves = 0\n        for j in range(n):\n            if a[j] % 2 == 0:\n                moves += 1\n                a[j] //= 2\n\n        print(moves)\n\n\nif __name__ == \"__main__\":\n    code()",
    "17": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        cnt = 0\n        while all([x % 2 == 1 for x in a]):\n            cnt += 1\n            c = min([x for x in a if x % 2 == 0]) // 2 * 2\n            a = [x - c if x % 2 == 0 else x for x in a]\n\n        print(cnt)\n\n",
    "18": "\n    n, q = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(q):\n        x, y = map(int, input().split())\n        if x == 0:\n            a[y] = n+1\n        else:\n            print(max([a[i] for i in range(x+1, n-y)]))\n\n\nif __name__ == \"__main__\":\n    code()",
    "19": "\n    n, q = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(q):\n        x, y = map(int, input().split())\n        if x + y >= n:\n            print(n)\n        else:\n            print(max([a[i] for i in range(x, n - y)]))\n\n\nif __name__ == '__main__':\n    code()"
}