{
    "0": "\n    n = int(input())\n    points = []\n    for i in range(n):\n        points.append(list(map(int, input().split())))\n    points.sort()\n    print(points)\n    #print(points)\n    #print(points[0][0])\n    #print(points[0][1])\n    #print(points[1][0])\n    #print(points[1][1])\n    #print(points[2][0])\n    #print(points[2][1])\n    #print(points[3][0])\n    #print(points[3][1])\n    #print(points[4][0])\n    #print(points[4][1])\n    #print(points[5][0])\n    #print(points[5][1])\n    #print(points[6][0])\n    #print(points[6][1])\n    #print(points[7][0])\n    #print(points[7][1])\n    #print(points[8][0])\n    #print(points[8][1])\n    #print(points[9][0])\n    #print(points[9][1])\n    #print(points[10][0])\n    #print(points[10][1])\n    #print(points[11][0])\n    #print(points[11][1])\n    #print(points[12][0])\n    #print(points[12][1])\n    #print(points[13][0])\n    #print(points[13][1])\n    #print(points[14][0])\n    #print(points[14][1])\n    #print(points[15][0])\n    #print(points[15][1])\n    #print(points[16][0])\n    #print(points[16][1])\n    #print(points[17][0])\n    #print(points[17][1])\n    #print(points[18][0])\n    #print(points[18][1])\n    #print(points[19][0])\n    #print(points[19][1])\n    #print(points[20][0])\n    #print(points[20][1])\n    #print(points[21][0])\n    #print(points[21][1])\n    #print(points[22][0])\n    #print(points[22][1])\n    #print(points[23][0])\n    #print(points[23][1])\n    #print(points[24][0])\n    #print(points[24][1])\n    #print(points[25][0])\n    #print(points[25][1])\n    #print(points[26][0])\n    #print(points[26][1])\n    #print(points[27][0])\n    #print(points[27][1])\n    #print(points[28][0])\n    #print(points[28][1])\n    #print(points[29][0])\n    #print(points[29][1])\n    #print(points[30][0])\n    #print(points[30][1])\n    #print(points[31][0])\n    #print(points[31][1])\n    #print(points[32][0])\n    #print(points[32][1])\n    #print(points[33][0])\n    #print(points[33][1])\n    #print(points[34][0])\n    #print(points[34][1])\n    #print(points[35][0])\n    #print(points[35][1])\n    #print(points[36][0])\n    #print(points[36][1])\n    #print(points[37][0])\n    #print(points[37][1])\n    #print(points[38][0])\n    #print(points[38][1])\n    #print(points[39][0])\n    #print(points[39][1])\n    #print(points[40][0])\n    #print(points[40][1])\n    #print(points[41][0])\n    #print(points[41][1])\n    #print(points[42][0])\n    #print(points[42][1])\n    #print(points[43][0])\n    #print(points[43][",
    "1": "\n    n = int(input())\n    points = []\n    for i in range(n):\n        x, y = map(int, input().split())\n        points.append((x, y))\n    points.sort()\n    # print(points)\n    ans = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                x1, y1 = points[i]\n                x2, y2 = points[j]\n                x3, y3 = points[k]\n                if x1 == x2 == x3:\n                    continue\n                if y1 == y2 == y3:\n                    continue\n                if x1 == x2:\n                    x4 = x3\n                    y4 = y1\n                elif x1 == x3:\n                    x4 = x2\n                    y4 = y1\n                else:\n                    x4 = x1\n                    y4 = y3\n                # print(x1, y1, x2, y2, x3, y3, x4, y4)\n                if y4 > y1:\n                    ans += 1\n    print(ans)\n",
    "2": "\n    n, m = map(int, input().split())\n    a = [0] * n\n    for i in range(m):\n        l, r = map(int, input().split())\n        for j in range(l, r):\n            a[j] = i + 1\n    mex = 0\n    while mex in a:\n        mex += 1\n    print(mex)\n    print(*a)\n",
    "3": "\n    n, m = map(int, input().split())\n    a = [0] * n\n    for i in range(m):\n        l, r = map(int, input().split())\n        for j in range(l-1, r):\n            a[j] += 1\n    print(max(a))\n    print(*a)\n",
    "4": "\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    a = list(set(a))\n    a.sort()\n    if len(a) == 1:\n        print(1)\n    else:\n        colors = 1\n        for i in range(1, len(a)):\n            if a[i] % a[0] != 0:\n                colors += 1\n        print(colors)",
    "5": "\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    a = list(set(a))\n    a.sort()\n    if len(a) == 1:\n        print(1)\n    else:\n        c = 1\n        for i in range(1, len(a)):\n            if a[i] % a[0] != 0:\n                c += 1\n        print(c)\n",
    "6": "\n    n, m = map(int, input().split())\n    start, target = input().split()\n    airports = {}\n    for i in range(n):\n        airport = input().split()\n        airports[airport[0]] = (float(airport[1]), float(airport[2]))\n    for i in range(m):\n        a, b = input().split()\n        airports[a].append(b)\n        airports[b].append(a)\n    if target not in airports:\n        return -1\n    return 0\n\nprint(code())",
    "7": "\n    n, m = map(int, input().split())\n    start, target = input().split()\n    airports = {start: (0, 0)}\n    for _ in range(n):\n        code, lat, lon = input().split()\n        airports[code] = (float(lat), float(lon))\n    for _ in range(m):\n        a, b = input().split()\n        airports[a] = (airports[a][0], airports[a][1], airports[b])\n        airports[b] = (airports[b][0], airports[b][1], airports[a])\n    queue = [(airports[start][0], airports[start][1], 0)]\n    visited = set()\n    while queue:\n        lat, lon, dist = queue.pop(0)\n        if (lat, lon) in visited:\n            continue\n        visited.add((lat, lon))\n        if (lat, lon) == (airports[target][0], airports[target][1]):\n            return dist\n        for code in airports:\n            if airports[code] == (lat, lon, None):\n                queue.append((airports[code][0], airports[code][1], dist + 100))\n            elif airports[code] == (lat, lon, (airports[target][0], airports[target][1])):\n                return dist + 100\n        for code in airports:\n            if airports[code] == (None, None, (lat, lon)):\n                queue.append((airports[code][0], airports[code][1], dist + 100))\n            elif airports[code] == ((airports[target][0], airports[target][1]), None, (lat, lon)):\n                return dist + 100\n    return -1\n\nprint(code())",
    "8": "\n    t = int(input())\n    for i in range(t):\n        n, x, y, d = map(int, input().split())\n        if x > y:\n            x, y = y, x\n        if x + d >= y:\n            print(y - x)\n        elif x + d <= y:\n            print(y - x - d)\n        else:\n            print(-1)",
    "9": "\n    testcases = int(input())\n    for i in range(testcases):\n        n, x, y, d = map(int, input().split())\n        if x > y:\n            x, y = y, x\n        if x + d >= y:\n            print(y - x)\n        elif x + d < y:\n            print(-1)\n",
    "10": "\n    n, m = map(int, input().split())\n    print((n * (n - 1) // 2) * (m * (m - 1) // 2))\n",
    "11": "\n    n, m = map(int, input().split())\n    print(n * (n - 1) + m * (m - 1))\n",
    "12": "\n    n,m = map(int,input().split())\n    if n == 1 or m == 1:\n        print(1)\n    elif n == 2 or m == 2:\n        print(min(n,m)-1)\n    else:\n        print(n*m-2*(n+m-2))\n",
    "13": "\n    n, m = map(int, input().split())\n    if n == 1 or m == 1:\n        print(n*m)\n    elif n == 2 or m == 2:\n        print(max(n, m) - 2)\n    else:\n        print((n-2)*(m-2))\n",
    "14": "\n    n, m = map(int, input().split())\n    words = []\n    for i in range(n):\n        l, s = map(int, input().split())\n        words.append([l, s])\n    words.sort(key=lambda x: x[1])\n    letters = []\n    for i in range(n):\n        for j in range(words[i][0]):\n            if words[i][1] + j not in letters:\n                letters.append(words[i][1] + j)\n    letters.sort()\n    if len(letters) > m:\n        print(\"No\")\n    else:\n        print(\"Yes\", len(letters), end=\" \")\n        for i in letters:\n            print(i, end=\" \")\n        print()\n",
    "15": "\n    n, m = map(int, input().split())\n    words = []\n    for i in range(n):\n        words.append(list(map(int, input().split())))\n    #print(words)\n    #print(words[0][0])\n    #print(words[0][1])\n    #print(words[0][2])\n    #print(words[0][3])\n    #print(words[0][4])\n    #print(words[0][5])\n    #print(words[0][6])\n    #print(words[0][7])\n    #print(words[0][8])\n    #print(words[0][9])\n    #print(words[0][10])\n    #print(words[0][11])\n    #print(words[0][12])\n    #print(words[0][13])\n    #print(words[0][14])\n    #print(words[0][15])\n    #print(words[0][16])\n    #print(words[0][17])\n    #print(words[0][18])\n    #print(words[0][19])\n    #print(words[0][20])\n    #print(words[0][21])\n    #print(words[0][22])\n    #print(words[0][23])\n    #print(words[0][24])\n    #print(words[0][25])\n    #print(words[0][26])\n    #print(words[0][27])\n    #print(words[0][28])\n    #print(words[0][29])\n    #print(words[0][30])\n    #print(words[0][31])\n    #print(words[0][32])\n    #print(words[0][33])\n    #print(words[0][34])\n    #print(words[0][35])\n    #print(words[0][36])\n    #print(words[0][37])\n    #print(words[0][38])\n    #print(words[0][39])\n    #print(words[0][40])\n    #print(words[0][41])\n    #print(words[0][42])\n    #print(words[0][43])\n    #print(words[0][44])\n    #print(words[0][45])\n    #print(words[0][46])\n    #print(words[0][47])\n    #print(words[0][48])\n    #print(words[0][49])\n    #print(words[0][50])\n    #print(words[0][51])\n    #print(words[0][52])\n    #print(words[0][53])\n    #print(words[0][54])\n    #print(words[0][55])\n    #print(words[0][56])\n    #print(words[0][57])\n    #print(words[0][58])\n    #print(words[0][59])\n    #print(words[0][60])\n    #print(words[0][61])\n    #print(words[0][62])\n    #print(words[0][63])\n    #print(words[0][64])\n    #print(words[0][65])\n    #print(words[0][66])\n    #print(words[0][67])\n    #print(words[0][68])\n    #print(words[0][69])\n    #print(words[0][70])\n    #print(words[0][71])\n    #print(words[0][72])\n    #print(words[0][73])\n    #print(words[0][74])\n    #print(words[0][75])\n    #print(words[0][76])\n    #print(words[0][77])\n    #print(words[0][78])\n    #print(words[0][79])\n    #print(words[0][80])\n    #print(words[0][81])\n    #print(words[0][82])\n    #print(words[0][83])\n    #print(words[0][84])\n    #print(words[0][85])\n    #print(words[0][86])\n    #print(words[0][87])\n    #print",
    "16": "\n    n = int(input())\n    hand = []\n    for i in range(n):\n        hand.append(input())\n    hand.sort()\n    hand = [x[0] for x in hand]\n    if hand.count('C') == hand.count('D') == hand.count('H') == hand.count('S') == n//4:\n        print(\"possible\")\n    else:\n        print(\"impossible\")",
    "17": "\n    n = int(input())\n    cards = []\n    for i in range(n):\n        cards.append(input().split())\n    cards.sort(key=lambda x: (x[1], x[0]))\n    if cards[0][1] == cards[n-1][1]:\n        print(\"possible\")\n    else:\n        print(\"impossible\")\n\nif __name__ == '__main__':\n    code()",
    "18": "\n    a, b = map(int, input().split())\n    if a == b:\n        print(1)\n    elif a > b:\n        print(a // b + 1)\n    else:\n        print(b // a + 1)\n",
    "19": "\n    a, b = map(int, input().split())\n    if a == b:\n        print(1)\n    elif a > b:\n        print(a // b + 1)\n    else:\n        print(b // a + 1)\n"
}