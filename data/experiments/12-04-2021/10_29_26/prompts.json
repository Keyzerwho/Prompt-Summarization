{
    "0": "Python 3\n\"\"\"\n You are given integers n and s. Determine if there exists an integer b (b \\geq 2) such that f(b,n)=s. If the answer is positive, also find the smallest such b. \n-----Input----- The input is given from Standard Input in the following format: n s -----Output----- If there exists an integer b (b \\geq 2) such that f(b,n)=s, print the smallest such b. If such b does not exist, print -1 instead. -----Sample Input----- 87654 30 -----Sample Output----- 10\n\"\"\"\ndef code():",
    "1": "Python 3\n\"\"\"\nFor integers b (b \\geq 2) and n (n \\geq 1), let the function f(b,n) be defined as follows:\n - f(b,n) = n, when n < b\n - f(b,n) = f(b,\\,{\\rm floor}(n / b)) + (n \\ {\\rm mod} \\ b), when n \\geq b\nHere, {\\rm floor}(n / b) denotes the largest integer not exceeding n / b,\nand n \\ {\\rm mod} \\ b denotes the remainder of n divided by b.\nLess formally, f(b,n) is equal to the sum of the digits of n written in base b.\nFor example, the following hold:\n - f(10,\\,87654)=8+7+6+5+4=30\n - f(100,\\,87654)=8+76+54=138\nYou are given integers n and s.\nDetermine if there exists an integer b (b \\geq 2) such that f(b,n)=s.\nIf the answer is positive, also find the smallest such b.\n\n-----Constraints-----\n - 1 \\leq n \\leq 10^{11}\n - 1 \\leq s \\leq 10^{11}\n - n,\\,s are integers.\n\n-----Input-----\nThe input is given from Standard Input in the following format:\nn\ns\n\n-----Output-----\nIf there exists an integer b (b \\geq 2) such that f(b,n)=s, print the smallest such b.\nIf such b does not exist, print -1 instead.\n\n-----Sample Input-----\n87654\n30\n\n-----Sample Output-----\n10\n\n\"\"\"\ndef code():",
    "2": "Python 3\n\"\"\"\n Given a string $s$ and a number $k$, determine if there is a substring of $s$ with left border $l$ and right border $r$ such that $l \\le r$ and $s[l, r]$ is lexicographically less than $s[l, r+k]$.\n-----Input----- The first line of the input contains a single string $s$ ($1 \\leq |s| \\leq 5 \\cdot 10^5$) consisting of lowercase English letters. -----Output----- Print $|s|$ lines. In the line $i$ write the name of the winner (print Mike or Ann) in the game with string $s$ and $k = i$, if both play optimally -----Examples----- Input abba Output Mike Ann Ann Mike Input cba Output Mike Mike Mike\n\"\"\"\ndef code():",
    "3": "Python 3\n\"\"\"\nMike and Ann are sitting in the classroom. The lesson is boring, so they decided to play an interesting game. Fortunately, all they need to play this game is a string $s$ and a number $k$ ($0 \\le k < |s|$).\n\nAt the beginning of the game, players are given a substring of $s$ with left border $l$ and right border $r$, both equal to $k$ (i.e. initially $l=r=k$). Then players start to make moves one by one, according to the following rules: A player chooses $l^{\\prime}$ and $r^{\\prime}$ so that $l^{\\prime} \\le l$, $r^{\\prime} \\ge r$ and $s[l^{\\prime}, r^{\\prime}]$ is lexicographically less than $s[l, r]$. Then the player changes $l$ and $r$ in this way: $l := l^{\\prime}$, $r := r^{\\prime}$. Ann moves first. The player, that can't make a move loses.\n\nRecall that a substring $s[l, r]$ ($l \\le r$) of a string $s$ is a continuous segment of letters from s that starts at position $l$ and ends at position $r$. For example, \"ehn\" is a substring ($s[3, 5]$) of \"aaaehnsvz\" and \"ahz\" is not.\n\nMike and Ann were playing so enthusiastically that they did not notice the teacher approached them. Surprisingly, the teacher didn't scold them, instead of that he said, that he can figure out the winner of the game before it starts, even if he knows only $s$ and $k$.\n\nUnfortunately, Mike and Ann are not so keen in the game theory, so they ask you to write a program, that takes $s$ and determines the winner for all possible $k$.\n\n\n-----Input-----\n\nThe first line of the input contains a single string $s$ ($1 \\leq |s| \\leq 5 \\cdot 10^5$) consisting of lowercase English letters.\n\n\n-----Output-----\n\nPrint $|s|$ lines.\n\nIn the line $i$ write the name of the winner (print Mike or Ann) in the game with string $s$ and $k = i$, if both play optimally\n\n\n-----Examples-----\nInput\nabba\n\nOutput\nMike\nAnn\nAnn\nMike\n\nInput\ncba\n\nOutput\nMike\nMike\nMike\n\"\"\"\ndef code():",
    "4": "Python 3\n\"\"\"\n You are given a list of participants, their bets, and a random number chosen by the ICPC. Your task is to determine which participants won the lottery. \n-----Input----- The first line of input contains two integers $n$ and $s$, where $1 \\le n \\le 1000$ is the number of participants, and $1 \\le s < 10^{1000}$ is the random number chosen by the ICPC. Then follow $n$ lines describing the participants. Each line contains a string $t$ and an integer $b$, where $t$ is the name of a participant, and $1 \\le b < 10^{1000}$ is the amount of his bet. The name of each participant is unique and consists of between $1$ and $20$ letters from the English alphabet. -----Output----- Output an integer $k$ denoting the number of participants that won the lottery. Then output $k$ lines containing the names of the participants that won the lottery, one per line, in any order. -----Examples----- Sample Input: 5 63 Vader 3 Voldemort 7 BorgQueen 20 Terminator 40 Megatron 101 Sample Output: 3 BorgQueen Terminator Vader\n\"\"\"\ndef code():",
    "5": "Python 3\n\"\"\"\nToday the Intergalactic Council of Pebble Coins (ICPC) conducted an intergalactic auction of the Neutronium Chaos Pebble Coin (NCPC). This coin, which was forged in the Ancient Coin Machine (ACM), is rumored to be the key to ruling the universe. \n\nDue to the extremely competitive nature of the auction, as well as the odd mechanics of the intergalactic currency used (far too advanced for mere mortals to understand), the auction was conducted with the following rules:\n - only one participant was allowed to make a bid at a time,\n - each participant was only allowed to make one bid, and\n - a participant making a bid had to bid at least twice the amount of the highest bid at the time.\n\nThe first participant making a bid was allowed to make a bid of any positive amount.\n\nAfter the auction there were a lot of sore losers \u2013 understandably, having just lost their chance at world domination. To make the losers feel a little better and prevent possible rioting, the ICPC has decided to hold a lottery for the participants. The winners of the lottery are determined as follows. The ICPC picks a random number $s$. A group of participants is called winning if the sum of their bets from the auction is equal to $s$. A participant wins the lottery and receives a prize \u2013 a shiny Pebble Coin \u2013 if they belong to any winning group of participants.\n\nGiven the names of the participants, the bets that they made, and the random number $s$ chosen by the ICPC, help them determine which participants won the lottery.\n\n-----Input-----\nThe first line of input contains two integers $n$ and $s$, where $1 \\le n \\le 1000$ is the number of participants, and $1 \\le s < 10^{1000}$ is the random number chosen by the ICPC.\n\nThen follow $n$ lines describing the participants. Each line contains a string $t$ and an integer $b$, where $t$ is the name of a participant, and $1 \\le b < 10^{1000}$ is the amount of his bet. The name of each participant is unique and consists of between $1$ and $20$ letters from the English alphabet.\n\n-----Output-----\nOutput an integer $k$ denoting the number of participants that won the lottery. Then output $k$ lines containing the names of the participants that won the lottery, one per line, in any order.\n\n-----Examples-----\nSample Input:\n5 63\nVader 3\nVoldemort 7\nBorgQueen 20\nTerminator 40\nMegatron 101\nSample Output:\n3\nBorgQueen\nTerminator\nVader\n\"\"\"\ndef code():",
    "6": "Python 3\n\"\"\"\n Given $n$ integers. You need to choose a subset and put the chosen numbers in a beautiful rectangle (rectangular matrix). Each chosen number should occupy one of its rectangle cells, each cell must be filled with exactly one chosen number. Some of the $n$ numbers may not be chosen. A rectangle (rectangular matrix) is called beautiful if in each row and in each column all values are different. What is the largest (by the total number of cells) beautiful rectangle you can construct \n-----Input----- The first line contains $n$ ($1 \\le n \\le 4\\cdot10^5$). The second line contains $n$ integers ($1 \\le a_i \\le 10^9$). -----Output----- In the first line print $x$ ($1 \\le x \\le n$) \u2014 the total number of cells of the required maximum beautiful rectangle. In the second line print $p$ and $q$ ($p \\cdot q=x$): its sizes. In the next $p$ lines print the required rectangle itself. If there are several answers, print any. -----Examples----- Input 12 3 1 4 1 5 9 2 6 5 3 5 8 Output 12 3 4 1 2 3 5 3 1 5 4 5 6 8 9 Input 5 1 1 1 1 1 Output 1 1 1 1\n\"\"\"\ndef code():",
    "7": "Python 3\n\"\"\"\nYou are given $n$ integers. You need to choose a subset and put the chosen numbers in a beautiful rectangle (rectangular matrix). Each chosen number should occupy one of its rectangle cells, each cell must be filled with exactly one chosen number. Some of the $n$ numbers may not be chosen.\n\nA rectangle (rectangular matrix) is called beautiful if in each row and in each column all values are different.\n\nWhat is the largest (by the total number of cells) beautiful rectangle you can construct? Print the rectangle itself.\n\n\n-----Input-----\n\nThe first line contains $n$ ($1 \\le n \\le 4\\cdot10^5$). The second line contains $n$ integers ($1 \\le a_i \\le 10^9$).\n\n\n-----Output-----\n\nIn the first line print $x$ ($1 \\le x \\le n$) \u2014 the total number of cells of the required maximum beautiful rectangle. In the second line print $p$ and $q$ ($p \\cdot q=x$): its sizes. In the next $p$ lines print the required rectangle itself. If there are several answers, print any.\n\n\n-----Examples-----\nInput\n12\n3 1 4 1 5 9 2 6 5 3 5 8\n\nOutput\n12\n3 4\n1 2 3 5\n3 1 5 4\n5 6 8 9\n\nInput\n5\n1 1 1 1 1\n\nOutput\n1\n1 1\n1\n\"\"\"\ndef code():",
    "8": "Python 3\n\"\"\"\n In this economy, we all know how hard it is to get a job. Mirko, a recent college graduate, however, got lucky he is now employed as a runeologist by the Language Institute of Croatia. His friend Slavko believes runeology isn t a science and is hence angry at Mirko for believing the opposite. One foggy Christmas day, Mirko s laptop broke. Since he isn t great with computers, he gave it to Slavko to repair it. Slavko, feeling a little naughty, decided to mess up a particular file Mirko was working on. This file contains a matrix of $R$ rows and $C$ columns. Each element of the matrix is a single letter. No two columns of the matrix are equal. To have some fun with pseudo-scientist Mirko, Slavko decided he will delete as many rows as possible from the top of the table, without breaking the no-equal-column rule.\n-----Input----- The first line of input contains two integers $R$ and $C$ ($2 \\le R, C \\le 1000$), the number of rows and the number of columns, respectively. In each of the next $R$ lines there are $C$ small letters of the English alphabet. These $R \\times C$ letters represent Mirko\u2019s table (which does not have two equal columns). -----Output----- Output a single integer, the maximum number of rows which can be deleted from the top of the table so that no two columns are equal. -----Examples----- Sample Input 1: 2 6 dobarz adatak Sample Output 1: 0 Sample Input 2: 3 4 alfa beta zeta Sample Output 2: 2\n\"\"\"\ndef code():",
    "9": "Python 3\n\"\"\"\nIn this economy, we all know how hard it is to get a job. Mirko, a recent college graduate, however, got lucky \u2013 he is now employed as a runeologist by the Language Institute of Croatia. His friend Slavko believes runeology isn\u2019t a science and is hence angry at Mirko for believing the opposite. One foggy Christmas day, Mirko\u2019s laptop broke. Since he isn\u2019t great with computers, he gave it to Slavko to repair it. Slavko, feeling a little naughty, decided to mess up a particular file Mirko was working on.\n\nThis file contains a matrix of $R$ rows and $C$ columns. Each element of the matrix is a single letter. No two columns of the matrix are equal. To have some fun with pseudo-scientist Mirko, Slavko decided he will delete as many rows as possible from the top of the table, without breaking the no-equal-column rule.\n\n-----Input-----\nThe first line of input contains two integers $R$ and $C$ ($2 \\le R, C \\le 1000$), the number of rows and the number of columns, respectively.\n\nIn each of the next $R$ lines there are $C$ small letters of the English alphabet. These $R \\times C$ letters represent Mirko\u2019s table (which does not have two equal columns).\n\n-----Output-----\nOutput a single integer, the maximum number of rows which can be deleted from the top of the table so that no two columns are equal.\n\n-----Examples-----\nSample Input 1:\n2 6\ndobarz\nadatak\nSample Output 1:\n0\n\nSample Input 2:\n3 4\nalfa\nbeta\nzeta\nSample Output 2:\n2\n\"\"\"\ndef code():",
    "10": "Python 3\n\"\"\"\n The mafia game is played frequently by high school competitors in informatics on summer and winter camps and national competitions, usually very late at night, drinking various fruit sodas. This game is not about winning, it s about los taking part, like in competitions. To solve this task, you don t need to know the rules of mafia: all you need to know is that some of the players are  mobsters  and the rest are  civilians . The mobsters know who is who, but the civilians don t. The civilians are trying to figure out who the mobsters are during the game. In the current round of the game, out of $N$ surviving players so far, each one has accused exactly one other player saying that he is the mobster. The civilians were only guessing and the mobsters have accused civilians, pretending to know nothing. Not knowing who the mobsters are, but knowing who accused whom, determine the maximum possible number of mobsters among these players! \n-----Input----- The first line of input contains the integer $N$ ($2 \\leq N \\leq 500000$), the number of players. The players are labeled with integers from $1$ to $N$. The $K$-th line of input, out of the following $N$ lines, contains the label of the player accused by the player $K$. (No player can accuse themselves). -----Output----- The first and only line of output must contain the maximum possible number of mobsters. -----Examples----- Sample Input 1: 3 2 1 1 Sample Output 1: 2 Sample Input 2: 3 2 3 1 Sample Output 2: 1\n\"\"\"\ndef code():",
    "11": "Python 3\n\"\"\"\nMafia is a social game played frequently by high school competitors in informatics on summer and winter camps and national competitions, usually very late at night, drinking various fruit sodas. This game is not about winning, it\u2019s about los taking part, like in competitions.\n\nTo solve this task, you don\u2019t need to know the rules of mafia: all you need to know is that some of the players are \u201cmobsters\u201d and the rest are \u201ccivilians\u201d. The mobsters know who is who, but the civilians don\u2019t. The civilians are trying to figure out who the mobsters are during the game.\n\nIn the current round of the game, out of $N$ surviving players so far, each one has accused exactly one other player saying that he is the mobster. The civilians were only guessing and the mobsters have accused civilians, pretending to know nothing.\n\nNot knowing who the mobsters are, but knowing who accused whom, determine the maximum possible number of mobsters among these players!\n\n-----Input-----\nThe first line of input contains the integer $N$ ($2 \\leq N \\leq 500000$), the number of players. The players are labeled with integers from $1$ to $N$.\n\nThe $K$-th line of input, out of the following $N$ lines, contains the label of the player accused by the player $K$. (No player can accuse themselves).\n\n-----Output-----\nThe first and only line of output must contain the maximum possible number of mobsters.\n\n-----Examples-----\nSample Input 1:\n3\n2\n1\n1\nSample Output 1:\n2\n\nSample Input 2:\n3\n2\n3\n1\nSample Output 2:\n1\n\"\"\"\ndef code():",
    "12": "Python 3\n\"\"\"\n The annual student team competition in table tennis of students enrolled in University of Zagreb takes place next Saturday! Each team consists of $K$ students. The excited students, $N$ of them, are waiting in queue to register. Kre o works at the registration desk. He doesn t really feel like doing his job so he decided not to allow students to choose a team. He decided that the first team will consist of the first $K$ students standing in queue, the second team the following $K$ students, the third one the following $K$ students and so on ($N$ will be divisible by $K$ so nobody is left hanging.) Ante has estimated the skill of each player with an integer. He would like to have the $K$ strongest players in the first team, the following $K$ strongest in the second team and so on. Kre o has just taken a break and Ante decided to shift the students standing in queue so that he achieves his goal. The way he shifts them is that he tells a student to step out of the queue and go back in queue after another student or to go to the front of the queue. It takes him one minute to do this. It s possible that Kre o is going to return from his break any moment so Ante needs to achieve his goal as soon as possible. Help Ante determine the minimal number of minutes necessary for him to achieve his goal.\n-----Input----- The first line of input contains the integers $N$ and $K$ ($1 \\leq K \\leq N \\leq 100000)$. The integer $N$ is going to divisible by $K$. The second line contains $N$ space separated integers $v_ i$ ($1 \\leq v_ i \\leq 10^9$), the $i$-th number denotes the skill of the $i$-th player standing in queue \u2013 lower value means higher skill. All contestants are going to have distinct levels of skill. -----Output----- The first and only line of output must contain the minimal required number of minutes. -----Examples----- Sample Input 1: 4 1 9 12 5 13 Sample Output 1: 1 Sample Input 2: 6 2 16 2 1 7 5 10 Sample Output 2: 1\n\"\"\"\ndef code():",
    "13": "Python 3\n\"\"\"\nThe annual student team competition in table tennis of students enrolled in University of Zagreb takes place next Saturday! Each team consists of $K$ students. The excited students, $N$ of them, are waiting in queue to register.\n\nKre\u0161o works at the registration desk. He doesn\u2019t really feel like doing his job so he decided not to allow students to choose a team. He decided that the first team will consist of the first $K$ students standing in queue, the second team the following $K$ students, the third one the following $K$ students and so on\u2026($N$ will be divisible by $K$ so nobody is left hanging.)\n\nAnte has estimated the skill of each player with an integer. He would like to have the $K$ strongest players in the first team, the following $K$ strongest in the second team and so on\u2026\n\nKre\u0161o has just taken a break and Ante decided to shift the students standing in queue so that he achieves his goal. The way he shifts them is that he tells a student to step out of the queue and go back in queue after another student or to go to the front of the queue. It takes him one minute to do this.\n\nIt\u2019s possible that Kre\u0161o is going to return from his break any moment so Ante needs to achieve his goal as soon as possible. Help Ante determine the minimal number of minutes necessary for him to achieve his goal.\n\n-----Input-----\nThe first line of input contains the integers $N$ and $K$ ($1 \\leq K \\leq N \\leq 100000)$. The integer $N$ is going to divisible by $K$.\n\nThe second line contains $N$ space separated integers $v_ i$ ($1 \\leq v_ i \\leq 10^9$), the $i$-th number denotes the skill of the $i$-th player standing in queue \u2013 lower value means higher skill.\n\nAll contestants are going to have distinct levels of skill.\n\n-----Output-----\nThe first and only line of output must contain the minimal required number of minutes.\n\n-----Examples-----\nSample Input 1:\n4 1\n9 12 5 13\nSample Output 1:\n1\n\nSample Input 2:\n6 2\n16 2 1 7 5 10\nSample Output 2:\n1\n\"\"\"\ndef code():",
    "14": "Python 3\n\"\"\"\n You are given a set of n distinct positive integers. Your task is to find the size of it's largest k-multiple free subset.\n-----Input----- The first line of the input contains two integers n and k (1 \u2264 n \u2264 10^5, 1 \u2264 k \u2264 10^9). The next line contains a list of n distinct positive integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^9). All the numbers in the lines are separated by single spaces. -----Output----- On the only line of the output print the size of the largest k-multiple free subset of {a_1, a_2, ..., a_{n}}. -----Examples----- Input 6 2 2 3 6 5 4 10 Output 3 -----Note----- In the sample input one of the possible maximum 2-multiple free subsets is {4, 5, 6}.\n\"\"\"\ndef code():",
    "15": "Python 3\n\"\"\"\nA k-multiple free set is a set of integers where there is no pair of integers where one is equal to another integer multiplied by k. That is, there are no two integers x and y (x < y) from the set, such that y = x\u00b7k.\n\nYou're given a set of n distinct positive integers. Your task is to find the size of it's largest k-multiple free subset.\n\n\n-----Input-----\n\nThe first line of the input contains two integers n and k (1 \u2264 n \u2264 10^5, 1 \u2264 k \u2264 10^9). The next line contains a list of n distinct positive integers a_1, a_2, ..., a_{n} (1 \u2264 a_{i} \u2264 10^9).\n\nAll the numbers in the lines are separated by single spaces.\n\n\n-----Output-----\n\nOn the only line of the output print the size of the largest k-multiple free subset of {a_1, a_2, ..., a_{n}}.\n\n\n-----Examples-----\nInput\n6 2\n2 3 6 5 4 10\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the sample input one of the possible maximum 2-multiple free subsets is {4, 5, 6}.\n\"\"\"\ndef code():",
    "16": "Python 3\n\"\"\"\n You are given a number a, whose decimal representation contains digits 1, 6, 8, 9. Rearrange the digits in its decimal representation so that the resulting number will be divisible by 7. Number a doesn't contain any leading zeroes and contains digits 1, 6, 8, 9 (it also can contain another digits). The resulting number also mustn't contain any leading zeroes. \n-----Input----- The first line contains positive integer a in the decimal record. It is guaranteed that the record of number a contains digits: 1, 6, 8, 9. Number a doesn't contain any leading zeroes. The decimal representation of number a contains at least 4 and at most 10^6 characters. -----Output----- Print a number in the decimal notation without leading zeroes \u2014 the result of the permutation. If it is impossible to rearrange the digits of the number a in the required manner, print 0. -----Examples----- Input 1689 Output 1869 Input 18906 Output 18690\n\"\"\"\ndef code():",
    "17": "Python 3\n\"\"\"\nYou have number a, whose decimal representation quite luckily contains digits 1, 6, 8, 9. Rearrange the digits in its decimal representation so that the resulting number will be divisible by 7.\n\nNumber a doesn't contain any leading zeroes and contains digits 1, 6, 8, 9 (it also can contain another digits). The resulting number also mustn't contain any leading zeroes.\n\n\n-----Input-----\n\nThe first line contains positive integer a in the decimal record. It is guaranteed that the record of number a contains digits: 1, 6, 8, 9. Number a doesn't contain any leading zeroes. The decimal representation of number a contains at least 4 and at most 10^6 characters.\n\n\n-----Output-----\n\nPrint a number in the decimal notation without leading zeroes \u2014 the result of the permutation.\n\nIf it is impossible to rearrange the digits of the number a in the required manner, print 0.\n\n\n-----Examples-----\nInput\n1689\n\nOutput\n1869\n\nInput\n18906\n\nOutput\n18690\n\"\"\"\ndef code():",
    "18": "Python 3\n\"\"\"\n Given the number of kids and their enemies, find the minimum number of groups required, as well as a division of the class into this minimum number of groups.\n-----Input----- The first line contains three integers $n$, $k$, and $c$ ($1 \\le n \\le 17$, $0 \\le k \\le \\frac{n(n-1)}{2}$ and $1 \\le c \\le n$) \u2013 the number of kids, pairs of enemies, and the capacity of the bus, respectively. Then follow $n$ lines with the kids\u2019 names. Each name consists solely of the characters A-Z and a-z, is non-empty, and at most $10$ characters long. Then follow $k$ lines, each containing a pair of space-separated names indicating a pair of kids that dislike each other. No pair of names appears twice, and no kid is their own enemy. -----Output----- On the first line, output the minimum number of groups, followed by one line per group containing the names of the children in that group (separated by spaces). -----Examples----- Sample Input: 2 0 1 Alice Bob Sample Output: 2 Alice Bob\n\"\"\"\ndef code():",
    "19": "Python 3\n\"\"\"\nAn elementary school class is going on a road trip by bus to a computer factory. However, the driver is really tired of having to drive fighting kids all day, so she suggested that the class should split up and go to the factory in groups. She has already observed which kids dislike each other and are likely to fight, so she wants to make sure they do not end up in the same group. Of course, driving everyone one-by-one is a waste of time and money, so the driver wants to minimize the number of groups she has to drive. In addition, the bus is pretty small, and may only fit up to $c$ kids at a time. \n\nYou are to write a program which helps her with the task of making these groups. Given the number of kids and their enemies, find the minimum number of groups required, as well as a division of the class into this minimum number of groups\n\n-----Input-----\nThe first line contains three integers $n$, $k$, and $c$ ($1 \\le n \\le 17$, $0 \\le k \\le \\frac{n(n-1)}{2}$ and $1 \\le c \\le n$) \u2013 the number of kids, pairs of enemies, and the capacity of the bus, respectively. Then follow $n$ lines with the kids\u2019 names. Each name consists solely of the characters A-Z and a-z, is non-empty, and at most $10$ characters long. Then follow $k$ lines, each containing a pair of space-separated names indicating a pair of kids that dislike each other. No pair of names appears twice, and no kid is their own enemy.\n\n-----Output-----\nOn the first line, output the minimum number of groups, followed by one line per group containing the names of the children in that group (separated by spaces).\n\n-----Examples-----\nSample Input:\n2 0 1\nAlice\nBob\nSample Output:\n2\nAlice\nBob\n\"\"\"\ndef code():"
}