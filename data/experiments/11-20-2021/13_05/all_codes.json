{
"0": "\n    n, m, a, b = map(int, input().split())\n    graph = [[] for _ in range(n)]\n    for _ in range(m):\n        u, v, c = map(int, input().split())\n        graph[u - 1].append((v - 1, c))\n        graph[v - 1].append((u - 1, c))\n    dp = [float('inf')] * n\n    dp[0] = 0\n    for i in range(n):\n        for j in graph[i]:\n            dp[j[0]] = min(dp[j[0]], dp[i] + j[1])\n    print(*dp[1:])\n\ncode()",
"1": "\n    n, m, a, b = map(int, input().split())\n    roads = []\n    for _ in range(m):\n        u, v, c = map(int, input().split())\n        roads.append((u, v, c))\n    #print(roads)\n    #print(n, m, a, b)\n    #print(roads)\n    #print(n, m, a, b)\n    #print(roads)\n    #print(n, m, a, b)\n    #print(roads)\n    #print(n, m, a, b)\n    #print(roads)\n    #print(n, m, a, b)\n    #print(roads)\n    #print(n, m, a, b)\n    #print(roads)\n    #print(n, m, a, b)\n    #print(roads)\n    #print(n, m, a, b)\n    #print(roads)\n    #print(n, m, a, b)\n    #print(roads)\n    #print(n, m, a, b)\n    #print(roads)\n    #print(n, m, a, b)\n    #print(roads)\n    #print(n, m, a, b)\n    #print(roads)\n    #print(n, m, a, b)\n    #print(roads)\n    #print(n, m, a, b)\n    #print(roads)\n    #print(n, m, a, b)\n    #print(roads)\n    #print(n, m, a, b)\n    #print(roads)\n    #print(n, m, a, b)\n    #print(roads)\n    #print(n, m, a, b)\n    #print(roads)\n    #print(n, m, a, b)\n    #print(roads)\n    #print(n, m, a, b)\n    #print(roads)\n    #print(n, m, a, b)\n    #print(roads)\n    #print(n, m, a, b)",
"2": "\n    n = int(input())\n    s = input()\n    stack = []\n    for i in range(n):\n        if s[i] == '(':\n            stack.append(s[i])\n        elif s[i] == ')':\n            if len(stack) == 0:\n                print(0)\n                return\n            stack.pop()\n    if len(stack) == 0:\n        print(1)\n    else:\n        print(0)\n\ncode()",
"3": "\n    n = int(input())\n    seq = input()\n    if seq[0] == '(':\n        seq = seq[1:]\n    if seq[-1] == ')':\n        seq = seq[:-1]\n    seq = seq.split(' ')\n    seq = [int(x) for x in seq]\n    seq = [x for x in seq if x != 0]\n    if len(seq) == 0:\n        print(0)\n    else:\n        print(sum(seq))\n\ndef main():\n    code()\n\nif __name__ == \"__main__\":\n    main()",
"4": "\n    s = input()\n    k = int(input())\n    if k < 0:\n        k = len(s) + k\n    if k >= len(s):\n        k = k % len(s)\n    print(s[k])\n\ncode()",
"5": "\n    s = input()\n    l = len(s)\n    k = random.randint(0, l - 1)\n    t = s[k] + s[(k + 1) % l] + s[(k + 2) % l] + s[(k + 3) % l] + s[(k + 4) % l] + s[(k + 5) % l] + s[(k + 6) % l] + s[(k + 7) % l] + s[(k + 8) % l] + s[(k + 9) % l] + s[(k + 10) % l]\n    print(t.count('a') / l)\n\n\ncode()"
}