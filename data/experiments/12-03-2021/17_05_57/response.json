{
    "id": "cmpl-4BCqlb2kZBNbiEm6pWyyH3D4hPpbL",
    "object": "text_completion",
    "created": 1638576351,
    "model": "davinci-codex:2021-08-03",
    "choices": [
        {
            "text": "\n    ",
            "index": 0,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    T = int(input())\n    for i in range(T):\n        N, K = map(int, input().split())\n        print(N + (K - 1))\n\ncode()",
            "index": 1,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        if n == 1:\n            print(0)\n        elif n == 2:\n            print(1)\n        else:\n            print(n-1)\ncode()",
            "index": 2,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        if n % 2 == 0:\n            print(n//2)\n        else:\n            print(n//2 + 1)\ncode()",
            "index": 3,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    if n < 0:\n        return False\n    else:\n        return n**0.5 == int(n**0.5)",
            "index": 4,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    if n < 0:\n        return False\n    else:\n        return n**0.5 == int(n**0.5)\n\nif __name__ == '__main__':\n    print(is_square(25))",
            "index": 5,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n        ",
            "index": 6,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n        res = [poured] + [0] * query_row\n        for row in range(1, query_row + 1):\n            for i in range(row, -1, -1):\n                res[i] = max(res[i]-1, 0)/2.0 + max(res[i-1]-1, 0)/2.0\n        return min(res[query_glass], 1)",
            "index": 7,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n, q = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(q):\n        x, y = map(int, input().split())\n        if x == 0:\n            a = a[y:]\n        else:\n            a = a[:x] + [n+1] + a[x:y]\n        print(len(a))\n\ncode()",
            "index": 8,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n, q = map(int, input().split())\n    a = list(map(int, input().split()))\n    for i in range(q):\n        x, y = map(int, input().split())\n        a[x:y+1] = [n+1]*(y-x+1)\n    print(a.count(n+1))\n\ncode()",
            "index": 9,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    V = int(input())\n    for i in range(V):\n        k = [int(x) for x in input().split()]\n        if k[0] == 0:\n            print(\"poisson\")\n        else:\n            print(\"uniform\")\n\ncode()",
            "index": 10,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    ",
            "index": 11,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    if text == '' or char == '':\n        return ''\n    else:\n        return char * len(text)\n\nprint(contamination(\"abc\", \"z\"))\nprint(contamination(\"abc\", \"\"))\nprint(contamination(\"\", \"z\"))",
            "index": 12,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    if text == '' or char == '':\n        return ''\n    else:\n        return char * len(text)",
            "index": 13,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        n, p = map(int, input().split())\n        k = list(map(int, input().split()))\n        k.sort()\n        k.reverse()\n        s = 0\n        for j in range(n):\n            s += k[j]**p\n        s1 = 0\n        s2 = 0\n        for j in range(n):\n            if s1 < s2:\n                s1 += k[j]**p\n            else:\n                s2 += k[j]**p\n        print(abs(s1-s2)%1000000007)\n\ncode()",
            "index": 14,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    def solve(n, p, k):\n        k.sort()\n        k.reverse()\n        s = sum(k)\n        if s % p != 0:\n            return s\n        else:\n            s = s // p\n            k = k[:p]\n            k.sort()\n            k.reverse()\n            return abs(sum(k[:s]) - sum(k[s:]))\n\n    t = int(input())\n    for i in range(t):\n        n, p = map(int, input().split())\n        k = list(map(int, input().split()))\n        print(solve(n, p, k))\n\ncode()",
            "index": 15,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    N = int(input())\n    if N < 10:\n        print(\"1\")\n    elif N < 100:\n        print(\"2\")\n    elif N < 1000:\n        print(\"3\")\n    else:\n        print(\"More than 3 digits\")\n\ncode()",
            "index": 16,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    N = int(input())\n    if N < 10:\n        print(\"1\")\n    elif N < 100:\n        print(\"2\")\n    elif N < 1000:\n        print(\"3\")\n    else:\n        print(\"More than 3 digits\")\n\ncode()",
            "index": 17,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        count = 0\n        while n > 0:\n            if n >= 100:\n                n -= 100\n                count += 1\n            elif n >= 50:\n                n -= 50\n                count += 1\n            elif n >= 10:\n                n -= 10\n                count += 1\n            elif n >= 5:\n                n -= 5\n                count += 1\n            elif n >= 2:\n                n -= 2\n                count += 1\n            elif n >= 1:\n                n -= 1\n                count += 1\n        print(count)\ncode()",
            "index": 18,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        count = 0\n        while n > 0:\n            if n >= 100:\n                n -= 100\n                count += 1\n            elif n >= 50:\n                n -= 50\n                count += 1\n            elif n >= 10:\n                n -= 10\n                count += 1\n            elif n >= 5:\n                n -= 5\n                count += 1\n            elif n >= 2:\n                n -= 2\n                count += 1\n            elif n >= 1:\n                n -= 1\n                count += 1\n        print(count)\ncode()",
            "index": 19,
            "logprobs": null,
            "finish_reason": "stop"
        }
    ]
}