{
    "0": "\n    n, x, y, z = [int(x) for x in input().split()]\n    # n = length of sequence\n    # x = number of X's\n    # y = number of Y's\n    # z = number of Z's\n    # n = 3, x = 5, y = 7, z = 5\n    # n = 4, x = 5, y = 7, z = 5\n    # n = 5, x = 5, y = 7, z = 5\n    # n = 6, x = 5, y = 7, z = 5\n    # n = 7, x = 5, y = 7, z = 5\n    # n = 8, x = 5, y = 7, z = 5\n    # n = 9, x = 5, y = 7, z = 5\n    # n = 10, x = 5, y = 7, z = 5\n    # n = 11, x = 5, y = 7, z = 5\n    # n = 12, x = 5, y = 7, z = 5\n    # n = 13, x = 5, y = 7, z = 5\n    # n = 14, x = 5, y = 7, z = 5\n    # n = 15, x = 5, y = 7, z = 5\n    # n = 16, x = 5, y = 7, z = 5\n    # n = 17, x = 5, y = 7, z = 5\n    # n = 18, x = 5, y = 7, z = 5\n    # n = 19, x = 5, y = 7, z = 5\n    # n = 20, x = 5, y = 7, z = 5\n    # n = 21, x = 5, y = 7, z = 5\n    # n = 22, x = 5, y = 7, z = 5\n    # n = 23, x = 5, y = 7, z = 5\n    # n = 24, x = 5, y = 7, z = 5\n    # n = 25, x = 5, y = 7, z = 5\n    # n = 26, x = 5, y = 7, z = 5\n    # n = 27, x = 5, y = 7, z = 5\n    # n = 28, x = 5, y = 7, z = 5\n    # n = 29, x = 5, y = 7, z = 5\n    # n = 30, x = 5, y = 7, z = 5\n    # n = 31, x = 5, y = 7, z = 5\n    # n = 32, x = 5, y = 7, z = 5\n    # n = 33, x = 5, y = 7, z = 5\n    # n = 34, x = 5, y = 7, z = 5\n    # n = 35, x = 5, y = 7, z = 5\n    # n = 36, x = 5, y = 7, z = 5\n    # n = 37, x = 5, y = 7, z = 5\n    # n = 38, x = 5, y = 7, z = 5\n    # n = 39, x = 5, y = 7, z = 5\n    # n = 40, x = 5, y = 7, z = 5\n    # n = 41, x = 5, y = 7, z = 5\n    # n = 42, x = 5, y = 7, z = 5\n    # n = 43, x = 5, y = 7, z = 5\n    # n = 44, x = 5, y = 7, z = 5\n    # n = 45, x = 5, y = 7, z = 5\n    # n = 46, x = 5, y = 7, z = 5\n    # n = 47, x = 5, y = 7, z = 5\n    # n = 48, x = 5, y = 7, z = 5\n    # n = 49, x = 5, y = 7, z = 5\n    # n = 50, x = 5, y = 7, z = 5\n    # n = 51, x = 5, y = 7, z = 5\n    # n = 52, x = 5, y = 7, z = 5\n    # n = 53, x = 5, y = 7, z = 5\n    # n = 54, x = 5, y = 7, z = 5\n    # n = 55, x = 5, y = 7, z = 5\n    # n = 56, x = 5, y",
    "1": "\n    n, x, y, z = map(int, input().split())\n    mod = 10**9 + 7\n    # Create a list of all possible sequences\n    sequences = []\n    for i in range(1, 11):\n        for j in range(1, 11):\n            for k in range(1, 11):\n                for l in range(1, 11):\n                    sequences.append([i, j, k, l])\n    # Count the number of sequences that contain an X,Y,Z-Haiku\n    count = 0\n    for sequence in sequences:\n        if sequence[0] + sequence[1] + sequence[2] == x and sequence[1] + sequence[2] + sequence[3] == y and sequence[2] + sequence[3] + sequence[4] == z:\n            count += 1\n    print(count % mod)\n",
    "2": "\n    s = input()\n    m = int(input())\n    for i in range(m):\n        l, r = map(int, input().split())\n        print(s[l:r+1].count('(') - s[l:r+1].count(')'))\n",
    "3": "\n    s = input()\n    m = int(input())\n    for i in range(m):\n        l, r = map(int, input().split())\n        print(s[l-1:r].count(\"(\"))\n",
    "4": "\n    return bin(a & b).count('1') > 1\n\nprint(shared_bits(7, 10))\nprint(shared_bits(7, 15))\nprint(shared_bits(10, 15))",
    "5": "\n    return len(bin(a ^ b)[2:].split('1')) > 1",
    "6": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        s = input()\n        if n % 2 == 0:\n            if s.count('0') == n / 2:\n                print(0)\n            else:\n                print(1)\n        else:\n            print(2)\n",
    "7": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        s = input()\n        if n % 2 == 0:\n            if s[:n//2] == s[n//2:]:\n                print(0)\n            else:\n                print(1)\n        else:\n            if s[:n//2] == s[n//2+1:]:\n                print(0)\n            else:\n                print(1)\n",
    "8": "\n    s = 'a'\n    for i in range(2, 27):\n        s = s + chr(i + 96) + s\n    return s[k - 1]\n\nif __name__ == '__main__':\n    print(abacaba(1))\n    print(abacaba(2))\n    print(abacaba(3))\n    print(abacaba(4))\n    print(abacaba(5))\n    print(abacaba(6))\n    print(abacaba(7))\n    print(abacaba(8))\n    print(abacaba(9))\n    print(abacaba(10))\n    print(abacaba(11))\n    print(abacaba(12))\n    print(abacaba(13))\n    print(abacaba(14))\n    print(abacaba(15))\n    print(abacaba(16))\n    print(abacaba(17))\n    print(abacaba(18))\n    print(abacaba(19))\n    print(abacaba(20))\n    print(abacaba(21))\n    print(abacaba(22))\n    print(abacaba(23))\n    print(abacaba(24))\n    print(abacaba(25))\n    print(abacaba(26))",
    "9": "\n    s = 'abacaba'\n    for i in range(1, k):\n        s += s[i] + s[i - 1]\n    return s[k - 1]",
    "10": "\n    ",
    "11": "\n    name = name.upper()\n    name = name.replace('H', '')\n    name = name.replace('W', '')\n    name = name.replace('B', '1')\n    name = name.replace('F', '1')\n    name = name.replace('P', '1')\n    name = name.replace('V', '1')\n    name = name.replace('C', '2')\n    name = name.replace('G', '2')\n    name = name.replace('J', '2')\n    name = name.replace('K', '2')\n    name = name.replace('Q', '2')\n    name = name.replace('S', '2')\n    name = name.replace('X', '2')\n    name = name.replace('Z', '2')\n    name = name.replace('D', '3')\n    name = name.replace('T', '3')\n    name = name.replace('L', '4')\n    name = name.replace('M', '5')\n    name = name.replace('N', '5')\n    name = name.replace('R', '6')\n    name = name.replace('A', '')\n    name = name.replace('E', '')\n    name = name.replace('I', '')\n    name = name.replace('O', '')\n    name = name.replace('U', '')\n    name = name.replace('Y', '')\n    name = name.replace(' ', '')\n    name = name.replace('H', '')\n    name = name.replace('W', '')\n    name = name.replace('B', '1')\n    name = name.replace('F', '1')\n    name = name.replace('P', '1')\n    name = name.replace('V', '1')\n    name = name.replace('C', '2')\n    name = name.replace('G', '2')\n    name = name.replace('J', '2')\n    name = name.replace('K', '2')\n    name = name.replace('Q', '2')\n    name = name.replace('S', '2')\n    name = name.replace('X', '2')\n    name = name.replace('Z', '2')\n    name = name.replace('D', '3')\n    name = name.replace('T', '3')\n    name = name.replace('L', '4')\n    name = name.replace('M', '5')\n    name = name.replace('N', '5')\n    name = name.replace('R', '6')\n    name = name.replace('A', '')\n    name = name.replace('E', '')\n    name = name.replace('I', '')\n    name = name.replace('O', '')\n    name = name.replace('U', '')\n    name = name.replace('Y', '')\n    name = name.replace(' ', '')\n    name = name.replace('H', '')\n    name = name.replace('W', '')\n    name = name.replace('B', '1')\n    name = name.replace('F', '1')\n    name = name.replace('P', '1')\n    name = name.replace('V', '1')\n    name = name.replace('C', '2')\n    name = name.replace('G', '2')\n    name = name.replace('J', '2')\n    name = name.replace('K', '2')\n    name = name.replace('Q', '2')\n    name = name.replace('S', '2')\n    name = name.replace('X', '2')\n    name = name.replace('Z', '2')\n    name = name.replace('D', '3')\n    name = name.replace('T', '3')\n    name = name.replace('L', '4')\n    name = name.replace('M', '5')\n    name = name.replace('N', '5')\n    name = name.replace('R', '6')\n    name = name.replace('A', '')\n    name = name.replace('E', '')\n    name = name.replace('I', '')\n    name = name.replace('O', '')\n    name = name.replace('U', '')\n    name = name.replace('Y', '')\n    name =",
    "12": "\n    n, a, b, c, d = map(int, input().split())\n    mod = 10**9+7\n    if a == b:\n        print(1)\n        return\n    if c == d:\n        print(1)\n        return\n    if a > b:\n        a, b = b, a\n    if c > d:\n        c, d = d, c\n    if a > c:\n        a, b, c, d = c, d, a, b\n    if b > d:\n        print(0)\n        return\n    if a == c:\n        print(pow(2, n-a, mod))\n        return\n    if b == d:\n        print(pow(2, n-b, mod))\n        return\n    if a == c and b == d:\n        print(pow(2, n-a, mod))\n        return\n    if a == c and b < d:\n        print(pow(2, n-a, mod) - pow(2, n-b-1, mod))\n        return\n    if a < c and b == d:\n        print(pow(2, n-b, mod) - pow(2, n-a-1, mod))\n        return\n    if a < c and b < d:\n        print(pow(2, n-a, mod) + pow(2, n-b-1, mod) - pow(2, n-a-1, mod) - pow(2, n-b, mod))\n        return\n",
    "13": "\n    n, a, b, c, d = map(int, input().split())\n    mod = 10**9 + 7\n    # n = number of people\n    # a = min number of people in a group\n    # b = max number of people in a group\n    # c = min number of groups containing exactly i people\n    # d = max number of groups containing exactly i people\n    # n = number of people\n    # a = min number of people in a group\n    # b = max number of people in a group\n    # c = min number of groups containing exactly i people\n    # d = max number of groups containing exactly i people\n    # n = number of people\n    # a = min number of people in a group\n    # b = max number of people in a group\n    # c = min number of groups containing exactly i people\n    # d = max number of groups containing exactly i people\n    # n = number of people\n    # a = min number of people in a group\n    # b = max number of people in a group\n    # c = min number of groups containing exactly i people\n    # d = max number of groups containing exactly i people\n    # n = number of people\n    # a = min number of people in a group\n    # b = max number of people in a group\n    # c = min number of groups containing exactly i people\n    # d = max number of groups containing exactly i people\n    # n = number of people\n    # a = min number of people in a group\n    # b = max number of people in a group\n    # c = min number of groups containing exactly i people\n    # d = max number of groups containing exactly i people\n    # n = number of people\n    # a = min number of people in a group\n    # b = max number of people in a group\n    # c = min number of groups containing exactly i people\n    # d = max number of groups containing exactly i people\n    # n = number of people\n    # a = min number of people in a group\n    # b = max number of people in a group\n    # c = min number of groups containing exactly i people\n    # d = max number of groups containing exactly i people\n    # n = number of people\n    # a = min number of people in a group\n    # b = max number of people in a group\n    # c = min number of groups containing exactly i people\n    # d = max number of groups containing exactly i people\n    # n = number of people\n    # a = min number of people in a group\n    # b = max number of people in a group\n    # c = min number of groups containing exactly i people\n    # d = max number of groups containing exactly i people\n    # n = number of people\n    # a = min number of people in a group\n    # b = max number of people in a group\n    # c = min number of groups containing exactly i people\n    # d = max number of groups containing exactly i people\n    # n = number of people\n    # a = min number of people in a group\n    # b = max number of people in a group\n    # c = min number of groups containing exactly i people\n    # d = max number of groups containing exactly i people\n    # n = number of people\n    # a = min number of people in a group\n    # b = max number of people in a group\n    # c = min number of groups containing exactly i people\n    # d = max number of groups containing exactly i people\n    # n = number of people\n    # a = min number of people in a group\n    # b = max number of people in a group\n    # c = min number of groups containing exactly i people\n    # d = max number of groups containing exactly i people\n    # n = number of people\n    # a = min number of people in a group\n    # b = max number of people in a group\n    # c = min number of groups containing exactly i people\n    # d = max number of groups containing exactly i people\n    # n = number of people\n    # a = min number of people in a group\n    # b = max number of people in a group\n    # c = min number of groups containing exactly i people\n    # d = max number of groups containing exactly i people\n    # n = number of people\n    # a = min number of people in a group\n    # b = max number of people in a group\n    # c = min number of groups containing exactly i people\n    # d = max number of groups containing exactly i people\n    # n = number of people\n",
    "14": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        if n % 3 == 0:\n            print(1)\n        else:\n            print(0)",
    "15": "\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        if N % 3 == 0:\n            print(1)\n        else:\n            print(0)",
    "16": "\n    T = int(input())\n    for i in range(T):\n        R, C = map(int, input().split())\n        matrix = []\n        for j in range(R):\n            matrix.append(input())\n        if \"spoon\" in matrix or \"SPOON\" in matrix:\n            print(\"There is a spoon!\")\n        else:\n            print(\"There is indeed no spoon!\")\n",
    "17": "\n    T = int(input())\n    for i in range(T):\n        R, C = map(int, input().split())\n        M = []\n        for j in range(R):\n            M.append(input())\n        if \"spoon\" in M or \"SPOON\" in M:\n            print(\"There is a spoon!\")\n        else:\n            print(\"There is indeed no spoon!\")\n",
    "18": "\n    n, p, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if (a[i] + a[j]) * (a[i]**2 + a[j]**2) % p == k:\n                count += 1\n    print(count)\n",
    "19": "\n    n, p, k = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if (a[i] + a[j]) * (a[i]**2 + a[j]**2) % p == k:\n                ans += 1\n    print(ans)\n"
}