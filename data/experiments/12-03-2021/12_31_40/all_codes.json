{
    "0": "\n    string = input()\n    if len(string)%2==0:\n        print(string[:len(string)//2]+string[:len(string)//2][::-1])\n    else:\n        print(string[:len(string)//2]+string[:len(string)//2-1][::-1])",
    "1": "\n    A = input()\n    B = A[::-1]\n    print(A+B)",
    "2": "\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        print(n//2)\n        for i in range(n//2):\n            print(2*i+1, 2*i+2)\n",
    "3": "\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        print(n//2)\n        for i in range(n//2):\n            print(2, i+1)\n",
    "4": "\n    n, m = map(int, input().split())\n    b = list(map(int, input().split()))\n    g = list(map(int, input().split()))\n    if n < m:\n        print(-1)\n    else:\n        b.sort()\n        g.sort()\n        s = 0\n        for i in range(n):\n            s += b[i] * g[i]\n        print(s)\n",
    "5": "\n    n, m = map(int, input().split())\n    b = list(map(int, input().split()))\n    g = list(map(int, input().split()))\n    if len(b) != n or len(g) != m:\n        print(-1)\n        return\n    if n > m:\n        print(-1)\n        return\n    if n == m:\n        if min(b) == max(g):\n            print(sum(b))\n            return\n        else:\n            print(-1)\n            return\n    if n < m:\n        if min(b) == max(g):\n            print(sum(b) + sum(g) - min(b))\n            return\n        else:\n            print(-1)\n            return\n\nif __name__ == '__main__':\n    code()",
    "6": "\n    k = int(input())\n    n = int(input())\n    G = [[0 for i in range(n)] for j in range(n)]\n    for i in range(n):\n        G[i] = list(input())\n    print(G)",
    "7": "\n    k = int(input())\n    n = int(input())\n    matrix = []\n    for i in range(n):\n        matrix.append(list(input()))\n    for i in range(n):\n        for j in range(n):\n            if i == j:\n                matrix[i][j] = 'N'\n            else:\n                if matrix[i][j] == 'Y':\n                    matrix[j][i] = 'Y'\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j] == 'Y':\n                for k in range(n):\n                    if matrix[j][k] == 'Y':\n                        matrix[i][k] = 'Y'\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j] == 'Y':\n                matrix[j][i] = 'Y'\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j] == 'N':\n                matrix[i][j] = 'Y'\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j] == 'Y':\n                matrix[i][j] = 'N'\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j] == 'N':\n                matrix[i][j] = 'Y'\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j] == 'Y':\n                matrix[i][j] = 'N'\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j] == 'N':\n                matrix[i][j] = 'Y'\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j] == 'Y':\n                matrix[i][j] = 'N'\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j]",
    "8": "\n    n = int(input())\n    s = list(map(int, input().split()))\n    s.sort()\n    s.reverse()\n    max_lucky = s[0]\n    for i in range(1, len(s)):\n        if s[i] == s[i-1]:\n            continue\n        else:\n            max_lucky = s[i] ^ s[i-1]\n            break\n    print(max_lucky)\n",
    "9": "\n    n = int(input())\n    s = list(map(int, input().split()))\n    s.sort()\n    ans = 0\n    for i in range(n-1):\n        ans = max(ans, s[i]^s[i+1])\n    print(ans)\n",
    "10": "\n        \n        pass\n\n\nif __name__ == '__main__':\n    assert Solution().minCameraCover(0) == 0",
    "11": "\n        # return self.dfs(root)\n        return self.bfs(root)\n        # return self.dfs_2(root)\n\n    def dfs(self, root):\n        ",
    "12": "\n    T = int(input())\n    for i in range(T):\n        R, C = map(int, input().split())\n        matrix = []\n        for j in range(R):\n            matrix.append(input())\n        if \"spoon\" in matrix or \"SPOON\" in matrix:\n            print(\"There is a spoon!\")\n        else:\n            print(\"There is indeed no spoon!\")\n",
    "13": "\n    T = int(input())\n    for i in range(T):\n        R, C = map(int, input().split())\n        M = []\n        for j in range(R):\n            M.append(input())\n        if \"spoon\" in M or \"SPOON\" in M:\n            print(\"There is a spoon!\")\n        else:\n            print(\"There is indeed no spoon!\")\n",
    "14": "\n    t = int(input())\n    for i in range(t):\n        s = input()\n        if \"Berhampore\" in s:\n            if \"Serampore\" in s:\n                print(\"Both\")\n            else:\n                print(\"GCETTB\")\n        elif \"Serampore\" in s:\n            print(\"GCETTS\")\n        else:\n            print(\"Others\")",
    "15": "\n    t = int(input())\n    for i in range(t):\n        s = input()\n        if \"berhampore\" in s.lower():\n            print(\"GCETTB\")\n        elif \"serampore\" in s.lower():\n            print(\"GCETTS\")\n        else:\n            print(\"Others\")",
    "16": "\n    t = int(input())\n    for i in range(t):\n        x, r, a, b = map(int, input().split())\n        if (a-b)%(2*r) == 0:\n            print(int((a-b)/(2*r)))\n        else:\n            print(int((a-b)/(2*r))+1)\n",
    "17": "\n    T = int(input())\n    for i in range(T):\n        X, R, A, B = map(int, input().split())\n        if A == B:\n            print(0)\n        else:\n            if A > B:\n                A, B = B, A\n            if (X * B) % A == 0:\n                print(int((X * B) / A))\n            else:\n                print(int((X * B) / A) + 1)\n",
    "18": "\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = 0\n    for i in range(n):\n        if arr[i] <= k:\n            k -= arr[i]\n            ans += 1\n        else:\n            break\n    print(ans)\n\nif __name__ == \"__main__\":\n    code()",
    "19": "\n    n, k = map(int, input().split())\n    prices = list(map(int, input().split()))\n    prices.sort()\n    count = 0\n    for i in prices:\n        if k - i >= 0:\n            count += 1\n            k -= i\n        else:\n            break\n    print(count)\n"
}