{
    "0": "\n    n, m = map(int, input().split())\n    edges = [list(map(int, input().split())) for _ in range(m)]\n    edges.sort(key=lambda x: x[2])\n    # print(edges)\n    # print(edges[0][2])\n    # print(edges[0][0])\n    # print(edges[0][1])\n    # print(edges[1][0])\n    # print(edges[1][1])\n    # print(edges[1][2])\n    # print(edges[2][0])\n    # print(edges[2][1])\n    # print(edges[2][2])\n    # print(edges[3][0])\n    # print(edges[3][1])\n    # print(edges[3][2])\n    # print(edges[4][0])\n    # print(edges[4][1])\n    # print(edges[4][2])\n    # print(edges[5][0])\n    # print(edges[5][1])\n    # print(edges[5][2])\n    # print(edges[6][0])\n    # print(edges[6][1])\n    # print(edges[6][2])\n    # print(edges[7][0])\n    # print(edges[7][1])\n    # print(edges[7][2])\n    # print(edges[8][0])\n    # print(edges[8][1])\n    # print(edges[8][2])\n    # print(edges[9][0])\n    # print(edges[9][1])\n    # print(edges[9][2])\n    # print(edges[10][0])\n    # print(edges[10][1])\n    # print(edges[10][2])\n    # print(edges[11][0])\n    # print(edges[11][1])\n    # print(edges[11][2])\n    # print(edges[12][0])\n    # print(edges[12][1])\n    # print(edges[12][2])\n    # print(edges[13][0])\n    # print(edges[13][1])\n    # print(edges[13][2])\n    # print(edges[14][0])\n    # print(edges[14][1])\n    # print(edges[14][2])\n    # print(edges[15][0])\n    # print(edges[15][1])\n    # print(edges[15][2])\n    # print(edges[16][0])\n    # print(edges[16][1])\n    # print(edges[16][2])\n    # print(edges[17][0])\n    # print(edges[17][1])\n    # print(edges[17][2])\n    # print(edges[18][0])\n    # print(edges[18][1])\n    # print(edges[18][2])\n    # print(edges[19][0])\n    # print(edges[19][1])\n    # print(edges[19][2])\n    # print(edges[20][0])\n    # print(edges[20][1])\n    # print(edges[20][2])\n    # print(edges[21][0])\n    # print(edges[21][1])\n    # print(edges[21][2])\n    # print(edges[22][0])\n    # print(edges[22][1])\n    # print(edges[22][2])\n    # print(edges[23][0])\n    # print(edges[23][1])\n    # print(edges[23][2])\n    # print(edges[24][0])\n    # print(edges[24][1])\n    # print(edges[24][2])\n    # print(edges[25][0])\n    # print(edges[25][1])\n    # print(edges[25][2])\n    # print(edges[26][0])\n    # print(edges[26][1])\n    # print",
    "1": "\n    n, m = map(int, input().split())\n    graph = [[] for i in range(n)]\n    for i in range(m):\n        u, v = map(int, input().split())\n        graph[u-1].append(v-1)\n        graph[v-1].append(u-1)\n    # print(graph)\n    def dfs(graph, visited, v, ans):\n        visited[v] = True\n        for i in graph[v]:\n            if not visited[i]:\n                dfs(graph, visited, i, ans)\n        ans.append(v)\n    def dfs2(graph, visited, v, ans):\n        visited[v] = True\n        for i in graph[v]:\n            if not visited[i]:\n                dfs2(graph, visited, i, ans)\n    visited = [False] * n\n    ans = []\n    for i in range(n):\n        if not visited[i]:\n            dfs(graph, visited, i, ans)\n    visited = [False] * n\n    ans2 = []\n    for i in range(n-1, -1, -1):\n        if not visited[ans[i]]:\n            dfs2(graph, visited, ans[i], ans2)\n    if len(ans2) == n:\n        print(len(ans2))\n        print(*[i+1 for i in ans2])\n    else:\n        print(-1)\n\nif __name__ == '__main__':\n    code()",
    "2": "\n    if arr == '':\n        return 'Gym is empty'\n    elif type(arr) == list:\n        for i in range(len(arr)):\n            if arr[i].isdigit():\n                return 'This isn\\'t the gym!!'\n            else:\n                arr[i] = arr[i].replace('O', ' ')\n        return arr\n    else:\n        return 'This isn\\'t the gym!!'",
    "3": "\n    if arr == []:\n        return 'Gym is empty'\n    elif type(arr) == int:\n        return 'This isn\\'t the gym!!'\n    else:\n        for i in range(len(arr)):\n            arr[i] = arr[i].replace('O', ' ')\n        return arr",
    "4": "\n    t = int(input())\n    for i in range(t):\n        a, b, c = map(int, input().split())\n        if a == b == c:\n            print(1)\n        elif a == b or b == c or a == c:\n            print(2)\n        else:\n            print(4)\n",
    "5": "\n    t = int(input())\n    for i in range(t):\n        a, b, c = map(int, input().split())\n        if a == b == c:\n            print(1)\n        elif a == b or b == c or a == c:\n            print(3)\n        else:\n            print(6)\n",
    "6": "\n    return ''.join(str(ord(c)-96) for c in string.lower() if c.isalpha())",
    "7": "\n    return ''.join(str(ord(c)-96) for c in string.lower())",
    "8": "\n    return sum(int(i) for i in re.findall(r'\\d+', string))",
    "9": "\n    #your code here\n    return sum([int(i) for i in re.findall(r'\\d+', string)])\n\n#test\nprint(sum_from_string(\"In 2015, I want to know how much does iPhone 6+ cost?\"))",
    "10": "\n    if len(s) == 0:\n        return -1\n    if len(s) == 1:\n        return -1\n    s.sort()\n    max_candy = s[-1]\n    total_candy = 0\n    for i in s:\n        total_candy += max_candy\n    return total_candy",
    "11": "\n    if len(s) == 0:\n        return -1\n    if len(s) == 1:\n        return -1\n    max_candy = max(s)\n    total_candy = 0\n    for i in s:\n        total_candy += max_candy - i\n    return total_candy",
    "12": "\n    t = int(input())\n    for i in range(t):\n        n = input()\n        sum = 0\n        for i in n:\n            sum += int(i)\n        print(sum)",
    "13": "\n    t = int(input())\n    for i in range(t):\n        n = input()\n        sum = 0\n        for i in n:\n            sum += int(i)\n        print(sum)",
    "14": "\n    # Your code here\n    return 0",
    "15": "\n    return 0",
    "16": "\n    return [x*i for i in range(1,n+1)]",
    "17": "\n    return [x*i for i in range(1,n+1)]",
    "18": "\n    R = int(input())\n    count = 0\n    for a in range(1, R+1):\n        for b in range(a, R+1):\n            for c in range(b, R+1):\n                if a**2 + b**2 == c**2:\n                    count += 1\n                    print(a, b, c)\n    print(count)\n",
    "19": "\n    R = int(input())\n    count = 0\n    for a in range(1, R+1):\n        for b in range(a, R+1):\n            for c in range(b, R+1):\n                if a**2 + b**2 == c**2:\n                    count += 1\n                    print(a, b, c)\n    print(count)\n"
}