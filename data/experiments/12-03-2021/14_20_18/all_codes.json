{
    "0": "\n    mask = 1 << bit_index\n    return bin(value ^ mask)\n\nprint(flip_bit(15, 4))\nprint(flip_bit(15, 5))",
    "1": "\n    return value ^ (1 << (bit_index - 1))",
    "2": "\n    x, d = map(int, input().split())\n    if x == 1:\n        print(1)\n        print(d)\n    else:\n        print(x)\n        print(*[d for i in range(x)])\n",
    "3": "\n    X, d = map(int, input().split())\n    n = 0\n    for i in range(1, X+1):\n        if X%i == 0:\n            if i >= d:\n                n += 1\n    print(n)\n    if n == 0:\n        print(-1)\n    else:\n        for i in range(1, X+1):\n            if X%i == 0:\n                if i >= d:\n                    print(i, end=\" \")\n",
    "4": "\n    a = sum(ord(c) for c in s)\n    b = sum(ord(c) - ord(s[i-1]) for i, c in enumerate(s) if i > 0)\n    c = (a | b) & ((1 << 2) - 1)\n    d = c ^ (32 * (s.count(' ') + 1))\n    return d\n\nif __name__ == '__main__':\n    print(string_hash('a'))\n    print(string_hash('ca'))",
    "5": "\n    a = sum(ord(c) for c in s)\n    b = sum(ord(s[i]) - ord(s[i-1]) for i in range(1, len(s)))\n    c = (a or b) and ((not a) << 2)\n    d = c ^ (32 * (s.count(' ') + 1))\n    return d\n\nif __name__ == '__main__':\n    print(string_hash('a'))\n    print(string_hash('ca'))",
    "6": "\n    return chr(c)",
    "7": "\n    return chr(c)",
    "8": "\n        res=0\n        for i in range(len(arr)):\n            for j in range(i+1,len(arr)+1,2):\n                res+=sum(arr[i:j])\n        return res",
    "9": "\n        res=0\n        for i in range(1,len(arr)+1,2):\n            for j in range(len(arr)-i+1):\n                res+=sum(arr[j:j+i])\n        return res",
    "10": "\n    n, m = map(int, input().split())\n    s = input()\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0:\n                if s[i] == chr(97 + j):\n                    dp[i][j] = 1\n            else:\n                if s[i] == chr(97 + j):\n                    dp[i][j] = dp[i - 1][j] + 1\n                else:\n                    dp[i][j] = dp[i - 1][j]\n    ans = 0\n    for i in range(m):\n        ans += dp[n - 1][i]\n    print(ans)\n",
    "11": "\n    n, m = map(int, input().split())\n    s = input()\n    dp = [[0 for i in range(m)] for j in range(n)]\n    for i in range(n):\n        for j in range(m):\n            if i == 0 or j == 0:\n                dp[i][j] = 1\n            elif s[i-1] == chr(97+j):\n                dp[i][j] = dp[i-1][j-1] + dp[i-1][j]\n            else:\n                dp[i][j] = dp[i-1][j]\n    print(dp[n-1][m-1])\n",
    "12": "\n    def dfs(v, p, visited, graph):\n        visited[v] = True\n        for u in graph[v]:\n            if u == p:\n                continue\n            if visited[u]:\n                return True\n            if dfs(u, v, visited, graph):\n                return True\n        return False\n\n    t = int(input())\n    for i in range(t):\n        n, m = map(int, input().split())\n        graph = [[] for i in range(n)]\n        visited = [False] * n\n        for j in range(m):\n            t, x, y = map(int, input().split())\n            if t == 0:\n                graph[x].append(y)\n                graph[y].append(x)\n            else:\n                graph[x].append(y)\n        for j in range(n):\n            if not visited[j]:\n                if dfs(j, -1, visited, graph):\n                    print(\"NO\")\n                    break\n        else:\n            print(\"YES\")\n            for j in range(n):\n                for k in graph[j]:\n                    print(j, k)\n",
    "13": "\n    ",
    "14": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        count = 0\n        for j in range(n-1):\n            if a[j] > a[j+1]:\n                count += 1\n        print(count)\n",
    "15": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        count = 0\n        for j in range(n-1):\n            if a[j] > a[j+1]:\n                count += 1\n        print(count)\n",
    "16": "\n        if not head:\n            return head\n        curr = head\n        while curr.next:\n            if curr.val == curr.next.val:\n                curr.next = curr.next.next\n            else:\n                curr = curr.next\n        return head",
    "17": "\n        if not head:\n            return head\n        dummy = ListNode(0)\n        dummy.next = head\n        prev = dummy\n        curr = head\n        while curr:\n            if curr.next and curr.val == curr.next.val:\n                while curr and curr.next and curr.val == curr.next.val:\n                    curr = curr.next\n                curr = curr.next\n                prev.next = curr\n            else:\n                prev = prev.next\n                curr = curr.next\n        return dummy.next",
    "18": "\n    return a[-2]\n\nprint(penultimate([1,2,3,4]))\nprint(penultimate([\"Python is dynamic\"]))",
    "19": "\n    return a[-2]"
}