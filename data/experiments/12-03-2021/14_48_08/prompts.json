{
    "0": "Python 3\n\"\"\"\nEvery uppercase letter is Father, The corresponding lowercase letters is the Son. Given a string s, if the father and son both exist, keep them. If it is a separate existence, delete them. Return the result.\n    \nExamples:\nInput:\nsc(\"Aab\")\nOutput:\n\"Aa\"\n\nInput:\nsc(\"AabBc\")\nOutput:\n\"AabB\"\n\nInput:\nsc(\"AaaaAaab\")\nOutput:\n\"AaaaAaa\"\n\nInput:\nsc(\"aAAAaAAb\")\nOutput:\n\"aAAAaAA\"\n\"\"\"\ndef sc(s):",
    "1": "Python 3\n\"\"\"\nThis is the simple version of Shortest Code series. If you need some challenges, please try the [challenge version](http://www.codewars.com/kata/56f928b19982cc7a14000c9d)\n\n## Task: \n\n  Every uppercase letter is Father, The corresponding lowercase letters is the Son.\n    \n  Give you a string ```s```, If the father and son both exist, keep them. If it is a separate existence, delete them. Return the result.\n    \n  For example: \n    \n   ```sc(\"Aab\")``` should return ```\"Aa\"```\n    \n   ```sc(\"AabBc\")``` should return ```\"AabB\"```\n   \n   ```sc(\"AaaaAaab\")``` should return ```\"AaaaAaa\"```(father can have a lot of son)\n    \n   ```sc(\"aAAAaAAb\")``` should return ```\"aAAAaAA\"```(son also can have a lot of father ;-)\n    \n    \n### Series:\n - [Bug in Apple](http://www.codewars.com/kata/56fe97b3cc08ca00e4000dc9)\n - [Father and Son](http://www.codewars.com/kata/56fe9a0c11086cd842000008)\n - [Jumping Dutch act](http://www.codewars.com/kata/570bcd9715944a2c8e000009)\n - [Planting Trees](http://www.codewars.com/kata/5710443187a36a9cee0005a1)\n - [Give me the equation](http://www.codewars.com/kata/56fe9b65cc08cafbc5000de3)\n - [Find the murderer](http://www.codewars.com/kata/570f3fc5b29c702c5500043e)\n - [Reading a Book](http://www.codewars.com/kata/570ca6a520c69f39dd0016d4)\n - [Eat watermelon](http://www.codewars.com/kata/570df12ce6e9282a7d000947)\n - [Special factor](http://www.codewars.com/kata/570e5d0b93214b1a950015b1)\n - [Guess the Hat](http://www.codewars.com/kata/570ef7a834e61306da00035b)\n - [Symmetric Sort](http://www.codewars.com/kata/5705aeb041e5befba20010ba)\n - [Are they symmetrical?](http://www.codewars.com/kata/5705cc3161944b10fd0004ba)\n - [Max Value](http://www.codewars.com/kata/570771871df89cf59b000742)\n - [Trypophobia](http://www.codewars.com/kata/56fe9ffbc25bf33fff000f7c)\n - [Virus in Apple](http://www.codewars.com/kata/5700af83d1acef83fd000048)\n - [Balance Attraction](http://www.codewars.com/kata/57033601e55d30d3e0000633)\n - [Remove screws I](http://www.codewars.com/kata/5710a50d336aed828100055a)\n - [Remove screws II](http://www.codewars.com/kata/5710a8fd336aed00d9000594)\n - [Regular expression compression](http://www.codewars.com/kata/570bae4b0237999e940016e9)\n - [Collatz Array(Split or merge)](http://www.codewars.com/kata/56fe9d579b7bb6b027000001)\n - [Tidy up the room](http://www.codewars.com/kata/5703ace6e55d30d3e0001029)\n - [Waiting for a Bus](http://www.codewars.com/kata/57070eff924f343280000015)\n\"\"\"\ndef sc(s):",
    "2": "Python 3\n\"\"\"\nYou have to remove duplicates and print the length of unique characters of the given string.\n\n-----Input-----\nFirst line contains T, number of testcases. Each testcase consists of a single string in one line. Each character of the string will be a small alphabet(ie. 'a' to 'z').\n\n-----Output-----\nFor each testcase, print the required answer in one line.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 10\n- Subtask 1 (20 points):1 \u2264 N \u2264 10\n- Subtask 2 (80 points):1 \u2264 N \u2264 105\n\n-----Example-----\nInput:\n2\nabc\naba\n\nOutput:\n3\n2\n\n\"\"\"\ndef code():",
    "3": "Python 3\n\"\"\"\nYou have initially a string of N characters, denoted by A1,A2...AN. You have to print the size of the largest subsequence of string A such that all the characters in that subsequence are distinct ie. no two characters in that subsequence should be same.\n\nA subsequence of string A is a sequence that can be derived from A by deleting some elements  and without changing the order of the remaining elements.\n\n-----Input-----\nFirst line contains T, number of testcases. Each testcase consists of a single string in one line. Each character of the string will be a small alphabet(ie. 'a' to 'z').\n\n-----Output-----\nFor each testcase, print the required answer in one line.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 10\n- Subtask 1 (20 points):1 \u2264 N \u2264 10\n- Subtask 2 (80 points):1 \u2264 N \u2264 105\n\n-----Example-----\nInput:\n2\nabc\naba\n\nOutput:\n3\n2\n\n-----Explanation-----\nFor first testcase, the whole string is a subsequence which has all distinct characters.\n\nIn second testcase, the we can delete last or first 'a' to get the required subsequence.\n\"\"\"\ndef code():",
    "4": "Python 3\n\"\"\"\n\nYou are given a string, if it contains the word berhampore , print GCETTB or if it contains serampore print GCETTS. If it contains both Berhampore and Serampore print Both, otherwise print others.Ignore the case.\n \nInput \n- First line contains single integer T, No. of test case  \n- Next line for every test contain case a string S \nOutput\n\nPrint GCETTB or GCETTS or Others or Both on a new line\nConstraints \n- 1 <= T <= 10 \n- 0 <= len(S) <= 100  \n- S contain a-z and A-Z and space only\nSample Input\n3\nGovernment clg Berhampore\nSeRaMporE textile college \nGirls college Kolkata\n\nSample Output\n\nGCETTB\n\nGCETTS\n\nOthers       \n\n\"\"\"\ndef code():",
    "5": "Python 3\n\"\"\"\nThe name of our college is \"Government College of Engineering and Textile Technology Berhampore\". There is another college named \"Government College of Engineering and Textile Technology Serampore\". As the names are quite similar, those who are unaware of existence of both the colleges, often get confused. And mistake one with other.\n\nGiven a string, if it contains the word berhampore (case insensitive), print GCETTB or if it contains serampore(case-insensitive), print GCETTS . If the string contains neither print Others. If it contains both Berhampore and Serampore print Both \nInput \n- First line contains single integer T, No. of test case  \n- Next line for every test contain case a string S \nOutput\n\nPrint GCETTB or GCETTS or Others or Both on a new line\nConstraints \n- 1 <= T <= 10 \n- 0 <= len(S) <= 100  \n- S contain a-z and A-Z and space only\nSample Input\n3\nGovernment clg Berhampore\nSeRaMporE textile college \nGirls college Kolkata\n\nSample Output\n\nGCETTB\n\nGCETTS\n\nOthers       \nExplanation\n\nSelf-Explanatory\n\"\"\"\ndef code():",
    "6": "Python 3\n\"\"\"\nYou are given two positive integers \u2014 A and B \u2014 in 7-ary system such that B * C = A and  B is a divisor of A. Calculate the number C modulo 7L.\n\n-----Input-----\n\nFirst line of input contains an integer T \u2014 the number of test cases. T tests follow.\n\nFor each test case, the first line contains the integer A, and the second line contains the integer B, and the third line contains the integer L. A and B are given in 7-ary system.\n\n-----Output-----\nOutput the answer in 7-ary system.\n\n-----Example-----\nInput:3\n21\n5\n10\n202\n13\n1\n202\n13\n2\n\nOutput:3\n3\n13\n\"\"\"\ndef code():",
    "7": "Python 3\n\"\"\"\nSereja has two integers \u2014 A and B \u2014 in 7-ary system. He wants to calculate the number C, such that B * C = A. It is guaranteed that B is a divisor of A.\n\nPlease, help Sereja calculate the number C modulo 7L.\n\n-----Input-----\n\nFirst line of input contains an integer T \u2014 the number of test cases. T tests follow.\n\nFor each test case, the first line contains the integer A, and the second line contains the integer B, and the third line contains the integer L. A and B are given in 7-ary system.\n\n-----Output-----\nOutput the answer in 7-ary system.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 10\n- A and B are both positive integers.\n- Length of A is a positive integer and doesn't exceed 106.\n- L and length of B are positive integers and do not exceed 10000.\n\n-----Subtasks-----\n- Sub task #1 (20 points): Length of A is a positive integer and doesn't exceed 20.\n- Sub task #2 (30 points): Length of A is a positive integer and doesn't exceed 2000.\n- Sub task #3 (50 points): Original constraints.\n\n-----Example-----\nInput:3\n21\n5\n10\n202\n13\n1\n202\n13\n2\n\nOutput:3\n3\n13\n\"\"\"\ndef code():",
    "8": "Python 3\n\"\"\"\n# Task\n The best match is the match \"Zamalek\" lost with the minimum goal difference. If there is more than one match with the same difference, choose the one \"Zamalek\" scored more goals in.\n \n Given the information about all matches \"AL-AHLY\" and \"Zamalek\" played, return the `index` of the best match (`0-based`). If more than one valid result, return the smallest index.\n\n# Example\n\n For `ALAHLYGoals = [6,4] and zamalekGoals = [1,2]`, the output should be 1.\n \n Because `4 - 2` is less than `6 - 1`\n \n For `ALAHLYGoals = [1,2,3,4,5] and zamalekGoals = [0,1,2,3,4]`, the output should be 4.\n \n The goal difference of all matches are 1, but at 4th match \"Zamalek\" scored more goals in. So the result is `4`.\n \n# Input/Output\n\n\n -  `[input]` integer array `ALAHLYGoals`\n\n  The number of goals \"AL-AHLY\" scored in each match.\n\n\n - `[input]` integer array `zamalekGoals`\n\n  The number of goals \"Zamalek\" scored in each match. It is guaranteed that zamalekGoals[i] < ALAHLYGoals[i] for each element.\n\n\n - `[output]` an integer\n\n  Index of the best match.\n\"\"\"\ndef best_match(goals1, goals2):",
    "9": "Python 3\n\"\"\"\n# Task\n \"AL-AHLY\" and \"Zamalek\" are the best teams in Egypt, but \"AL-AHLY\" always wins the matches between them. \"Zamalek\" managers want to know what is the best match they've played so far.\n \n The best match is the match they lost with the minimum goal difference. If there is more than one match with the same difference, choose the one \"Zamalek\" scored more goals in.\n \n Given the information about all matches they played, return the `index` of the best match (`0-based`). If more than one valid result, return the smallest index.\n\n# Example\n\n For `ALAHLYGoals = [6,4] and zamalekGoals = [1,2]`, the output should be 1.\n \n Because `4 - 2` is less than `6 - 1`\n \n For `ALAHLYGoals = [1,2,3,4,5] and zamalekGoals = [0,1,2,3,4]`, the output should be 4.\n \n The goal difference of all matches are 1, but at 4th match \"Zamalek\" scored more goals in. So the result is `4`.\n \n# Input/Output\n\n\n -  `[input]` integer array `ALAHLYGoals`\n\n  The number of goals \"AL-AHLY\" scored in each match.\n\n\n - `[input]` integer array `zamalekGoals`\n\n  The number of goals \"Zamalek\" scored in each match. It is guaranteed that zamalekGoals[i] < ALAHLYGoals[i] for each element.\n\n\n - `[output]` an integer\n\n  Index of the best match.\n\"\"\"\ndef best_match(goals1, goals2):",
    "10": "Python 3\n\"\"\"\nYou are given a set of n pens having red, blue, green, orange, and violet in color. Count a minimum number of pens that should be taken out from the set so that any two neighboring pens have different colors. \n\n-----Input:-----\n- \nThe first line contains t denoting the number of test cases.\n- \nThe first line of each test case will contain a single integer n.\n- \nThe second line of each test case will contain a string s.\n(s contains only 'R', 'B', 'G', 'O', and 'V' characters denoting red, blue, green, orange, and violet respectively)\n\n-----Output:-----\nFor each test case, print single line containing one integer - The minimum number of pens that need to be taken out.\n\n-----Constraints-----\n- $1 \\leq T \\leq 100$\n- $1 \\leq n \\leq 1000$\n\n-----Sample Input:-----\n2\n5\nRBBRG\n5\nRBGOV\n\n-----Sample Output:-----\n1\n0\n\n\"\"\"\ndef code():",
    "11": "Python 3\n\"\"\"\nYou are given a set of n pens, each of them can be red, blue, green, orange, and violet in color. Count a minimum number of pens that should be taken out from the set so that any two neighboring pens have different colors. Pens are considered to be neighboring if there are no other pens between them.\n\n-----Input:-----\n- \nThe first line contains t denoting the number of test cases.\n- \nThe first line of each test case will contain a single integer n.\n- \nThe second line of each test case will contain a string s.\n(s contains only 'R', 'B', 'G', 'O', and 'V' characters denoting red, blue, green, orange, and violet respectively)\n\n-----Output:-----\nFor each test case, print single line containing one integer - The minimum number of pens that need to be taken out.\n\n-----Constraints-----\n- $1 \\leq T \\leq 100$\n- $1 \\leq n \\leq 1000$\n\n-----Sample Input:-----\n2\n5\nRBBRG\n5\nRBGOV\n\n-----Sample Output:-----\n1\n0\n\n-----EXPLANATION:-----\nIn first test case, two blue pens are neighboring each other, if we take out any one of them then the string will be RBRG in which each pen has different neighbors.\nIn second test case, no pen needs to be taken out as each pen has different neighbors.\n\"\"\"\ndef code():",
    "12": "Python 3\n\"\"\"\n$f(n) = \\text{product of non-zero digits of} n$\n\n$g(n) = \\left\\{\\begin{array}{ll}{n} & {\\text{if} n < 10} \\\\{g(f(n))} & {\\text{otherwise}} \\end{array} \\right.$ \n\nYou need to process Q queries. In each query, you will be given three integers l, r and k. You need to print the number of integers x between l and r inclusive, such that g(x) = k. \n\n\n-----Input-----\n\nThe first line of the input contains an integer Q (1 \u2264 Q \u2264 2 \u00d7 10^5) representing the number of queries. \n\nQ lines follow, each of which contains 3 integers l, r and k (1 \u2264 l \u2264 r \u2264 10^6, 1 \u2264 k \u2264 9).\n\n\n-----Output-----\n\nFor each query, print a single line containing the answer for that query.\n\n\n-----Examples-----\nInput\n4\n22 73 9\n45 64 6\n47 55 7\n2 62 4\n\nOutput\n1\n4\n0\n8\n\nInput\n4\n82 94 6\n56 67 4\n28 59 9\n39 74 4\n\nOutput\n3\n1\n1\n5\n\n\n\"\"\"\ndef code():",
    "13": "Python 3\n\"\"\"\nLet us define two functions f and g on positive integer numbers.  $f(n) = \\text{product of non-zero digits of} n$\n\n$g(n) = \\left\\{\\begin{array}{ll}{n} & {\\text{if} n < 10} \\\\{g(f(n))} & {\\text{otherwise}} \\end{array} \\right.$ \n\nYou need to process Q queries. In each query, you will be given three integers l, r and k. You need to print the number of integers x between l and r inclusive, such that g(x) = k. \n\n\n-----Input-----\n\nThe first line of the input contains an integer Q (1 \u2264 Q \u2264 2 \u00d7 10^5) representing the number of queries. \n\nQ lines follow, each of which contains 3 integers l, r and k (1 \u2264 l \u2264 r \u2264 10^6, 1 \u2264 k \u2264 9).\n\n\n-----Output-----\n\nFor each query, print a single line containing the answer for that query.\n\n\n-----Examples-----\nInput\n4\n22 73 9\n45 64 6\n47 55 7\n2 62 4\n\nOutput\n1\n4\n0\n8\n\nInput\n4\n82 94 6\n56 67 4\n28 59 9\n39 74 4\n\nOutput\n3\n1\n1\n5\n\n\n\n-----Note-----\n\nIn the first example:  g(33) = 9 as g(33) = g(3 \u00d7 3) = g(9) = 9  g(47) = g(48) = g(60) = g(61) = 6  There are no such integers between 47 and 55.  g(4) = g(14) = g(22) = g(27) = g(39) = g(40) = g(41) = g(58) = 4\n\"\"\"\ndef code():",
    "14": "Python 3\n\"\"\"\nComplete the function that determines the score of a hand in the card game Blackjack and return the highest score of the cards that is less than or equal to 21. If there is no score less than or equal to 21 return the smallest score more than 21.\n\nNumber cards count as their face value. Jack, Queen and King count as 10. An Ace can be counted as either 1 or 11.\n\nExamples:\nInput:\n[\"A\"]\nOutput:\n11\n\nInput:\n[\"A\", \"J\"]\nOutput:\n21\n\nInput:\n[\"A\", \"10\", \"A\"]\nOutput:\n12\n\nInput:\n[\"5\", \"3\", \"7\"]\nOutput:\n15\n\nInput:\n[\"5\", \"4\", \"3\", \"2\", \"A\", \"K\"]\nOutput:\n25\n\"\"\"\ndef score_hand(cards):",
    "15": "Python 3\n\"\"\"\nComplete the function that determines the score of a hand in the card game [Blackjack](https://en.wikipedia.org/wiki/Blackjack) (aka 21).\n\nThe function receives an array of strings that represent each card in the hand (`\"2\"`, `\"3\",` ..., `\"10\"`, `\"J\"`, `\"Q\"`, `\"K\"` or `\"A\"`) and should return the score of the hand (integer).\n\n~~~if:c\nNote: in C the function receives a character array with the card `10` represented by the character `T`.\n~~~\n\n\n### Scoring rules:\n\nNumber cards count as their face value (2 through 10). Jack, Queen and King count as 10. An Ace can be counted as either 1 or 11.\n\nReturn the highest score of the cards that is less than or equal to 21. If there is no score less than or equal to 21 return the smallest score more than 21.\n\n\n## Examples\n\n```\n[\"A\"]                           ==>  11\n[\"A\", \"J\"]                      ==>  21\n[\"A\", \"10\", \"A\"]                ==>  12\n[\"5\", \"3\", \"7\"]                 ==>  15\n[\"5\", \"4\", \"3\", \"2\", \"A\", \"K\"]  ==>  25\n```\n\"\"\"\ndef score_hand(cards):",
    "16": "Python 3\n\"\"\"\nWrite a function to split a string and convert it into an array of words. \n\nExamples:\nInput\n\"Robin Singh\"\nOutput:\n[\"Robin\", \"Singh\"]\n\nInput:\n\"I love arrays they are my favorite\"\nOutput:\n[\"I\", \"love\", \"arrays\", \"they\", \"are\", \"my\", \"favorite\"]\n\"\"\"\ndef string_to_array(s):",
    "17": "Python 3\n\"\"\"\nWrite a function to split a string and convert it into an array of words. For example:\n\n```python\n\"Robin Singh\" ==> [\"Robin\", \"Singh\"]\n\n\"I love arrays they are my favorite\" ==> [\"I\", \"love\", \"arrays\", \"they\", \"are\", \"my\", \"favorite\"]\n```\n\"\"\"\ndef string_to_array(s):",
    "18": "Python 3\n\"\"\"\nA rectangle with sides $A$ and $B$ is cut into rectangles with cuts parallel to its sides.\n\nFor each type of rectangles, lengths of the sides of rectangles are given along with the amount of the rectangles of this type that were left after cutting the initial rectangle.\n\nCalculate the amount of pairs $(A; B)$ such as the given rectangles could be created by cutting the rectangle with sides of lengths $A$ and $B$. Pairs $(A; B)$ and $(B; A)$ are considered different when $A \\neq B$.\n\n\n-----Input-----\n\nThe first line consists of a single integer $n$ ($1 \\leq n \\leq 2 \\cdot 10^{5}$)\u00a0\u2014 amount of different types of rectangles left after cutting the initial rectangle.\n\nThe next $n$ lines each consist of three integers $w_{i}, h_{i}, c_{i}$ $(1 \\leq w_{i}, h_{i}, c_{i} \\leq 10^{12})$\u00a0\u2014 the lengths of the sides of the rectangles of this type and the amount of the rectangles of this type.\n\nIt is guaranteed that the rectangles of the different types are different.\n\n\n-----Output-----\n\nOutput one integer\u00a0\u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n1\n1 1 9\n\nOutput\n3\n\nInput\n2\n2 3 20\n2 4 40\n\nOutput\n6\n\nInput\n2\n1 2 5\n2 3 5\n\nOutput\n0\n\n\n\"\"\"\ndef code():",
    "19": "Python 3\n\"\"\"\nA rectangle with sides $A$ and $B$ is cut into rectangles with cuts parallel to its sides. For example, if $p$ horizontal and $q$ vertical cuts were made, $(p + 1) \\cdot (q + 1)$ rectangles were left after the cutting. After the cutting, rectangles were of $n$ different types. Two rectangles are different if at least one side of one rectangle isn't equal to the corresponding side of the other. Note that the rectangle can't be rotated, this means that rectangles $a \\times b$ and $b \\times a$ are considered different if $a \\neq b$.\n\nFor each type of rectangles, lengths of the sides of rectangles are given along with the amount of the rectangles of this type that were left after cutting the initial rectangle.\n\nCalculate the amount of pairs $(A; B)$ such as the given rectangles could be created by cutting the rectangle with sides of lengths $A$ and $B$. Note that pairs $(A; B)$ and $(B; A)$ are considered different when $A \\neq B$.\n\n\n-----Input-----\n\nThe first line consists of a single integer $n$ ($1 \\leq n \\leq 2 \\cdot 10^{5}$)\u00a0\u2014 amount of different types of rectangles left after cutting the initial rectangle.\n\nThe next $n$ lines each consist of three integers $w_{i}, h_{i}, c_{i}$ $(1 \\leq w_{i}, h_{i}, c_{i} \\leq 10^{12})$\u00a0\u2014 the lengths of the sides of the rectangles of this type and the amount of the rectangles of this type.\n\nIt is guaranteed that the rectangles of the different types are different.\n\n\n-----Output-----\n\nOutput one integer\u00a0\u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n1\n1 1 9\n\nOutput\n3\n\nInput\n2\n2 3 20\n2 4 40\n\nOutput\n6\n\nInput\n2\n1 2 5\n2 3 5\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first sample there are three suitable pairs: $(1; 9)$, $(3; 3)$ and $(9; 1)$.\n\nIn the second sample case there are 6 suitable pairs: $(2; 220)$, $(4; 110)$, $(8; 55)$, $(10; 44)$, $(20; 22)$ and $(40; 11)$.\n\nHere the sample of cut for $(20; 22)$.\n\n [Image] \n\nThe third sample has no suitable pairs.\n\"\"\"\ndef code():"
}