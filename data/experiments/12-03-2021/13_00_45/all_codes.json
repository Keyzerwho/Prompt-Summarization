{
    "0": "\n    t = int(input())\n    for i in range(t):\n        x, r, a, b = map(int, input().split())\n        if (a-b)%(2*r) == 0:\n            print(int((a-b)/(2*r)))\n        else:\n            print(int((a-b)/(2*r))+1)",
    "1": "\n    T = int(input())\n    for i in range(T):\n        X, R, A, B = map(int, input().split())\n        if A > B:\n            A, B = B, A\n        if A == B:\n            print(0)\n        else:\n            if (X*B) % (A-B) == 0:\n                print(int((X*B) // (A-B)))\n            else:\n                print(int((X*B) // (A-B)) + 1)\n",
    "2": "\n    k = int(input())\n    n = int(input())\n    G = [['N' for i in range(n)] for j in range(n)]\n    for i in range(n):\n        G[i][i] = 'Y'\n    for i in range(n):\n        G[i] = list(input())\n    print(n)\n    for i in range(n):\n        print(''.join(G[i]))",
    "3": "\n    k = int(input())\n    n = int(input())\n    matrix = []\n    for i in range(n):\n        matrix.append(list(input()))\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j] == 'Y':\n                matrix[j][i] = 'Y'\n    for i in range(n):\n        matrix[i][i] = 'N'\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j] == 'Y':\n                for k in range(n):\n                    if matrix[j][k] == 'Y':\n                        matrix[i][k] = 'Y'\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j] == 'Y':\n                matrix[j][i] = 'Y'\n    for i in range(n):\n        matrix[i][i] = 'N'\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j] == 'Y':\n                for k in range(n):\n                    if matrix[j][k] == 'Y':\n                        matrix[i][k] = 'Y'\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j] == 'Y':\n                for k in range(n):\n                    if matrix[j][k] == 'Y':\n                        matrix[i][k] = 'Y'\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j] == 'Y':\n                for k in range(n):\n                    if matrix[j][k] == 'Y':\n                        matrix[i][k] = 'Y'\n    for i in range(n):\n        for j in range(n):\n            if matrix[i][j] == 'Y':\n                for k in range(n):\n                    if matrix[j][k] == 'Y':\n                        matrix[i][k] = 'Y'\n    for i in range",
    "4": "\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        print(n//2)\n        for i in range(n//2):\n            print(2*i+1, 2*i+2)\n",
    "5": "\n    n = int(input())\n    if n == 1:\n        print(0)\n    else:\n        print(n//2)\n        for i in range(n//2):\n            print(2*i+1, 2*i+2)\n",
    "6": "\n    t = int(input())\n    for i in range(t):\n        s = input()\n        if \"berhampore\" in s.lower():\n            if \"serampore\" in s.lower():\n                print(\"Both\")\n            else:\n                print(\"GCETTB\")\n        elif \"serampore\" in s.lower():\n            print(\"GCETTS\")\n        else:\n            print(\"Others\")",
    "7": "\n    t = int(input())\n    for i in range(t):\n        s = input()\n        if \"berhampore\" in s.lower():\n            print(\"GCETTB\")\n        elif \"serampore\" in s.lower():\n            print(\"GCETTS\")\n        else:\n            print(\"Others\")",
    "8": "\n    n, k = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = 0\n    for i in range(n):\n        curr_sum = arr[i]\n        for j in range(i+1, n):\n            curr_sum += arr[j]\n            if curr_sum > k:\n                break\n            ans += 1\n    print(ans)\n",
    "9": "\n    n, k = map(int, input().split())\n    prices = list(map(int, input().split()))\n    prices.sort()\n    count = 0\n    for i in prices:\n        if k - i >= 0:\n            count += 1\n            k -= i\n        else:\n            break\n    print(count)\n",
    "10": "\n    string = input()\n    if len(string)%2 == 0:\n        print(string[:len(string)//2]+string[:len(string)//2][::-1])\n    else:\n        print(string[:len(string)//2]+string[:len(string)//2-1][::-1])\n",
    "11": "\n    A = input()\n    B = A[::-1]\n    print(B)",
    "12": "\n    n = int(input())\n    s = list(map(int, input().split()))\n    s.sort()\n    max_lucky = 0\n    for i in range(n-1):\n        max_lucky = max(max_lucky, s[i]^s[i+1])\n    print(max_lucky)\n",
    "13": "\n    n = int(input())\n    s = list(map(int, input().split()))\n    s.sort()\n    ans = 0\n    for i in range(n-1):\n        ans = max(ans, s[i]^s[i+1])\n    print(ans)\n",
    "14": "\n        \n        pass\n\n\nif __name__ == '__main__':\n    assert Solution().minCameraCover(0) == 0",
    "15": "\n        def dfs(node):\n            if not node:\n                return 0, 0, float(\"inf\")\n            L = dfs(node.left)\n            R = dfs(node.right)\n            dp0 = L[1] + R[1]\n            dp1 = min(L[2] + min(R[1:]), R[2] + min(L[1:]))\n            dp2 = 1 + min(L) + min(R)\n            return dp0, dp1, dp2\n        return min(dfs(root)[1:])",
    "16": "\n    T = int(input())\n    for i in range(T):\n        R, C = map(int, input().split())\n        matrix = []\n        for j in range(R):\n            matrix.append(input())\n        if \"spoon\" in matrix or \"SPOON\" in matrix:\n            print(\"There is a spoon!\")\n        else:\n            print(\"There is indeed no spoon!\")\n",
    "17": "\n    testCases = int(input())\n    for i in range(testCases):\n        rows, columns = map(int, input().split())\n        matrix = []\n        for j in range(rows):\n            matrix.append(input())\n        if \"spoon\" in \"\".join(matrix).lower():\n            print(\"There is a spoon!\")\n        else:\n            print(\"There is indeed no spoon!\")",
    "18": "\n    n, m = map(int, input().split())\n    b = list(map(int, input().split()))\n    g = list(map(int, input().split()))\n    if max(b) > min(g):\n        print(-1)\n    else:\n        print(sum(b) + sum(g) - max(b) - max(g))\n",
    "19": "\n    n, m = map(int, input().split())\n    b = list(map(int, input().split()))\n    g = list(map(int, input().split()))\n    if min(b) > max(g):\n        print(-1)\n    else:\n        print(min(b) * m + sum(b))\n"
}