{
    "0": "\n    h = int(input())\n    a = list(map(int, input().split()))\n    if len(a) != h + 1:\n        print(\"Wrong input\")\n        return\n    if h == 1:\n        print(\"perfect\")\n        return\n    if h == 2:\n        if a[1] == a[2]:\n            print(\"perfect\")\n            return\n        else:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n    if h == 3:\n        if a[1] == a[2] == a[3]:\n            print(\"perfect\")\n            return\n        if a[1] == a[2] and a[3] == a[4]:\n            print(\"perfect\")\n            return\n        if a[1] == a[2] and a[3] != a[4]:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n        if a[1] != a[2] and a[3] == a[4]:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n        if a[1] != a[2] and a[3] != a[4]:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n    if h == 4:\n        if a[1] == a[2] == a[3] == a[4]:\n            print(\"perfect\")\n            return\n        if a[1] == a[2] == a[3] and a[4] == a[5]:\n            print(\"perfect\")\n            return\n        if a[1] == a[2] == a[3] and a[4] != a[5]:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n        if a[1] == a[2] and a[3] == a[4] == a[5]:\n            print(\"perfect\")\n            return\n        if a[1] == a[2] and a[3] == a[4] and a[5] == a[6]:\n            print(\"perfect\")\n            return\n        if a[1] == a[2] and a[3] == a[4] and a[5] != a[6]:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n        if a[1] == a[2] and a[3] != a[4] and a[5] == a[6]:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n        if a[1] == a[2] and a[3] != a[4] and a[5] != a[6]:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n        if a[1] != a[2] and a[3] == a[4] == a[5]:\n            print(\"perfect\")\n            return\n        if a[1] != a[2] and a[3] == a[4] and a[5] == a[6]:\n            print(\"perfect\")\n            return\n        if a[1] != a[2] and a[3] == a[4] and a[5] != a[6]:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n        if a[1] != a[2] and a[3] != a[4] and a[5] == a[6]:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n        if a[",
    "1": "\n    h = int(input())\n    a = list(map(int, input().split()))\n    if len(a) != h + 1:\n        print(\"Incorrect input\")\n        return\n    if h == 1:\n        print(\"perfect\")\n        return\n    if h == 2:\n        if a[1] == 1:\n            print(\"perfect\")\n            return\n        else:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n    if h == 3:\n        if a[1] == 1 and a[2] == 1:\n            print(\"perfect\")\n            return\n        elif a[1] == 1 and a[2] == 2:\n            print(\"perfect\")\n            return\n        elif a[1] == 2 and a[2] == 1:\n            print(\"perfect\")\n            return\n        else:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n    if h == 4:\n        if a[1] == 1 and a[2] == 1 and a[3] == 1:\n            print(\"perfect\")\n            return\n        elif a[1] == 1 and a[2] == 2 and a[3] == 1:\n            print(\"perfect\")\n            return\n        elif a[1] == 1 and a[2] == 1 and a[3] == 2:\n            print(\"perfect\")\n            return\n        elif a[1] == 2 and a[2] == 1 and a[3] == 1:\n            print(\"perfect\")\n            return\n        else:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n    if h == 5:\n        if a[1] == 1 and a[2] == 1 and a[3] == 1 and a[4] == 1:\n            print(\"perfect\")\n            return\n        elif a[1] == 1 and a[2] == 2 and a[3] == 1 and a[4] == 1:\n            print(\"perfect\")\n            return\n        elif a[1] == 1 and a[2] == 1 and a[3] == 2 and a[4] == 1:\n            print(\"perfect\")\n            return\n        elif a[1] == 1 and a[2] == 1 and a[3] == 1 and a[4] == 2:\n            print(\"perfect\")\n            return\n        elif a[1] == 2 and a[2] == 1 and a[3] == 1 and a[4] == 1:\n            print(\"perfect\")\n            return\n        else:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1, 3, 2)\n            return\n    if h == 6:\n        if a[1] == 1 and a[2] == 1 and a[3] == 1 and a[4] == 1 and a[5] == 1:\n            print(\"perfect\")\n            return\n        elif a[1] == 1 and a[2] == 2 and a[3] == 1 and a[4] == 1 and a[5] == 1:\n            print(\"perfect\")\n            return\n        elif a[1] == 1 and a[2] == 1 and a[3] == 2 and a[4] == 1 and a[5] == 1:\n            print(\"perfect\")\n            return\n        elif a[1] == 1 and a[2] == 1 and a[3] == 1 and a[4] == 2 and a[5] == 1:\n            print(\"perfect\")\n            return\n        elif a[1] == 1 and a[2] == 1 and a[3] == 1 and a[4] == 1 and a[5] == 2:\n            print(\"perfect\")\n            return\n        elif a[1] == 2 and a[2] == 1 and a[3] == 1 and a[4] == 1 and a[5] == 1:\n            print(\"perfect\")\n            return\n        else:\n            print(\"ambiguous\")\n            print(0, 1, 1, 3, 3)\n            print(0, 1, 1",
    "2": "\n    return strng.count(letter)",
    "3": "\n    return strng.count(letter)",
    "4": "\n    return ''.join(str(ord(c)-96) for c in string.lower() if c.isalpha())",
    "5": "\n    return ''.join(str(ord(c)-96) for c in string.lower())",
    "6": "\n    # return a sorted array.\n    return sorted(value)\n\nif __name__ == '__main__':\n    print sort_array([5, 3, 2, 8, 1, 4])\n    print sort_array([5, 3, 1, 8, 0])",
    "7": "\n    return sorted(value)",
    "8": "\n    factorial = [1, 1, 2, 6, 24, 120, 720, 5040, 40320, 362880]\n    sum = 0\n    for i in str(number):\n        sum += factorial[int(i)]\n    return \"STRONG!!!!\" if sum == number else \"Not Strong !!\"\n\nprint(strong_num(1))\nprint(strong_num(2))\nprint(strong_num(150))",
    "9": "\n    return \"STRONG!!!!\" if sum(factorial(int(i)) for i in str(number)) == number else \"Not Strong !!\"\n",
    "10": "\n    n = int(input())\n    if n == 1:\n        print(\"YES\")\n        print(1)\n    elif n == 2:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n        print(*[i for i in range(1, 2*n+1)])\n",
    "11": "\n    n = int(input())\n    if n == 1:\n        print(\"YES\")\n        print(1)\n    elif n == 2:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n        print(*list(range(1, 2*n, 2)) + list(range(2, 2*n, 2)))\n",
    "12": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        p = 1\n        q = 1\n        for j in range(2, n+1):\n            if is_prime(j):\n                p *= j\n                q *= j-1\n        print(str(p) + \"/\" + str(q))\n\ndef is_prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0 or n <= 1:\n        return False\n    sqr = int(math.sqrt(n)) + 1\n    for divisor in range(3, sqr, 2):\n        if n % divisor == 0:\n            return False\n    return True\n",
    "13": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        p = 1\n        q = 1\n        for j in range(2, n+1):\n            if is_prime(j):\n                p *= j\n                q *= j-1\n        print(str(p) + \"/\" + str(q))\n\ndef is_prime(n):\n    if n == 2:\n        return True\n    if n % 2 == 0 or n <= 1:\n        return False\n    sqr = int(math.sqrt(n)) + 1\n    for divisor in range(3, sqr, 2):\n        if n % divisor == 0:\n            return False\n    return True\n",
    "14": "\n    x, y = ord(pos[0]) - ord('a') + 1, int(pos[1])\n    res = []\n    for i in range(-2, 3):\n        for j in range(-2, 3):\n            if abs(i) + abs(j) == 3:\n                if 1 <= x + i <= 8 and 1 <= y + j <= 8:\n                    res.append(chr(ord('a') + x + i - 1) + str(y + j))\n    return sorted(res)\n\nprint(possible_positions(\"a1\"))",
    "15": "\n    x, y = ord(pos[0]) - 96, int(pos[1])\n    positions = []\n    for i in range(-2, 3):\n        for j in range(-2, 3):\n            if abs(i) + abs(j) == 3:\n                if 1 <= x + i <= 8 and 1 <= y + j <= 8:\n                    positions.append(chr(x + i + 96) + str(y + j))\n    return sorted(positions)",
    "16": "\n    if not search_text:\n        return 0\n    if not allow_overlap:\n        return full_text.count(search_text)\n    count = 0\n    for i in range(len(full_text)):\n        if full_text[i:i+len(search_text)] == search_text:\n            count += 1\n    return count\n\nprint(search_substr('aa_bb_cc_dd_bb_e', 'bb'))\nprint(search_substr('aaabbbcccc', 'bbb'))\nprint(search_substr( 'aaa', 'aa' ))\nprint(search_substr( 'aaa', '' ))\nprint(search_substr( 'aaa', 'aa', False ))",
    "17": "\n    if not search_text:\n        return 0\n    if allow_overlap:\n        return len([i for i in range(len(full_text)) if full_text[i:].startswith(search_text)])\n    else:\n        return len(set([i for i in range(len(full_text)) if full_text[i:].startswith(search_text)]))",
    "18": "\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    a.reverse()\n    max_rem = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            if a[i] % a[j] > max_rem:\n                max_rem = a[i] % a[j]\n    print(max_rem)\n",
    "19": "\n    n = int(input())\n    a = list(map(int, input().split()))\n    a.sort()\n    ans = 0\n    for i in range(n-1):\n        ans = max(ans, a[i]%a[i+1])\n    print(ans)\n"
}