{
    "0": "\n    return ' '.join(map(lambda x: x[:-5] + x[-5:].replace('a', 'o').replace('e', 'u').replace('i', 'y').replace('o', 'a').replace('u', 'e').replace('y', 'i') if x[-5:] == '-kont' else x, s.split()))",
    "1": "\n    return ' '.join(map(kontti_word, s.split()))\n\ndef kontti_word(w):\n    if 'aeiouy' in w:\n        return w[-1] + w[:-1]\n    else:\n        return w",
    "2": "\n    T = int(input())\n    for i in range(T):\n        A,B,C = map(int,input().split())\n        if A+B+C == 180:\n            print(\"YES\")\n        else:\n            print(\"NO\")",
    "3": "\n    n = int(input())\n    for i in range(n):\n        a,b,c = map(int,input().split())\n        if a+b+c == 180:\n            print(\"YES\")\n        else:\n            print(\"NO\")",
    "4": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        a = list(map(int, input().split()))\n        a.sort()\n        if a[n] == 1:\n            print(n)\n        else:\n            print(n-1)\n",
    "5": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        jars = list(map(int, input().split()))\n        if sum(jars) % 2 == 0:\n            print(0)\n        else:\n            print(2)\n",
    "6": "\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        print(N*N - (N-2)*(N-2))\n",
    "7": "\n    # Create a list of lists to represent the chessboard\n    chessboard = []\n    for i in range(8):\n        chessboard.append([])\n        for j in range(8):\n            chessboard[i].append(0)\n\n    # Create a list to store the number of squares with odd side length\n    squares = []\n\n    # Loop through the chessboard and count the number of squares with odd side length\n    for i in range(8):\n        for j in range(8):\n            if i % 2 == 0:\n                if j % 2 == 0:\n                    chessboard[i][j] = 1\n            else:\n                if j % 2 == 1:\n                    chessboard[i][j] = 1\n\n    # Loop through the chessboard and add the number of squares with odd side length to the list\n    for i in range(8):\n        for j in range(8):\n            if chessboard[i][j] == 1:\n                squares.append(chessboard[i][j])\n\n    # Print the number of squares with odd side length\n    print(sum(squares))\n",
    "8": "\n    newName = \"\"\n    for i in range(len(name)):\n        if name[i].isupper():\n            if i != 0:\n                newName += \"_\"\n            newName += name[i].lower()\n        else:\n            newName += name[i]\n    return newName\n\nprint(toUnderScore(\"ThisIsAUnitTest\"))\nprint(toUnderScore(\"Calculate15Plus5Equals20\"))\nprint(toUnderScore(\"This_Is_Already_Split_Correct\"))\nprint(toUnderScore(\"ThisIs_Not_SplitCorrect\"))\nprint(toUnderScore(\"_UnderscoreMarked_Test_Name_\"))",
    "9": "\n    if name == \"\":\n        return \"\"\n    if name[0] == \"_\" and name[-1] == \"_\":\n        return name\n    if name[0] == \"_\":\n        return name[1:]\n    if name[-1] == \"_\":\n        return name[:-1]\n    if name.isupper():\n        return name\n    if name.islower():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.isalpha():\n        return name\n    if name.isdigit():\n        return name\n    if name.isalnum():\n        return name\n    if name.",
    "10": "\n    T = int(input())\n    for i in range(T):\n        K = int(input())\n        if K == 1:\n            print(K)\n        else:\n            for j in range(K):\n                if j == 0:\n                    print(K, end=\"\")\n                else:\n                    print(K-j, end=\"\")\n                    for k in range(j):\n                        print(K-j, end=\"\")\n                    print()\n",
    "11": "\n    T = int(input())\n    for i in range(T):\n        K = int(input())\n        for j in range(1, K+1):\n            print(j, end=\"\")\n        for j in range(K-1, 0, -1):\n            print(j, end=\"\")\n        print()",
    "12": "\n    n = int(input())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = 0\n    for i in range(n-1):\n        ans += abs(arr[i] - arr[i+1])\n    print(ans)\n",
    "13": "\n    n = int(input())\n    strengths = list(map(int, input().split()))\n    strengths.sort()\n    total = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            total += abs(strengths[i] - strengths[j])\n    print(total)\n",
    "14": "\n    ",
    "15": "\n    ",
    "16": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        s = input()\n        if n % 2 == 0:\n            if s.count('0') == n / 2:\n                print(0)\n            else:\n                print(1)\n        else:\n            print(2)\n",
    "17": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        s = input()\n        if n % 2 == 0:\n            if s[:n//2] == s[n//2:]:\n                print(0)\n            else:\n                print(1)\n        else:\n            print(2)\n",
    "18": "\n    for i in range(len(a)):\n        if a[i] == 1:\n            for j in range(i):\n                a[j] = 1 - a[j]\n    return a",
    "19": "\n    for i in range(len(a)):\n        if a[i] == 1:\n            for j in range(i):\n                a[j] = 1 - a[j]\n    return a"
}