{
    "id": "cmpl-4BCtOHsTp40k52jaiWNcaqS2gMjvN",
    "object": "text_completion",
    "created": 1638576514,
    "model": "davinci-codex:2021-08-03",
    "choices": [
        {
            "text": "\n        if not root:\n            return []\n        res = []\n        self.dfs(root, sum, [], res)\n        return res\n    \n    def dfs(self, root, sum, ls, res):\n        if not root.left and not root.right and sum == root.val:\n            ls.append(root.val)\n            res.append(ls)\n        if root.left:\n            self.dfs(root.left, sum-root.val, ls+[root.val], res)\n        if root.right:\n            self.dfs(root.right, sum-root.val, ls+[root.val], res)",
            "index": 0,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n        if not root:\n            return []\n        res = []\n        self.dfs(root, sum, [], res)\n        return res\n    \n    def dfs(self, root, sum, ls, res):\n        if not root.left and not root.right and sum == root.val:\n            ls.append(root.val)\n            res.append(ls)\n        if root.left:\n            self.dfs(root.left, sum-root.val, ls+[root.val], res)\n        if root.right:\n            self.dfs(root.right, sum-root.val, ls+[root.val], res)",
            "index": 1,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        if n == 1:\n            print(1)\n        elif n == 2:\n            print(2)\n        else:\n            print(((n-1)*(n))//2)\n\ncode()",
            "index": 2,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        if n == 1:\n            print(1)\n        elif n == 2:\n            print(2)\n        else:\n            print((n-1)*(n-2)%1000000007)\ncode()",
            "index": 3,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    string = input()\n    if len(string) == 1:\n        print(0)\n    else:\n        count = 0\n        for i in range(len(string)//2):\n            if string[i] != string[-i-1]:\n                count += 1\n        if count == 0:\n            print(0)\n        else:\n            print(count)\n\ncode()",
            "index": 4,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    string = input()\n    if string == string[::-1]:\n        print(0)\n    else:\n        for i in range(len(string)):\n            if string[i] != string[len(string)-1-i]:\n                string = string[:i] + string[len(string)-1-i] + string[i+1:]\n                if string == string[::-1]:\n                    print(i)\n                    break\n        else:\n            print(-1)\n\ncode()",
            "index": 5,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n = int(input())\n    count = 0\n    for i in range(10**(n-1),10**n):\n        if i == 1:\n            continue\n        else:\n            flag = 0\n            for j in str(i):\n                if int(j) == 1:\n                    flag = 1\n                    break\n                else:\n                    continue\n            if flag == 0:\n                if i == reduce(lambda x,y:x*y,map(int,str(i))):\n                    count += 1\n            else:\n                if i == reduce(lambda x,y:x*y,map(int,str(i).replace('1',''))):\n                    count += 1\n    print(count,end = \" \")\n    count = 0\n    for i in range(10**(n-1),10**n):\n        if i == 1:\n            continue\n        else:\n            flag = 0\n            for j in str(i):\n                if int(j) == 1:\n                    flag = 1\n                    break\n                else:\n                    continue\n            if flag == 1:\n                if i == reduce(lambda x,y:x*y,map(int,str(i))):\n                    count += 1\n            else:\n                if i == reduce(lambda x,y:x*y,map(int,str(i).replace('1',''))):\n                    count += 1\n    print(count)\ncode()",
            "index": 6,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n = int(input())\n    count = 0\n    for i in range(10**(n-1),10**n):\n        if i%3==0 and '1' not in str(i):\n            count+=1\n        elif i%3==0 and '1' in str(i):\n            count+=20\n    print(count)\ncode()",
            "index": 7,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        k = int(input())\n        if n%k == 0:\n            print(\"YES\")\n        else:\n            print(\"NO\")\ncode()",
            "index": 8,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        k = int(input())\n        if n%k == 0:\n            print(\"YES\")\n        else:\n            print(\"NO\")\ncode()",
            "index": 9,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        n, d = [int(x) for x in input().split()]\n        arr = [int(x) for x in input().split()]\n        max_val = arr[0]\n        for j in range(d):\n            for k in range(n):\n                if arr[k] > max_val:\n                    max_val = arr[k]\n                if k < n-1:\n                    if arr[k] > arr[k+1]:\n                        arr[k] = arr[k] - arr[k+1]\n                        arr[k+1] = 0\n                    else:\n                        arr[k+1] = arr[k+1] - arr[k]\n                        arr[k] = 0\n        print(max_val)\ncode()",
            "index": 10,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        n, d = map(int, input().split())\n        a = list(map(int, input().split()))\n        for j in range(d):\n            for k in range(n):\n                if a[k] > 0:\n                    if k == 0:\n                        if a[k] >= 2:\n                            a[k] -= 2\n                            a[k+1] += 1\n                        else:\n                            a[k] -= 1\n                            a[k+1] += 1\n                    elif k == n-1:\n                        if a[k] >= 2:\n                            a[k] -= 2\n                            a[k-1] += 1\n                        else:\n                            a[k] -= 1\n                            a[k-1] += 1\n                    else:\n                        if a[k] >= 3:\n                            a[k] -= 3\n                            a[k-1] += 1\n                            a[k+1] += 1\n                        elif a[k] == 2:\n                            a[k] -= 2\n                            a[k-1] += 1\n                            a[k+1] += 1\n                        else:\n                            a[k] -= 1\n                            a[k-1] += 1\n                            a[k+1] += 1\n        print(a[0])\n\ncode()",
            "index": 11,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    s = input()\n    if s.count('ab') == 0:\n        print(0)\n    else:\n        print(s.count('ab') + 1)\n\ncode()",
            "index": 12,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    s = input()\n    if s.count(\"ab\") == 0:\n        print(0)\n    else:\n        print(s.count(\"ab\") * 2 - 1)\n\ncode()",
            "index": 13,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    return [i for i in l if type(i) == int]",
            "index": 14,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    return [i for i in l if type(i) == int]",
            "index": 15,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    words = x.split()\n    scores = []\n    for word in words:\n        score = 0\n        for letter in word:\n            score += ord(letter) - 96\n        scores.append(score)\n    return words[scores.index(max(scores))]",
            "index": 16,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    words = x.split()\n    scores = []\n    for word in words:\n        score = 0\n        for letter in word:\n            score += ord(letter) - 96\n        scores.append(score)\n    return words[scores.index(max(scores))]",
            "index": 17,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        s = input()\n        n = int(input())\n        arr = input().split()\n        flag = 0\n        for i in s:\n            if i in arr:\n                flag = 1\n            else:\n                flag = 0\n                break\n        if flag == 1:\n            print(1)\n        else:\n            print(0)\ncode()",
            "index": 18,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        s = input()\n        n = int(input())\n        arr = input().split()\n        flag = 0\n        for i in s:\n            if i not in arr:\n                flag = 1\n                break\n        if flag == 1:\n            print(0)\n        else:\n            print(1)\n\ncode()",
            "index": 19,
            "logprobs": null,
            "finish_reason": "stop"
        }
    ]
}