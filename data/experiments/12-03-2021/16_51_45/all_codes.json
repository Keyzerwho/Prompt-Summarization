{
    "0": "\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    q = list(map(int, input().split()))\n    for i in range(m):\n        for j in range(n):\n            if q[i] <= sum(a[:j+1]):\n                print(j+1)\n                break\n",
    "1": "\n    n = int(input())\n    a = list(map(int, input().split()))\n    m = int(input())\n    q = list(map(int, input().split()))\n    for i in range(m):\n        for j in range(n):\n            if q[i] <= sum(a[:j+1]):\n                print(j+1)\n                break\n",
    "2": "\n    s = input()\n    if len(s) == 1:\n        print(s)\n    else:\n        s = list(s)\n        for i in range(len(s)):\n            if s[i] == 'z':\n                s[i] = 'a'\n            else:\n                s[i] = chr(ord(s[i]) + 1)\n                break\n        print(''.join(s))\n",
    "3": "\n    s = input()\n    s = list(s)\n    for i in range(len(s)):\n        if s[i] == 'z':\n            s[i] = 'a'\n        else:\n            s[i] = chr(ord(s[i]) + 1)\n            break\n    print(''.join(s))\n",
    "4": "\n    s = input()\n    m = int(input())\n    for i in range(m):\n        l, r = map(int, input().split())\n        print(s[l:r+1].count('(') - s[l:r+1].count(')'))\n",
    "5": "\n    s = input()\n    m = int(input())\n    for i in range(m):\n        l, r = map(int, input().split())\n        print(s[l-1:r].count(\"(\"))\n",
    "6": "\n    R, C, N = map(int, input().split())\n    points = []\n    for i in range(N):\n        points.append(list(map(int, input().split())))\n    for i in range(N):\n        for j in range(i+1, N):\n            if points[i][0] == points[j][0] and points[i][1] == points[j][1]:\n                print(\"NO\")\n                return\n    print(\"YES\")\n",
    "7": "\n    ",
    "8": "\n    if x == 0:\n        return 0\n    elif x == 1:\n        return 1\n    else:\n        return rec(x-1) + x\n\ndef recaman(n):\n    if n == 0:\n        return 0\n    else:\n        return recaman(n-1) - rec(n-1)\n\ndef recaman_sequence(n):\n    return [recaman(x) for x in range(n)]\n\nif __name__ == \"__main__\":\n    print(recaman_sequence(10))",
    "9": "\n    if x == 0:\n        return 0\n    elif x == 1:\n        return 1\n    else:\n        return rec(x-1) + x if rec(x-1) + x > 0 else rec(x-1) - x\n\ndef recaman(n):\n    return sum(rec(x) for x in range(n))\n\ndef test_recaman():\n    assert recaman(0) == 0\n    assert recaman(1) == 0\n    assert recaman(2) == 1\n    assert recaman(3) == 4\n    assert recaman(4) == 10\n    assert recaman(5) == 12\n    assert recaman(6) == 15\n    assert recaman(7) == 20\n    assert recaman(8) == 27\n    assert recaman(9) == 34\n    assert recaman(10) == 43\n    assert recaman(11) == 52\n    assert recaman(12) == 61\n    assert recaman(13) == 70\n    assert recaman(14) == 79\n    assert recaman(15) == 90\n    assert recaman(16) == 101\n    assert recaman(17) == 112\n    assert recaman(18) == 123\n    assert recaman(19) == 134\n    assert recaman(20) == 145\n    assert recaman(21) == 156\n    assert recaman(22) == 167\n    assert recaman(23) == 178\n    assert recaman(24) == 189\n    assert recaman(25) == 200\n    assert recaman(26) == 211\n    assert recaman(27) == 222\n    assert recaman(28) == 233\n    assert recaman(29) == 244\n    assert recaman(30) == 255\n    assert recaman(31) == 266\n    assert recaman(32) == 277\n    assert recaman(33) == 288\n    assert recaman(34) == 299\n    assert recaman(35) == 310\n    assert recaman(36) == 321\n    assert recaman(37) == 332\n    assert recaman(38) == 343\n    assert recaman(39) == 354\n    assert recaman(40) == 365\n    assert recaman(41) == 376\n    assert recaman(42) == 387\n    assert recaman(43) == 398\n    assert recaman(44) == 409\n    assert recaman(45) == 420\n    assert recaman(46) == 431\n    assert recaman(47) == 442\n    assert recaman(48) == 453\n    assert recaman(49) == 464\n    assert recaman(50) == 475\n    assert recaman(51) == 486\n    assert recaman(52) == 497\n    assert recaman(53) == 508\n    assert recaman(54) == 519\n    assert recaman(55) == 530\n    assert recaman(56) == 541\n    assert recaman(57) == 552\n    assert recaman(58) == 563\n    assert recaman(59) == 574\n    assert recaman(60) == 585\n    assert recaman(61) == 596\n    assert recaman(62) == 607\n    assert recaman(63) == 618\n    assert recaman(64) == 629\n    assert recaman(65) == 640\n    assert recaman(66) == 651\n    assert recaman(67) == 662\n    assert recaman(68) == 673\n    assert recaman(69) == 684\n    assert recaman(70) == 695\n    assert recaman(71) == 706\n    assert recaman(72) == 717\n    assert recaman(73) == 728\n    assert recaman(74) == 739\n    assert recaman(75) == 750\n    assert recaman(76) == 761\n    assert recaman(77) == 772\n    assert recaman(78) == 783\n    assert recaman(79) == 794\n    assert recaman(80) == 805\n    assert recaman(81) == 816\n    assert recaman(82) == 827\n    assert recaman(83) == 838\n    assert recaman(84) == 849\n    assert recaman(85) == 860\n    assert recaman(86) == 871\n    assert recaman(87) == 882\n    assert recaman(88) == 893\n    assert recaman",
    "10": "\n    return [int(x) for x in s.split(',')]",
    "11": "\n    return [int(x) for x in s.split(',') if x]",
    "12": "\n    num = ord(number) - ord('A')\n    return [f'{chr(i + ord(\"A\"))} + {chr(num - i + ord(\"A\"))}' for i in range(num + 1)]",
    "13": "\n    return [f'{chr(ord(\"A\") + i)} + {chr(ord(\"A\") + j)}' for i in range(26) for j in range(26) if i + j == ord(number) - ord(\"A\")]",
    "14": "\n    q = int(input())\n    for i in range(q):\n        c, m, x = map(int, input().split())\n        print(min(c, m, x))\n",
    "15": "\n    q = int(input())\n    for i in range(q):\n        c, m, x = map(int, input().split())\n        if c == 0:\n            print(m+x)\n        elif m == 0:\n            print(c+x)\n        elif x == 0:\n            print(c+m)\n        else:\n            print(c+m+x-min(c, m, x))\n",
    "16": "\n    q = int(input())\n    for i in range(q):\n        l, r, k = map(int, input().split())\n        count = 0\n        for j in range(l, r+1):\n            if g(j) == k:\n                count += 1\n        print(count)\n\ndef g(n):\n    if n < 10:\n        return n\n    else:\n        return g(f(n))\n\ndef f(n):\n    if n < 10:\n        return n\n    else:\n        return f(n//10) * (n % 10)\n",
    "17": "\n    q = int(input())\n    for i in range(q):\n        l, r, k = map(int, input().split())\n        count = 0\n        for j in range(l, r+1):\n            if g(j) == k:\n                count += 1\n        print(count)\n\ndef f(n):\n    if n < 10:\n        return n\n    else:\n        return f(f(n//10))*(n%10)\n\ndef g(n):\n    if n < 10:\n        return n\n    else:\n        return g(f(n))\n",
    "18": "\n    V.sort()\n    count = 0\n    for i in range(len(V) - 2):\n        k = i + 2\n        for j in range(i + 1, len(V) - 1):\n            while k < len(V) and V[i] + V[j] > V[k]:\n                k += 1\n            count += k - j - 1\n    return count",
    "19": "\n    V.sort()\n    count = 0\n    for i in range(len(V) - 2):\n        k = i + 2\n        for j in range(i + 1, len(V) - 1):\n            while k < len(V) and V[i] + V[j] > V[k]:\n                k += 1\n            count += k - j - 1\n    return count"
}