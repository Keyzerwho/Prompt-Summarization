{
    "id": "cmpl-4BAutp0CrFdjy2EoUKKPmoaWXprJj",
    "object": "text_completion",
    "created": 1638568919,
    "model": "davinci-codex:2021-08-03",
    "choices": [
        {
            "text": "\n    # your code here\n    return 0",
            "index": 0,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    if len(urinals) > 20:\n        return -1\n    if len(urinals) == 0:\n        return 0\n    if len(urinals) == 1:\n        if urinals == '0':\n            return 1\n        else:\n            return 0\n    if len(urinals) == 2:\n        if urinals == '00':\n            return 2\n        elif urinals == '01':\n            return 1\n        else:\n            return 0\n    if len(urinals) == 3:\n        if urinals == '000':\n            return 3\n        elif urinals == '001':\n            return 2\n        elif urinals == '010':\n            return 1\n        else:\n            return 0\n    if len(urinals) == 4:\n        if urinals == '0000':\n            return 4\n        elif urinals == '0001':\n            return 3\n        elif urinals == '0010':\n            return 2\n        elif urinals == '0011':\n            return 1\n        else:\n            return 0\n    if len(urinals) == 5:\n        if urinals == '00000':\n            return 5\n        elif urinals == '00001':\n            return 4\n        elif urinals == '00010':\n            return 3\n        elif urinals == '00011':\n            return 2\n        elif urinals == '00100':\n            return 1\n        else:\n            return 0\n    if len(urinals) == 6:\n        if urinals == '000000':\n            return 6\n        elif urinals == '000001':\n            return 5\n        elif urinals == '000010':\n            return 4\n        elif urinals == '000011':\n            return 3\n        elif urinals == '000100':\n            return 2\n        elif urinals == '000101':\n            return 1\n        else:\n            return 0\n    if len(urinals) == 7:\n        if urinals == '0000000':\n            return 7\n        elif urinals == '0000001':\n            return 6\n        elif urinals == '0000010':\n            return 5\n        elif urinals == '0000011':\n            return 4\n        elif urinals == '0000100':\n            return 3\n        elif urinals == '0000101':\n            return 2\n        elif urinals == '0000110':\n            return 1\n        else:\n            return 0\n    if len(urinals) == 8:\n        if urinals == '00000000':\n            return 8\n        elif urinals == '00000001':\n            return 7\n        elif urinals == '00000010':\n            return 6\n        elif urinals == '00000011':\n            return 5\n        elif urinals == '00000100':\n            return 4\n        elif urinals == '00000101':\n            return 3\n        elif urinals == '00000110':\n            return 2\n        elif urinals == '00000111':\n            return 1\n        else:\n            return 0\n    if len(urinals) == 9:\n        if urinals == '000000000':\n            return 9\n        elif urinals == '000000001':\n            return 8\n        elif urinals == '000000010':\n            return 7\n        elif urinals == '000000011':\n            return 6\n        elif urinals == '000000100':\n            return 5\n        elif urinals == '000000101':\n            return 4\n        elif urinals == '000000110':\n            return 3\n        elif urinals == '000000111':\n            return 2\n        elif urinals == '000001000':\n            return 1\n        else:\n            return 0\n    if len(urinals) == 10:\n        if urinals == '0000000000':\n            return 10\n        elif urinals == '0000000001':\n            return 9\n        elif urinals == '0000000010':\n            return 8\n        elif urinals == '0000000011':\n            return 7\n        elif urinals == '0000000100':\n            return 6\n        elif urinals == '0000000101':\n            return 5\n        elif urinals == '0000000110':\n            return 4\n        elif urinals == '0000000111':\n            return 3\n        elif urinals == '0000001000':\n            return 2\n        elif urinals == '0000001001':\n            return 1",
            "index": 1,
            "logprobs": null,
            "finish_reason": "length"
        },
        {
            "text": "\n    n = int(input())\n    for i in range(n):\n        t = int(input())\n        print(sum(map(int, str(2**t))))\n\nif __name__ == '__main__':\n    code()",
            "index": 2,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n = int(input())\n    for i in range(n):\n        t = int(input())\n        sum = 0\n        for j in str(2**t):\n            sum += int(j)\n        print(sum)\ncode()",
            "index": 3,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    ",
            "index": 4,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    if len(args) == 1:\n        return args[0]\n    elif len(args) == 0:\n        return \"\"\n    else:\n        result = \"\"\n        for i in range(max(map(len, args))):\n            for j in args:\n                if i < len(j):\n                    result += j[i]\n        return result",
            "index": 5,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    year += 1\n    while len(set(str(year))) != len(str(year)):\n        year += 1\n    return year\n\nprint(next_happy_year(7712))\nprint(next_happy_year(8989))\nprint(next_happy_year(1001))",
            "index": 6,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    year += 1\n    while len(set(str(year))) != 4:\n        year += 1\n    return year\n",
            "index": 7,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    if text == '' or char == '':\n        return ''\n    else:\n        return char * len(text)",
            "index": 8,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    if text == '' or char == '':\n        return ''\n    else:\n        return char * len(text)\n\n# def contamination(text, char):\n#     return char * len(text) if text and char else ''",
            "index": 9,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        if n < 10:\n            print(\"Thanks for helping Chef!\")\n        else:\n            print(\"-1\")\ncode()",
            "index": 10,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        if n < 10:\n            print(\"Thanks for helping Chef!\")\n        else:\n            print(\"-1\")\ncode()",
            "index": 11,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        s = input()\n        sum = 0\n        for i in s:\n            if i.isdigit():\n                sum += int(i)\n        print(sum)\ncode()",
            "index": 12,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    T = int(input())\n    for i in range(T):\n        S = input()\n        sum = 0\n        for j in S:\n            if j.isdigit():\n                sum += int(j)\n        print(sum)\ncode()",
            "index": 13,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    words = x.split()\n    scores = []\n    for word in words:\n        scores.append(sum([ord(char) - 96 for char in word]))\n    return words[scores.index(max(scores))]",
            "index": 14,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    words = x.split()\n    scores = []\n    for word in words:\n        score = 0\n        for letter in word:\n            score += ord(letter) - 96\n        scores.append(score)\n    return words[scores.index(max(scores))]",
            "index": 15,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        if n % 5 == 0:\n            print(1)\n        else:\n            print(0)\ncode()",
            "index": 16,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        if N % 5 == 0:\n            print(1)\n        else:\n            print(0)\ncode()",
            "index": 17,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    T = int(input())\n    for _ in range(T):\n        N, K = map(int, input().split())\n        if N == 2:\n            print(K)\n        else:\n            print((N-1)*K)\ncode()",
            "index": 18,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        n, k = map(int, input().split())\n        print(n*k)\ncode()",
            "index": 19,
            "logprobs": null,
            "finish_reason": "stop"
        }
    ]
}