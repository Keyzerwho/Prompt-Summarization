{
    "0": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        words = []\n        for j in range(n):\n            words.append(input())\n        if n == 1:\n            print(0)\n        else:\n            if words[0][0] == words[1][-1]:\n                print(1)\n                print(1)\n            else:\n                print(-1)\n",
    "1": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        words = []\n        for j in range(n):\n            words.append(input())\n        if n == 1:\n            print(0)\n        else:\n            if len(words) == len(set(words)):\n                print(0)\n            else:\n                for j in range(n):\n                    for k in range(j+1, n):\n                        if words[j][1:] == words[k][:-1]:\n                            print(2)\n                            print(j+1, k+1)\n                            return\n                print(-1)\n",
    "2": "\n    t = int(input())\n    for i in range(t):\n        p, q = map(int, input().split())\n        while p % q != 0:\n            p += 1\n        print(p)\n",
    "3": "\n    t = int(input())\n    for i in range(t):\n        p, q = map(int, input().split())\n        while p % q == 0:\n            p //= q\n        print(p)\n",
    "4": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        s = input()\n        count = 0\n        for j in range(n-1):\n            if s[j] == s[j+1]:\n                count += 1\n        print(count)",
    "5": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        s = input()\n        count = 0\n        for j in range(n-1):\n            if s[j] == s[j+1]:\n                count += 1\n        print(count)",
    "6": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        arr = list(map(int, input().split()))\n        for i in range(n):\n            if arr[i] == 0:\n                print(i)\n                break\n",
    "7": "\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        A = list(map(int, input().split()))\n        for j in range(N):\n            if A[j] == 1:\n                print(j)\n                break\n",
    "8": "\n    t = int(input())\n    for i in range(t):\n        a, b = map(int, input().split())\n        print(a%b)",
    "9": "\n    t = int(input())\n    for i in range(t):\n        a, b = map(int, input().split())\n        print(a%b)",
    "10": "\n    ",
    "11": "\n    ",
    "12": "\n        # \u627e\u5230\u6240\u6709\u7684\u70b9\u7684x,y\u5750\u6807\n        x_set = set()\n        y_set = set()\n        for x, y in points:\n            x_set.add(x)\n            y_set.add(y)\n        # \u627e\u5230\u6240\u6709\u7684\u70b9\u7684x,y\u5750\u6807\u5bf9\n        xy_set = set()\n        for x in x_set:\n            for y in y_set:\n                xy_set.add((x, y))\n        # \u627e\u5230\u6240\u6709\u7684\u70b9\u7684x,y\u5750\u6807\u5bf9\u7684\u7ec4\u5408\n        xy_combine = set()\n        for x, y in xy_set:\n            for x_, y_ in xy_set:\n                if x != x_ and y != y_:\n                    xy_combine.add((x, y, x_, y_))\n        # \u627e\u5230\u6240\u6709\u7684\u77e9\u5f62\n        min_area = float('inf')\n        for x, y, x_, y_ in xy_combine:\n            if (x, y) in xy_set and (x_, y_) in xy_set:\n                area = abs(x - x_) * abs(y - y_)\n                if area < min_area:\n                    min_area = area\n        return min_area if min_area != float('inf') else 0",
    "13": "\n        # \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u8bb0\u5f55\u4e0b\u4ed6\u7684\u6240\u6709\u53ef\u80fd\u7684x\u548cy\u7684\u503c\uff0c\u7136\u540e\u6bcf\u6b21\u53d6\u4e24\u4e2a\u70b9\uff0c\u5224\u65ad\u4ed6\u4eec\u7684x\u548cy\u7684\u503c\u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u76f8\u7b49\uff0c\u5219\u8ba1\u7b97\u9762\u79ef\n        # \u5982\u679c\u4e0d\u76f8\u7b49\uff0c\u5219\u628a\u8fd9\u4e2a\u70b9\u7684x\u548cy\u7684\u503c\u4ece\u5b57\u5178\u4e2d\u5220\u9664\n        # \u65f6\u95f4\u590d\u6742\u5ea6O(n^2)\n        # \u7a7a\u95f4\u590d\u6742\u5ea6O(n)\n        # \u6267\u884c\u7528\u65f6 :100 ms, \u5728\u6240\u6709 Python3 \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e865.04%\u7684\u7528\u6237\n        # \u5185\u5b58\u6d88\u8017 :13.8 MB, \u5728\u6240\u6709 Python3 \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e865.22%\u7684\u7528\u6237\n        # \u601d\u8def\uff1a\n        # 1. \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u70b9\uff0c\u8bb0\u5f55\u4e0b\u4ed6\u7684\u6240\u6709\u53ef\u80fd\u7684x\u548cy\u7684\u503c\uff0c\u7136\u540e\u6bcf\u6b21\u53d6\u4e24\u4e2a\u70b9\uff0c\u5224\u65ad\u4ed6\u4eec\u7684x\u548cy\u7684\u503c\u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u76f8\u7b49\uff0c\u5219\u8ba1\u7b97\u9762\u79ef\n        # 2. \u5982\u679c\u4e0d\u76f8\u7b49\uff0c\u5219\u628a\u8fd9\u4e2a\u70b9\u7684x\u548cy\u7684\u503c\u4ece\u5b57\u5178\u4e2d\u5220\u9664\n        # 3. \u5982\u679c\u5b57\u5178\u4e3a\u7a7a\uff0c\u5219\u8fd4\u56de0\n        # 4. \u5982\u679c\u5b57\u5178\u4e0d\u4e3a\u7a7a\uff0c\u5219\u8fd4\u56de\u6700\u5c0f\u7684\u9762\u79ef\n        # 5. \u65f6\u95f4\u590d\u6742\u5ea6O(n^2)\n        # 6. \u7a7a\u95f4\u590d\u6742\u5ea6O(n)\n        # 7. \u6267\u884c\u7528\u65f6 :100 ms, \u5728\u6240\u6709 Python3 \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e865.04%\u7684\u7528\u6237\n        # 8. \u5185\u5b58\u6d88\u8017 :13.8 MB, \u5728\u6240\u6709 Python3 \u63d0\u4ea4\u4e2d\u51fb\u8d25\u4e865.22%\u7684\u7528\u6237\n        # \u603b\u7ed3\uff1a\n        # 1. \u53ef\u4ee5\u4f7f\u7528\u5b57\u5178\u6765\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684x\u548cy\u7684\u503c\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u5f88\u591a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\n        # 2. \u53ef\u4ee5\u4f7f\u7528\u5b57\u5178\u6765\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684x\u548cy\u7684\u503c\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u5f88\u591a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\n        # 3. \u53ef\u4ee5\u4f7f\u7528\u5b57\u5178\u6765\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684x\u548cy\u7684\u503c\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u5f88\u591a\u7684\u65f6\u95f4\u590d\u6742\u5ea6\n        # 4. \u53ef\u4ee5\u4f7f\u7528\u5b57\u5178\u6765\u8bb0\u5f55\u6bcf\u4e2a\u70b9\u7684x\u548cy\u7684\u503c\uff0c\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u5f88\u591a\u7684\u65f6\u95f4\u590d",
    "14": "\n    x, y = map(int, input().split())\n    print(x + y)\n",
    "15": "\n    x, y = map(int, input().split())\n    if x == y:\n        print(x + y)\n    elif x > y:\n        print(x + y)\n    else:\n        print(x + y - 1)\n",
    "16": "\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    a = [0] + a\n    d = [0] * (2**n + 1)\n    for i in range(1, 2**n + 1):\n        for j in range(m):\n            if a[j] & i == 0:\n                d[i] += 1\n    ans = 0\n    for i in range(1, 2**n + 1):\n        if d[i] == 0:\n            ans += 1\n    print(ans)\n",
    "17": "\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    a = [0] + a\n    d = [0] * (2**n)\n    for i in range(1, 2**n):\n        d[i] = d[i >> 1] + (i & 1)\n    ans = 0\n    for i in range(1, 2**n):\n        for j in range(i + 1, 2**n):\n            if d[i] + d[j] == 0:\n                ans += 1\n    for i in range(m):\n        ans -= (a[i + 1] ^ a[i]) == 0\n    print(ans)\n",
    "18": "\n    ",
    "19": "\n    T = int(input())\n    for i in range(T):\n        m, Tc, Th = map(int, input().split())\n        if Tc > Th:\n            Tc, Th = Th, Tc\n        if Tc == Th:\n            print(\"No\")\n        elif (Th - Tc) % 2 == 0:\n            print(\"Yes\")\n        else:\n            print(\"No\")\n\nif __name__ == \"__main__\":\n    code()"
}