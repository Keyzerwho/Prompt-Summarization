{
    "id": "cmpl-4BAjQKdSv7wmaM35KETBL4HmuX6cd",
    "object": "text_completion",
    "created": 1638568208,
    "model": "davinci-codex:2021-08-03",
    "choices": [
        {
            "text": "\n    n = int(input())\n    v = []\n    for i in range(n):\n        x, y = map(int, input().split())\n        v.append((x, y))\n    v = sorted(v, key=lambda x: abs(x[0]) + abs(x[1]))\n    ans = [1] * n\n    for i in range(n):\n        if v[i][0] == 0:\n            if v[i][1] > 0:\n                ans[i] = 1\n            else:\n                ans[i] = -1\n        else:\n            if v[i][0] > 0:\n                ans[i] = 1\n            else:\n                ans[i] = -1\n    print(*ans)\n\ncode()",
            "index": 0,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n = int(input())\n    v = []\n    for i in range(n):\n        v.append(list(map(int, input().split())))\n    v = sorted(v, key=lambda x: abs(x[0]) + abs(x[1]))\n    res = []\n    for i in range(n):\n        if v[i][0] == 0:\n            if v[i][1] > 0:\n                res.append(1)\n            else:\n                res.append(-1)\n        else:\n            if v[i][0] > 0:\n                res.append(1)\n            else:\n                res.append(-1)\n    print(*res)\n\ncode()",
            "index": 1,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    a = sum(ord(c) for c in s)\n    b = sum(ord(c) - ord(s[i-1]) for i, c in enumerate(s) if i > 0)\n    c = (a | b) & ((1 << 2) - 1)\n    d = c ^ (32 * (s.count(' ') + 1))\n    return d\n\nif __name__ == '__main__':\n    print(string_hash('a'))\n    print(string_hash('ca'))",
            "index": 2,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    a = sum(ord(c) for c in s)\n    b = sum(ord(s[i]) - ord(s[i-1]) for i in range(1, len(s)))\n    c = (a or b) and ((not a) << 2)\n    d = c ^ (32 * (s.count(' ') + 1))\n    return d\n\nif __name__ == '__main__':\n    print(string_hash('a'))\n    print(string_hash('ca'))",
            "index": 3,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    a = [0] + a\n    d = [0] * (2**n + 1)\n    for i in range(1, 2**n + 1):\n        for j in range(m):\n            if a[j] & i == 0:\n                d[i] += 1\n    ans = 0\n    for i in range(1, 2**n + 1):\n        if d[i] == 0:\n            ans += 1\n    print(ans)\n\ncode()",
            "index": 4,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    n, m = map(int, input().split())\n    a = list(map(int, input().split()))\n    a.sort()\n    a = [0] + a\n    d = [0] * (2 ** n + 1)\n    for i in range(1, 2 ** n + 1):\n        for j in range(m):\n            if a[j] & i == 0:\n                d[i] += 1\n    ans = 0\n    for i in range(1, 2 ** n + 1):\n        if d[i] == 0:\n            ans += 1\n    print(ans)\n\ncode()",
            "index": 5,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n        if start>destination:\n            start,destination=destination,start\n        return min(sum(distance[start:destination]),sum(distance[:start])+sum(distance[destination:]))",
            "index": 6,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n        if start>destination:\n            start,destination=destination,start\n        clockwise=sum(distance[start:destination])\n        counterclockwise=sum(distance)-clockwise\n        return min(clockwise,counterclockwise)",
            "index": 7,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    return sorted(s) == list(s)",
            "index": 8,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    return sorted(s) == list(s)",
            "index": 9,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        return nth_fib(n-1) + nth_fib(n-2)\n\nprint(nth_fib(4))",
            "index": 10,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        return nth_fib(n-1) + nth_fib(n-2)",
            "index": 11,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    s = input()\n    if s.count('ab') == 0:\n        print(0)\n    else:\n        print(s.count('ab') * 2 % (10**9 + 7))\n\ncode()",
            "index": 12,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    s = input()\n    if s.count(\"ab\") == 0:\n        print(0)\n    else:\n        print(s.count(\"ab\") * 2 % (10**9 + 7))\n\ncode()",
            "index": 13,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    return n == (n // 2) * (n + 1)\n\nprint(is_pronic(42))",
            "index": 14,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    return n == (n // 2) * (n + 1)\n\nprint(is_pronic(42))",
            "index": 15,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        if n%2 == 0:\n            print(n//2)\n        else:\n            print(n//2+1)\ncode()",
            "index": 16,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    t = int(input())\n    for i in range(t):\n        n = int(input())\n        if n % 2 == 0:\n            print(n//2)\n        else:\n            print(n//2 + 1)\ncode()",
            "index": 17,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    # your code here\n    return -1",
            "index": 18,
            "logprobs": null,
            "finish_reason": "stop"
        },
        {
            "text": "\n    ",
            "index": 19,
            "logprobs": null,
            "finish_reason": "stop"
        }
    ]
}