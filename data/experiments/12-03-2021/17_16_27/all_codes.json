{
    "0": "\n    S, K = map(int, input().split())\n    if K == 0:\n        print(S)\n    else:\n        for i in range(K):\n            S = S // 2 + S % 2\n        print(S)\n\nif __name__ == \"__main__\":\n    code()",
    "1": "\n    S, K = map(int, input().split())\n    if K == 0:\n        print(S)\n    else:\n        if S % 10 == 0:\n            print(S)\n        else:\n            for i in range(K):\n                S = S + 1\n                if S % 10 == 0:\n                    print(S)\n                    break",
    "2": "\n    while len(str(input)) > 1:\n        input = sum(map(int, str(input)))\n    return input",
    "3": "\n    while input > 9:\n        input = sum(map(int, str(input)))\n    return input",
    "4": "\n    for i in range(len(a)):\n        if a[i] == 1:\n            for j in range(i):\n                a[j] = 1 - a[j]\n    return a",
    "5": "\n    for i in range(len(a)):\n        if a[i] == 1:\n            for j in range(i):\n                a[j] = 1 - a[j]\n    return a",
    "6": "\n    t = int(input())\n    for i in range(t):\n        x, y, k = map(int, input().split())\n        if k % 2 == 0:\n            print(k // 2 * (x + y))\n        else:\n            print(k // 2 * (x + y) + x)\n",
    "7": "\n    t = int(input())\n    for i in range(t):\n        x, y, k = map(int, input().split())\n        if k % 2 == 0:\n            print(k // 2 * (x + y))\n        else:\n            print(k // 2 * (x + y) + x)\n",
    "8": "\n    n, m = map(int, input().split())\n    graph = [[] for i in range(n)]\n    for i in range(m):\n        u, v = map(int, input().split())\n        graph[u-1].append(v-1)\n        graph[v-1].append(u-1)\n    visited = [False]*n\n    if dfs(graph, visited, 0):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\ndef dfs(graph, visited, node):\n    visited[node] = True\n    for i in graph[node]:\n        if not visited[i]:\n            if not dfs(graph, visited, i):\n                return False\n        else:\n            return False\n    return True\n",
    "9": "\n    n, m = map(int, input().split())\n    graph = {i: [] for i in range(1, n + 1)}\n    for i in range(m):\n        u, v = map(int, input().split())\n        graph[u].append(v)\n        graph[v].append(u)\n    visited = [False] * (n + 1)\n    queue = []\n    queue.append(1)\n    visited[1] = True\n    while queue:\n        s = queue.pop(0)\n        for i in graph[s]:\n            if visited[i] == False:\n                visited[i] = True\n                queue.append(i)\n    if False in visited:\n        print(\"NO\")\n    else:\n        print(\"YES\")\n",
    "10": "\n    for i in range(len(s1)):\n        if s1[i] != s2[i]:\n            return s2[i]\n\nprint(added_char(\"hello\", \"aaahello\"))\nprint(added_char(\"abcde\", \"2db2a2ec\"))\nprint(added_char(\"aabbcc\", \"aacccbbcc\"))",
    "11": "\n    return ''.join(set(s2) - set(s1))\n\nprint(added_char(\"hello\", \"aaahello\"))\nprint(added_char(\"abcde\", \"2db2a2ec\"))\nprint(added_char(\"aabbcc\", \"aacccbbcc\"))",
    "12": "\n    X, d = map(int, input().split())\n    if X == 1:\n        print(1)\n        print(1)\n        return\n    if d == 0:\n        print(1)\n        print(X)\n        return\n    if X == 2:\n        print(2)\n        print(10, 100)\n        return\n    if d == 1:\n        print(2)\n        print(10, 100)\n        return\n    if d == 2:\n        print(3)\n        print(10, 100, 1000)\n        return\n    if d == 3:\n        print(4)\n        print(10, 100, 1000, 10000)\n        return\n    if d == 4:\n        print(5)\n        print(10, 100, 1000, 10000, 100000)\n        return\n    if d == 5:\n        print(6)\n        print(10, 100, 1000, 10000, 100000, 1000000)\n        return\n    if d == 6:\n        print(7)\n        print(10, 100, 1000, 10000, 100000, 1000000, 10000000)\n        return\n    if d == 7:\n        print(8)\n        print(10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000)\n        return\n    if d == 8:\n        print(9)\n        print(10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000)\n        return\n    if d == 9:\n        print(10)\n        print(10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000, 10000000000)\n        return\n    if d == 10:\n        print(11)\n        print(10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000, 10000000000, 100000000000)\n        return\n    if d == 11:\n        print(12)\n        print(10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000, 10000000000, 100000000000, 1000000000000)\n        return\n    if d == 12:\n        print(13)\n        print(10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000, 10000000000, 100000000000, 1000000000000, 10000000000000)\n        return\n    if d == 13:\n        print(14)\n        print(10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000, 10000000000, 100000000000, 1000000000000, 10000000000000, 100000000000000)\n        return\n    if d == 14:\n        print(15)\n        print(10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000, 10000000000, 100000000000, 1000000000000, 10000000000000, 100000000000000, 1000000000000000)\n        return\n    if d == 15:\n        print(16)\n        print(10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000, 10000000000, 100000000000, 1000000000000, 10000000000000, 100000000000000, 1000000000000000, 10000000000000000)\n        return\n    if d == 16:\n        print(17)\n        print(10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000, 10000000000, 100000000000, 1000000000000, 10000000000000, 100000000000000, 1000000000000000, 10000000000000000, 100000000000000000)\n        return\n    if d == 17:\n        print(18)\n        print(10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000, 10000000000, 100000000000, 1000000000000, 10000000000000, 100000000000000, 1000000000000000, 10000000000000000, 100000000000000000, 1000000000000000000)\n        return\n    if d == 18:\n        print(19)\n        print(10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000, 10000000000, 100000000000, 1000000000000, 10000000000000, 100000000000000, 1000000000000000, 10000000000000000, 100000000000000000, 1000000000000000000, 10000000000000000000)\n        return\n    if d == 19:\n        print(20)\n        print(10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000,",
    "13": "\n    X, d = map(int, input().split())\n    n = 0\n    for i in range(1, X+1):\n        if X%i == 0:\n            if i >= d:\n                n += 1\n    print(n)\n    if n == 0:\n        print(-1)\n    else:\n        for i in range(1, X+1):\n            if X%i == 0:\n                if i >= d:\n                    print(i, end=\" \")\n",
    "14": "\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        print((N*N)**2)\n",
    "15": "\n    T = int(input())\n    for i in range(T):\n        N = int(input())\n        print((N**2) * 2)\n",
    "16": "\n    ",
    "17": "\n    ",
    "18": "\n    a, b = 0, 1\n    for i in range(n):\n        a, b = b, a + b\n    return str(bin(a))[2:]",
    "19": "\n    f0 = '0'\n    f1 = '01'\n    f2 = '010'\n    f3 = '01001'\n    if n == 0:\n        return f0\n    elif n == 1:\n        return f1\n    elif n == 2:\n        return f2\n    elif n == 3:\n        return f3\n    else:\n        for i in range(4, n+1):\n            f4 = f3 + f2\n            f2 = f3\n            f3 = f4\n        return f4"
}