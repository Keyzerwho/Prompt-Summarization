You are given 2 integer arrays of length $n$, array $x$ and array $y$. For each array, you want to make all its values equivalent
such that $x_1$ = $x_2$ = $x_3$ = ... = $x_n$ and $y_1$ = $y_2$ = $y_3$ = ... = $y_n$ in the least number of moves possible.

In one move, you can decrement the value of an element by 1 at $x_i$ or $y_i$, or at both $x_i$ and $y_i$
The value of an element can not go below 0.

You have to answer $t$ independent test cases.

-----Input-----

The first line of the input contains one integer $t$ ($1 \le t \le 1000$) — the number of test cases.

The first line of the test case contains one integer $n$ ($1 \le n \le 50$) — the length of the arrays.
The second line of the test case contains $n$ integers $x_1, x_2, \dots, x_n$ ($1 \le x_i \le 10^9$).
The third line of the test case contains $n$ integers $y_1, y_2, \dots, y_n$ ($1 \le y_i \le 10^9$).


-----Output-----

For each test case, print one integer: the minimum number of moves required to equalize all the given values in each array.


-----Example-----
Input
5
3
3 5 6
3 2 3
5
1 2 3 4 5
5 4 3 2 1
3
1 1 1
2 2 2
6
1 1000000000 1000000000 1000000000 1000000000 1000000000
1 1 1 1 1 1
3
10 12 8
7 5 4

Output
6
16
0
4999999995
7
