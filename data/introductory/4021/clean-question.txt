# Task Elections are in progress! Given an array of numbers representing votes given to each of the candidates, and an integer which is equal to the number of voters who haven't cast their vote yet, find the number of candidates who still have a chance to win the election. The winner of the election must secure strictly more votes than any other candidate. If two or more candidates receive the same (maximum) number of votes, assume there is no winner at all. **Note**: big arrays will be tested. # Examples ``` votes = [2, 3, 5, 2] voters = 3 result = 2 ``` __pycache__ aggregate_results.csv check_split.py competition config.yaml download.sh filter_generated.sh format.sh get_results.sh gpt.py interview introductory logging.yaml logs model_results.sh prepare.sh prompt.yaml prompt_generation.py remove_bad.sh results.sh solution.py split.txt studio21_api.py test.sh view_solution.sh Candidate `#3` may win, because he's already leading. __pycache__ aggregate_results.csv check_split.py competition config.yaml download.sh filter_generated.sh format.sh get_results.sh gpt.py interview introductory logging.yaml logs model_results.sh prepare.sh prompt.yaml prompt_generation.py remove_bad.sh results.sh solution.py split.txt studio21_api.py test.sh view_solution.sh Candidate `#2` may win, because with 3 additional votes he may become the new leader. __pycache__ aggregate_results.csv check_split.py competition config.yaml download.sh filter_generated.sh format.sh get_results.sh gpt.py interview introductory logging.yaml logs model_results.sh prepare.sh prompt.yaml prompt_generation.py remove_bad.sh results.sh solution.py split.txt studio21_api.py test.sh view_solution.sh Candidates `#1` and `#4` have no chance, because in the best case scenario each of them can only tie with the candidate `#3`. ___ ``` votes = [3, 1, 1, 3, 1] voters = 2 result = 2 ``` __pycache__ aggregate_results.csv check_split.py competition config.yaml download.sh filter_generated.sh format.sh get_results.sh gpt.py interview introductory logging.yaml logs model_results.sh prepare.sh prompt.yaml prompt_generation.py remove_bad.sh results.sh solution.py split.txt studio21_api.py test.sh view_solution.sh Candidate `#1` and `#4` can become leaders if any of them gets the votes. __pycache__ aggregate_results.csv check_split.py competition config.yaml download.sh filter_generated.sh format.sh get_results.sh gpt.py interview introductory logging.yaml logs model_results.sh prepare.sh prompt.yaml prompt_generation.py remove_bad.sh results.sh solution.py split.txt studio21_api.py test.sh view_solution.sh If any other candidate gets the votes, they will get tied with candidates `#1` and `#4`. ___ ``` votes = [1, 3, 3, 1, 1] voters = 0 result = 0 ``` __pycache__ aggregate_results.csv check_split.py competition config.yaml download.sh filter_generated.sh format.sh get_results.sh gpt.py interview introductory logging.yaml logs model_results.sh prepare.sh prompt.yaml prompt_generation.py remove_bad.sh results.sh solution.py split.txt studio21_api.py test.sh view_solution.sh There're no additional votes to cast, and there's already a tie.
