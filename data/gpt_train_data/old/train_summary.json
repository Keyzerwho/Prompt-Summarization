[
    {
        "prompt": "Shivam is the youngest programmer in the world, he is just 12 years old. Shivam is learning programming and today he is writing his first program. \n\nProgram is very simple, Given two integers A and B, write a program to add these two numbers.\n\n-----Input-----\n\nThe first line contains an integer T, the total number of test cases. Then follow T lines, each line contains two Integers A and B. \n\n-----Output-----\nFor each test case, add A and B and display it in a new line.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 1000\n- 0 \u2264 A,B \u2264 10000\n\n-----Example-----\nInput\n3 \n1 2\n100 200\n10 40\n\nOutput\n3\n300\n50",
        "completion": "\n\nYou are given two integers A and B, write a program to add these two numbers.\n\n-----Input-----\n\nThe first line contains an integer T, the total number of test cases. Then follow T lines, each line contains two Integers A and B. \n\n-----Output-----\nFor each test case, add A and B and display it in a new line.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 1000\n- 0 \u2264 A,B \u2264 10000\n\n-----Example-----\nInput\n3 \n1 2\n100 200\n10 40\n\nOutput\n3\n300\n50"
    },
    {
        "prompt": "Write a program to check whether a triangle is valid or not, when the three angles of the triangle are the inputs. A triangle is valid if the sum of all the three angles is equal to 180 degrees.\n\n-----Input-----\n\nThe first line contains an integer T, the total number of testcases. Then T lines follow, each line contains three angles  A, B and C, of the triangle separated by space. \n\n-----Output-----\nFor each test case, display 'YES' if the triangle is valid, and 'NO', if it is not, in a new line.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 1000\n- 1 \u2264 A,B,C \u2264 180\n\n-----Example-----\nInput\n\n3 \n40 40 100\n45 45 90\n180 1 1\nOutput\n\nYES\nYES\nNO",
        "completion": "\n\nYou are given three angles of a triangle.Check whether these angles form a valid triangle or not. A triangle is valid if the sum of all the three angles is equal to 180 degrees.\n\n-----Input-----\n\nThe first line contains an integer T, the total number of testcases. Then T lines follow, each line contains three angles  A, B and C, of the triangle separated by space. \n\n-----Output-----\nFor each test case, display 'YES' if the triangle is valid, and 'NO', if it is not, in a new line.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 1000\n- 1 \u2264 A,B,C \u2264 180\n\n-----Example-----\nInput\n\n3 \n40 40 100\n45 45 90\n180 1 1\nOutput\n\nYES\nYES\nNO"
    },
    {
        "prompt": "Given an 2D board, count how many battleships are in it. The battleships are represented with 'X's, empty slots are represented with '.'s. You may assume the following rules:\n\n\nYou receive a valid board, made of only battleships or empty slots.\nBattleships can only be placed horizontally or vertically. In other words, they can only be made of the shape 1xN (1 row, N columns) or Nx1 (N rows, 1 column), where N can be of any size.\nAt least one horizontal or vertical cell separates between two battleships - there are no adjacent battleships.\n\n\nExample:\nX..X\n...X\n...X\n\nIn the above board there are 2 battleships.\n\nInvalid Example:\n...X\nXXXX\n...X\n\nThis is an invalid board that you will not receive - as battleships will always have a cell separating between them.\n\nFollow up:Could you do it in one-pass, using only O(1) extra memory and without modifying the value of the board?\n",
        "completion": "Given an 2 dimentional array count number of structures in it.\nStructures are represented by 'X's and empty slots are represented with \".\"s.\nYou may assume the following rules:\n\n\nYou receive a valid 2 dimentional array, made of only structures or empty\nslots.  Structures can only be horizontal or vertical. \nAt least one horizontal or vertical cell separates between two structures.\n\n\nExample:\nX..X\n...X\n...X\n\nIn the above 2 dimentional array there are 2 structures.\n\nInvalid Example:\n...X\nXXXX\n...X\n\nThis is an invalid 2 dimentional array that you will not receive - as structures\nwill always have a cell separating between them.\n"
    },
    {
        "prompt": "Write a program to obtain a number $(N)$ from the user and display whether the number is a one digit number, 2 digit number, 3 digit number or more than 3 digit number\n\n-----Input:-----\n- First line will contain the number $N$,\n\n-----Output:-----\nPrint \"1\" if N is a 1 digit number.\nPrint \"2\" if N is a 2 digit number.\nPrint \"3\" if N is a 3 digit number.\nPrint \"More than 3 digits\" if N has more than 3 digits.\n\n-----Constraints-----\n- $0 \\leq N \\leq 1000000$\n\n-----Sample Input:-----\n9\n\n-----Sample Output:-----\n1",
        "completion": "Display whether the number $(N)$ obtained from user is a one digit number, 2 digit number, 3 digit number or more than 3 digit number\n\n-----Input:-----\n- First line will contain the number $N$,\n\n-----Output:-----\nPrint \"1\" if N is a 1 digit number.\nPrint \"2\" if N is a 2 digit number.\nPrint \"3\" if N is a 3 digit number.\nPrint \"More than 3 digits\" if N has more than 3 digits.\n\n-----Constraints-----\n- $0 \\leq N \\leq 1000000$\n\n-----Sample Input:-----\n9\n\n-----Sample Output:-----\n1"
    },
    {
        "prompt": "Given an integer n, generate all structurally unique BST's (binary search trees) that store values 1 ...\u00a0n.\n\nExample:\n\n\nInput: 3\nOutput:\n[\n\u00a0 [1,null,3,2],\n\u00a0 [3,2,null,1],\n\u00a0 [3,1,null,null,2],\n\u00a0 [2,1,3],\n\u00a0 [1,null,2,null,3]\n]\nExplanation:\nThe above output corresponds to the 5 unique BST's shown below:\n\n   1         3     3      2      1\n    \\       /     /      / \\      \\\n     3     2     1      1   3      2\n    /     /       \\                 \\\n   2     1         2                 3",
        "completion": "Given an integer n, generate all structurally unique binary search trees that store values 1 ...\u00a0n.\n\nExample:\n\n\nInput: 3\nOutput:\n[\n\u00a0 [1,null,3,2],\n\u00a0 [3,2,null,1],\n\u00a0 [3,1,null,null,2],\n\u00a0 [2,1,3],\n\u00a0 [1,null,2,null,3]\n]\n"
    },
    {
        "prompt": "Dhruvil has always been a studious person and will be completing his Engineering soon. He is always kneen about solving problems and is preparing hard for his next interview at Hackerrank. He has practiced lots of problems and now he came across this problem.\nGiven a message containing English letters(A-Z), it is being encoded to numbers using the following mapping:\n'A' -> 1,'B' -> 2 \u2026\u2026\u2026\u2026\u2026\u2026 'Z' -> 26.\nNow, given a non-empty string containing only digits, help Dhruvil determine the total number of ways to decode it.\nWhile decoding you need to choose a substring of charachters and not a subsequence. Also a chosen substring should not contain any leading \"0\"s, but can contain trailing \"0\"s. Since the output can be very large print the answer as modulo 10^9 + 7 i.e 1000000007.\n\n-----Input:-----\nThe first line of the input consists of single integer T, the number of test cases.\nEach test case consists of a string.\n\n-----Output:-----\nFor each test case print a single integer - the total number of ways to decode the digit string.\n\n-----Constraints-----\n- $1 \\leq T \\leq 1000$\n- $2 \\leq S \\leq 10^9$\n\n-----Sample Input:-----\n2\n12\n\n226\n\n-----Sample Output:-----\n2\n\n3\n\n-----EXPLANATION:-----\nThere are 2 possible ways. It could be decoded as \"AB\" {1,2} or \"L\" {12}.\nThere are 3 possible ways. It could be decoded as \"BZ\" {2,26}, \"VF\" {22,6}, or \"BBF\" {2,2,6}.",
        "completion": "Given a message containing English letters(A-Z), it is being encoded to numbers using the following mapping:\n'A' -> 1,'B' -> 2 \u2026\u2026\u2026\u2026\u2026\u2026 'Z' -> 26.\nDetermine the total number of ways to decode it. While decoding you need to choose a substring of characters and not a subsequence. Also a chosen substring should not contain any leading \"0\"s, but can contain trailing \"0\"s.Print the answer as modulo 10^9 + 7 i.e 1000000007.\n\n-----Input:-----\nThe first line of the input consists of single integer T, the number of test cases.\nEach test case consists of a string.\n\n-----Output:-----\nFor each test case print a single integer - the total number of ways to decode the digit string.\n\n-----Constraints-----\n- $1 \\leq T \\leq 1000$\n- $2 \\leq S \\leq 10^9$\n\n-----Sample Input:-----\n2\n12\n\n226\n\n-----Sample Output:-----\n2\n\n3\n"
    },
    {
        "prompt": "Today a plane was hijacked by a maniac. All the passengers of the flight are taken as hostage. Chef is also one of them.\nHe invited one of the passengers to play a game with him. If he loses the game, he will release all the passengers, otherwise he will kill all of them. A high risk affair it is.\n\nChef volunteered for this tough task. He was blindfolded by Hijacker. Hijacker brought a big black bag from his pockets. The contents of the bag is not visible. He tells Chef that the bag contains R red, G green and B blue colored balloons.\n\nHijacker now asked Chef to take out some balloons from the box such that there are at least K balloons of the same color and hand him over. If the taken out balloons does not contain at least K balloons of the same color, then the hijacker will shoot everybody. Chef is very scared and wants to leave this game as soon as possible, so he will draw the minimum number of balloons so as to save the passengers. Can you please help scared Chef to find out the minimum number of balloons he should take out.\n\n-----Input-----\nThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. \n\nThe first line of each test case contains a three space-separated integers R, G and B. \n\nThe second line contains only one integer K.\n\n-----Output-----\nFor each test case, output a single line containing one integer - the minimum number of balloons Chef need to take out from the bag.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 1000\n- 1 \u2264 R, G, B \u2264 109\n- 1 \u2264 K \u2264 max{R, G, B}\n\n-----Subtasks-----\n- Subtask 1 (44 points): 1 \u2264 R, G, B \u2264 10\n- Subtask 2 (56 points):  No additional constraints\n\n-----Example-----\nInput:\n2\n3 3 3\n1\n3 3 3\n2\n\nOutput:\n1\n4\n\n-----Explanation-----\nExample case 2. In the worst-case scenario first three balloons will be of the three different colors and only after fourth balloon Chef will have two balloons of the same color. So, Chef might need to fetch 4 balloons",
        "completion": "You are given random numbers of each of the three types of ballon Red,Green and Black in a bag.\nThere should be atleast K balloons of same color in each withdrawal.\nDetermine the minimum number of balloons which are required to withdraw such that there is at least k balloons of same color.\n\n\n\n-----Input-----\nThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. \n\nThe first line of each test case contains a three space-separated integers R, G and B. \n\nThe second line contains only one integer K.\n\n-----Output-----\nFor each test case, output a single line containing one integer - the minimum number of balloons need to take out from the bag.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 1000\n- 1 \u2264 R, G, B \u2264 109\n- 1 \u2264 K \u2264 max{R, G, B}\n\n\n-----Example-----\nInput:\n2\n3 3 3\n1\n3 3 3\n2\n\nOutput:\n1\n4\n"
    },
    {
        "prompt": "The chef is trying to solve some pattern problems, Chef wants your help to code it. Chef has one number K to form a new pattern. Help the chef to code this pattern problem.\n\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Each test case contains a single line of input, one integer $K$. \n\n-----Output:-----\nFor each test case, output as the pattern.\n\n-----Constraints-----\n- $1 \\leq T \\leq 100$\n- $1 \\leq K \\leq 100$\n\n-----Sample Input:-----\n2\n2\n4\n\n-----Sample Output:-----\n2\n21\n210\n21\n2\n4\n43\n432\n4321\n43210\n4321\n432\n43\n4\n\n-----EXPLANATION:-----\nNo need, else pattern can be decode easily.",
        "completion": "\nDecode the given pattern and generate new pattern for number K.\n\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Each test case contains a single line of input, one integer $K$. \n\n-----Output:-----\nFor each test case, output as the pattern.\n\n-----Constraints-----\n- $1 \\leq T \\leq 100$\n- $1 \\leq K \\leq 100$\n\n-----Sample Input:-----\n2\n2\n4\n\n-----Sample Output:-----\n2\n21\n210\n21\n2\n4\n43\n432\n4321\n43210\n4321\n432\n43\n4\n"
    },
    {
        "prompt": "Ms. E.T. came from planet Hex. She has 8 fingers in each hand which makes her count in hexadecimal way. When she meets you, she tells you that she came from 7E light years from the planet Earth. You see she means that it is 126 light years far away and she is telling you the numbers in hexadecimal. Now, you are in trouble to understand what those numbers really mean. Therefore, you have to convert the hexadecimal numbers to decimals.\n\nInput:\n\nFirst line of code contain T test cases.\n\nevery line of text case contain a Hex-value \n\nOutput:\n\nEvery line of output contain a decimal conversion of given nunmber\n\nSample Input:\n\n3\n\nA\n\n1A23\n\n2C2A\n\nSample Output:\n\n10\n\n6691\n\n11306",
        "completion": "You are given a number in Hexadecimal format. Your task is to write the given hexadecimal number into its corresponding decimal format.\nInput:\n\nFirst line of code contain T test cases.\n\nevery line of text case contain a Hex-value \n\nOutput:\n\nEvery line of output contain a decimal conversion of given number\n\nSample Input:\n\n3\n\nA\n\n1A23\n\n2C2A\n\nSample Output:\n\n10\n\n6691\n\n11306"
    },
    {
        "prompt": "Your music player contains N\u00a0different songs and she wants to listen to L (not necessarily different) songs during your trip. \u00a0You\u00a0create\u00a0a playlist so\u00a0that:\n\nEvery song is played at least once\nA song can only be played again only if\u00a0K\u00a0other songs have been played\n\nReturn the number of possible playlists.\u00a0 As the answer can be very large, return it modulo 10^9 + 7.\n\u00a0\n\n\n\nExample 1:\nInput: N = 3, L = 3, K = 1\nOutput: 6\nExplanation: There are 6 possible playlists. [1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1].\n\n\nExample 2:\nInput: N = 2, L = 3, K = 0\nOutput: 6\nExplanation: There are 6 possible playlists. [1, 1, 2], [1, 2, 1], [2, 1, 1], [2, 2, 1], [2, 1, 2], [1, 2, 2]\n\n\nExample 3:\nInput: N = 2, L = 3, K = 1\nOutput: 2\nExplanation: There are 2 possible playlists. [1, 2, 1], [2, 1, 2]\n\n\n\n\u00a0\nNote:\n\n0 <= K < N <= L <= 100",
        "completion": "You are given N different numbers you want to make a list of L different numbers. You create these list so that:\n\nevery number is used atleast once\na number can only be repeated only if K other different numbers have been used\n\nReturn the number of possible combinations of lists. As the answer can be very large, return it modulo 10^9 + 7.\n\n\n\n\nExample 1:\nInput: N = 3, L = 3, K = 1\nOutput: 6\nExplanation: There are 6 possible combinations. [1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1].\n\n\nExample 2:\nInput: N = 2, L = 3, K = 0\nOutput: 6\nExplanation: There are 6 possible combinations. [1, 1, 2], [1, 2, 1], [2, 1, 1], [2, 2, 1], [2, 1, 2], [1, 2, 2]\n\n\nExample 3:\nInput: N = 2, L = 3, K = 1\nOutput: 2\nExplanation: There are 2 possible combinations. [1, 2, 1], [2, 1, 2]\n\n\n\n\u00a0\nNote:\n\n0 <= K < N <= L <= 100\n"
    },
    {
        "prompt": "You have an array A of size N containing only positive numbers. You have to output the maximum possible value of A[i]%A[j] where 1<=i,j<=N. \n\n-----Input-----\nThe first line of each test case contains a single integer N denoting the size of the array. The next N lines contains integers A1, A2, ..., AN denoting the numbers\n\n-----Output-----\nOutput a single integer answering what is asked in the problem.\n\n-----Subtask 1 (20 points)-----\n- 1 \u2264 N \u2264 5000\n- 1 \u2264 A[i] \u2264 2*(10^9)\n\n-----Subtask 2 (80 points)-----\n- 1 \u2264 N \u2264 1000000\n- 1 \u2264 A[i] \u2264 2*(10^9)\n\n-----Example-----\nInput:\n2\n1\n2\n\nOutput:\n1\n\n-----Explanation-----\nThere will be four values, A[0]%A[0] = 0, A[0]%A[1]=1, A[1]%A[0]=0, A[1]%A[1]=0, and hence the output will be the maximum among them all, that is 1.",
        "completion": "You have an array A of size N containing only positive numbers. Find maximum possible value of A[i]%A[j] where 1<=i,j<=N. \n\n-----Input-----\nThe first line of each test case contains a single integer N denoting the size of the array. The next N lines contains integers A1, A2, ..., AN denoting the numbers\n\n-----Output-----\nOutput a single integer answering what is asked in the problem.\n\n-----Subtask 1 (20 points)-----\n- 1 \u2264 N \u2264 5000\n- 1 \u2264 A[i] \u2264 2*(10^9)\n\n-----Subtask 2 (80 points)-----\n- 1 \u2264 N \u2264 1000000\n- 1 \u2264 A[i] \u2264 2*(10^9)\n\n-----Example-----\nInput:\n2\n1\n2\n\nOutput:\n1\n"
    },
    {
        "prompt": "Tavak and Seyyed are good friends. Seyyed is very funny and he told Tavak to solve the following problem instead of longest-path.\n\nYou are given l and r. For all integers from l to r, inclusive, we wrote down all of their integer divisors except 1. Find the integer that we wrote down the maximum number of times.\n\nSolve the problem to show that it's not a NP problem.\n\n\n-----Input-----\n\nThe first line contains two integers l and r (2 \u2264 l \u2264 r \u2264 10^9).\n\n\n-----Output-----\n\nPrint single integer, the integer that appears maximum number of times in the divisors. \n\nIf there are multiple answers, print any of them.\n\n\n-----Examples-----\nInput\n19 29\n\nOutput\n2\n\nInput\n3 6\n\nOutput\n3\n\n\n\n-----Note-----\n\nDefinition of a divisor: https://www.mathsisfun.com/definitions/divisor-of-an-integer-.html\n\nThe first example: from 19 to 29 these numbers are divisible by 2: {20, 22, 24, 26, 28}.\n\nThe second example: from 3 to 6 these numbers are divisible by 3: {3, 6}.",
        "completion": "You are given l and r. For all integers from l to r, inclusive, we wrote down all of their integer divisors except 1. Find the integer that we wrote down the maximum number of times.\n\nSolve the problem to show that it's not a NP problem.\n\nsummary : \n\n\n\n-----Input-----\n\nThe first line contains two integers l and r (2 \u2264 l \u2264 r \u2264 10^9).\n\n\n-----Output-----\n\nPrint single integer, the integer that appears maximum number of times in the divisors. \n\nIf there are multiple answers, print any of them.\n\n\n-----Examples-----\nInput\n19 29\n\nOutput\n2\n\nInput\n3 6\n\nOutput\n3\n\n\n\n-----Note-----\n\nDefinition of a divisor: https://www.mathsisfun.com/definitions/divisor-of-an-integer-.html\n\nThe first example: from 19 to 29 these numbers are divisible by 2: {20, 22, 24, 26, 28}.\n\nThe second example: from 3 to 6 these numbers are divisible by 3: {3, 6}.\n"
    },
    {
        "prompt": "The chef won a duet singing award at Techsurge & Mridang 2012. From that time he is obsessed with the number 2.\n\nHe just started calculating the powers of two. And adding the digits of the results.\n\nBut he got puzzled after a few calculations. So gave you the job to generate the solutions to 2^n and find their sum of digits.\n\n-----Input-----\nN : number of inputs N<=100\n\nthen N lines with input T<=2000\n\n-----Output-----\nThe output for the corresponding input T\n\n-----Example-----\nInput:\n3\n5\n10\n4\n\nOutput:\n5\n7\n7\n\nExplanation:\n2^5=32\n3+2=5\n2^10=1024\n1+0+2+4=7\n2^4=16\n1+6=7",
        "completion": "You are given a number n. Generate the solutions to 2^n and find their sum of digits.\n\n-----Input-----\nN : number of inputs N<=100\n\nthen N lines with input T<=2000\n\n-----Output-----\nThe output for the corresponding input T\n\n-----Example-----\nInput:\n3\n5\n10\n4\n\nOutput:\n5\n7\n7\n"
    },
    {
        "prompt": "Chef has recently been playing a lot of chess in preparation for the ICCT (International Chef Chess Tournament).\nSince putting in long hours is not an easy task, Chef's mind wanders elsewhere. He starts counting the number of squares with odd side length on his chessboard..\nHowever, Chef is not satisfied. He wants to know the number of squares of odd side length on a generic $N*N$ chessboard.\n\n-----Input:-----\n- The first line will contain a single integer $T$, the number of test cases.\n- The next $T$ lines will have a single integer $N$, the size of the chess board.\n\n-----Output:-----\nFor each test case, print a integer denoting the number of squares with odd length.\n\n-----Constraints-----\n- $1 \\leq T \\leq 100$\n- $1 \\leq N \\leq 1000$\n\n-----Sample Input:-----\n2\n3\n8\n\n-----Sample Output:-----\n10\n120",
        "completion": "You are given a chess board of $N*N$. You have to find the number of squares of odd side length of the given chessboard.\n\n-----Input:-----\n- The first line will contain a single integer $T$, the number of test cases.\n- The next $T$ lines will have a single integer $N$, the size of the chess board.\n\n-----Output:-----\nFor each test case, print a integer denoting the number of squares with odd length.\n\n-----Constraints-----\n- $1 \\leq T \\leq 100$\n- $1 \\leq N \\leq 1000$\n\n-----Sample Input:-----\n2\n3\n8\n\n-----Sample Output:-----\n10\n120"
    },
    {
        "prompt": "You are given a set of n pens, each of them can be red, blue, green, orange, and violet in color. Count a minimum number of pens that should be taken out from the set so that any two neighboring pens have different colors. Pens are considered to be neighboring if there are no other pens between them.\n\n-----Input:-----\n- \nThe first line contains t denoting the number of test cases.\n- \nThe first line of each test case will contain a single integer n.\n- \nThe second line of each test case will contain a string s.\n(s contains only 'R', 'B', 'G', 'O', and 'V' characters denoting red, blue, green, orange, and violet respectively)\n\n-----Output:-----\nFor each test case, print single line containing one integer - The minimum number of pens that need to be taken out.\n\n-----Constraints-----\n- $1 \\leq T \\leq 100$\n- $1 \\leq n \\leq 1000$\n\n-----Sample Input:-----\n2\n5\nRBBRG\n5\nRBGOV\n\n-----Sample Output:-----\n1\n0\n\n-----EXPLANATION:-----\nIn first test case, two blue pens are neighboring each other, if we take out any one of them then the string will be RBRG in which each pen has different neighbors.\nIn second test case, no pen needs to be taken out as each pen has different neighbors.",
        "completion": "You are given a set of n pens, each of them can be red, blue, green, orange, and violet in color. Count a minimum number of pens that should be taken out from the set so that any two neighboring pens have different colors. \n\n-----Input:-----\n- \nThe first line contains t denoting the number of test cases.\n- \nThe first line of each test case will contain a single integer n.\n- \nThe second line of each test case will contain a string s.\n(s contains only 'R', 'B', 'G', 'O', and 'V' characters denoting red, blue, green, orange, and violet respectively)\n\n-----Output:-----\nFor each test case, print single line containing one integer - The minimum number of pens that need to be taken out.\n\n-----Constraints-----\n- $1 \\leq T \\leq 100$\n- $1 \\leq n \\leq 1000$\n\n-----Sample Input:-----\n2\n5\nRBBRG\n5\nRBGOV\n\n-----Sample Output:-----\n1\n0\n"
    },
    {
        "prompt": "Solve a given equation and return the value of x in the form of string \"x=#value\". The equation contains only '+', '-' operation, the variable x and its coefficient.\n\n\n\nIf there is no solution for the equation, return \"No solution\".\n\n\nIf there are infinite solutions for the equation, return \"Infinite solutions\".\n\n\nIf there is exactly one solution for the equation, we ensure that the value of x is an integer.\n\n\nExample 1:\n\nInput: \"x+5-3+x=6+x-2\"\nOutput: \"x=2\"\n\n\n\nExample 2:\n\nInput: \"x=x\"\nOutput: \"Infinite solutions\"\n\n\n\nExample 3:\n\nInput: \"2x=x\"\nOutput: \"x=0\"\n\n\n\nExample 4:\n\nInput: \"2x+3x-6x=x+2\"\nOutput: \"x=-1\"\n\n\n\nExample 5:\n\nInput: \"x=x+2\"\nOutput: \"No solution\"",
        "completion": "Solve a given equation and return the value of x in the form of string \"x=#value\".\nFor the equation, if there is no solution, return \"No solution\" or if there are infinite solutions, return \"Infinite solutions\" or if there is exactly one solution for the equation, ensure that the value of x is an integer.\n\n\nExample 1:\n\nInput: \"x+5-3+x=6+x-2\"\nOutput: \"x=2\"\n\n\n\nExample 2:\n\nInput: \"x=x\"\nOutput: \"Infinite solutions\"\n\n\n\nExample 3:\n\nInput: \"2x=x\"\nOutput: \"x=0\"\n\n\n\nExample 4:\n\nInput: \"2x+3x-6x=x+2\"\nOutput: \"x=-1\"\n\n\n\nExample 5:\n\nInput: \"x=x+2\"\nOutput: \"No solution\""
    },
    {
        "prompt": "-----Problem description.-----\nThis problem deals with the I/O methods used in codechef. \nYou are supposed to print the integer in its reverse form , or in simple words, print the reverse of the given integer . For instance , reverse of  120 is 21  (not 021)  .\n\n-----Input-----\n- The first line of each test case contains an integer T .\n\n- following T lines contains distinct integers N .\n\n\n\n-----Output-----\n- Output should contain T line , each line with the distinct integer as asked in question . \n\n-----Constraints-----\n- 1 \u2264 T \u2264 105\n\n- 1 \u2264 N \u2264 1018\n\nSubtask 1 :  N \u2264 105\nSubtask 2 :  N \u2264 109\nSubtask 3 :  N \u2264 1018\n\n\n\n-----Example-----\nInput:\n3\n1234\n4567\n1\n\nOutput:\n4321\n7654\n1\n\n-----Explanation-----\nreverse of 1234 is 4321 , 4567 is 7654 & of 1 is 1 \n\nNOTE: testcases may contain large range of data, use datatypes accordingly .",
        "completion": "\nPrint the reverse of the given integer . For instance , reverse of  120 is 21  (not 021) .\n\n-----Input-----\n- The first line of each test case contains an integer T .\n\n- following T lines contains distinct integers N .\n\n\n\n-----Output-----\n- Output should contain T line , each line with the distinct integer as asked in question . \n\n-----Constraints-----\n- 1 \u2264 T \u2264 105\n\n- 1 \u2264 N \u2264 1018\n\nSubtask 1 :  N \u2264 105\nSubtask 2 :  N \u2264 109\nSubtask 3 :  N \u2264 1018\n\n\n\n-----Example-----\nInput:\n3\n1234\n4567\n1\n\nOutput:\n4321\n7654\n1\n"
    },
    {
        "prompt": "You are given a string S containing only lowercase characters. \nYou can rearrange the string and you have to print minimum number of characters needed(can be 0) to make it palindrome.\n\n-----Input:-----\n- First line contain an interger T denoting number of testcases.\n- First line of each testcase contains integer N, size of string.\n- Second line of each testcase contains string S.\n\n-----Output:-----\nFor each test case, print a single line containing one integer \u2015 the minimum number of characters needed(can be 0) to make it palindrome.\n\n-----Constraints-----\n- $1 \\leq T \\leq 1000$\n- $1 \\leq N \\leq 10^5$\n\n-----Sample Input:-----\n3\n1\na\n9\nabbbcbddd\n6\nabcdef\n\n-----Sample Output:-----\n0\n2\n5\n\n-----EXPLANATION:-----\n- Example case 1: a is already a palindrome.\n- Example case 2: abbddcddbba is palindrome by adding 2 more characters.\n- Example case 3: abdefcfedba is palindrome by adding 5 more characters.",
        "completion": "You are given a string S containing only lowercase characters. Rearrange the string and print minimum number of characters needed to make it palindrome.\n\n-----Input:-----\n- First line contain an interger T denoting number of testcases.\n- First line of each testcase contains integer N, size of string.\n- Second line of each testcase contains string S.\n\n-----Output:-----\nFor each test case, print a single line containing one integer \u2015 the minimum number of characters needed(can be 0) to make it palindrome.\n\n-----Constraints-----\n- $1 \\leq T \\leq 1000$\n- $1 \\leq N \\leq 10^5$\n\n-----Sample Input:-----\n3\n1\na\n9\nabbbcbddd\n6\nabcdef\n\n-----Sample Output:-----\n0\n2\n5\n\n-----EXPLANATION:-----\n- Example case 1: a is already a palindrome.\n- Example case 2: abbddcddbba is palindrome by adding 2 more characters.\n- Example case 3: abdefcfedba is palindrome by adding 5 more characters."
    },
    {
        "prompt": "The Jones Trucking Company tracks the location of each of its trucks on a grid similar to an (x, y) plane. The home office is at the location (0, 0). Read the coordinates of truck A and the coordinates of truck B and determine which is closer to the office.\n\n-----Input:-----\nThe first line of the data set for this problem is an integer representing the number of collections of data that follow. Each collection contains 4 integers: the x-coordinate and then the \ny-coordinate of truck A followed by the x-coordinate and then the  y-coordinate of truck B.\n\n-----Output:-----\nAll letters are upper case.\nThe output is to be formatted exactly like that for the sample output given below.\n\n-----Assumptions:-----\nThe x-coordinate is in the range \u201320 .. 20. The y-coordinate is in the range \u201320 .. 20.\n\n-----Discussion:-----\nThe distance between point #1 with coordinates (x1, y1) and point #2 with coordinates (x2, y2) is:\n\n-----Sample Input:-----\n4\n3 -2 -5 -3\n0 6 1 2\n-7 8 4 -1\n3 3 -2 2\n\n-----Sample Output:-----\nA IS CLOSER\nB IS CLOSER\nB IS CLOSER\nB IS CLOSER",
        "completion": "You are given a point P(0,0). You have to find the distance between P and other two point A and B. Print that point which is closer to the point P.\n\n-----Input:-----\nThe first line of the data set for this problem is an integer representing the number of collections of data that follow. Each collection contains 4 integers: the x-coordinate and then the \ny-coordinate of point A followed by the x-coordinate and then the  y-coordinate of point B.\n\n-----Output:-----\nAll letters are upper case.\nThe output is to be formatted exactly like that for the sample output given below.\n\n-----Assumptions:-----\nThe x-coordinate is in the range \u201320 .. 20. The y-coordinate is in the range \u201320 .. 20.\n\n\n-----Sample Input:-----\n4\n3 -2 -5 -3\n0 6 1 2\n-7 8 4 -1\n3 3 -2 2\n\n-----Sample Output:-----\nA IS CLOSER\nB IS CLOSER\nB IS CLOSER\nB IS CLOSER"
    },
    {
        "prompt": "Karlsson has recently discovered a huge stock of berry jam jars in the basement of the house. More specifically, there were $2n$ jars of strawberry and blueberry jam.\n\nAll the $2n$ jars are arranged in a row. The stairs to the basement are exactly in the middle of that row. So when Karlsson enters the basement, he sees exactly $n$ jars to his left and $n$ jars to his right.\n\nFor example, the basement might look like this: [Image] \n\nBeing the starightforward man he is, he immediately starts eating the jam. In one minute he chooses to empty either the first non-empty jar to his left or the first non-empty jar to his right.\n\nFinally, Karlsson decided that at the end the amount of full strawberry and blueberry jam jars should become the same.\n\nFor example, this might be the result: [Image] He has eaten $1$ jar to his left and then $5$ jars to his right. There remained exactly $3$ full jars of both strawberry and blueberry jam. \n\nJars are numbered from $1$ to $2n$ from left to right, so Karlsson initially stands between jars $n$ and $n+1$.\n\nWhat is the minimum number of jars Karlsson is required to empty so that an equal number of full strawberry and blueberry jam jars is left?\n\nYour program should answer $t$ independent test cases.\n\n\n-----Input-----\n\nThe first line contains one integer $t$ ($1 \\le t \\le 1000$) \u2014 the number of test cases.\n\nThe first line of each test case contains a single integer $n$ ($1 \\le n \\le 10^5$).\n\nThe second line of each test case contains $2n$ integers $a_1, a_2, \\dots, a_{2n}$ ($1 \\le a_i \\le 2$) \u2014 $a_i=1$ means that the $i$-th jar from the left is a strawberry jam jar and $a_i=2$ means that it is a blueberry jam jar.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $10^5$.\n\n\n-----Output-----\n\nFor each test case print the answer to it \u2014 the minimum number of jars Karlsson is required to empty so that an equal number of full strawberry and blueberry jam jars is left.\n\n\n-----Example-----\nInput\n4\n6\n1 1 1 2 2 1 2 1 2 1 1 2\n2\n1 2 1 2\n3\n1 1 1 1 1 1\n2\n2 1 1 1\n\nOutput\n6\n0\n6\n2\n\n\n\n-----Note-----\n\nThe picture from the statement describes the first test case.\n\nIn the second test case the number of strawberry and blueberry jam jars is already equal.\n\nIn the third test case Karlsson is required to eat all $6$ jars so that there remain $0$ jars of both jams.\n\nIn the fourth test case Karlsson can empty either the second and the third jars or the third and the fourth one. The both scenarios will leave $1$ jar of both jams.",
        "completion": "There were $2n$ values of A and B arranged in a list. You should start at the middle of the list. $n$ values to the left and $n$ values to the right.\n\nYou can choose to make a value zero from either the first non-zero value to left or the first non-zero value to right.\n\nFinally, at the end the number of A's and B's should become the same.\n\nFor example, this might be the result: [Image] He has eaten $1$ jar to his left and then $5$ jars to his right. There remained exactly $3$ full jars of both strawberry and blueberry jam. \n\nJars are numbered from $1$ to $2n$ from left to right, so Karlsson initially stands between jars $n$ and $n+1$.\n\nWhat is the minimum number of jars Karlsson is required to empty so that an equal number of full strawberry and blueberry jam jars is left?\n\nYour program should answer $t$ independent test cases.\n\n\n\n-----Input-----\n\nThe first line contains one integer $t$ ($1 \\le t \\le 1000$) \u2014 the number of test cases.\n\nThe first line of each test case contains a single integer $n$ ($1 \\le n \\le 10^5$).\n\nThe second line of each test case contains $2n$ integers $a_1, a_2, \\dots, a_{2n}$ ($1 \\le a_i \\le 2$) \u2014 $a_i=1$ means that the $i$-th value from the left is A and $a_i=2$ means that it is B.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $10^5$.\n\n\n-----Output-----\n\nFor each test case print the answer to it \u2014 the minimum number of jars Karlsson is required to empty so that an equal number of A and B is left.\n\n\n-----Example-----\nInput\n4\n6\n1 1 1 2 2 1 2 1 2 1 1 2\n2\n1 2 1 2\n3\n1 1 1 1 1 1\n2\n2 1 1 1\n\nOutput\n6\n0\n6\n2\n\n\n\n-----Note-----\n\nThe picture from the statement describes the first test case.\n\nIn the second test case the number of A and B is already equal.\n\nIn the third test you are required to convert all $6$ values so that there remain $0$ vaues of both types.\n\nIn the fourth test case you can make zero either the second and the third values or the third and the fourth values. The both scenarios will leave $1$ jar of both types.\n"
    },
    {
        "prompt": "You are given a sequence a1, a2, ..., aN. Find the smallest possible value of ai + aj, where 1 \u2264 i < j \u2264 N.\n\n-----Input-----\nThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. \nThe first line of each description consists of a single integer N.\nThe second line of each description contains N space separated integers - a1, a2, ..., aN respectively.\n\n-----Output-----\nFor each test case, output a single line containing a single integer - the smallest possible sum for the corresponding test case.\n\n-----Constraints-----\n\n- T = 105, N = 2 : 13 points.\n- T = 105, 2 \u2264 N \u2264 10 : 16 points.\n- T = 1000, 2 \u2264 N \u2264 100 : 31 points.\n- T = 10, 2 \u2264 N \u2264 105 : 40 points.\n- 1 \u2264 ai \u2264 106\n\n-----Example-----\nInput:\n1\n4\n5 1 3 4\n\nOutput:\n4\n\n-----Explanation-----\nHere we pick a2 and a3. Their sum equals to 1 + 3 = 4.",
        "completion": "You are given a sequence a1, a2, ..., aN. Find the smallest possible value of ai + aj, where 1 \u2264 i < j \u2264 N.\n\n-----Input-----\nThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. \nThe first line of each description consists of a single integer N.\nThe second line of each description contains N space separated integers - a1, a2, ..., aN respectively.\n\n-----Output-----\nFor each test case, output a single line containing a single integer - the smallest possible sum for the corresponding test case.\n\n-----Constraints-----\n\n- T = 105, N = 2 : 13 points.\n- T = 105, 2 \u2264 N \u2264 10 : 16 points.\n- T = 1000, 2 \u2264 N \u2264 100 : 31 points.\n- T = 10, 2 \u2264 N \u2264 105 : 40 points.\n- 1 \u2264 ai \u2264 106\n\n-----Example-----\nInput:\n1\n4\n5 1 3 4\n\nOutput:\n4\n"
    },
    {
        "prompt": "You are the principal of the Cake school in chefland and today is your birthday. You want to treat each of the children with a small cupcake which is made by you. But there is a problem, You don't know how many students are present today.\nThe students have gathered of the morning assembly in $R$ rows and $C$ columns. Now you have to calculate how many cakes you have to make such that each child gets a cupcake. \n\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Each test case contains a single line of input, two integers $R$ and $C$. \n\n-----Output:-----\nFor each test case, output number of cupcakes you have to make.\n\n-----Constraints-----\n- $1 \\leq T \\leq 1000$\n- $2 \\leq R,C \\leq 10^6$\n\n-----Sample Input:-----\n1\n5 10\n\n-----Sample Output:-----\n50",
        "completion": "You are given $R$ rows and $C$ columns of a matrix. Calculate the total number in matrix. \n\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Each test case contains a single line of input, two integers $R$ and $C$. \n\n-----Output:-----\nFor each test case, output number of cupcakes you have to make.\n\n-----Constraints-----\n- $1 \\leq T \\leq 1000$\n- $2 \\leq R,C \\leq 10^6$\n\n-----Sample Input:-----\n1\n5 10\n\n-----Sample Output:-----\n50"
    },
    {
        "prompt": "You are given a list of non-negative integers, a1, a2, ..., an, and a target, S. Now you have 2 symbols + and -. For each integer, you should choose one from + and - as its new symbol.\n \n\nFind out how many ways to assign symbols to make sum of integers equal to target S.  \n\n\nExample 1:\n\nInput: nums is [1, 1, 1, 1, 1], S is 3. \nOutput: 5\nExplanation: \n\n-1+1+1+1+1 = 3\n+1-1+1+1+1 = 3\n+1+1-1+1+1 = 3\n+1+1+1-1+1 = 3\n+1+1+1+1-1 = 3\n\nThere are 5 ways to assign symbols to make the sum of nums be target 3.\n\n\n\nNote:\n\nThe length of the given array is positive and will not exceed 20. \nThe sum of elements in the given array will not exceed 1000.\nYour output answer is guaranteed to be fitted in a 32-bit integer.",
        "completion": "You have to apply + and - symbol between the given list non-negative integers to achieve the target S.\n\nIn how many ways are there to assign symbols to make sum of integers equal to target S.  \n\n\nExample 1:\n\nInput: nums is [1, 1, 1, 1, 1], S is 3. \nOutput: 5\nExplanation: \n\n-1+1+1+1+1 = 3\n+1-1+1+1+1 = 3\n+1+1-1+1+1 = 3\n+1+1+1-1+1 = 3\n+1+1+1+1-1 = 3\n\nThere are 5 ways to assign symbols to make the sum of nums be target 3.\n\n\n\nNote:\n\nlength of array is not greater than 20. \nThe sum of elements in the given array will not exceed 1000.\nYour output answer is guaranteed to be fitted in a 32-bit integer."
    },
    {
        "prompt": "Given an integer num, find the closest two integers in absolute difference whose product equals\u00a0num + 1\u00a0or num + 2.\nReturn the two integers in any order.\n\u00a0\nExample 1:\nInput: num = 8\nOutput: [3,3]\nExplanation: For num + 1 = 9, the closest divisors are 3 & 3, for num + 2 = 10, the closest divisors are 2 & 5, hence 3 & 3 is chosen.\n\nExample 2:\nInput: num = 123\nOutput: [5,25]\n\nExample 3:\nInput: num = 999\nOutput: [40,25]\n\n\u00a0\nConstraints:\n\n1 <= num <= 10^9",
        "completion": "You are given an integer num, find the closest two integers in absolute difference whose product equals\u00a0num + 1\u00a0or num + 2.\n\n\u00a0\nExample 1:\nInput: num = 8\nOutput: [3,3]\n\n\nExample 2:\nInput: num = 123\nOutput: [5,25]\n\nExample 3:\nInput: num = 999\nOutput: [40,25]\n"
    },
    {
        "prompt": "Chef loves triangles. But the chef is poor at maths. Given three random lengths Chef wants to find if the three sides form a right-angled triangle or not. Can you help Chef in this endeavour?\n\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Each test case contains a single line of input, three Integers $A,B and C$\n\n-----Output:-----\nFor each test case, output in a single line \"YES\" if it is possible to form a triangle using the given numbers or \"NO\" if it is not possible to form a triangle.\n\n-----Constraints-----\n- $1 \\leq T \\leq 1000000$\n- $0 \\leq A,B,C \\leq 100$\n\n-----Sample Input:-----\n2\n3 4 5\n1 3 4\n\n-----Sample Output:-----\nYES\nNO\n\n-----EXPLANATION:-----\n3,4,5 forms a right-angled triangle. 1, 3 and 4 does not form a right-angled triangle.",
        "completion": "Given lengths $A,B and C$ return YES if they can form a right angled triangle, NO otherwise.\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Each test case contains a single line of input, three Integers $A,B and C$\n\n-----Output:-----\nFor each test case, output in a single line \"YES\" if it is possible to form a triangle using the given numbers or \"NO\" if it is not possible to form a triangle.\n\n-----Constraints-----\n- $1 \\leq T \\leq 1000000$\n- $0 \\leq A,B,C \\leq 100$\n\n-----Sample Input:-----\n2\n3 4 5\n1 3 4\n\n-----Sample Output:-----\nYES\nNO\n\n-----EXPLANATION:-----\n3,4,5 forms a right-angled triangle. 1, 3 and 4 does not form a right-angled triangle."
    },
    {
        "prompt": "Bohan loves milk tea so much and he drinks one cup of milk tea every day. The local shop sells milk tea in two sizes: a Medium cup for $3 and a Large cup for $4. For every cup of milk tea purchased Bohan receives a promotional stamp. Bohan may redeem 6 stamps for a free drink of milk tea regardless of the size. No stamp will be given for a free drink.\n\n\nDetermine the amount of money Bohan have spent on milk tea, given a sequence of milk tea sizes he got in the past a few days. Assume Bohan had no stamps in the beginning and he always redeemed the stamps for the next drink once he had collected 6 stamps.\n\n-----Input-----\nThe input begins with the number of test cases T.\nEach test case has a single line of letters. The i-th letter is either 'M' or 'L' denoting a Medium cup or a Large cup of milk tea Bohan got on the i-th day.\n\n-----Output-----\nFor each case, output the amount of money in dollars Bohan have spent on milk tea.\n\n-----Constraints-----\n- T \u2264 100 \n- 1 \u2264  length of each sequence \u2264 100 \n\n-----Example-----\nInput:\n3\nMLM\nMMLLMMLL\nMMMMMMML\n\nOutput:\n10\n24\n22\n\n-----Explanation-----\nExample 1: Bohan didn't redeem any stamps.\nExample 2: Bohan redeemed 6 stamps for the Large cup of milk tea on the 7th day.\nExample 3: Bohan redeemed 6 stamps for the Medium cup of milk tea on the 7th day.",
        "completion": "You are given a medium item for $3 and a large item for $4. For every item purchased you receive a promotional stamp. You may redeem 6 stamps for a any free item given here. No stamp will be given for a free item.\n\n\nDetermine the amount of money you have spent on items, given a sequence of items size you have got in the past a few days. You do not have any stamp in beginning and spent free stamp just after the purchase of six items.\n\n-----Input-----\nThe input begins with the number of test cases T.\nEach test case has a single line of letters. The i-th letter is either 'M' or 'L' denoting a Medium item or a Large item got on the i-th day.\n\n-----Output-----\nFor each case, output the amount of money in dollars spent.\n\n-----Constraints-----\n- T \u2264 100 \n- 1 \u2264  length of each sequence \u2264 100 \n\n-----Example-----\nInput:\n3\nMLM\nMMLLMMLL\nMMMMMMML\n\nOutput:\n10\n24\n22\n"
    },
    {
        "prompt": "Jon and Joe have received equal marks in the school examination. \nBut, they won't reconcile in peace when equated with each other. \nTo prove his might, Jon challenges Joe to write a program to find all possible number combos that sum to a given number. \nWhile unsure whether he would be able to accomplish this feat or not, Joe accpets the challenge. \nBeing Joe's friend, your task is to help him out.\n\n# Task\n\nCreate a function `combos`, that accepts a single positive integer `num` (30 > `num` > 0) and returns an array of arrays of positive integers that sum to `num`.\n\n# Notes\n1. Sub-arrays may or may not have their elements sorted.\n2. The order of sub-arrays inside the main array does not matter.\n3. For an optimal solution, the following operation should complete within 6000ms.\n\n# Sample",
        "completion": "The input given is a positive integer `num` (30 > `num` > 0).\nYour task is to create a function `combos` that accepts `num` and returns an array of arrays of positive integers that sum to `num`.\n\nFor an optimal solution, the following operation should complete within 6000ms."
    },
    {
        "prompt": "In this problem the input will consist of a number of lines of English text consisting of the letters of the English alphabet, the punctuation marks ' (apostrophe), . (full stop), , (comma), ; (semicolon), :(colon) and white space characters (blank, newline). Your task is print the words in the text in reverse order without any punctuation marks.\nFor example consider the following candidate for the input text:\n$ $\nThis is a sample piece of text to illustrate this \nproblem.  If you are smart you will solve this right.\n\n$ $\nThe corresponding output would read as:\n$ $\nright this solve will you smart are you If problem\nthis illustrate to text of piece sample a is This\n\n$ $\nThat is, the lines are printed in reverse order and in each line the words are printed in reverse order.\n\n-----Input:-----\nThe first line of input contains a single integer $N$, indicating the number of lines in the input. This is followed by $N$ lines of input text.\n\n-----Output:-----\n$N$ lines of output text containing the input lines in reverse order and where each line contains the words in reverse order as illustrated above.\n\n-----Constraints:-----\n- $1 \\leq N \\leq 10000$.\n- There are at most $80$ characters in each line\n\n-----Sample input-----\n2\nThis is a sample piece of text to illustrate this \nproblem.  If you are smart you will solve this right.\n\n-----Sample output-----\nright this solve will you smart are you If problem\nthis illustrate to text of piece sample a is This",
        "completion": "You are given a some lines of English text.Your task is to print words in the line in reverse order without any punctuation marks.\n\n-----Input:-----\nThe first line of input contains a single integer $N$, indicating the number of lines in the input. This is followed by $N$ lines of input text.\n\n-----Output:-----\n$N$ lines of output text containing the input lines in reverse order and where each line contains the words in reverse order as illustrated above.\n\n-----Constraints:-----\n- $1 \\leq N \\leq 10000$.\n- There are at most $80$ characters in each line\n\n-----Sample input-----\n2\nThis is a sample piece of text to illustrate this \nproblem.  If you are smart you will solve this right.\n\n-----Sample output-----\nright this solve will you smart are you If problem\nthis illustrate to text of piece sample a is This"
    },
    {
        "prompt": "At the legendary times of Nonsenso wars in ISM Dhanbad, there was a neck to neck competition between Barney Stinson and Sheldon Cooper. They both were on level 19. After trying too hard both of them could not decipher the nonsense, so they decided to play alongside. Sheldon Cooper had to pass a message to Barney Stinson. So he decided to convert each letter of the sentence to their corresponding to their ASCII codes. When Barney received the message he could not get anything. Now you have to design a code which converts the encrypted message to readable format.\n\n-----Input-----\nThe input will consist of the first line containing the number of test cases \u2018n\u2019 followed by n lines of test cases.\n\n-----Output-----\n\nFor each input print the decoded line.\n\n-----Example-----\nInput:\n2\n721011081081113287111114108100\n871011089911110910132116111327311010010597\n\nOutput:\nHello World\nWelcome to India",
        "completion": "You are given N number of sentences.Each sentence letter is written in corresponding ASCII codes. Write a code to convert the encrypted message to readable format.\n\n\n-----Input-----\nThe input will consist of the first line containing the number of test cases \u2018n\u2019 followed by n lines of test cases.\n\n-----Output-----\n\nFor each input print the decoded line.\n\n-----Example-----\nInput:\n2\n721011081081113287111114108100\n871011089911110910132116111327311010010597\n\nOutput:\nHello World\nWelcome to India"
    },
    {
        "prompt": "There are n games in a football tournament. Three teams are participating in it. Currently k games had already been played. \n\nYou are an avid football fan, but recently you missed the whole k games. Fortunately, you remember a guess of your friend for these k games. Your friend did not tell exact number of wins of each team, instead he thought that absolute difference between number of wins of first and second team will be d_1 and that of between second and third team will be d_2.\n\nYou don't want any of team win the tournament, that is each team should have the same number of wins after n games. That's why you want to know: does there exist a valid tournament satisfying the friend's guess such that no team will win this tournament?\n\nNote that outcome of a match can not be a draw, it has to be either win or loss.\n\n\n-----Input-----\n\nThe first line of the input contains a single integer corresponding to number of test cases t (1 \u2264 t \u2264 10^5).\n\nEach of the next t lines will contain four space-separated integers n, k, d_1, d_2 (1 \u2264 n \u2264 10^12;\u00a00 \u2264 k \u2264 n;\u00a00 \u2264 d_1, d_2 \u2264 k) \u2014 data for the current test case.\n\n\n-----Output-----\n\nFor each test case, output a single line containing either \"yes\" if it is possible to have no winner of tournament, or \"no\" otherwise (without quotes).\n\n\n-----Examples-----\nInput\n5\n3 0 0 0\n3 3 0 0\n6 4 1 0\n6 3 3 0\n3 3 3 2\n\nOutput\nyes\nyes\nyes\nno\nno\n\n\n\n-----Note-----\n\nSample 1. There has not been any match up to now (k = 0, d_1 = 0, d_2 = 0). If there will be three matches (1-2, 2-3, 3-1) and each team wins once, then at the end each team will have 1 win.\n\nSample 2. You missed all the games (k = 3). As d_1 = 0 and d_2 = 0, and there is a way to play three games with no winner of tournament (described in the previous sample), the answer is \"yes\".\n\nSample 3. You missed 4 matches, and d_1 = 1, d_2 = 0. These four matches can be: 1-2 (win 2), 1-3 (win 3), 1-2 (win 1), 1-3 (win 1). Currently the first team has 2 wins, the second team has 1 win, the third team has 1 win. Two remaining matches can be: 1-2 (win 2), 1-3 (win 3). In the end all the teams have equal number of wins (2 wins).",
        "completion": "Let x, y, and z, be non-negative integers. d_1 reprsents the absolute difference between x and y, and d_2 represents\nthe absolute difference between y and z. Your goal is to figure out if d_1 and d_2 can become equivlanet after all moves have been expended.\n\n\nIn each move, you can increment x, y, or z by 1.\n\nYou will be given n, the total number of moves you're allowed, and k, the number of moves that had already\nbeen used. The number of moves you can use will be n - k\n\nYour goal is to find out if the d_1 and d_2 can become equal after all moves have been expended. Meaning d_1\nand d_2 are equal after n - k moves. If it is possible to do so, then return yes, otherwise return no.\n\n-----Input-----\n\nThe first line of the input contains a single integer corresponding to number of test cases t (1 \u2264 t \u2264 10^5).\n\nEach of the next t lines will contain four space-separated integers \nn, k, d_1, d_2 (1 \u2264 n \u2264 10^12;\u00a00 \u2264 k \u2264 n;\u00a00 \u2264 d_1, d_2 \u2264 k) \u2014 data for the current test case.\n\n\n-----Output-----\n\nFor each test case, output a single line containing either \"yes\" if it is possible for d_1 and d_2 to be equal after n - k moves,\nor \"no\" otherwise without quotes.\n\n\n-----Examples-----\nInput\n5\n3 0 0 0\n3 3 0 0\n6 4 1 0\n6 3 3 0\n3 3 3 2\n\nOutput\nyes\nyes\nyes\nno\nno"
    },
    {
        "prompt": "The chef was searching for his pen in the garage but he found his old machine with a display and some numbers on it. If some numbers entered then some different output occurs on the display. Chef wants to crack the algorithm that the machine is following.\nExample to identify the pattern :\nInput                            Output\n9                                   36\n5                                   10\n1                                    0\n2                                    1\n\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Each test case contains a single line of input, $N$. \n\n-----Output:-----\nFor each test case, output in a single line answer as displayed on the screen.\n\n-----Constraints-----\n- $1 \\leq T \\leq 10^6$\n- $1 \\leq N \\leq 10^6$\n\n-----Sample Input:-----\n1\n7\n\n-----Sample Output:-----\n21",
        "completion": "\nYou are given a integer N as an input. Write a code to print the average of the multiplication of the given number N with N-1 integer.\n\nExample:\nInput                            Output\n9                                   36\n5                                   10\n1                                    0\n2                                    1\n\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Each test case contains a single line of input, $N$. \n\n-----Output:-----\nFor each test case, output in a single line answer as displayed on the screen.\n\n-----Constraints-----\n- $1 \\leq T \\leq 10^6$\n- $1 \\leq N \\leq 10^6$\n\n-----Sample Input:-----\n1\n7\n\n-----Sample Output:-----\n21"
    },
    {
        "prompt": "There are n cards of different colours placed in a line, each of them can be either red, green or blue cards. Count the minimum number of cards to withdraw from the line so that no two adjacent cards have the same colour.\n\n-----Input-----\n- The first line of each input contains an integer n\u2014 the total number of cards.\n- The next line of the input contains a string s, which represents the colours of the cards. We'll consider the cards in a line numbered from 1 to n from left to right. Then the $i^t$$^h$ alphabet equals \"G\", if the $i^t$$^h$ card is green, \"R\" if the card is red,  and \"B\", if it's blue.\n\n-----Output-----\n- Print a single integer \u2014 the answer to the problem.\n\n-----Constraints-----\n- $1 \\leq n \\leq 50$\n\n-----Sample Input 1:-----\n5\nRGGBG\n\n-----Sample Input 2:-----\n5\nRRRRR\n\n-----Sample Input 3:-----\n2\nBB\n\n-----Sample Output 1:-----\n1\n\n-----Sample Output 2:-----\n4\n\n-----Sample Output 3:-----\n1",
        "completion": "You are  given n cards of  3 different colours placed in a line. Count the minimum number of cards to withdraw from the line so that no two adjacent cards have the same colour.\n\n-----Input-----\n- The first line of each input contains an integer n\u2014 the total number of cards.\n- The next line of the input contains a string s, which represents the colours of the cards. We'll consider the cards in a line numbered from 1 to n from left to right. Then the $i^t$$^h$ alphabet equals \"G\", if the $i^t$$^h$ card is green, \"R\" if the card is red,  and \"B\", if it's blue.\n\n-----Output-----\n- Print a single integer \u2014 the answer to the problem.\n\n-----Constraints-----\n- $1 \\leq n \\leq 50$\n\n-----Sample Input 1:-----\n5\nRGGBG\n\n-----Sample Input 2:-----\n5\nRRRRR\n\n-----Sample Input 3:-----\n2\nBB\n\n-----Sample Output 1:-----\n1\n\n-----Sample Output 2:-----\n4\n\n-----Sample Output 3:-----\n1"
    },
    {
        "prompt": "The chef is trying to decode some pattern problems, Chef wants your help to code it. Chef has one number K to form a new pattern. Help the chef to code this pattern problem.\n\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Each test case contains a single line of input, one integer $K$. \n\n-----Output:-----\nFor each test case, output as the pattern.\n\n-----Constraints-----\n- $1 \\leq T \\leq 100$\n- $1 \\leq K \\leq 100$\n\n-----Sample Input:-----\n4\n1\n2\n3\n4\n\n-----Sample Output:-----\n1\n12\n3\n123\n45\n6\n1234\n567\n89\n10\n\n-----EXPLANATION:-----\nNo need, else pattern can be decode easily.",
        "completion": "Decode the given pattern and obtain new pattern for a given number K.\n\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Each test case contains a single line of input, one integer $K$. \n\n-----Output:-----\nFor each test case, output as the pattern.\n\n-----Constraints-----\n- $1 \\leq T \\leq 100$\n- $1 \\leq K \\leq 100$\n\n-----Sample Input:-----\n4\n1\n2\n3\n4\n\n-----Sample Output:-----\n1\n12\n3\n123\n45\n6\n1234\n567\n89\n10"
    },
    {
        "prompt": "Given an alphanumeric string made up of digits and lower case Latin characters only, find the sum of all the digit characters in the string.\n\n-----Input-----\n- The first line of the input contains an integer T denoting the number of test cases. Then T test cases follow.\n- Each test case is described with a single line containing a string S, the alphanumeric string.\n\n-----Output-----\n- For each test case, output a single line containing the sum of all the digit characters in that string.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 1000\n- 1 \u2264 |S| \u2264 1000, where |S| is the length of the string S.\n\n-----Example-----\nInput:\n1\nab1231da\n\nOutput:\n7\n\n-----Explanation-----\nThe digits in this string are 1, 2, 3 and 1. Hence, the sum of all of them is 7.",
        "completion": "Given an alphanumeric string made up of digits and lower case Latin characters only, find the sum of all the digit characters in the string.\n\n-----Input-----\n- The first line of the input contains an integer T denoting the number of test cases. Then T test cases follow.\n- Each test case is described with a single line containing a string S, the alphanumeric string.\n\n-----Output-----\n- For each test case, output a single line containing the sum of all the digit characters in that string.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 1000\n- 1 \u2264 |S| \u2264 1000, where |S| is the length of the string S.\n\n-----Example-----\nInput:\n1\nab1231da\n\nOutput:\n7\n\n"
    },
    {
        "prompt": "There are total N friends went to Chef's Pizza shop. There they bought a pizza. Chef divided the pizza into K equal slices. Now you have to check whether these K pizza slices can be distributed equally among the friends. Also given that every person should get at least one slice. If the above conditions are possible then print \"YES\" otherwise print \"NO\".\n\n-----Input:-----\nThe first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains a integers N.\nThe second line of each test case contains K.\n\n-----Output:-----\nFor each test case, print a single line containing \"YES\" if the given conditions are true else \"NO\" if the given conditions are false.\n\n-----Constraints-----\n1<=T<=10\n1<=N<=10^6\n1<=K<=10^6\n\n-----Sample Input:-----\n2\n10\n20\n12\n5\n\n-----Sample Output:-----\nYES\nNO\n\n-----EXPLANATION:-----\nExplanation case 1: since there are 10 friends and 20 pizza slice, so each can get 2 slices, so \"YES\".\nExplanation case 2: Since there are 12 friends and only 5 pizza slice, so there is no way pizza slices can be distributed equally and each friend gets at least one pizza slice, so \"NO\".",
        "completion": "You are given a pizza and there is a total of N children. You divided K equal slices of pizza. Now you have to check whether these K pizza slices can be distributed equally among the children if every child should get at least one slice. If the above conditions are possible then print \"YES\" otherwise print \"NO\".\n\n-----Input:-----\nThe first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains a integers N.\nThe second line of each test case contains K.\n\n-----Output:-----\nFor each test case, print a single line containing \"YES\" if the given conditions are true else \"NO\" if the given conditions are false.\n\n-----Constraints-----\n1<=T<=10\n1<=N<=10^6\n1<=K<=10^6\n\n-----Sample Input:-----\n2\n10\n20\n12\n5\n\n-----Sample Output:-----\nYES\nNO\n"
    },
    {
        "prompt": "There are\u00a0n\u00a0soldiers standing in a line. Each soldier is assigned a unique rating value.\nYou have to form a team of 3 soldiers\u00a0amongst them under the following rules:\n\nChoose 3 soldiers with index (i, j, k) with\u00a0rating (rating[i], rating[j], rating[k]).\nA team is valid if:\u00a0 (rating[i] < rating[j] < rating[k]) or (rating[i] > rating[j] > rating[k]) where (0\u00a0<= i <\u00a0j <\u00a0k <\u00a0n).\n\nReturn the number of teams you can form given the conditions. (soldiers can be part of multiple teams).\n\nExample 1:\nInput: rating = [2,5,3,4,1]\nOutput: 3\nExplanation: We can form three teams given the conditions. (2,3,4), (5,4,1), (5,3,1). \n\nExample 2:\nInput: rating = [2,1,3]\nOutput: 0\nExplanation: We can't form any team given the conditions.\n\nExample 3:\nInput: rating = [1,2,3,4]\nOutput: 4\n\n\u00a0\nConstraints:\n\nn == rating.length\n1 <= n <= 200\n1 <= rating[i] <= 10^5\n",
        "completion": "You are given an array of numbers. Make sets of 3 numbers. A set is valid when 1st number < 2nd number < 3rd number or 1st number > 2nd number > 3rd number.\n\nReturn the number of such sets that can be formed. a number can be in multiple sets\n\u00a0\nExample 1:\nInput: rating = [2,5,3,4,1]\nOutput: 3\nExplanation: We can form three sets given the conditions. (2,3,4), (5,4,1), (5,3,1). \n\nExample 2:\nInput: rating = [2,1,3]\nOutput: 0\nExplanation: We can't form any set given the conditions.\n\nExample 3:\nInput: rating = [1,2,3,4]\nOutput: 4\n\n\u00a0\nConstraints:\n\nn == rating.length\n1 <= n <= 200\n1 <= rating[i] <= 10^5\n"
    },
    {
        "prompt": "Master Oogway has forseen that a panda named Po will be the dragon warrior, and the master of Chi. But he did not tell anyone about the spell that would make him the master of Chi, and has left Po confused. Now Po has to defeat Kai, who is the super villian, the strongest of them all. Po needs to master Chi, and he finds a spell which unlocks his powerful Chi. But the spell is rather strange. It asks Po to calculate the factorial of a number! Po is very good at mathematics, and thinks that this is very easy. So he leaves the spell, thinking it's a hoax. But little does he know that this can give him the ultimate power of Chi. Help Po by solving the spell and proving that it's not a hoax.\n\n-----Input-----\nFirst line of input contains an integer T denoting the number of test cases.\nThe next T lines contain an integer N.\n\n-----Output-----\nFor each test case, print a single line containing the solution to the spell which is equal to factorial of N, i.e. N!. Since the output could be large, output it modulo 1589540031(Grand Master Oogway's current age).\n\n-----Constraints-----\n- 1 \u2264 T \u2264 100000\n- 1 \u2264 N \u2264 100000\n\n-----Example-----\nInput:\n4\n1\n2\n3\n4\n\nOutput:\n1\n2\n6\n24",
        "completion": "\n\nYou are given a positive integer n. Your task is to print the factorial of each number from 1 to n.\n\n-----Input-----\nFirst line of input contains an integer T denoting the number of test cases.\nThe next T lines contain an integer N.\n\n-----Output-----\nFor each test case, print a single line containing the solution to the spell which is equal to factorial of N, i.e. N!. Since the output could be large, output it modulo 1589540031.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 100000\n- 1 \u2264 N \u2264 100000\n\n-----Example-----\nInput:\n4\n1\n2\n3\n4\n\nOutput:\n1\n2\n6\n24"
    },
    {
        "prompt": "Given a binary tree, return the zigzag level order traversal of its nodes' values. (ie, from left to right, then right to left for the next level and alternate between).\n\n\nFor example:\nGiven binary tree [3,9,20,null,null,15,7],\n\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n\n\n\nreturn its zigzag level order traversal as:\n\n[\n  [3],\n  [20,9],\n  [15,7]\n]",
        "completion": "Given a binary tree, return the zigzag level order traversal of its nodes' values.\n\nFor example:\nGiven binary tree [3,9,20,null,null,15,7],\n\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n\n\n\nreturn its zigzag level order traversal as:\n\n[\n  [3],\n  [20,9],\n  [15,7]\n]"
    },
    {
        "prompt": "Mr. Das is a teacher teaching for several years in a school. He is not computer savvy. Due to lockdown, now he has to take classes online. Recently he took an online exam for students of different classes. Now, he will call parents of all the students who scored lower than average marks for the class. He has requested you to give the name $X$, parent's phone number $P$, and marks obtained $M$ to him.\n\n-----Input:-----\n- First line contains $T$ no. of test cases\n- for every test case, first line contains an integer $N$, no. of students of his class \n- Next $N$ lines contain $X$, $P$ , and $M$ separated by space\n\n-----Output:-----\nFor every test case, find details of the students who scored below average, then print $X, P, M$  separated by space on a new line as per the increasing order of their marks. In case there are multiple students with the same marks, print them as per the order of their occurrence in the input\n\n-----Constraints-----\n- $1 \\leq T \\leq 20$\n- X contains characters between a-z and A-Z  with a maximum length of 20\n- $1 \\leq N \\leq 100$\n- P is 10 digits\n- $0 \\leq M \\leq 100$\n\n-----Sample Input:-----\n2  \n3\nRahul 1345964789 47\nRupendra 1457856987 58\nPriya 1478569820 45\n2\nTanuja 4310779415 97\nAkash 3689781245 43\n\n-----Sample Output:-----\nPriya 1478569820 45\nRahul 1345964789 47\nAkash 3689781245 43\n\n-----EXPLANATION:-----\nIn #1, Priya and Rahul's number was lower than average.\nIn #2, Akash's number was lower than average",
        "completion": "You are given n students with their name, parent's phonenumber and marks of a class.Find all the students who scored lower than average marks for the class. \n\n-----Input:-----\n- First line contains $T$ no. of test cases\n- for every test case, first line contains an integer $N$, no. of students of his class \n- Next $N$ lines contain $X$, $P$ , and $M$ separated by space\n\n-----Output:-----\nFor every test case, find details of the students who scored below average, then print $X, P, M$  separated by space on a new line as per the increasing order of their marks. In case there are multiple students with the same marks, print them as per the order of their occurrence in the input\n\n\n\n-----Sample Input:-----\n2  \n3\nRahul 1345964789 47\nRupendra 1457856987 58\nPriya 1478569820 45\n2\nTanuja 4310779415 97\nAkash 3689781245 43\n\n-----Sample Output:-----\nPriya 1478569820 45\nRahul 1345964789 47\nAkash 3689781245 43\n\n"
    },
    {
        "prompt": "Given two strings representing two complex numbers.\n\n\nYou need to return a string representing their multiplication. Note i2 = -1 according to the definition.\n\n\nExample 1:\n\nInput: \"1+1i\", \"1+1i\"\nOutput: \"0+2i\"\nExplanation: (1 + i) * (1 + i) = 1 + i2 + 2 * i = 2i, and you need convert it to the form of 0+2i.\n\n\n\nExample 2:\n\nInput: \"1+-1i\", \"1+-1i\"\nOutput: \"0+-2i\"\nExplanation: (1 - i) * (1 - i) = 1 + i2 - 2 * i = -2i, and you need convert it to the form of 0+-2i.\n\n\n\nNote:\n\nThe input strings will not have extra blank.\nThe input strings will be given in the form of a+bi, where the integer a and b will both belong to the range of [-100, 100]. And the output should be also in this form.",
        "completion": "You are given two strings representing two complex numbers. Write program to return a string representing their multiplication. \n\n\nExample 1:\n\nInput: \"1+1i\", \"1+1i\"\nOutput: \"0+2i\"\n\n\nExample 2:\n\nInput: \"1+-1i\", \"1+-1i\"\nOutput: \"0+-2i\"\n"
    },
    {
        "prompt": "Chef is good at making pancakes. Generally he gets requests to serve N pancakes at once.\nHe serves them in the form of a stack.\nA pancake can be treated as a circular disk with some radius.\nChef needs to take care that when he places a pancake on the top of the stack the radius of the pancake should not exceed the radius of the largest pancake in the stack by more than 1. \nAdditionally all radii should be positive integers, and the bottom most pancake should have its radius as 1.\nChef wants you to find out in how many ways can he create a stack containing N pancakes.\nInput\nFirst line of the input contains T (T <= 1000) denoting the number of test cases.\nT lines follow each containing a single integer N (1 <= N <= 1000) denoting the size of the required stack.\nOutput\nFor each case the output should be a single integer representing the number of ways a stack of size N can be created. As the answer can be large print it modulo 1000000007.\nExample\nInput\n2\n1\n2\n\nOutput\n1\n2",
        "completion": "A stack of circular disk  should be arranged in such a way that radius of\ndisk on the top of the stack should not exceed the radius of the largest disk in the stack by more than 1. \nThe bottom most disk should have its radius as 1.\nFind out in how many ways  stack can be created containing N disks.\n\n\nInput\nFirst line of the input contains T (T <= 1000) denoting the number of test cases.\nT lines follow each containing a single integer N (1 <= N <= 1000) denoting the size of the required stack.\n\nOutput\nFor each case the output should be a single integer representing the number of ways a stack of size N can be created. As the answer can be large print it modulo 1000000007.\n\nExample\n\nInput\n2\n1\n2\n\nOutput\n1\n2"
    },
    {
        "prompt": "To almost all of us solving sets of linear equations is quite obviously the most exciting bit of linear algebra. \nBenny does not agree though and wants to write a quick program to solve his homework problems for him. \nUnfortunately Benny's lack of interest in linear algebra means he has no real clue on how to go about this. \nFortunately, you can help him!\n\nWrite a method ```solve``` that accepts a list of linear equations that your method will have to solve. \nThe output should be a map (a `Map` object in JavaScript) with a value for each variable in the equations. \nIf the system does not have a unique solution (has infinitely many solutions or is unsolvable), return ```null``` (`None` in python).\n\nFor example :  \n  \n\"2x + 4y + 6z = 18\"  \n\"3y + 3z = 6\"  \n\"x + 2y = z - 3\"\n  \nshould result in a map :  \n  \nx = 2  \ny = -1  \nz = 3  \n  \nPossible input equations have the following rules:  \n-   Only the plus and minus operators are used on both the left and right hand side of the equation.  \n-   Both sides of the equation can have variables; One variable can appear in multiple terms, on both sides.\n-   Variable names are strings of arbitrary length.  \n-   All coefficients are integers and generally fall within the range of -150 to 150, with a few ranging from -1000 to 1000. Free terms are integers in range -20000 to 20000.  \n-   Equations do not necessarily have variables.  \n-   Equations have exactly one operator (+ or -) between terms.  \n\n\nComparisons are performed with accuracy of `1e-6`.\n\n**Note on numerical stability:**\n\nThere are many possible ways to solve a system of linear equations. One group of such algorithms is based on reduction and elimination methods. If you are going to use any of these, remember that such algorithms are in general *numerically unstable*, i.e. division operations repeated over and over introduce inaccuracies which accumulate from row to row. As a result it might occur that some value which is expected to be zero is actually larger, for example, `2.5e-10`. Such inaccuracies tend to be bigger in large equation systems, and random tests check systems of up to 26 equations. If it happens that small tests pass for you, and large tests fail, it probably means that you did not account for inaccuracies correctly.\nAlso note that tests do not depend on any reference solution, so the way how test cases are generated _is numerically stable_ - the only source of inaccuracies is your solution, and you need to account for it.\n\n```if:python\n___Note for python users:___\n\n`numpy` module has been disabled, so that the task matches the one of the other languages. There is an anti-cheat measure about that, so you won't be able to import some other modules too (either way, you shouldn't need any module to solve this kata...)\n```",
        "completion": "The input given are sets of linear equations.\nWrite a method ```solve``` that accepts a list of linear equations that your method will have to solve. \nThe output should be a map object with a value for each variable in the equations. \nIf the system has infinitely many solutions or is unsolvable, return ```null``` or `None` in python.\n\nFor example :  \n  \n\"2x + 4y + 6z = 18\"  \n\"3y + 3z = 6\"  \n\"x + 2y = z - 3\"\n  \nshould result in a map :  \n  \nx = 2  \ny = -1  \nz = 3  \n  \nPossible input equations have the following rules:  \n-   Only the plus and minus operators are used on both the left and right hand side of the equation.  \n-   Both sides of the equation can have variables; One variable can appear in multiple terms, on both sides.\n-   Variable names are strings of arbitrary length.  \n-   All coefficients are integers and generally fall within the range of -150 to 150, with a few ranging from -1000 to 1000. Free terms are integers in range -20000 to 20000.  \n-   Equations do not necessarily have variables.  \n-   Equations have exactly one operator (+ or -) between terms.  \n\n\nComparisons are performed with accuracy of `1e-6`.\n\n**Note on numerical stability:**\n\nThere are many possible ways to solve a system of linear equations. One group of such algorithms is based on reduction and elimination methods. If you are going to use any of these, remember that such algorithms are in general *numerically unstable*, i.e. division operations repeated over and over introduce inaccuracies which accumulate from row to row. As a result it might occur that some value which is expected to be zero is actually larger, for example, `2.5e-10`. Such inaccuracies tend to be bigger in large equation systems, and random tests check systems of up to 26 equations. If it happens that small tests pass for you, and large tests fail, it probably means that you did not account for inaccuracies correctly.\nAlso note that tests do not depend on any reference solution, so the way how test cases are generated _is numerically stable_ - the only source of inaccuracies is your solution, and you need to account for it.\n\n```if:python\n___Note for python users:___\n\n`numpy` module has been disabled, so that the task matches the one of the other languages. There is an anti-cheat measure about that, so you won't be able to import some other modules too (either way, you shouldn't need any module to solve this kata...)\n```"
    },
    {
        "prompt": "Chef Vivek is good in mathematics and likes solving problems on prime numbers. One day his friend Jatin told him about Victory numbers. Victory number can be defined as a number formed after summing up all the prime numbers till given number n. Now, chef Vivek who is very fond of solving questions on prime numbers got busy in some other tasks. Your task is to help him finding victory number.\n\n-----Input:-----\n- First line will contain $T$, number of test cases. Then the test cases follow. \n- Each test case contains of a single line of input $N$ till which sum of all prime numbers between 1 to n has to be calculated.\n\n-----Output:-----\nFor each test case, output in a single line answer to the victory number.\n\n-----Constraints-----\n- $1 <= T <= 1000$\n- $1 <= N <= 10^6$\n\n-----Sample Input:-----\n3\n22\n13\n10\n\n-----Sample Output:-----\n77\n41\n17",
        "completion": "\nYou are given a number N. You have to find all the prime number which are less than N and print the sum of all these prime numbers.\n\n-----Input:-----\n- First line will contain $T$, number of test cases. Then the test cases follow. \n- Each test case contains of a single line of input $N$ till which sum of all prime numbers between 1 to n has to be calculated.\n\n-----Output:-----\nFor each test case, output in a single line answer to sum of all the prime number.\n\n-----Constraints-----\n- $1 <= T <= 1000$\n- $1 <= N <= 10^6$\n\n-----Sample Input:-----\n3\n22\n13\n10\n\n-----Sample Output:-----\n77\n41\n17"
    },
    {
        "prompt": "Two integers A and B are the inputs. Write a program to find GCD and LCM of A and B.\n\n-----Input-----\n\nThe first line contains an integer T, total number of testcases. Then follow T lines, each line contains an integer A and B. \n\n-----Output-----\nDisplay the GCD and LCM of A and B separated by space respectively. The answer for each test case must be displayed in a new line.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 1000\n- 1 \u2264 A,B \u2264 1000000\n\n-----Example-----\nInput\n3 \n120 140\n10213 312\n10 30\n\nOutput\n\n20 840\n1 3186456\n10 30",
        "completion": "Two integers A and B are the inputs. Write a program to find GCD and LCM of A and B.\n\n-----Input-----\n\nThe first line contains an integer T, total number of testcases. Then follow T lines, each line contains an integer A and B. \n\n-----Output-----\nDisplay the GCD and LCM of A and B separated by space respectively. The answer for each test case must be displayed in a new line.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 1000\n- 1 \u2264 A,B \u2264 1000000\n\n-----Example-----\nInput\n3 \n120 140\n10213 312\n10 30\n\nOutput\n\n20 840\n1 3186456\n10 30"
    },
    {
        "prompt": "Chef has an array of N natural numbers most of them are repeated. Cheffina challenges chef to find all numbers(in ascending order) whose frequency is strictly more than K.\n\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Each test case contains two lines of input, two integers $N, K$.\n- N space-separated natural numbers.\n\n-----Output:-----\nFor each test case, output in a single line answer.\n\n-----Constraints-----\n- $1 \\leq T \\leq 10$\n- $1 \\leq N, K \\leq 10^5$\n- $1 \\leq arr[i] \\leq 10^5$\n\n-----Sample Input:-----\n1\n5 1\n5 2 1 2 5\n\n-----Sample Output:-----\n2 5",
        "completion": "You are given an array of N natural numbers and most of them are repeated. find all numbers(in ascending order) whose frequency is strictly more than K.\n\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Each test case contains two lines of input, two integers $N, K$.\n- N space-separated natural numbers.\n\n-----Output:-----\nFor each test case, output in a single line answer.\n\n-----Constraints-----\n- $1 \\leq T \\leq 10$\n- $1 \\leq N, K \\leq 10^5$\n- $1 \\leq arr[i] \\leq 10^5$\n\n-----Sample Input:-----\n1\n5 1\n5 2 1 2 5\n\n-----Sample Output:-----\n2 5"
    },
    {
        "prompt": "Sumit and Dhiraj are roommates in a hostel of NIT Jamshedpur,One day after completing there boring assignments of Artificial Intelligence, they decided to play a game as it was dhiraj,s idea to play a game so he started explaining the rules of the game to sumit.\nSo the game was as follows-They randomly took a number N after that they find all its divisors.Suppose first sumit took a divisor then dhiraj and so on.The player who will be having the last divisor with him will win the game.Rohit their mutual friend,was observing them play. Can you help Rohit predict the outcome of game? If Sumit wins print \"YES\" without quotes and \"NO\" without quotes, if Dhiraj wins\nthe game.\n\n-----Input-----\nInput starts with an integer T denoting the number of test cases Each test case starts with a line containing an integer N the number.\n\n-----Output-----\nOutcome of each game in a separate line\n\n-----Constraints-----\n- 1 \u2264 T \u2264 10^3\n- 1 \u2264 N \u2264 10^18\n\n-----Sub tasks-----\n- Subtask #1:(10 points)\n\n- 1 \u2264 T \u2264 10\n- 1 \u2264 N \u2264 103\n- Subtask #2:(25 points)\n\n- 1 \u2264 T \u2264 50\n- 1 \u2264 N \u2264 1016\n- Subtask #3:(65 points)\n\n- 1 \u2264 T \u2264 103\n- 1 \u2264 N \u2264 1018\n\n-----Example-----\nInput:\n2\n4\n5\n\nOutput:\nYES\nNO",
        "completion": "Given a number N, return YES if it has an even number of positive divisors, NO otherwise.\n\n-----Input-----\nInput starts with an integer T denoting the number of test cases. Each test case starts with a line containing an integer N the number.\n\n-----Output-----\nOutcome of each game in a separate line.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 10^3\n- 1 \u2264 N \u2264 10^18\n\n-----Sub tasks-----\n- Subtask #1:(10 points)\n\n- 1 \u2264 T \u2264 10\n- 1 \u2264 N \u2264 103\n- Subtask #2:(25 points)\n\n- 1 \u2264 T \u2264 50\n- 1 \u2264 N \u2264 1016\n- Subtask #3:(65 points)\n\n- 1 \u2264 T \u2264 103\n- 1 \u2264 N \u2264 1018\n\n-----Example-----\nInput:\n2\n4\n5\n\nOutput:\nYES\nNO"
    },
    {
        "prompt": "Dinesh is very fond of sweets recently his aunt Riya gifted him an array $a$ of sweets of size $N$. The ith sweet is of the type $a[i]$. His mother told him that he can choose one type of sweet in a day and eat at most 2 sweets of that type. Since he has to eat all the sweets as quickly as possible because his cousins are arriving. Find out the minimum number of days in which he can eat all the sweets gifted by his aunt Riya. \n\n-----Input:-----\n- First-line will contain $N$, the number of sweets.  \n- The next line will contain $N$ space integers denoting the type of sweets.\n\n-----Output:-----\nOutput the minimum number of days in which he can eat all the sweets.\n\n-----Constraints-----\n- $1 \\leq N \\leq 10000$\n- $1 \\leq a[i] \\leq 10^3$\n\n-----Sample Input:-----\n3\n1 2 2\n\n-----Sample Output:-----\n2",
        "completion": "\nYou are given an array $a$ of item of size $N$.The ith item is of the type $a[i]$. You can choose one type of item in a day and purchase at most 2 items of that type.Find out the minimum number of days in which all items are purchased.\n\n-----Input:-----\n- First-line will contain $N$, the number of item.  \n- The next line will contain $N$ space integers denoting the type of item.\n\n-----Output:-----\nOutput the minimum number of days in which he can eat all the sweets.\n\n-----Constraints-----\n- $1 \\leq N \\leq 10000$\n- $1 \\leq a[i] \\leq 10^3$\n\n-----Sample Input:-----\n3\n1 2 2\n\n-----Sample Output:-----\n2"
    },
    {
        "prompt": "Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.\n\nExample 1:\n\n\nInput: 1->2->3->3->4->4->5\nOutput: 1->2->5\n\n\nExample 2:\n\n\nInput: 1->1->1->2->3\nOutput: 2->3",
        "completion": "Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.\n\nExample 1:\n\n\nInput: 1->2->3->3->4->4->5\nOutput: 1->2->5\n\n\nExample 2:\n\n\nInput: 1->1->1->2->3\nOutput: 2->3"
    },
    {
        "prompt": "Chef and Chefina are best friends. Chefina wants to test the Problem Solving skills of chef so she provides Chef 2 integer number  $X$ and $Y$\nThe task of chef is to take the  two numbers $X$ and $Y$ and return their SUM.\nIdentify whether Chef can solve the problem or not? \n\n-----Input:-----\n- First line will contain the two integers $X$ and $Y$.\n\n-----Output:-----\nFor each testcase, output in a single line the SUM of these two numbers $X$ and $Y$.\n\n-----Constraints-----\n- $1 \\leq X \\leq 100$\n- $1 \\leq Y \\leq 100$\n\n-----Sample Input:-----\n6 70\n\n-----Sample Output:-----\n76",
        "completion": "\nYou are given two number $X$ and $Y$. The task is to take the  two numbers $X$ and $Y$ and return their SUM.\n\n\n-----Input:-----\n- First line will contain the two integers $X$ and $Y$.\n\n-----Output:-----\nFor each testcase, output in a single line the SUM of these two numbers $X$ and $Y$.\n\n-----Constraints-----\n- $1 \\leq X \\leq 100$\n- $1 \\leq Y \\leq 100$\n\n-----Sample Input:-----\n6 70\n\n-----Sample Output:-----\n76"
    },
    {
        "prompt": "Master Shifu is training Po to become The Dragon Warrior and as a final assignment he must obtain maximum deliciousness from dumplings. There are  $N$ plates of dumplings in front of him with deliciousness $A_1, A_2, \\ldots, A_N$, Po can choose any number of continuous plates of  dumplings. The total deliciousness is the sum of deliciousness of all the  chosen dumplings.\nWhat is the minimum number of plates he must choose so that total deliciousness is maximum possible?\nNote: Po must choose atleast one plate.\n\n-----Input:-----\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\n- The first line of each test case contains a single integer $N$.\n- The second line contains $N$ space-separated integers $A_1, A_2, \\ldots, A_N$.\n\n-----Output:-----\nFor each test case, print a single line containing one integer.\n\n-----Constraints-----\n- $1 \\le T \\le 10$\n- $1 \\le N \\le 2 \\cdot 10^5$\n- $0 \\le A_i \\le 10^9$\n\n-----Sample Input:-----\n2\n4\n1 2 3 4\n5\n3 2 0 3 0\n\n-----Sample Output:-----\n4\n4",
        "completion": "You are given N values with weight attached to each value. \nYou need to find minimum number of continuous values to be chosen such that total weight of these values is maximum possible.\nYou need to chose atleast one value.\n\n-----Input:-----\n- The first line of the input contains a single integer T denoting the number of test cases. The description of T test cases follows.\n- The first line of each test case contains a single integer N.\n- The second line contains N space-separated integers A_1, A_2,....., A_N.\n\n-----Output:-----\nFor each test case, print a single line containing one integer.\n\n-----Constraints-----\n- 1 <= T <= 10\n- 1 <= N <= 2 * 10^5\n- 0 <= A_i <= 10^9\n\n-----Sample Input:-----\n2\n4\n1 2 3 4\n5\n3 2 0 3 0\n\n-----Sample Output:-----\n4\n4"
    },
    {
        "prompt": "Chef and his friends are playing the game AMONG US. They all have chosen their names as numbers. There are N people in Chef\u2019s group including him, and each swears that he is not the imposter. However, it turns out there were N+1 people in the game. Now all that Chef needs to know is the name of the imposter, which is a number. Also remember that numbers can be duplicate. Can you help out Chef in finding the imposter?\nInput : \nFirst line contains the value of N. Second line contains the N numbers that Chef\u2019s friends used as their names. Third line contains the N+1 numbers that people in the game have used as their names.\nOutput : \nPrint the extra number in new line.\nConstraints : \n1 \u2264 Numbers used as names \u2264 1,000\n1 \u2264 N \u2264 1,000,000\nSample Input : \n3\n4 2 5\n4 2 3 5\nSample Output : \n3",
        "completion": "Given two unordered lists of Size N and N+1 find and return the additional element in the second list.\nInput : \nFirst line contains the value of N. Second line contains list of size N. Third line contains list of size N+1.\nOutput : \nPrint the extra number in new line.\nConstraints : \n1 \u2264 Elements \u2264 1,000\n1 \u2264 N \u2264 1,000,000\nSample Input : \n3\n4 2 5\n4 2 3 5\nSample Output : \n3"
    },
    {
        "prompt": "We stack glasses in a pyramid, where the first row has 1 glass, the second row has 2 glasses, and so on until the 100th row.\u00a0 \nEach glass holds one cup (250ml) of champagne.\n\nThen, some champagne is poured in the first glass at the top.\u00a0 \nWhen the top most glass is full, any excess liquid poured will fall equally to the glass immediately to the left and right of it.\u00a0 \nWhen those glasses become full, any excess champagne will fall equally to the left and right of those glasses, and so on.\u00a0 (A glass at the bottom row has it's excess champagne fall on the floor.)\n\nFor example, after one cup of champagne is poured, the top most glass is full.\u00a0 \nAfter two cups of champagne are poured, the two glasses on the second row are half full.\u00a0 \nAfter three cups of champagne are poured, those two cups become full - there are 3 full glasses total now.\u00a0 \nAfter four cups of champagne are poured, the third row has the middle glass half full, and the two outside glasses are a quarter full, as pictured below.\n\n\n\nNow after pouring some non-negative integer cups of champagne, return how full the j-th glass in the i-th row is (both i and j are 0 indexed.)\n\n\u00a0\n\n\nExample 1:\nInput: poured = 1, query_glass = 1, query_row = 1\nOutput: 0.0\nExplanation: We poured 1 cup of champange to the top glass of the tower (which is indexed as (0, 0)). There will be no excess liquid so all the glasses under the top glass will remain empty.\n\nExample 2:\nInput: poured = 2, query_glass = 1, query_row = 1\nOutput: 0.5\nExplanation: We poured 2 cups of champange to the top glass of the tower (which is indexed as (0, 0)). There is one cup of excess liquid. The glass indexed as (1, 0) and the glass indexed as (1, 1) will share the excess liquid equally, and each will get half cup of champange.\n\n\n\u00a0\n\nNote:\n\n\n       poured\u00a0will\u00a0be\u00a0in the range of [0, 10 ^ 9].\n       query_glass and query_row will be in the range of [0, 99].",
        "completion": "We stack glasses in a pyramid, where the first row has 1 glass, the second row has 2 glasses, and so on until the 100th row.\u00a0 \nEach glass holds one cup of champagne.\n\nThen, some champagne is poured in the first glass at the top.\u00a0 \nWhen the top most glass is full, any excess liquid poured will fall equally to the glass immediately to the left and right of it.\u00a0 \nWhen those glasses become full, any excess champagne will fall equally to the left and right of those glasses, and so on.\n\nNow after pouring some non-negative integer cups of champagne, return how full the j-th glass in the i-th row is (both i and j are 0 indexed.)\n\nGlasses poured\u00a0will\u00a0be\u00a0in the range of [0, 10 ^ 9].\ni and j will be in the range of [0, 99].\n\u00a0\n\nExample 1:\nInput: poured = 1, query_glass = 1, query_row = 1\nOutput: 0.0\nExplanation: We poured 1 cup of champange to the top glass of the tower (which is indexed as (0, 0)). \nThere will be no excess liquid so all the glasses under the top glass will remain empty.\n\nExample 2:\nInput: poured = 2, query_glass = 1, query_row = 1\nOutput: 0.5\nExplanation: We poured 2 cups of champange to the top glass of the tower (which is indexed as (0, 0)). There is one cup of excess liquid. \nThe glass indexed as (1, 0) and the glass indexed as (1, 1) will share the excess liquid equally, and each will get half cup of champange."
    },
    {
        "prompt": "Chef owns an icecream shop in Chefland named scoORZ. There are only three types of coins in Chefland: Rs. 5, Rs. 10 and Rs. 15. An icecream costs Rs. 5.\nThere are $N$ people (numbered $1$ through $N$) standing in a queue to buy icecream from scoORZ. Each person wants to buy exactly one icecream. For each valid $i$, the $i$-th person has one coin with value $a_i$. It is only possible for someone to buy an icecream when Chef can give them back their change exactly \u2015 for example, if someone pays with a Rs. 10 coin, Chef needs to have a Rs. 5 coin that he gives to this person as change.\nInitially, Chef has no money. He wants to know if he can sell icecream to everyone in the queue, in the given order. Since he is busy eating his own icecream, can you tell him if he can serve all these people?\n\n-----Input-----\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\n- The first line of each test case contains a single integer $N$.\n- The second line contains $N$ space-separated integers $a_1, a_2, \\ldots, a_N$.\n\n-----Output-----\nFor each test case, print a single line containing the string \"YES\" if all people can be served or \"NO\" otherwise (without quotes).\n\n-----Constraints-----\n- $1 \\le T \\le 100$\n- $1 \\le N \\le 10^3$\n- $a_i \\in \\{5, 10, 15\\}$ for each valid $i$\n\n-----Subtasks-----\nSubtask #1 (40 points): $a_i \\in \\{5, 10\\}$ for each valid $i$\nSubtask #2 (60 points): original constraints\n\n-----Example Input-----\n3\n2\n5 10\n2\n10 5\n2\n5 15\n\n-----Example Output-----\nYES\nNO\nNO\n\n-----Explanation-----\nExample case 1: The first person pays with a Rs. 5 coin. The second person pays with a Rs. 10 coin and Chef gives them back the Rs. 5 coin (which he got from the first person) as change.\nExample case 2: The first person already cannot buy an icecream because Chef cannot give them back Rs. 5.\nExample case 3: The first person pays with a Rs. 5 coin. The second person cannot buy the icecream because Chef has only one Rs. 5 coin, but he needs to give a total of Rs. 10 back as change.",
        "completion": "A icecream costs 5 Rs. Only coin of Rs 5 ,Rs 10 and Rs 15 can be used to buy icecream. There are N number of buyer. In beginning, shopkeeper does not have any money. Icecream can be bought only if shopkeeper can return the change exactly. Write a code to check whether the shopkeeper can sell the icecream or not.\n\n\n-----Input-----\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\n- The first line of each test case contains a single integer $N$.\n- The second line contains $N$ space-separated integers $a_1, a_2, \\ldots, a_N$.\n\n-----Output-----\nFor each test case, print a single line containing the string \"YES\" if all people can be served or \"NO\" otherwise (without quotes).\n\n-----Constraints-----\n- $1 \\le T \\le 100$\n- $1 \\le N \\le 10^3$\n- $a_i \\in \\{5, 10, 15\\}$ for each valid $i$\n\n-----Subtasks-----\nSubtask #1 (40 points): $a_i \\in \\{5, 10\\}$ for each valid $i$\nSubtask #2 (60 points): original constraints\n\n-----Example Input-----\n3\n2\n5 10\n2\n10 5\n2\n5 15\n\n-----Example Output-----\nYES\nNO\nNO\n"
    },
    {
        "prompt": "Stuart is obsessed to numbers. He like all type of numbers in fact he is having a great collection of numbers in his room. His collection includes N different large numbers. But today he is searching for a number which is having maximum frequency of digit X. Numbers are large so he can\u2019t do the task on his own. Help him to find a number having maximum frequency of digit X.\n\n-----Input-----\nFirst Line contains number of test cases T. First Line of each test case contains N. Next line contains N space separated integers A1,A2,A3,....,AN. Where Ai integer indicates ith number in Stuart's room. Next Line contains digit X.\n\n-----Output-----\nOutput the number which is having maximum frequency of digit X. If two or more numbers are having same maximum frequency then output the first occurred number among them in A1,A2,A3,....,AN\n\n-----Constraints-----\n- 1 \u2264 T \u2264 30\n- 1 \u2264 N \u2264 100\n- 1 \u2264 Ai \u2264 10200\n- 0 \u2264 X \u2264 9\n\n-----Example-----\nInput:\n2\n5\n345 1323 165 98 456\n3\n5\n335 876 98 1323 349\n3\n\nOutput:\n1323\n335\n\n-----Explanation-----\nExample case 1. 1323 number is having maximum occurrence of digit 3.\nExample case 2. 335 & 1323 are having maximum occurrence of digit 3 so output must be first occurred number in the array i.e. 335.",
        "completion": "You are given N different large numbers.You have to search for a number which is having maximum frequency of digit X. \n\n-----Input-----\nFirst Line contains number of test cases T. First Line of each test case contains N. Next line contains N space separated integers A1,A2,A3,....,AN. Where Ai integer indicates ith number in Stuart's room. Next Line contains digit X.\n\n-----Output-----\nOutput the number which is having maximum frequency of digit X. If two or more numbers are having same maximum frequency then output the first occurred number among them in A1,A2,A3,....,AN\n\n-----Constraints-----\n- 1 \u2264 T \u2264 30\n- 1 \u2264 N \u2264 100\n- 1 \u2264 Ai \u2264 10200\n- 0 \u2264 X \u2264 9\n\n-----Example-----\nInput:\n2\n5\n345 1323 165 98 456\n3\n5\n335 876 98 1323 349\n3\n\nOutput:\n1323\n335\n"
    },
    {
        "prompt": "$Harshad$ $Mehta$ is planning  a new scam with the stocks he is given a stock of  integer price S and a number K . $harshad$ has got the power to change the number $S$ at most $K$ times\nIn order to raise the price of stock and now cash it for his benefits\nFind the largest price at which $harshad$ can sell the stock in order to maximize his profit \n\n-----Input:-----\n- First line will contain $S$ and  $K$ , the price of the stock and the number K \n\n-----Output:-----\nPrint the largest profit  he can make in a single line.\n\n-----Constraints-----\n- S can take value upto 10^18\nNOTE: use 64 int number to fit range\n- K can take value from [0.. 9]\n\n-----Sample Input:-----\n4483 2\n\n-----Sample Output:-----\n9983\n\n-----EXPLANATION:-----\nFirst two digits of the number are changed to get the required number.",
        "completion": "You are  given a stock of  integer price S and a number K . You can change the number $S$ at most $K$ times\nIn order to raise the price of stock and now cash it for benefits\nFind the largest price at which you can sell the stock in order to maximize profit. \n\n-----Input:-----\n- First line will contain $S$ and  $K$ , the price of the stock and the number K \n\n-----Output:-----\nPrint the largest profit  you can make in a single line.\n\n-----Constraints-----\n- S can take value upto 10^18\nNOTE: use 64 int number to fit range\n- K can take value from [0.. 9]\n\n-----Sample Input:-----\n4483 2\n\n-----Sample Output:-----\n9983\n"
    },
    {
        "prompt": "Chef is baking a cake.\n\nWhile baking, in each minute the size of cake doubles as compared to its previous size.\n\nIn this cake, baking of cake is directly proportional to its size.\nYou are given $a$, the total time taken(in minutes) to bake the whole cake.\n\nLet cake be half baked at $k^{th}$ minute.         \nYour task is to find the value of $k+2$.\n\n-----Input:-----\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of T test cases follows.               \n- The first and only line of each test case contains a single integer $a$.\n\n-----Output:-----\nFor each testcase , print one line, the value of $k+2$.\n\n-----Constraints-----\n- $1 \\leq T \\leq 8 $\n- $2 \\leq a \\leq 10^{128}$\n\n-----Sample Input:-----\n1\n\n2\n\n-----Sample Output:-----\n3\n\n-----Explaination-----\nTime was 1 min when cake was half baked by chef so answer is 1+2=3",
        "completion": "You are given $a$, the total time taken(in minutes) to bake the whole cake and in each minute the size of cake doubles as compared to its previous size.\nLet cake be half baked at $k^{th}$ minute. \nYour task is to find the value of $k+2$.\n\n-----Input:-----\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of T test cases follows.               \n- The first and only line of each test case contains a single integer $a$.\n\n-----Output:-----\nFor each testcase , print one line, the value of $k+2$.\n\n-----Constraints-----\n- $1 \\leq T \\leq 8 $\n- $2 \\leq a \\leq 10^{128}$\n\n-----Sample Input:-----\n1\n\n2\n\n-----Sample Output:-----\n3\n\n"
    },
    {
        "prompt": "You are installing a billboard and want it to have the largest height.\u00a0 The billboard will have two steel supports, one on each side.\u00a0 Each steel support must be an equal height.\nYou have a collection of rods which can be welded together.\u00a0 For example, if you have rods of lengths 1, 2, and 3, you can weld them together to make a support of length 6.\nReturn the largest possible height of your billboard installation.\u00a0 If you cannot support the billboard, return 0.\n\u00a0\nExample 1:\nInput: [1,2,3,6]\nOutput: 6\nExplanation: We have two disjoint subsets {1,2,3} and {6}, which have the same sum = 6.\n\n\nExample 2:\nInput: [1,2,3,4,5,6]\nOutput: 10\nExplanation: We have two disjoint subsets {2,3,5} and {4,6}, which have the same sum = 10.\n\n\n\nExample 3:\nInput: [1,2]\nOutput: 0\nExplanation: The billboard cannot be supported, so we return 0.\n\n\n\u00a0\nNote:\n\n0 <= rods.length <= 20\n1 <= rods[i] <= 1000\nThe sum of rods is at most 5000.",
        "completion": "You are given an array of integers. You need to add these integers without repetition and generate two largest possible numbers of equal value. For example, if you have numbers 1, 2, and 3, you can add them together to make a sum of value 6.\nReturn the largest possible sum.\u00a0 If you cannot make two sums of equal value, return 0.\n\u00a0\nExample 1:\nInput: [1,2,3,6]\nOutput: 6\nExplanation: We have two disjoint subsets {1,2,3} and {6}, which have the same sum = 6.\n\n\nExample 2:\nInput: [1,2,3,4,5,6]\nOutput: 10\nExplanation: We have two disjoint subsets {2,3,5} and {4,6}, which have the same sum = 10.\n\n\n\nExample 3:\nInput: [1,2]\nOutput: 0\nExplanation: tow equal interers cannot be generated, so we return 0.\n\n\n\u00a0\nNote:\n\n0 <= rods.length <= 20\n1 <= rods[i] <= 1000\nThe sum of rods is at most 5000.\n"
    },
    {
        "prompt": "Motu and Patlu are racing against each other on a circular track of radius $R$. Initially they are at the same point on the track and will run in same direction .The coach ordered them to run $X$ rounds of the circular field. Patlu wants to know how many times they will meet after the race starts and  before any of them finishes $X$ rounds. But he is busy in warm up so he wants you to calculate this. You are given speed of both Motu and Patlu ($A$ and $B$). \n\n-----Input:-----\n- First line will contain $T$, number of testcases. Then the testcases follow. \n- Each testcase contains of a single line of input, four integers $X, R, A, B$. \n\n-----Output:-----\nFor each testcase, output in a single line answer the number of times whey will meet before any of them completes $X$ rounds.\n\n-----Constraints-----\n- $1 \\leq T \\leq 1000$\n- $1 \\leq R \\leq 10^9$\n- $1 \\leq X \\leq 10^9$\n- $1 \\leq A \\leq 10^9$\n- $1 \\leq B \\leq 10^9$\n- Speed of both are different\n\n-----Sample Input:-----\n2\n3 10 2 5\n2 20 5 10\n\n-----Sample Output:-----\n1\n0",
        "completion": "You are given circular track of radius $R$.Two person A and B are standing on the same point.They have to complete $X round and speed of A and B are given. You have to find how many times they will meet after the race starts and before completing all the rounds.\n\n\n-----Input:-----\n- First line will contain $T$, number of testcases. Then the testcases follow. \n- Each testcase contains of a single line of input, four integers $X, R, A, B$. \n\n-----Output:-----\nFor each testcase, output in a single line answer the number of times whey will meet before any of them completes $X$ rounds.\n\n-----Constraints-----\n- $1 \\leq T \\leq 1000$\n- $1 \\leq R \\leq 10^9$\n- $1 \\leq X \\leq 10^9$\n- $1 \\leq A \\leq 10^9$\n- $1 \\leq B \\leq 10^9$\n- Speed of both are different\n\n-----Sample Input:-----\n2\n3 10 2 5\n2 20 5 10\n\n-----Sample Output:-----\n1\n0"
    },
    {
        "prompt": "Han Solo and Chewbacca start a space journey to planet Naboo on the Millennium Falcon. During the journey they land at a mysterious planet with high gravity where they find n diamond stones scattered all around. All the stones are of same weight. Each stone has a value according to its purity which can be detected by a special device. They choose to divide the stones fairly among themselves in two halves so that they carry almost equal weights such that the difference between the value of two halves is as small as possible. If n is even, then sizes of two halves must be strictly n/2 and if n is odd, then size of one half must be (n-1)/2 and size of the other half must be (n+1)/2. Given the value of stones, help them to divide the stones among themselves.\n\n-----Input-----\nFirst line consists of an integer n which denotes the number of stones.Second line consists of n space separated integers denoting the value of the stones.\n\n-----Output-----\nFirst line consists of the values of the stones assigned to Han Solo.Second line consists of the values of the stones assigned to Chewbacca.Assume that the set containing the first value in the input is always assigned to Han Solo.Also the values in the output sets must follow the same ordering as the input.\n\n-----Constraints-----\nThe number of stones can range from 2 to 99.The values of the stones vary from 1 to 10^4.\n\n-----Example-----\nInput:\n7\n1 2 3 4 5 6 7\n\nOutput:\n1 2 4 7\n3 5 6\n\n-----Explanation-----\nThese 7 values must be separated into 2 sets of sizes 3 and 4.In this case, it is possible to form two sets (1,2,4,7) & (3,5,6) of equal size.The set containing the first value (i.e.) 1 must be assigned to Han Solo and the elements of the output sets have the same order as the input.",
        "completion": "Given a set of n numbers, divide them into subsets of sizes at most different by 1, such that difference in the sum of numbers in each subset is minimum.\n\n-----Input-----\nFirst line consists of an integer n which denotes the size of the set. Second line is the set.\n\n-----Output-----\nThe first line is the first subset.\nThe second line is the second subset.\n\n-----Constraints-----\nn can range from 2 to 99. The numbers may vary from 1 to 10^4.\n\n-----Example-----\nInput:\n7\n1 2 3 4 5 6 7\n\nOutput:\n1 2 4 7\n3 5 6\n\n-----Explanation-----\nThese 7 values must be separated into 2 sets of sizes 3 and 4.In this case, it is possible to form two sets (1,2,4,7) & (3,5,6) of equal size.The set containing the first value (i.e.) and the elements of the output sets have the same order as the input."
    },
    {
        "prompt": "This is a peculiar functioning setup.\nTwo Tanks are separated from each other by a wall .There is a pipe in the wall which connects  both tanks  which allows flow of water between them . Due to this ,there is change in temperature of both tanks , every minute temperature of Tank with larger temperature among two decreases by one and temperature of Tank  with smaller temperature among two increases by two until equilibrium is reached , But there is a problem .\nThe pipe can't control this flow of water if there is Non-equilibrium (inequality of temperature  on  both sides )  even after $m$ minutes and the pipe will burst after it , your task is to predict whether the pipe will burst or not .\nNote: If equilibrium cannot be reached the process will continue forever.\nThe initial temperature of Cold Tank is $Tc$ , of Hot Tank it is $Th$. \n\n-----Input:-----\n- First line will contain $T$, number of testcases. Then the testcases follow. \n- Each testcase contains of a single line of input, three  integers $m, Tc,Th$. \n\n-----Output:-----\nFor each testcase, output in a single line answer \"Yes\" if Pipe will burst after m minutes \"No\" if pipe will not burst.\n\n-----Constraints-----\n- $1 \\leq T \\leq 100000$\n- $1 \\leq m,Tc,Th \\leq 10^9$\n- $Tc \\leq Th $\n\n-----Sample Input:-----\n2\n4 5 10\n2 2 5\n\n-----Sample Output:-----\nYes\nNo",
        "completion": "Given numbers $m$, $Tc$, $Th$. \nIf the difference between $Tc$ and $Th$ is not divisible by $3$, return \"Yes\".\nElse if the differnce divided by $3$ is more than $m$ return \"Yes\". \nElse return \"No\".\n\n-----Input:-----\n- First line will contain $T$, number of testcases. Then the testcases follow. \n- Each testcase contains of a single line of input, three  integers $m, Tc,Th$. \n\n-----Output:-----\nFor each testcase, output based on the rules.\n\n-----Constraints-----\n- $1 \\leq T \\leq 100000$\n- $1 \\leq m,Tc,Th \\leq 10^9$\n- $Tc \\leq Th $\n\n-----Sample Input:-----\n2\n4 5 10\n2 2 5\n\n-----Sample Output:-----\nYes\nNo"
    },
    {
        "prompt": "Given the root of a binary tree, find the maximum value V for which there exists different nodes A and B where V = |A.val - B.val|\u00a0and A is an ancestor of B.\n(A node A is an ancestor of B if either: any child of A is equal to B, or any child of A is an ancestor of B.)\n\u00a0\nExample 1:\n\nInput: [8,3,10,1,6,null,14,null,null,4,7,13]\nOutput: 7\nExplanation: \nWe have various ancestor-node differences, some of which are given below :\n|8 - 3| = 5\n|3 - 7| = 4\n|8 - 1| = 7\n|10 - 13| = 3\nAmong all possible differences, the maximum value of 7 is obtained by |8 - 1| = 7.\n\n\u00a0\nNote:\n\nThe number of nodes in the tree is between 2 and 5000.\nEach node will have value between 0 and 100000.",
        "completion": "Given the root of a binary tree, find the maximum value V for which there exists different nodes A and B where V = |A.val - B.val|\u00a0and A is an ancestor of B.\n\n\u00a0\nExample 1:\n\nInput: [8,3,10,1,6,null,14,null,null,4,7,13]\nOutput: 7\n\n\u00a0\nNote:\n\nThe number of nodes in the tree is between 2 and 5000.\nEach node will have value between 0 and 100000."
    },
    {
        "prompt": "You're given an integer N. Write a program to calculate the sum of all the digits of N. \n\n-----Input-----\n\nThe first line contains an integer T, the total number of testcases. Then follow T lines, each line contains an integer N. \n\n-----Output-----\nFor each test case, calculate the sum of digits of N, and display it in a new line.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 1000\n- 1 \u2264 N \u2264 1000000\n\n-----Example-----\nInput\n3 \n12345\n31203\n2123\nOutput\n15\n9\n8",
        "completion": "Write a program to calculate the sum of all the digits of given integer N. \n\n-----Input-----\n\nThe first line contains an integer T, the total number of testcases. Then follow T lines, each line contains an integer N. \n\n-----Output-----\nFor each test case, calculate the sum of digits of N, and display it in a new line.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 1000\n- 1 \u2264 N \u2264 1000000\n\n-----Example-----\nInput\n3 \n12345\n31203\n2123\nOutput\n15\n9\n8"
    },
    {
        "prompt": "Saket loves to play with strings. One day , while he was having fun with Cyclic Permutations of available strings to him, he observed that despite being scarce in numbers Vowels were really clingy.Being clingy means for almost every given string, there was a Cyclic Permutation in which atleast two vowels were together.\nSo he decided to check this property for all the available strings to him. As the number of strings can be very large, help Saket determine whether the given string is clingy or not.\n\n-----Input:-----\nThe first line of the input contains a single integer T$T$ denoting the number of test cases. The description of T$T$ test cases follows.\nFirst line of every test case contains an integer N$N$ denoting the length of the string.\nSecond line contains a string S$S$ of length N$N$, consisting only of uppercase english alphabets.\n\n-----Output:-----\nFor each test case, print a single line containing \"Yes\" if any of the cyclic permutations of the string is clingy else print \"No\".\n\n-----Constraints-----\n- 1\u2264T\u22641000$1 \\leq T \\leq 1000$\n- 1\u2264N\u22641000$1 \\leq N \\leq 1000$\n- String S$S$ consists of only upper case english alphabets.\n\n-----Subtasks-----\n- 20 points : 1\u2264N\u22645$1 \\leq N \\leq 5$\n- 80 points : Original$Original$ Constraints$Constraints$\n\n-----Sample Input:-----\n2\n5\nAUXFC\n6\nXBCDEF\n\n-----Sample Output:-----\nYes\n\nNo\n\n-----EXPLANATION:-----\nExample$Example$ case1:$ case 1: $ One of the cyclic permutation is the original string itself, which has \"A\" and \"U\" together.\nExample$Example$ case2:$ case 2: $     None of the cyclic permutation will have 2 vowels together.",
        "completion": "Given a string return \"Yes\" if there are two vowels adjacent in it (first and last letter are adjacent), \"No\" otherwise.\n\n-----Input:-----\nThe first line of the input contains a single integer T$T$ denoting the number of test cases. The description of T$T$ test cases follows.\nFirst line of every test case contains an integer N$N$ denoting the length of the string.\nSecond line contains a string S$S$ of length N$N$, consisting only of uppercase english alphabets.\n\n-----Output:-----\nFor each test case, print a single line containing \"Yes\" if any of the cyclic permutations of the string is clingy else print \"No\".\n\n-----Constraints-----\n- 1\u2264T\u22641000$1 \\leq T \\leq 1000$\n- 1\u2264N\u22641000$1 \\leq N \\leq 1000$\n- String S$S$ consists of only upper case english alphabets.\n\n-----Subtasks-----\n- 20 points : 1\u2264N\u22645$1 \\leq N \\leq 5$\n- 80 points : Original$Original$ Constraints$Constraints$\n\n-----Sample Input:-----\n2\n5\nAUXFC\n6\nXBCDEF\n\n-----Sample Output:-----\nYes\n\nNo\n\n-----EXPLANATION:-----\nExample$Example$ case1:$ case 1: $ \"A\" and \"U\" are adjacent.\nExample$Example$ case2:$ case 2: $ No two adjacent letters are vowels."
    },
    {
        "prompt": "Once N boys and M girls attended a party. You are given a matrix A of N rows and M columns where Aij is 1 if the i-th boy likes the j-th girl, otherwise it will be 0. Note that it is not necessary that if a boy x likes girl y, then girl y should like boy x.\nYou know that if there are two different boys x and y, who both like girl z, then there will be a collision.\nCan you calculate the number of different collisions at this party? Note that order of boys in the collision doesn't matter.\n\n-----Input-----\nThe first line contains a single integer T denoting the number of test cases. Then T test cases follow.\nThe first line of each test case contains two space separated integers N, M denoting the number of boys and girls, respectively.\nEach of the following N lines contain M characters, each of them is either '0' or '1'.\n\n-----Output-----\nFor each test case output a single line containing an integer corresponding to the number of collisions at the party.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 100\n- 1 \u2264 N, M \u2264 10\n\n-----Example-----\nInput:\n2\n4 3\n111\n100\n110\n000\n2 2\n10\n01\n\nOutput:\n4\n0\n\n-----Explanation-----\nExample Case 1. All three boys like the first girl, so there are (1, 2, 1), (1, 3, 1), (2, 3, 1) collisions with her. Boys 1 and 3 both like the second girl so this is one more collision. Only one boy likes the third girl, so there are no collisions with her and thus we have 4 collisions total.\nExample Case 2. For each girl there is only one boy who likes her, so there are no collisions at all.",
        "completion": "\nYou are given a matrix N x M of N boys and M girls where Aij is 1 if the i-th boy likes the j-th girl, otherwise it will be 0. There will be a collison if two boys like the same girl. Calculate the number of different collisions\n\n-----Input-----\nThe first line contains a single integer T denoting the number of test cases. Then T test cases follow.\nThe first line of each test case contains two space separated integers N, M denoting the number of boys and girls, respectively.\nEach of the following N lines contain M characters, each of them is either '0' or '1'.\n\n-----Output-----\nFor each test case output a single line containing an integer corresponding to the number of collisions.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 100\n- 1 \u2264 N, M \u2264 10\n\n-----Example-----\nInput:\n2\n4 3\n111\n100\n110\n000\n2 2\n10\n01\n\nOutput:\n4\n0\n"
    },
    {
        "prompt": "$Neha$  is given a number $N$. She always looks for special thing , this time she is looking for $Special$ $Number$ and $Partial$ $Special$ $Number$. A $Special$ $Number$ is a number whose product of its digits is equal to number itself i.e. $N $, and in this number there is no digit $1$. $Partial$ $Special$ is a number having all the condition same as $Special$ except that it can also have digit $1$ in it .Neha have to count the number of $Special$ and $Partial$ $Special$ $Numbers $for a given  $N$ . She is not so good in programming , so go and help her.\n\n-----Input:-----\n- Integers $N$ is taken as input from input stream. \n\n-----Output:-----\n- Print the number of  $Special$ and $Partial$ $Special$ $Numbers $for a given  $N$.\n\n-----Constraints-----\n- $1 \\leq N \\leq 100$ numbers to be count will be less then 10^6\n\n-----Sample Input:-----\n3\n\n-----Sample Output:-----\n1 20\n\n-----EXPLANATION:-----\nThere are only one natural numbers, the product of the digits of which is 3  :- {3}.\nThere are 20 natural numbers with digit 1 , whose  product of the digits  is 3 :-{13, 31, 113 ,131 311 ,1113 ,1131 ,1311, 3111 ,11113, 11131, 11311 ,13111, 31111, 111113, 111131, 111311,113111, 131111 ,311111}",
        "completion": "You are given a number $N$.You have to find a $Special$ $Number$  and a $Partial$ special number.Special Number are those product of its digits is equal to number itself and there is no digit $1$. $Partial$ $Special$ is a number having all the condition same as $Special$ except that it can also have digit $1$ in it. Print the count of the $Special$ and $Partial$ $Special$ $Numbers $for a given  $N$ . \n\n-----Input:-----\n- Integers $N$ is taken as input from input stream. \n\n-----Output:-----\n- Print the number of  $Special$ and $Partial$ $Special$ $Numbers $for a given  $N$.\n\n-----Constraints-----\n- $1 \\leq N \\leq 100$ numbers to be count will be less then 10^6\n\n-----Sample Input:-----\n3\n\n-----Sample Output:-----\n1 20\n\n-----EXPLANATION:-----\nThere are only one natural numbers, the product of the digits of which is 3  :- {3}.\nThere are 20 natural numbers with digit 1 , whose  product of the digits  is 3 :-{13, 31, 113 ,131 311 ,1113 ,1131 ,1311, 3111 ,11113, 11131, 11311 ,13111, 31111, 111113, 111131, 111311,113111, 131111 ,311111}"
    },
    {
        "prompt": "You have been recently hired as a developer in CodeChef. Your first mission is to implement a feature that will determine the number of submissions that were judged late in a contest.\nThere are $N$ submissions, numbered $1$ through $N$. For each valid $i$, the $i$-th submission was submitted at time $S_i$ and judged at time $J_i$ (in minutes). Submitting and judging both take zero time. Please determine how many submissions received their verdicts after a delay of more than $5$ minutes.\n\n-----Input-----\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\n- The first line of the input contains a single integer $N$.\n- $N$ lines follow. For each valid $i$, the $i$-th of these lines contains two space-separated integers $S_i$ and $J_i$.\n\n-----Output-----\nFor each test case, print a single line containing one integer \u2014 the number of submissions for which the judging was delayed by more than 5 minutes.\n\n-----Constraints-----\n- $1 \\le T \\le 100$\n- $1 \\le N \\le 100$\n- $1 \\le S_i \\le J_i \\le 300$ for each valid $i$\n\n-----Subtasks-----\nSubtask #1 (100 points): original constraints\n\n-----Example Input-----\n1\n5\n1 3\n4 4\n4 10\n1 11\n2 7\n\n-----Example Output-----\n2\n\n-----Explanation-----\nExample case 1: The delays of the respective submissions are $2$ minutes, $0$ minutes, $6$ minutes, $10$ minutes and $5$ minutes. Only submissions $3$ and $4$ are delayed by more than $5$ minutes, hence the answer is $2$.",
        "completion": "You are given $N$ submissions, numbered $1$ through $N$. For each valid $i$, the $i$-th submission was submitted at time $S_i$ and judged at time $J_i$ (in minutes). Submitting and judging both take zero time. Determine how many submissions received their verdicts after a delay of more than $5$ minutes.\n\n-----Input-----\n- The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows.\n- The first line of the input contains a single integer $N$.\n- $N$ lines follow. For each valid $i$, the $i$-th of these lines contains two space-separated integers $S_i$ and $J_i$.\n\n-----Output-----\nFor each test case, print a single line containing one integer \u2014 the number of submissions for which the judging was delayed by more than 5 minutes.\n\n-----Constraints-----\n- $1 \\le T \\le 100$\n- $1 \\le N \\le 100$\n- $1 \\le S_i \\le J_i \\le 300$ for each valid $i$\n\n-----Subtasks-----\nSubtask #1 (100 points): original constraints\n\n-----Example Input-----\n1\n5\n1 3\n4 4\n4 10\n1 11\n2 7\n\n-----Example Output-----\n2\n"
    },
    {
        "prompt": "On a broken calculator that has a number showing on its display, we can perform two operations:\n\nDouble: Multiply the number on the display by 2, or;\nDecrement: Subtract 1 from the number on the display.\n\nInitially, the calculator is displaying the number X.\nReturn the minimum number of operations needed to display the number Y.\n\u00a0\nExample 1:\nInput: X = 2, Y = 3\nOutput: 2\nExplanation: Use double operation and then decrement operation {2 -> 4 -> 3}.\n\nExample 2:\nInput: X = 5, Y = 8\nOutput: 2\nExplanation: Use decrement and then double {5 -> 4 -> 8}.\n\nExample 3:\nInput: X = 3, Y = 10\nOutput: 3\nExplanation:  Use double, decrement and double {3 -> 6 -> 5 -> 10}.\n\nExample 4:\nInput: X = 1024, Y = 1\nOutput: 1023\nExplanation: Use decrement operations 1023 times.\n\n\u00a0\nNote:\n\n1 <= X <= 10^9\n1 <= Y <= 10^9",
        "completion": "You are given two numbers X and Y.\n\nIn one step, you can either double the value of X, or decrement X by 1.\n\nReturn the minimum number of steps required before the value of X equals Y.\n\n\u00a0\nExample 1:\nInput: X = 2, Y = 3\nOutput: 2\nExplanation: Use double operation and then decrement operation {2 -> 4 -> 3}.\n\nExample 2:\nInput: X = 5, Y = 8\nOutput: 2\nExplanation: Use decrement and then double {5 -> 4 -> 8}.\n\nExample 3:\nInput: X = 3, Y = 10\nOutput: 3\nExplanation:  Use double, decrement and double {3 -> 6 -> 5 -> 10}.\n\nExample 4:\nInput: X = 1024, Y = 1\nOutput: 1023\nExplanation: Use decrement operations 1023 times.\n\n\u00a0\nNote:\n\n1 <= X <= 10^9\n1 <= Y <= 10^9"
    },
    {
        "prompt": "Given a binary tree, return the sum of values of its deepest leaves.\n\u00a0\nExample 1:\n\nInput: root = [1,2,3,4,5,null,6,7,null,null,null,null,8]\nOutput: 15\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is between\u00a01\u00a0and\u00a010^4.\nThe value of nodes is between\u00a01\u00a0and\u00a0100.",
        "completion": "Given a binary tree, return the sum of values of its deepest leaves.\n\u00a0\nExample 1:\n\nInput: root = [1,2,3,4,5,null,6,7,null,null,null,null,8]\nOutput: 15\n\n\u00a0\nConstraints:\n\nThe number of nodes in the tree is between\u00a01\u00a0and\u00a010^4.\nThe value of nodes is between\u00a01\u00a0and\u00a0100."
    },
    {
        "prompt": "Given an array nums containing n + 1 integers where each integer is between 1 and n (inclusive), prove that at least one duplicate number must exist. Assume that there is only one duplicate number, find the duplicate one.\n\nExample 1:\n\n\nInput: [1,3,4,2,2]\nOutput: 2\n\n\nExample 2:\n\n\nInput: [3,1,3,4,2]\nOutput: 3\n\nNote:\n\n\n       You must not modify the array (assume the array is read only).\n       You must use only constant, O(1) extra space.\n       Your runtime complexity should be less than O(n2).\n       There is only one duplicate number in the array, but it could be repeated more than once.",
        "completion": "You are given a read only array containing n + 1 integers where each integer is between 1 and n (inclusive), prove that at least one duplicate number must exist. \nAssuming only one duplicate number, find the duplicate one.\nAssuming the array is read only, use only constant extra space and runtime complexity should be less than O(n2)\n\nExample 1:\n\n\nInput: [1,3,4,2,2]\nOutput: 2\n\n\nExample 2:\n\n\nInput: [3,1,3,4,2]\nOutput: 3\n"
    },
    {
        "prompt": "You are given an unweighted, undirected graph. Write a program to check if it's a tree topology.\n\n-----Input-----\n\nThe first line of the input file contains two integers N and M --- number of nodes and number of edges in the graph (0 < N <= 10000, 0 <= M <= 20000). Next M lines contain M edges of that graph --- Each line contains a pair (u, v) means there is an edge between node u and node v (1 <= u,v <= N).\n\n-----Output-----\n\nPrint YES if the given graph is a tree, otherwise print NO.\n\n-----Example-----\nInput:\n3 2\n1 2\n2 3\n\nOutput:\nYES",
        "completion": "Write a program to check for a given unweighted, undirected graph whether it's a tree topology or not.\n\n-----Input-----\n\nThe first line of the input file contains two integers N and M --- number of nodes and number of edges in the graph (0 < N <= 10000, 0 <= M <= 20000). Next M lines contain M edges of that graph --- Each line contains a pair (u, v) means there is an edge between node u and node v (1 <= u,v <= N).\n\n-----Output-----\n\nPrint YES if the given graph is a tree, otherwise print NO.\n\n-----Example-----\nInput:\n3 2\n1 2\n2 3\n\nOutput:\nYES"
    },
    {
        "prompt": "To some string S, we will perform some\u00a0replacement\u00a0operations that replace groups of letters with new ones (not necessarily the same size).\nEach replacement operation has 3 parameters: a starting index i, a source word\u00a0x\u00a0and a target word\u00a0y.\u00a0 The rule is that if x\u00a0starts at position i\u00a0in the original string S, then we will replace that occurrence of\u00a0x\u00a0with\u00a0y.\u00a0 If not, we do nothing.\nFor example, if we have\u00a0S = \"abcd\"\u00a0and we have some replacement operation\u00a0i = 2, x = \"cd\", y = \"ffff\", then because\u00a0\"cd\"\u00a0starts at position 2\u00a0in the original string S, we will replace it with \"ffff\".\nUsing another example on S = \"abcd\", if we have both the replacement operation i = 0, x = \"ab\", y = \"eee\", as well as another replacement operation\u00a0i = 2, x = \"ec\", y = \"ffff\", this second operation does nothing because in the original string\u00a0S[2] = 'c', which doesn't match\u00a0x[0] = 'e'.\nAll these operations occur simultaneously.\u00a0 It's guaranteed that there won't be any overlap in replacement: for example,\u00a0S = \"abc\", indexes = [0, 1],\u00a0sources = [\"ab\",\"bc\"] is not a valid test case.\nExample 1:\nInput: S = \"abcd\", indexes = [0,2], sources = [\"a\",\"cd\"], targets = [\"eee\",\"ffff\"]\nOutput: \"eeebffff\"\nExplanation: \"a\" starts at index 0 in S, so it's replaced by \"eee\".\n\"cd\" starts at index 2 in S, so it's replaced by \"ffff\".\n\nExample 2:\nInput: S = \"abcd\", indexes = [0,2], sources = [\"ab\",\"ec\"], targets = [\"eee\",\"ffff\"]\nOutput: \"eeecd\"\nExplanation: \"ab\" starts at index 0 in S, so it's replaced by \"eee\". \n\"ec\" doesn't starts at index 2 in the original S, so we do nothing.\n\nNotes:\n\n0 <=\u00a0indexes.length =\u00a0sources.length =\u00a0targets.length <= 100\n0\u00a0<\u00a0indexes[i]\u00a0< S.length <= 1000\nAll characters in given inputs are lowercase letters.",
        "completion": "You are given following inputs: original string S, starting index i, source word x and target word y. \n\nYou need to perform replacement operations with this rule: \n\nIf x starts at position i in S, you need to replace that occurrence of x with y. If not, we do nothing.\n\nAll these operations occur simultaneously.\u00a0 It's guaranteed that there won't be any overlap in replacement: for example,\u00a0S = \"abc\", indexes = [0, 1],\u00a0sources = [\"ab\",\"bc\"] is not a valid test case.\n\nConsider:\n0 <=\u00a0indexes.length =\u00a0sources.length =\u00a0targets.length <= 100\n0\u00a0<\u00a0indexes[i]\u00a0< S.length <= 1000\nAll characters in given inputs are lowercase letters.\n\nExample 1:\nInput: S = \"abcd\", indexes = [0,2], sources = [\"a\",\"cd\"], targets = [\"eee\",\"ffff\"]\nOutput: \"eeebffff\"\nExplanation: \"a\" starts at index 0 in S, so it's replaced by \"eee\".\n\"cd\" starts at index 2 in S, so it's replaced by \"ffff\".\n\nExample 2:\nInput: S = \"abcd\", indexes = [0,2], sources = [\"ab\",\"ec\"], targets = [\"eee\",\"ffff\"]\nOutput: \"eeecd\"\nExplanation: \"ab\" starts at index 0 in S, so it's replaced by \"eee\". \n\"ec\" doesn't starts at index 2 in the original S, so we do nothing."
    },
    {
        "prompt": "Alice's school is planning to take some students from her class on a field trip. Alice is really excited about it. There are a total of S students in her class. But due to budget constraints, the school is planning to take only N students for the trip. These students will be picked randomly. And each student has equal chance of being picked.\nAlice's friend circle has M students including her. Though she is excited about the field trip, she will enjoy it only if there are atleast K of her friends with her on the trip. She is wondering what are the chances of that happening. She needs your help. Tell her the probability that she will enjoy given that she goes on the trip.\n\n-----Input:-----\nFirst line of input contains a single integer T, the number of test cases.\n\nEach test starts with a single line having 4 space separated integers, S, N, M and K.\n\n-----Output:-----\nFor each test case, output a line containing the required probability. The answer will be accepted if the relative error is not more than 10-6.\n\n-----Constraints:-----\n1 \u2264 T \u2264 100\n1 \u2264 S \u2264 1000\n1 \u2264 N \u2264 S\n1 \u2264 M \u2264 S\n0 \u2264 K < M\n\n-----Example:-----Input:\n3\n10 10 5 3\n10 4 6 4\n3 2 2 1\n\nOutput:\n1.000000\n0.000000\n0.500000\n\n-----Explanation:-----Case #1:\nEvery student will be taken to the trip. So all her 4 friends will accompany her to the trip no matter what. \nCase #2:\nAlice wants 4 out of her 5 friends to come along with her which isn't possible because the school is willing to pick only 4 students for the trip.",
        "completion": "You are given a total of S items.Only N items can be purchased only. These items will be picked randomly.\nYou need M item including your personal item. Your shopping will complete only if there are atleast K of her item and your personal item. What is the probability that you will purchase your K item with your personal item.\n\n-----Input:-----\nFirst line of input contains a single integer T, the number of test cases.\n\nEach test starts with a single line having 4 space separated integers, S, N, M and K.\n\n-----Output:-----\nFor each test case, output a line containing the required probability. The answer will be accepted if the relative error is not more than 10-6.\n\n-----Constraints:-----\n1 \u2264 T \u2264 100\n1 \u2264 S \u2264 1000\n1 \u2264 N \u2264 S\n1 \u2264 M \u2264 S\n0 \u2264 K < M\n\n-----Example:-----Input:\n3\n10 10 5 3\n10 4 6 4\n3 2 2 1\n\nOutput:\n1.000000\n0.000000\n0.500000\n\n"
    },
    {
        "prompt": "Chef recently learned about ratios and proportions. He wrote some positive integers a, b, c, d on a paper. Chef wants to know whether he can shuffle these numbers so as to make some proportion? Formally, four numbers x, y, z, w are said to make a proportion if ratio of x : y is same as that of z : w.\n\n-----Input-----\nOnly line of the input contains four space separated positive integers - a, b, c, d.\n\n-----Output-----\nPrint \"Possible\" if it is possible to shuffle a, b, c, d to make proportion, otherwise \"Impossible\" (without quotes).\n\n-----Constraints-----\n- 1 \u2264 a, b, c, d  \u2264 1000\n\n-----Example-----\nInput:\n1 2 4 2\n\nOutput:\nPossible\n\n-----Explanation-----\nBy swapping 4 and the second 2, we get 1 2 2 4. Note that 1 2 2 4 make proportion as 1 : 2 = 2 : 4. Hence answer is \"Possible\"",
        "completion": "\nYou are given four numbers x, y, z, w which make a proportion if ratio of x : y is same as that of z : w. You have to check that if it is possible to shuffle x, y, z, w to make  some proportion or not.\n\n-----Input-----\nOnly line of the input contains four space separated positive integers - a, b, c, d.\n\n-----Output-----\nPrint \"Possible\" if it is possible to shuffle a, b, c, d to make proportion, otherwise \"Impossible\" (without quotes).\n\n-----Constraints-----\n- 1 \u2264 a, b, c, d  \u2264 1000\n\n-----Example-----\nInput:\n1 2 4 2\n\nOutput:\nPossible\n"
    },
    {
        "prompt": "There are $n$ programmers that you want to split into several non-empty teams. The skill of the $i$-th programmer is $a_i$. You want to assemble the maximum number of teams from them. There is a restriction for each team: the number of programmers in the team multiplied by the minimum skill among all programmers in the team must be at least $x$.\n\nEach programmer should belong to at most one team. Some programmers may be left without a team.\n\nCalculate the maximum number of teams that you can assemble.\n\n\n-----Input-----\n\nThe first line contains the integer $t$ ($1 \\le t \\le 1000$)\u00a0\u2014 the number of test cases.\n\nThe first line of each test case contains two integers $n$ and $x$ ($1 \\le n \\le 10^5; 1 \\le x \\le 10^9$)\u00a0\u2014 the number of programmers and the restriction of team skill respectively.\n\nThe second line of each test case contains $n$ integers $a_1, a_2, \\dots , a_n$ ($1 \\le a_i \\le 10^9$), where $a_i$ is the skill of the $i$-th programmer.\n\nThe sum of $n$ over all inputs does not exceed $10^5$.\n\n\n-----Output-----\n\nFor each test case print one integer \u2014 the maximum number of teams that you can assemble. \n\n\n-----Example-----\nInput\n3\n5 10\n7 11 2 9 5\n4 8\n2 4 2 3\n4 11\n1 3 3 7\n\nOutput\n2\n1\n0",
        "completion": "You are given an array of length $n$ and you want to split it into several non-empty sets. The value of $i$-th element is $a_i$. You want to generate the maximum number of sets from the list. There is a restriction for each set: the number of values in the team multiplied by the minimum value among all values in the team must be at least $x$.\n\nEach value should belong to at most one set. Some value may be left without being part of any set.\n\n-----Input-----\n\nThe first line contains the integer $t$ ($1 \\le t \\le 1000$)\u00a0\u2014 the number of test cases.\n\nThe first line of each test case contains two integers $n$ and $x$ ($1 \\le n \\le 10^5; 1 \\le x \\le 10^9$)\u00a0\u2014 the number of values and the restriction of sets respectively.\n\nThe second line of each test case contains $n$ integers $a_1, a_2, \\dots , a_n$ ($1 \\le a_i \\le 10^9$), where $a_i$ is the value of the $i$-th element.\n\nThe sum of $n$ over all inputs does not exceed $10^5$.\n\n\n-----Output-----\n\nFor each test case print one integer \u2014 the maximum number of sets that you can generate. \n\n\n-----Example-----\nInput\n3\n5 10\n7 11 2 9 5\n4 8\n2 4 2 3\n4 11\n1 3 3 7\n\nOutput\n2\n1\n0\n"
    },
    {
        "prompt": "The name of our college is \"Government College of Engineering and Textile Technology Berhampore\". There is another college named \"Government College of Engineering and Textile Technology Serampore\". As the names are quite similar, those who are unaware of existence of both the colleges, often get confused. And mistake one with other.\n\nGiven a string, if it contains the word berhampore (case insensitive), print GCETTB or if it contains serampore(case-insensitive), print GCETTS . If the string contains neither print Others. If it contains both Berhampore and Serampore print Both \nInput \n- First line contains single integer T, No. of test case  \n- Next line for every test contain case a string S \nOutput\n\nPrint GCETTB or GCETTS or Others or Both on a new line\nConstraints \n- 1 <= T <= 10 \n- 0 <= len(S) <= 100  \n- S contain a-z and A-Z and space only\nSample Input\n3\nGovernment clg Berhampore\nSeRaMporE textile college \nGirls college Kolkata\n\nSample Output\n\nGCETTB\n\nGCETTS\n\nOthers       \nExplanation\n\nSelf-Explanatory",
        "completion": "\nYou are given a string, if it contains the word berhampore , print GCETTB or if it contains serampore print GCETTS. If the string contains neither print Others. If it contains both Berhampore and Serampore print Both.Ignore the case.\n \nInput \n- First line contains single integer T, No. of test case  \n- Next line for every test contain case a string S \nOutput\n\nPrint GCETTB or GCETTS or Others or Both on a new line\nConstraints \n- 1 <= T <= 10 \n- 0 <= len(S) <= 100  \n- S contain a-z and A-Z and space only\nSample Input\n3\nGovernment clg Berhampore\nSeRaMporE textile college \nGirls college Kolkata\n\nSample Output\n\nGCETTB\n\nGCETTS\n\nOthers       \n"
    },
    {
        "prompt": "Chef solved so many hard questions, now he wants to solve some easy problems for refreshment. Chef asks Cheffina for the new question. Cheffina challanges the chef to print the total number of 1's in the binary representation of N(natural number).\n\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Each test case contains a single line of input, $N$. \n\n-----Output:-----\nFor each test case, output in a single line answer.\n\n-----Constraints-----\n- $1 \\leq T \\leq 10^6$\n- $1 \\leq N \\leq 10^6$\n\n-----Sample Input:-----\n2\n2\n5\n\n-----Sample Output:-----\n1\n2\n\n-----EXPLANATION:-----\nFor 1) Binary representation of 2 is 10. i.e. only one 1 present in it.\nFor 2) Binary representation of 5 is 101, i.e. two 1's present in it.",
        "completion": "You are given a N integer.Your task is to convert each integer in the binary representation and print the total number of 1's for the given number.\n.\n\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Each test case contains a single line of input, $N$. \n\n-----Output:-----\nFor each test case, output in a single line answer.\n\n-----Constraints-----\n- $1 \\leq T \\leq 10^6$\n- $1 \\leq N \\leq 10^6$\n\n-----Sample Input:-----\n2\n2\n5\n\n-----Sample Output:-----\n1\n2\n"
    },
    {
        "prompt": "Write a program to find the remainder when an integer A is divided by an integer B.\n\n-----Input-----\n\nThe first line contains an integer T, the total number of test cases. Then T lines follow, each line contains two Integers A and B. \n\n-----Output-----\nFor each test case, find the remainder when A is divided by  B, and display it in a new line.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 1000\n- 1 \u2264 A,B \u2264 10000\n\n-----Example-----\nInput\n3 \n1 2\n100 200\n40 15\n\nOutput\n1\n100\n10",
        "completion": "Find the remainder when an integer A is divided by an integer B.\n\n-----Input-----\n\nThe first line contains an integer T, the total number of test cases. Then T lines follow, each line contains two Integers A and B. \n\n-----Output-----\nFor each test case, find the remainder when A is divided by  B, and display it in a new line.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 1000\n- 1 \u2264 A,B \u2264 10000\n\n-----Example-----\nInput\n3 \n1 2\n100 200\n40 15\n\nOutput\n1\n100\n10"
    },
    {
        "prompt": "Given a binary search tree, write a function kthSmallest to find the kth smallest element in it.\n\nNote: \nYou may assume k is always valid, 1 \u2264 k \u2264 BST's total elements.\n\nExample 1:\n\n\nInput: root = [3,1,4,null,2], k = 1\n   3\n  / \\\n 1   4\n  \\\n\u00a0  2\nOutput: 1\n\nExample 2:\n\n\nInput: root = [5,3,6,2,4,null,null,1], k = 3\n       5\n      / \\\n     3   6\n    / \\\n   2   4\n  /\n 1\nOutput: 3\n\n\nFollow up:\nWhat if the BST is modified (insert/delete operations) often and you need to find the kth smallest frequently? How would you optimize the kthSmallest routine?",
        "completion": "Given a binary search tree, write a function to find the kth smallest element in it.\n\nNote: \n1 \u2264 k \u2264 BST's total elements.\n\nExample 1:\n\n\nInput: root = [3,1,4,null,2], k = 1\n   3\n  / \\\n 1   4\n  \\\n\u00a0  2\nOutput: 1\n\nExample 2:\n\n\nInput: root = [5,3,6,2,4,null,null,1], k = 3\n       5\n      / \\\n     3   6\n    / \\\n   2   4\n  /\n 1\nOutput: 3\n\n"
    },
    {
        "prompt": "Heidi is a statistician to the core, and she likes to study the evolution of marmot populations in each of V (1 \u2264 V \u2264 100) villages! So it comes that every spring, when Heidi sees the first snowdrops sprout in the meadows around her barn, she impatiently dons her snowshoes and sets out to the Alps, to welcome her friends the marmots to a new season of thrilling adventures.\n\nArriving in a village, Heidi asks each and every marmot she comes across for the number of inhabitants of that village. This year, the marmots decide to play an April Fools' joke on Heidi. Instead of consistently providing the exact number of inhabitants P (10 \u2264 P \u2264 1000) of the village, they respond with a random non-negative integer k, drawn from one of two types of probability distributions:\n\n  Poisson (d'avril) distribution: the probability of getting an answer k is $\\frac{p^{k} e^{-P}}{k !}$ for k = 0, 1, 2, 3, ...,  Uniform distribution: the probability of getting an answer k is $\\frac{1}{2 P + 1}$ for k = 0, 1, 2, ..., 2P. \n\nHeidi collects exactly 250 answers per village. Every village follows either the Poisson or the uniform distribution. Heidi cannot tell marmots apart, so she may query some marmots several times, and each time the marmot will answer with a new number drawn from the village's distribution.\n\nCan you help Heidi to find out whether a village follows a Poisson or a uniform distribution?\n\n\n-----Input-----\n\nThe first line of input will contain the number of villages V (1 \u2264 V \u2264 100). The following V lines each describe one village. The description of each village consists of 250 space-separated integers k, drawn from one of the above distributions.\n\n\n-----Output-----\n\nOutput one line per village, in the same order as provided in the input. The village's line shall state poisson if the village's distribution is of the Poisson type, and uniform if the answer came from a uniform distribution.\n\n\n-----Example-----\nInput\n2\n92 100 99 109 93 105 103 106 101 99 ... (input is truncated)\n28 180 147 53 84 80 180 85 8 16 ... (input is truncated)\nOutput\npoisson\nuniform\n\n\n\n-----Note-----\n\nThe full example input is visually represented below, along with the probability distribution function it was drawn from (the y-axis is labeled by its values multiplied by 250).\n\n[Image]",
        "completion": "The input given are two series of non-negative integers following one of the two types of probability distributions:\n  \n  Poisson (d'avril) distribution: the probability of getting an answer k is $\\frac{p^{k} e^{-P}}{k !}$ for k = 0, 1, 2, 3, ...,  Uniform distribution: the probability of getting an answer k is $\\frac{1}{2 P + 1}$ for k = 0, 1, 2, ..., 2P. \n\nYou need to output whether the series follows a Poisson or a uniform distribution?\n\n-----Input-----\n\nThe first line of input will contain the number of villages V (1 \u2264 V \u2264 100). The following V lines each describe one village. The description of each village consists of 250 space-separated integers k, drawn from one of the above distributions.\n\n\n-----Output-----\n\nOutput one line per village, in the same order as provided in the input. The village's line shall state poisson if the village's distribution is of the Poisson type, and uniform if the answer came from a uniform distribution.\n\n\n-----Example-----\nInput\n2\n92 100 99 109 93 105 103 106 101 99 ... (input is truncated)\n28 180 147 53 84 80 180 85 8 16 ... (input is truncated)\nOutput\npoisson\nuniform"
    },
    {
        "prompt": "Given a binary tree and a sum, find all root-to-leaf paths where each path's sum equals the given sum.\n\nNote:\u00a0A leaf is a node with no children.\n\nExample:\n\nGiven the below binary tree and sum = 22,\n\n\n      5\n     / \\\n    4   8\n   /   / \\\n  11  13  4\n /  \\    / \\\n7    2  5   1\n\n\nReturn:\n\n\n[\n   [5,4,11,2],\n   [5,8,4,5]\n]",
        "completion": "Given a binary tree and a sum, find all root-to-leaf paths where each path's sum equals the given sum.\n\n\nExample:\n\nGiven the below binary tree and sum = 22,\n\n\n      5\n     / \\\n    4   8\n   /   / \\\n  11  13  4\n /  \\    / \\\n7    2  5   1\n\n\nReturn:\n\n\n[\n   [5,4,11,2],\n   [5,8,4,5]\n]"
    },
    {
        "prompt": "Give me Chocolate\n\nAnushka wants to buy chocolates.there are many chocolates in front of her, tagged with their prices.\n\nAnushka has only a certain amount to spend, and she wants to maximize the number of chocolates she buys with this money.\n\nGiven a list of prices and an amount to spend, what is the maximum number of chocolates Anushka can buy? \n\nFor example, \n\nif prices =[1,2,3,4]\nand Anushka has k=7 to spend, she can buy items [1,2,3] for 6 , or [3,4] for 7 units of currency. she would choose the first group of 3 items.\n\nInput Format\n\nThe first line contains two integers, n and k , the number of priced chocolates and the amount Anushka has to spend.\n\nThe next line contains n space-separated integers prices[i]\n\nConstraints\n\n1<= n <= 105\n\n1<= k <= 109\n\n1<= prices[i] <= 109\n\n\n\nA chocolate can't be bought multiple times.\n\nOutput Format\n\nAn integer that denotes the maximum number of chocolates Anushka can buy for her.\n\nSample Input\n\n7 50\n\n1 12 5 111 200 1000 10\n\nSample Output\n\n4\n\nExplanation\n\nshe can buy only 4 chocolatess at most. These chocolates have the following prices: 1, 12, 5, 10.",
        "completion": "You are given an array of size n and a limiting number k. You can select only those numbers from array whose sum is not greater than k.Find the maximum number from the array which can be selected.\n\n\n\nInput Format\n\nThe first line contains two integers, n and k , the number of elements in array and a limiting number.\n\nThe next line contains n space-separated integers array[i]\n\nConstraints\n\n1<= n <= 105\n\n1<= k <= 109\n\n1<= array[i] <= 109\n\nA number can't be repeated multiple times.\n\nOutput Format\n\nAn integer that denotes the maximum count of array numbers whose sum can't be greater than k.\n\nSample Input\n\n7 50\n\n1 12 5 111 200 1000 10\n\nSample Output\n\n4\n"
    },
    {
        "prompt": "Given a m * n matrix of ones and zeros, return how many square submatrices have all ones.\n\u00a0\nExample 1:\nInput: matrix =\n[\n\u00a0 [0,1,1,1],\n\u00a0 [1,1,1,1],\n\u00a0 [0,1,1,1]\n]\nOutput: 15\nExplanation: \nThere are 10 squares of side 1.\nThere are 4 squares of side 2.\nThere is  1 square of side 3.\nTotal number of squares = 10 + 4 + 1 = 15.\n\nExample 2:\nInput: matrix = \n[\n  [1,0,1],\n  [1,1,0],\n  [1,1,0]\n]\nOutput: 7\nExplanation: \nThere are 6 squares of side 1.  \nThere is 1 square of side 2. \nTotal number of squares = 6 + 1 = 7.\n\n\u00a0\nConstraints:\n\n1 <= arr.length\u00a0<= 300\n1 <= arr[0].length\u00a0<= 300\n0 <= arr[i][j] <= 1",
        "completion": "Given a m * n matrix of ones and zeros, return how many square submatrices have all ones.\n\u00a0\nExample 1:\nInput: matrix =\n[\n\u00a0 [0,1,1,1],\n\u00a0 [1,1,1,1],\n\u00a0 [0,1,1,1]\n]\nOutput: 15\nExplanation: \nThere are 10 squares of side 1.\nThere are 4 squares of side 2.\nThere is  1 square of side 3.\nTotal number of squares = 10 + 4 + 1 = 15.\n\n"
    },
    {
        "prompt": "Given a set of points in the xy-plane, determine the minimum area of a rectangle formed from these points, with sides parallel to the x and y axes.\nIf there isn't any rectangle, return 0.\n\u00a0\n\nExample 1:\nInput: [[1,1],[1,3],[3,1],[3,3],[2,2]]\nOutput: 4\n\n\nExample 2:\nInput: [[1,1],[1,3],[3,1],[3,3],[4,1],[4,3]]\nOutput: 2\n\n\u00a0\nNote:\n\n1 <= points.length <= 500\n0 <=\u00a0points[i][0] <=\u00a040000\n0 <=\u00a0points[i][1] <=\u00a040000\nAll points are distinct.",
        "completion": "Determine the minimum area of a rectangle formed from given points in xy plane, with sides parallel to the x and y axes.\nIf there isn't any rectangle, return 0.\n\u00a0\n\nExample 1:\nInput: [[1,1],[1,3],[3,1],[3,3],[2,2]]\nOutput: 4\n\n\nExample 2:\nInput: [[1,1],[1,3],[3,1],[3,3],[4,1],[4,3]]\nOutput: 2\n\n\u00a0\nNote:\n\n1 <= points.length <= 500\n0 <=\u00a0points[i][0] <=\u00a040000\n0 <=\u00a0points[i][1] <=\u00a040000\nAll points are distinct."
    },
    {
        "prompt": "Chef wants you to distribute candies among $N$ kids who are sitting in a circle. However, he wants to make some kids jealous of others. Thus, he wants you to distribute candies in such a way that there is a difference of at least $K$ candies between two adjacent kids. \nGiven the value of $N$ and $K$, you need to find the minimum number of candies you need to satisfy the given conditions, such that, each kid gets at least one candy.\n\n-----Input:-----\n- First line will contain $T$, the number of testcases. Then the testcases follow. \n- The only line of each testcase contains two space-separated integers $N$ and $K$. \n\n-----Output:-----\nFor each test case, print a single line containing one integer \u2015 the number of candies you need.\n\n-----Constraints-----\n- $1 \\leq T \\leq  10^6$\n- $2 \\leq  N \\leq  10^3$\n- $0 \\leq  K \\leq 10^4$ \n\n-----Sample Input:-----\n1 \n2 1\n\n-----Sample Output:-----\n3\n\n-----EXPLANATION:-----\nThe minimum number of candies required is $3$. One kid needs to have $1$ candy and the other needs to have $2$ candy to have a difference of $1$ candy between them.",
        "completion": "You are given $N$ nodes arranged in a cycle initialised to zero and a difference $K$. \nFind and return the minimum number of increments required so that each node is atleast $1$ and adjacent nodes have a difference of is atleast $K$.\n\n-----Input:-----\n- First line will contain $T$, the number of testcases. Then the testcases follow. \n- The only line of each testcase contains two space-separated integers $N$ and $K$. \n\n-----Output:-----\nFor each test case, print a single line containing one integer \u2015 the number of increments you need.\n\n-----Constraints-----\n- $1 \\leq T \\leq  10^6$\n- $2 \\leq  N \\leq  10^3$\n- $0 \\leq  K \\leq 10^4$ \n\n-----Sample Input:-----\n1 \n2 1\n\n-----Sample Output:-----\n3\n\n-----EXPLANATION:-----\nThe minimum number of increments required is $3$. One node needs to be incremented once and the other node needs to be incremented $2$ times."
    },
    {
        "prompt": "Chef has a binary array in an unsorted manner. Cheffina challenges chef to find the transition point in the sorted (ascending) binary array. Here indexing is starting from 0.\nNote: Transition point always exists.\n\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Each test case contains two lines of input, $N$.\n- N space-separated binary numbers. \n\n-----Output:-----\nFor each test case, output in a single line answer.\n\n-----Constraints-----\n- $1 \\leq T \\leq 10$\n- $1 \\leq N \\leq 10^5$\n\n-----Sample Input:-----\n1\n5\n0 1 0 0 1\n\n-----Sample Output:-----\n3\n\n-----EXPLANATION:-----\nbinary array in sorted form will look like = [0, 0, 0, 1, 1]",
        "completion": "You are given a binary array in an unsorted manner. Find the transition point in the sorted (ascending) binary array. Here indexing is starting from 0.\n\n\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Each test case contains two lines of input, $N$.\n- N space-separated binary numbers. \n\n-----Output:-----\nFor each test case, output in a single line answer.\n\n-----Constraints-----\n- $1 \\leq T \\leq 10$\n- $1 \\leq N \\leq 10^5$\n\n-----Sample Input:-----\n1\n5\n0 1 0 0 1\n\n-----Sample Output:-----\n3\n"
    },
    {
        "prompt": "The Little Elephant from the Zoo of Lviv has an array A that consists of N positive integers. Let A[i] be the i-th number in this array (i = 1, 2, ..., N).\n\nFind the minimal number x > 1 such that x is a divisor of all integers from array A. More formally, this x should satisfy the following relations:\n\nA[1] mod x = 0, A[2] mod x = 0, ..., A[N] mod x = 0,\n\nwhere mod stands for the modulo operation. For example,  8 mod 3 = 2,  2 mod 2 = 0, 100 mod 5 = 0 and so on. If such number does not exist, output -1.\n\n-----Input-----\n\nThe first line of the input contains a single integer T, the number of test cases. T test cases follow. The first line of each test case contains a single integer N, the size of the array A for the corresponding test case. The second line contains N space separated integers A[1], A[2], ..., A[N].\n\n-----Output-----\n\nFor each test case output a single line containing the answer for the corresponding test case.\n\n-----Constraints-----\n1 \u2264 T \u2264 100000\n\n1 \u2264 N \u2264 100000\n\nThe sum of values of N in each test file does not exceed 100000\n\n1 \u2264 A[i] \u2264 100000\n\n-----Example-----\nInput:\n2\n3\n2 4 8\n3\n4 7 5\n\nOutput:\n2\n-1\n\n-----Explanation-----\nCase 1. Clearly 2 is a divisor of each of the numbers 2, 4 and 8. Since 2 is the least number greater than 1 then it is the answer.\n\nCase 2. Let's perform check for several first values of x.\n\nx4 mod x7 mod x5 mod x20113112403154206415740584759475\n\nAs we see each number up to 9 does not divide all of the numbers in the array. Clearly all larger numbers also will fail to do this. So there is no such number x > 1 and the answer is -1.",
        "completion": "You are given an array A that consists of N positive integers. Let A[i] be the i-th number in this array (i = 1, 2, ..., N).\nFind the minimal number x > 1 such that x is a divisor of all integers from array A. More formally, this x should satisfy the following relations:\n\nA[1] mod x = 0, A[2] mod x = 0, ..., A[N] mod x = 0,\n\nwhere mod stands for the modulo operation.If such number does not exist, output -1.\n\n-----Input-----\n\nThe first line of the input contains a single integer T, the number of test cases. T test cases follow. The first line of each test case contains a single integer N, the size of the array A for the corresponding test case. The second line contains N space separated integers A[1], A[2], ..., A[N].\n\n-----Output-----\n\nFor each test case output a single line containing the answer for the corresponding test case.\n\n-----Constraints-----\n1 \u2264 T \u2264 100000\n\n1 \u2264 N \u2264 100000\n\nThe sum of values of N in each test file does not exceed 100000\n\n1 \u2264 A[i] \u2264 100000\n\n-----Example-----\nInput:\n2\n3\n2 4 8\n3\n4 7 5\n\nOutput:\n2\n-1\n"
    },
    {
        "prompt": "Given a binary tree, we install cameras on the nodes of the tree.\u00a0\nEach camera at\u00a0a node can monitor its parent, itself, and its immediate children.\nCalculate the minimum number of cameras needed to monitor all nodes of the tree.\n\u00a0\nExample 1:\n\n\nInput: [0,0,null,0,0]\nOutput: 1\nExplanation: One camera is enough to monitor all nodes if placed as shown.\n\n\nExample 2:\n\nInput: [0,0,null,0,null,0,null,null,0]\nOutput: 2\nExplanation: At least two cameras are needed to monitor all nodes of the tree. The above image shows one of the valid configurations of camera placement.\n\n\nNote:\n\nThe number of nodes in the given tree will be in the range\u00a0[1, 1000].\nEvery node has value 0.",
        "completion": "Cameras are installed on the nodes of the binary tree.\u00a0\nEach camera at\u00a0a node can monitor its parent, itself, and its immediate children.\nCalculate the minimum number of cameras needed to monitor all nodes of the tree.\n\u00a0\nExample 1:\n\n\nInput: [0,0,null,0,0]\nOutput: 1\n\n\nExample 2:\n\nInput: [0,0,null,0,null,0,null,null,0]\nOutput: 2\n\n\n"
    },
    {
        "prompt": "Polycarp has $n$ different binary words. A word called binary if it contains only characters '0' and '1'. For example, these words are binary: \"0001\", \"11\", \"0\" and \"0011100\".\n\nPolycarp wants to offer his set of $n$ binary words to play a game \"words\". In this game, players name words and each next word (starting from the second) must start with the last character of the previous word. The first word can be any. For example, these sequence of words can be named during the game: \"0101\", \"1\", \"10\", \"00\", \"00001\".\n\nWord reversal is the operation of reversing the order of the characters. For example, the word \"0111\" after the reversal becomes \"1110\", the word \"11010\" after the reversal becomes \"01011\".\n\nProbably, Polycarp has such a set of words that there is no way to put them in the order correspondent to the game rules. In this situation, he wants to reverse some words from his set so that:  the final set of $n$ words still contains different words (i.e. all words are unique);  there is a way to put all words of the final set of words in the order so that the final sequence of $n$ words is consistent with the game rules. \n\nPolycarp wants to reverse minimal number of words. Please, help him.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $t$ ($1 \\le t \\le 10^4$) \u2014 the number of test cases in the input. Then $t$ test cases follow.\n\nThe first line of a test case contains one integer $n$ ($1 \\le n \\le 2\\cdot10^5$) \u2014 the number of words in the Polycarp's set. Next $n$ lines contain these words. All of $n$ words aren't empty and contains only characters '0' and '1'. The sum of word lengths doesn't exceed $4\\cdot10^6$. All words are different.\n\nGuaranteed, that the sum of $n$ for all test cases in the input doesn't exceed $2\\cdot10^5$. Also, guaranteed that the sum of word lengths for all test cases in the input doesn't exceed $4\\cdot10^6$.\n\n\n-----Output-----\n\nPrint answer for all of $t$ test cases in the order they appear.\n\nIf there is no answer for the test case, print -1. Otherwise, the first line of the output should contain $k$ ($0 \\le k \\le n$) \u2014 the minimal number of words in the set which should be reversed. The second line of the output should contain $k$ distinct integers \u2014 the indexes of the words in the set which should be reversed. Words are numerated from $1$ to $n$ in the order they appear. If $k=0$ you can skip this line (or you can print an empty line). If there are many answers you can print any of them.\n\n\n-----Example-----\nInput\n4\n4\n0001\n1000\n0011\n0111\n3\n010\n101\n0\n2\n00000\n00001\n4\n01\n001\n0001\n00001\n\nOutput\n1\n3 \n-1\n0\n\n2\n1 2",
        "completion": "You are given $n$ different binary words. A word is called binary if it contains only characters '0' and '1'.\n\nYou want to order the words such that the first character of a word matches the last character of the previous word.\n\nIf you cannot put the words in that order then you can reverse some words so that: the final set of $n$ words \nstill contains different words; there is a way to put all words of the final set of words in the order specified.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $t$ ($1 \\le t \\le 10^4$) \u2014 the\nnumber of test cases in the input. Then $t$ test cases follow.\n\nThe first line of a test case contains one integer $n$ ($1 \\le n \\le\n2\\cdot10^5$) \u2014 the number of words in the list. Next $n$ lines contain these\nwords. The sum of word lengths doesn't exceed $4\\cdot10^6$. All words are different.\n\n\n-----Output-----\n\nPrint answer for all of $t$ test cases in the order they appear.\n\nIf there is no answer for the test case, print -1. Otherwise, the first line of\nthe output should contain $k$ ($0 \\le k \\le n$) \u2014 the minimal number of words\nin the set which should be reversed. The second line of the output should\ncontain $k$ distinct integers \u2014 the indexes of the words in the set which\nshould be reversed. Words are numerated from $1$ to $n$ in the order they\nappear. If $k=0$ you can skip this line (or you can print an empty line). If\nthere are many answers you can print any of them.\n\n\n-----Example-----\nInput\n4\n4\n0001\n1000\n0011\n0111\n3\n010\n101\n0\n2\n00000\n00001\n4\n01\n001\n0001\n00001\n\nOutput\n1\n3 \n-1\n0\n\n2\n1 2\n"
    },
    {
        "prompt": "In this problem the input will consist of a number of lines of English text consisting of the letters of the English alphabet, the punctuation marks ' (apostrophe), . (full stop), , (comma), ; (semicolon), :(colon) and white space characters (blank, newline).\nYour task is print the words in the text in lexicographic order (that is, dictionary order). Each word should appear exactly once in your list. You can ignore the case (for instance, \"The\" and \"the\" are to be treated as the same word). There should be no uppercase letters in the output.\nFor example, consider the following candidate for the input text: \nThis is a sample piece of text to illustrate this \nproblem.\n\nThe corresponding output would read as:\na\nillustrate\nis\nof\npiece\nproblem\nsample\ntext\nthis\nto\n\n-----Input format-----\n- The first line of input contains a single integer $N$, indicating the number of lines in the input.\n- This is followed by $N$ lines of input text.\n\n-----Output format-----\n- The first line of output contains a single integer $M$ indicating the number of distinct words in the given text. \n- The next $M$ lines list out these words in lexicographic order.\n\n-----Constraints-----\n- $1 \\leq N \\leq 10000$\n- There are at most 80 characters in each line.\n- There are at the most 1000 distinct words in the given text.\n\n-----Sample Input-----\n2\nThis is a sample piece of text to illustrate this \nproblem. \n\n-----Sample Output-----\n10\na\nillustrate\nis\nof\npiece\nproblem\nsample\ntext\nthis\nto",
        "completion": "\nYou are given a text string and you have to print the words in the given text in lexicographic order. Each word should appear exactly once in your list. You can ignore the case. There should be no uppercase letters in the output.\n\n\n\n-----Input format-----\n- The first line of input contains a single integer $N$, indicating the number of lines in the input.\n- This is followed by $N$ lines of input text.\n\n-----Output format-----\n- The first line of output contains a single integer $M$ indicating the number of distinct words in the given text. \n- The next $M$ lines list out these words in lexicographic order.\n\n-----Constraints-----\n- $1 \\leq N \\leq 10000$\n- There are at most 80 characters in each line.\n- There are at the most 1000 distinct words in the given text.\n\n-----Sample Input-----\n2\nThis is a sample piece of text to illustrate this \nproblem. \n\n-----Sample Output-----\n10\na\nillustrate\nis\nof\npiece\nproblem\nsample\ntext\nthis\nto"
    },
    {
        "prompt": "Chef likes problems on geometry a lot. Please help him to solve one such problem.\nFind all possible triangles with integer sides which has the radius of inscribed circle (also known as incircle) equal to R.\nTwo triangles are said to be different if they have at least one different side lengths. Formally, let there be two triangles T1, T2. Let a, b, c denote the sides of triangle T1, such that a \u2264 b \u2264 c. Similarly, Let d, e, f denote the sides of triangle T2, such that d \u2264 e \u2264 f. Then T1 will said to be different from T2 if either a \u2260 d, or b \u2260 e or c \u2260 f.\n\n-----Input-----\nThere is a single test case per test file.\nThe only line of input contains an integer R.\n\n-----Output-----\nOutput in first line single number - number of triangles satisfying statement.\nOrder the sides of triangles in non-decreasing order. Output all triangles in non-decreasing order, i.e. order first by smallest sides, otherwise by second smallest sides, if first and second sides equal, then by third.\n\n-----Constraints-----\n- 1 \u2264 R \u2264 100 \n\n-----Subtasks-----\n- Subtask #1: (20 points)  1 \u2264 R \u2264 3\n- Subtask #2: (30 points)  1 \u2264 R \u2264 20\n- Subtask #3: (50 points)  Original constraints\n\n-----Example-----\nInput:2\n\nOutput:5\n5 12 13\n6 8 10\n6 25 29\n7 15 20\n9 10 17",
        "completion": "\nFind all possible triangles with integer sides which has the radius of inscribed circle equal to R.\nTwo triangles are said to be different if they have at least one different side lengths. Formally, let there be two triangles T1, T2. Let a, b, c denote the sides of triangle T1, such that a \u2264 b \u2264 c. Similarly, Let d, e, f denote the sides of triangle T2, such that d \u2264 e \u2264 f. Then T1 will said to be different from T2 if either a \u2260 d, or b \u2260 e or c \u2260 f.\n\n-----Input-----\nThere is a single test case per test file.\nThe only line of input contains an integer R.\n\n-----Output-----\nOutput in first line single number - number of triangles satisfying statement.\nOrder the sides of triangles in non-decreasing order. Output all triangles in non-decreasing order, i.e. order first by smallest sides, otherwise by second smallest sides, if first and second sides equal, then by third.\n\n-----Constraints-----\n- 1 \u2264 R \u2264 100 \n\n-----Subtasks-----\n- Subtask #1: (20 points)  1 \u2264 R \u2264 3\n- Subtask #2: (30 points)  1 \u2264 R \u2264 20\n- Subtask #3: (50 points)  Original constraints\n\n-----Example-----\nInput:2\n\nOutput:5\n5 12 13\n6 8 10\n6 25 29\n7 15 20\n9 10 17"
    },
    {
        "prompt": "A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).\n\nThe robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).\n\nHow many possible unique paths are there?\n\n\nAbove is a 7 x 3 grid. How many possible unique paths are there?\n\nNote: m and n will be at most 100.\n\n\nExample 1:\n\n\nInput: m = 3, n = 2\nOutput: 3\nExplanation:\nFrom the top-left corner, there are a total of 3 ways to reach the bottom-right corner:\n1. Right -> Right -> Down\n2. Right -> Down -> Right\n3. Down -> Right -> Right\n\n\nExample 2:\n\n\nInput: m = 7, n = 3\nOutput: 28",
        "completion": "You are initially at the top-left corner of a m x n grid.\nYou can only take down or right actions.\nHow many possible unique paths are there to reach the bottom-right corner of the grid?\n\nNote: m and n will be at most 100.\n\n\nExample 1:\n\n\nInput: m = 3, n = 2\nOutput: 3\nExplanation:\nFrom the top-left corner, there are a total of 3 ways to reach the bottom-right corner:\n1. Right -> Right -> Down\n2. Right -> Down -> Right\n3. Down -> Right -> Right\n\n\nExample 2:\n\n\nInput: m = 7, n = 3\nOutput: 28"
    },
    {
        "prompt": "Chef has a number N, Cheffina challenges the chef to check the divisibility of all the permutation of N by 3. If any of the permutations is divisible by 3 then print 1 else print 0.\n\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Each test case contains a single line of input, two integers $N$. \n\n-----Output:-----\nFor each test case, output in a single line answer 1 or 0.\n\n-----Constraints-----\n- $1 \\leq T \\leq 10^6$\n- $1 \\leq N \\leq 10^6$\n\n-----Sample Input:-----\n2\n18\n308\n\n-----Sample Output:-----\n1\n0",
        "completion": "\nYou are given a number N.For every number N, you have to check whether the given number N is divisible by 3 or not. If yes then print 1 else print 0.\n\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Each test case contains a single line of input, two integers $N$. \n\n-----Output:-----\nFor each test case, output in a single line answer 1 or 0.\n\n-----Constraints-----\n- $1 \\leq T \\leq 10^6$\n- $1 \\leq N \\leq 10^6$\n\n-----Sample Input:-----\n2\n18\n308\n\n-----Sample Output:-----\n1\n0"
    },
    {
        "prompt": "Given a set of N\u00a0people (numbered 1, 2, ..., N), we would like to split everyone into two groups of any size.\nEach person may dislike some other people, and they should not go into the same group.\u00a0\nFormally, if dislikes[i] = [a, b], it means it is not allowed to put the people numbered a and b into the same group.\nReturn true\u00a0if and only if it is possible to split everyone into two groups in this way.\n\n\nExample 1:\nInput: N = 4, dislikes = [[1,2],[1,3],[2,4]]\nOutput: true\nExplanation: group1 [1,4], group2 [2,3]\n\n\nExample 2:\nInput: N = 3, dislikes = [[1,2],[1,3],[2,3]]\nOutput: false\n\n\nExample 3:\nInput: N = 5, dislikes = [[1,2],[2,3],[3,4],[4,5],[1,5]]\nOutput: false\n\n\n\n\n\u00a0\nConstraints:\n\n1 <= N <= 2000\n0 <= dislikes.length <= 10000\ndislikes[i].length == 2\n1 <= dislikes[i][j] <= N\ndislikes[i][0] < dislikes[i][1]\nThere does not exist i != j for which dislikes[i] == dislikes[j].",
        "completion": "You are given N people to be split into two groups such that if a person dislikes someone, then both of them should not be in the same group.\nYou need to return true if such split is possible.\n\nExample 1:\nInput: N = 4, dislikes = [[1,2],[1,3],[2,4]]\nOutput: true\nExplanation: group1 [1,4], group2 [2,3]\n\n\nExample 2:\nInput: N = 3, dislikes = [[1,2],[1,3],[2,3]]\nOutput: false\n\n\nExample 3:\nInput: N = 5, dislikes = [[1,2],[2,3],[3,4],[4,5],[1,5]]\nOutput: false\n\nConstraints:\n\n1 <= N <= 2000\n0 <= dislikes.length <= 10000\ndislikes[i].length == 2\n1 <= dislikes[i][j] <= N\ndislikes[i][0] < dislikes[i][1]\nThere does not exist i != j for which dislikes[i] == dislikes[j]."
    },
    {
        "prompt": "You may have already known that a standard ICPC team consists of exactly three members. The perfect team however has more restrictions. A student can have some specialization: coder or mathematician. She/he can have no specialization, but can't have both at the same time.\n\nSo the team is considered perfect if it includes at least one coder, at least one mathematician and it consists of exactly three members.\n\nYou are a coach at a very large university and you know that $c$ of your students are coders, $m$ are mathematicians and $x$ have no specialization.\n\nWhat is the maximum number of full perfect teams you can distribute them into? \n\nNote that some students can be left without a team and each student can be a part of no more than one team.\n\nYou are also asked to answer $q$ independent queries.\n\n\n-----Input-----\n\nThe first line contains a single integer $q$ ($1 \\le q \\le 10^4$) \u2014 the number of queries. \n\nEach of the next $q$ lines contains three integers $c$, $m$ and $x$ ($0 \\le c, m, x \\le 10^8$) \u2014 the number of coders, mathematicians and students without any specialization in the university, respectively.\n\nNote that the no student is both coder and mathematician at the same time. \n\n\n-----Output-----\n\nPrint $q$ integers \u2014 the $i$-th of them should be the answer to the $i$ query in the order they are given in the input. The answer is the maximum number of full perfect teams you can distribute your students into. \n\n\n-----Example-----\nInput\n6\n1 1 1\n3 6 0\n0 0 0\n0 1 1\n10 1 10\n4 4 1\n\nOutput\n1\n3\n0\n0\n1\n3\n\n\n\n-----Note-----\n\nIn the first example here are how teams are formed:  the only team of 1 coder, 1 mathematician and 1 without specialization;  all three teams consist of 1 coder and 2 mathematicians;  no teams can be formed;  no teams can be formed;  one team consists of 1 coder, 1 mathematician and 1 without specialization, the rest aren't able to form any team;  one team consists of 1 coder, 1 mathematician and 1 without specialization, one consists of 2 coders and 1 mathematician and one consists of 1 coder and 2 mathematicians.",
        "completion": "A entity can have some specialization: A or B. She/he can have no specialization, but can't have both at the same time.\n\nYou need to form a team. So the team is considered perfect if it includes at least one A, at least one B and it consists of exactly three entities.\n\nYou know that $c$ of the students are specialised in A, $m$ are in B and $x$ have no specialization.\n\nWhat is the maximum number of full perfect teams you can distribute them into? \n\nNote that some students can be left without a team and each student can be a part of no more than one team.\n\nYou are also asked to answer $q$ independent queries.\n\n\n-----Input-----\n\nThe first line contains a single integer $q$ ($1 \\le q \\le 10^4$) \u2014 the number of queries. \n\nEach of the next $q$ lines contains three integers $c$, $m$ and $x$ ($0 \\le c, m, x \\le 10^8$) \u2014 the number of coders, mathematicians and students without any specialization in the university, respectively.\n\nNote that the no student is both specialized in A and B at the same time. \n\n\n-----Output-----\n\nPrint $q$ integers \u2014 the $i$-th of them should be the answer to the $i$ query in the order they are given in the input. The answer is the maximum number of full perfect teams you can distribute your students into. \n\n\n-----Example-----\nInput\n6\n1 1 1\n3 6 0\n0 0 0\n0 1 1\n10 1 10\n4 4 1\n\nOutput\n1\n3\n0\n0\n1\n3\n\n\n\n-----Note-----\n\nIn the first example here are how teams are formed:  the only team of 1 A, 1 B and 1 without specialization;  all three teams consist of 1 A and 2 B;  no teams can be formed;  no teams can be formed;  one team consists of 1 A, 1 B and 1 without specialization, the rest aren't able to form any team;  one team consists of 1 A, 1 B and 1 without specialization, one consists of 2 A and 1 B and one consists of 1 A and 2 B.\n"
    },
    {
        "prompt": "Chef has a natural number N. Cheffina challenges chef to check whether the given number is divisible by the sum of its digits or not. If the given number is divisible then print \"Yes\" else \"No\".\n\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Each test case contains a single line of input, $N$. \n\n-----Output:-----\nFor each test case, output in a single line answer.\n\n-----Constraints-----\n- $1 \\leq T \\leq 10^6$\n- $1 \\leq N \\leq 10^6$\n\n-----Sample Input:-----\n2\n16\n27\n\n-----Sample Output:-----\nNo\nYes",
        "completion": "You are given a natural number N. check whether the given number is divisible by the sum of its digits or not. If the given number is divisible then print \"Yes\" else \"No\".\n\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Each test case contains a single line of input, $N$. \n\n-----Output:-----\nFor each test case, output in a single line answer.\n\n-----Constraints-----\n- $1 \\leq T \\leq 10^6$\n- $1 \\leq N \\leq 10^6$\n\n-----Sample Input:-----\n2\n16\n27\n\n-----Sample Output:-----\nNo\nYes"
    },
    {
        "prompt": "Gildong recently learned how to find the longest increasing subsequence (LIS) in $O(n\\log{n})$ time for a sequence of length $n$. He wants to test himself if he can implement it correctly, but he couldn't find any online judges that would do it (even though there are actually many of them). So instead he's going to make a quiz for you about making permutations of $n$ distinct integers between $1$ and $n$, inclusive, to test his code with your output.\n\nThe quiz is as follows.\n\nGildong provides a string of length $n-1$, consisting of characters '<' and '>' only. The $i$-th (1-indexed) character is the comparison result between the $i$-th element and the $i+1$-st element of the sequence. If the $i$-th character of the string is '<', then the $i$-th element of the sequence is less than the $i+1$-st element. If the $i$-th character of the string is '>', then the $i$-th element of the sequence is greater than the $i+1$-st element.\n\nHe wants you to find two possible sequences (not necessarily distinct) consisting of $n$ distinct integers between $1$ and $n$, inclusive, each satisfying the comparison results, where the length of the LIS of the first sequence is minimum possible, and the length of the LIS of the second sequence is maximum possible.\n\n\n-----Input-----\n\nEach test contains one or more test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$).\n\nEach test case contains exactly one line, consisting of an integer and a string consisting of characters '<' and '>' only. The integer is $n$ ($2 \\le n \\le 2 \\cdot 10^5$), the length of the permutation you need to find. The string is the comparison results explained in the description. The length of the string is $n-1$.\n\nIt is guaranteed that the sum of all $n$ in all test cases doesn't exceed $2 \\cdot 10^5$.\n\n\n-----Output-----\n\nFor each test case, print two lines with $n$ integers each. The first line is the sequence with the minimum length of the LIS, and the second line is the sequence with the maximum length of the LIS. If there are multiple answers, print any one of them. Each sequence should contain all integers between $1$ and $n$, inclusive, and should satisfy the comparison results.\n\nIt can be shown that at least one answer always exists.\n\n\n-----Example-----\nInput\n3\n3 <<\n7 >><>><\n5 >>><\n\nOutput\n1 2 3\n1 2 3\n5 4 3 7 2 1 6\n4 3 1 7 5 2 6\n4 3 2 1 5\n5 4 2 1 3\n\n\n\n-----Note-----\n\nIn the first case, $1$ $2$ $3$ is the only possible answer.\n\nIn the second case, the shortest length of the LIS is $2$, and the longest length of the LIS is $3$. In the example of the maximum LIS sequence, $4$ '$3$' $1$ $7$ '$5$' $2$ '$6$' can be one of the possible LIS.",
        "completion": "\nGive a string of length $n-1$, consisting of characters '<' and '>' only. The $i$-th (1-indexed) character is the comparison result between the $i$-th element and the $i+1$-st element of the sequence. If the $i$-th character of the string is '<', then the $i$-th element of the sequence is less than the $i+1$-st element. If the $i$-th character of the string is '>', then the $i$-th element of the sequence is greater than the $i+1$-st element.\n\nFind two possible sequences consisting of $n$ distinct integers between $1$ and $n$, inclusive, each satisfying the comparison results, where the length of the Longest Increasing Subsequence of the first sequence is minimum possible, and the length of the Longest Increasing Subsequence of the second sequence is maximum possible.\n\n\n-----Input-----\n\nEach test contains one or more test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 10^4$).\n\nEach test case contains exactly one line, consisting of an integer and a string consisting of characters '<' and '>' only. The integer is $n$ ($2 \\le n \\le 2 \\cdot 10^5$), the length of the permutation you need to find. The string is the comparison results explained in the description. The length of the string is $n-1$.\n\nIt is guaranteed that the sum of all $n$ in all test cases doesn't exceed $2 \\cdot 10^5$.\n\n\n-----Output-----\n\nFor each test case, print two lines with $n$ integers each. The first line is the sequence with the minimum length of the Longest Increasing Subsequence, and the second line is the sequence with the maximum length of the Longest Increasing Subsequence. If there are multiple answers, print any one of them. Each sequence should contain all integers between $1$ and $n$, inclusive, and should satisfy the comparison results.\n\nIt can be shown that at least one answer always exists.\n\n\n-----Example-----\nInput\n3\n3 <<\n7 >><>><\n5 >>><\n\nOutput\n1 2 3\n1 2 3\n5 4 3 7 2 1 6\n4 3 1 7 5 2 6\n4 3 2 1 5\n5 4 2 1 3\n\n\n\n-----Note-----\n\nIn the first case, $1$ $2$ $3$ is the only possible answer.\n\nIn the second case, the shortest length of the LIS is $2$, and the longest length of the LIS is $3$. In the example of the maximum LIS sequence, $4$ '$3$' $1$ $7$ '$5$' $2$ '$6$' can be one of the possible LIS.\n"
    },
    {
        "prompt": "In the computer world, use restricted resource you have to generate maximum benefit is what we always want to pursue.\nFor now, suppose you are a dominator of m 0s and n 1s respectively. On the other hand, there is an array with strings consisting of only 0s and 1s.\n\n\nNow your task is to find the maximum number of strings that you can form with given m 0s and n 1s. Each 0 and 1 can be used at most once.\n\n\n\nNote:\n\nThe given numbers of 0s and 1s will both not exceed 100\nThe size of given string array won't exceed 600.\n\n\n\nExample 1:\n\nInput: Array = {\"10\", \"0001\", \"111001\", \"1\", \"0\"}, m = 5, n = 3\nOutput: 4\n\nExplanation: This are totally 4 strings can be formed by the using of 5 0s and 3 1s, which are \u201c10,\u201d0001\u201d,\u201d1\u201d,\u201d0\u201d\n\n\n\nExample 2:\n\nInput: Array = {\"10\", \"0\", \"1\"}, m = 1, n = 1\nOutput: 2\n\nExplanation: You could form \"10\", but then you'd have nothing left. Better form \"0\" and \"1\".",
        "completion": "You are given numbers m and n.\n\nYou are given an array of strings of only 0's and 1's.\n\nReturn the maximum number of strings that can be formed by using less than (m+1) 0's and (n+1) 1's in total.\n\nNote:\n\nThe given numbers m and n will both not exceed 100\nThe size of given string array won't exceed 600.\n\n\nExample 1:\n\nInput: Array = {\"10\", \"0001\", \"111001\", \"1\", \"0\"}, m = 5, n = 3\nOutput: 4\n\nExplanation: This are totally 4 strings can be formed by the using less than 6 0s and 4 1s, which are \u201c10,\u201d0001\u201d,\u201d1\u201d,\u201d0\u201d\n\n\nExample 2:\n\nInput: Array = {\"10\", \"0\", \"1\"}, m = 1, n = 1\nOutput: 2\n\nExplanation: You could form \"10\", but then you'd have nothing left. Better form \"0\" and \"1\"."
    },
    {
        "prompt": "A transaction is possibly invalid if:\n\nthe amount exceeds $1000, or;\nif it occurs within (and including) 60 minutes of another transaction with the same name in a different city.\n\nEach transaction string transactions[i]\u00a0consists of\u00a0comma separated values representing\u00a0the name, time (in minutes), amount, and city of the transaction.\nGiven a list of transactions,\u00a0return a list of transactions that are possibly invalid.\u00a0 You may return the answer in any order.\n\u00a0\nExample 1:\nInput: transactions = [\"alice,20,800,mtv\",\"alice,50,100,beijing\"]\nOutput: [\"alice,20,800,mtv\",\"alice,50,100,beijing\"]\nExplanation: The first transaction is invalid because the second transaction occurs within a difference of 60 minutes, have the same name and is in a different city. Similarly the second one is invalid too.\nExample 2:\nInput: transactions = [\"alice,20,800,mtv\",\"alice,50,1200,mtv\"]\nOutput: [\"alice,50,1200,mtv\"]\n\nExample 3:\nInput: transactions = [\"alice,20,800,mtv\",\"bob,50,1200,mtv\"]\nOutput: [\"bob,50,1200,mtv\"]\n\n\u00a0\nConstraints:\n\ntransactions.length <= 1000\nEach transactions[i] takes the form \"{name},{time},{amount},{city}\"\nEach {name} and {city}\u00a0consist of\u00a0lowercase English letters, and have lengths between 1 and 10.\nEach {time} consist of\u00a0digits, and represent an integer between 0 and 1000.\nEach {amount}\u00a0consist of\u00a0digits, and represent an integer between 0 and 2000.",
        "completion": "You are given a list of strings where each string in format of \"A,B,C,D\". where A,D are strings and B,C are numbers. A string is possibly invalid if:\n\nthe C exceeds 1000, or;\nif two strings have same A and different D and the difference between C is greater than or equal to 60.\n\nreturn list of strings which are possibley invalid in any order\n\nExample 1:\nInput: transactions = [\"alice,20,800,mtv\",\"alice,50,100,beijing\"]\nOutput: [\"alice,20,800,mtv\",\"alice,50,100,beijing\"]\nExplanation: The first transaction is invalid because the second transaction occurs within a difference of 60 minutes, have the same name and is in a different city. Similarly the second one is invalid too.\nExample 2:\nInput: transactions = [\"alice,20,800,mtv\",\"alice,50,1200,mtv\"]\nOutput: [\"alice,50,1200,mtv\"]\n\nExample 3:\nInput: transactions = [\"alice,20,800,mtv\",\"bob,50,1200,mtv\"]\nOutput: [\"bob,50,1200,mtv\"]\n\n\u00a0\nConstraints:\n\ntransactions.length <= 1000\nEach transactions[i] takes the form \"{name},{time},{amount},{city}\"\nEach {name} and {city}\u00a0consist of\u00a0lowercase English letters, and have lengths between 1 and 10.\nEach {time} consist of\u00a0digits, and represent an integer between 0 and 1000.\nEach {amount}\u00a0consist of\u00a0digits, and represent an integer between 0 and 2000.\n"
    },
    {
        "prompt": "Chef recently saw the movie Matrix. He loved the movie overall but he didn't agree with some things in it. Particularly he didn't agree with the bald boy when he declared - There is no spoon. Being a chef, he understands the importance of the spoon and realizes that the universe can't survive without it. Furthermore, he is sure there is a spoon; he saw it in his kitchen this morning. So he has set out to prove the bald boy is wrong and find a spoon in the matrix. He has even obtained a digital map already. Can you help him?\n\nFormally you're given a matrix of lowercase and uppercase Latin letters. Your job is to find out if the word \"Spoon\" occurs somewhere in the matrix or not. A word is said to be occurred in the matrix if it is presented in some row from left to right or in some column from top to bottom. Note that match performed has to be case insensitive. \n\n-----Input-----\nThe first line of input contains a positive integer T, the number of test cases. After that T test cases follow. The first line of each test case contains two space separated integers R and C, the number of rows and the number of columns of the matrix M respectively. Thereafter R lines follow each containing C characters, the actual digital map itself.\n\n-----Output-----\nFor each test case print one line. If a \"Spoon\" is found in Matrix, output \"There is a spoon!\" else output \"There is indeed no spoon!\" (Quotes only for clarity).\n\n-----Constraints-----\n\n1 \u2264 T \u2264 100\n\n1 \u2264 R, C \u2264 100\n\n-----Sample Input-----\n3\n3 6\nabDefb\nbSpoon\nNIKHil\n6 6\naaaaaa\nssssss\nxuisdP\noooooo\nioowoo\nbdylan\n6 5\nbdfhj\ncacac\nopqrs\nddddd\nindia\nyucky\n\n-----Sample Output-----\nThere is a spoon!\nThere is a spoon!\nThere is indeed no spoon!\n\n-----Explanation-----\nIn the first test case, \"Spoon\" occurs in the second row. In the second test case, \"spOon\" occurs in the last column.",
        "completion": "Given a two dimensional metrix of Latin letters, determine if the word \"spoon\" (case insensitive) appears in the matrix, in the rows, coloums or diagonals.\n\n-----Input-----\nThe first line of input contains a positive integer T, the number of test cases. After that T test cases follow. The first line of each test case contains two space separated integers R and C, the number of rows and the number of columns of the matrix M respectively. Thereafter R lines follow each containing C characters, the actual digital map itself.\n\n-----Output-----\nFor each test case print one line. If a \"Spoon\" is found in the matrix, output \"There is a spoon!\" else output \"There is indeed no spoon!\" (Quotes only for clarity).\n\n-----Constraints-----\n\n1 \u2264 T \u2264 100\n\n1 \u2264 R, C \u2264 100\n\n-----Sample Input-----\n3\n3 6\nabDefb\nbSpoon\nNIKHil\n6 6\naaaaaa\nssssss\nxuisdP\noooooo\nioowoo\nbdylan\n6 5\nbdfhj\ncacac\nopqrs\nddddd\nindia\nyucky\n\n-----Sample Output-----\nThere is a spoon!\nThere is a spoon!\nThere is indeed no spoon!\n\n-----Explanation-----\nIn the first test case, \"Spoon\" occurs in the second row. In the second test case, \"spOon\" occurs in the last column."
    },
    {
        "prompt": "A simple string contains a large repetition of letters within it. This problem is related to string handling and manipulation.  An original message is sent from planet Earth to planet Cybertron in form of a string. However, the letter position and string size is not important. The number of time each letter has occurred in the string is important. So the original string which is sent to Cybertron is encrypted in the new string which comprises the letters followed by each time it has occurred in the original string. Eg- original message is- abcdabf. Then the encrypted string is- a2b2c1d1f1\n\n-----Input-----\nThe input consists of a single line string without any space or numeric or special characters.\n\n-----Output-----\nIt will consist of in the encrypted string which comprises the letters followed by each time it has occurred in the original string in order.\n\n-----Example-----\nInput:\ninformation\n\nOutput:\ni2n2f1o2r1m1a1t1",
        "completion": "You are given a string which can contain repeated letters. You have to find out the frequency of each unique character in the string and print the new string which comprises the letter followed by its frequency. Eg- original string is- abcdabf. Then the new string is- a2b2c1d1f1\n\n-----Input-----\nThe input consists of a single line string without any space or numeric or special characters.\n\n-----Output-----\nIt will consist of in the newstring which comprises the letters followed by each time it has occurred in the original string in order.\n\n-----Example-----\nInput:\ninformation\n\nOutput:\ni2n2f1o2r1m1a1t1"
    },
    {
        "prompt": "You have a very large square wall and a circular dartboard placed on the wall.\u00a0You have been challenged to throw darts into the board blindfolded.\u00a0Darts thrown at the wall are represented as an array of\u00a0points on a 2D plane.\u00a0\nReturn\u00a0the maximum number of points that are within or\u00a0lie\u00a0on\u00a0any circular dartboard of radius\u00a0r.\n\u00a0\nExample 1:\n\nInput: points = [[-2,0],[2,0],[0,2],[0,-2]], r = 2\nOutput: 4\nExplanation: Circle dartboard with center in (0,0) and radius = 2 contain all points.\n\nExample 2:\n\nInput: points = [[-3,0],[3,0],[2,6],[5,4],[0,9],[7,8]], r = 5\nOutput: 5\nExplanation: Circle dartboard with center in (0,4) and radius = 5 contain all points except the point (7,8).\n\nExample 3:\nInput: points = [[-2,0],[2,0],[0,2],[0,-2]], r = 1\nOutput: 1\n\nExample 4:\nInput: points = [[1,2],[3,5],[1,-1],[2,3],[4,1],[1,3]], r = 2\nOutput: 4\n\n\u00a0\nConstraints:\n\n1 <= points.length <= 100\npoints[i].length == 2\n-10^4 <= points[i][0], points[i][1] <= 10^4\n1 <= r <= 5000",
        "completion": "you are given a list. each element represent a 2D point.\nReturn the maximum number of points that are inside a circle of radius\u00a0r.\n\nExample 1:\n\nInput: points = [[-2,0],[2,0],[0,2],[0,-2]], r = 2\nOutput: 4\nExplanation: if center is at (0,0) and radius = 2 contain all 2D points.\n\nExample 2:\n\nInput: points = [[-3,0],[3,0],[2,6],[5,4],[0,9],[7,8]], r = 5\nOutput: 5\nExplanation: if center is at (0,4) and radius = 5 contain all points except the point (7,8).\n\nExample 3:\nInput: points = [[-2,0],[2,0],[0,2],[0,-2]], r = 1\nOutput: 1\n\nExample 4:\nInput: points = [[1,2],[3,5],[1,-1],[2,3],[4,1],[1,3]], r = 2\nOutput: 4\n\n\u00a0\nConstraints:\n\n1 <= points.length <= 100\npoints[i].length == 2\n-10^4 <= points[i][0], points[i][1] <= 10^4\n1 <= r <= 5000\n"
    },
    {
        "prompt": "-----General Statement:-----\nGiven the actual high and low temperatures for the day and the normal high and low temperatures for that day, calculate the average difference from normal.\n\n-----Input:-----\nThe first line of the data set for this problem is an integer that represents the number of data sets that follow. Each data set is on a separate line and consists of today\u2019s high, today\u2019s low, normal high, and normal low \u2013 in that order.\n\n-----Output:-----\nIf the average difference is negative, do not output the negative sign (-).\nOutput the amount of deviation from normal, followed by the words\nDEGREE(S) ABOVE NORMAL, or by the words\nDEGREE(S) BELOW NORMAL.\nRound to 1 decimal place. A trailing zero is required if the average is an integer.\nThe output is to be formatted exactly like that for the sample output given below.\n\n-----Assumptions:-----\nTemperatures are in the range \u201315..100 degrees.\nThe average temperature difference will not be zero.\n\n-----Discussion:-----\nDetermine the average of the difference of the high temperatures and the difference of the low temperatures.\n\n-----Sample Input:-----\n3\n75 45 78 40\n50 32 45 30\n56 48 62 45\n\n-----Sample Output:-----\n1.0 DEGREE(S) ABOVE NORMAL\n3.5 DEGREE(S) ABOVE NORMAL\n1.5 DEGREE(S) BELOW NORMAL",
        "completion": "Given the actual high and low temperatures for the day and the normal high and low temperatures for that day, calculate the average difference from normal.\n\n-----Input:-----\nThe first line of the data set for this problem is an integer that represents the number of data sets that follow. Each data set is on a separate line and consists of today\u2019s high, today\u2019s low, normal high, and normal low \u2013 in that order.\n\n-----Output:-----\nIf the average difference is negative, do not output the negative sign (-).\nOutput the amount of deviation from normal, followed by the words\nDEGREE(S) ABOVE NORMAL, or by the words\nDEGREE(S) BELOW NORMAL.\nRound to 1 decimal place. A trailing zero is required if the average is an integer.\n\n\n-----Assumptions:-----\nTemperatures are in the range \u201315..100 degrees.\nThe average temperature difference will not be zero.\n\n-----Sample Input:-----\n3\n75 45 78 40\n50 32 45 30\n56 48 62 45\n\n-----Sample Output:-----\n1.0 DEGREE(S) ABOVE NORMAL\n3.5 DEGREE(S) ABOVE NORMAL\n1.5 DEGREE(S) BELOW NORMAL"
    },
    {
        "prompt": "Chef is very organised in whatever he does and likes to maintain statistics of his work. Chef has expertise in web development and hence is a regular contributor on a forum. Chef sometimes makes multiple contributions in a single day.. Each day chef makes at least 1 contribution he is assigned a shade of green. The greater the number of contribution in a single day the darker shade of green he gets assigned and vice versa. Your job is to find out the number of days chef is assigned a same shade of green and print the number of times chef is assigned a unique shade of green.\n\n-----INPUT-----\nThe first line of input contains an integer T denoting the number of test cases. T test cases follow.\n\nThe first line of each test case contains an integer N denoting the number of days chef has contributed towards the forum.\n\nThe next line contains N spaced integers the number of contributions chef has made if he has made any.\n\n-----OUTPUT-----\n\nThe output will contain numbers on separate lines that show the number of individual green shades chef has earned in ascending order of intensity of the shades of green.\n\n-----CONSTRAINTS-----\n1 <= T <= 25\n\n5 <= N <= 50\n\n1 <= Ai <= 50\n\n-----EXAMPLE-----Input:\n\n1\n\n7\n\n20 6 5 3 3 1 1\nOutput:\n\n1: 2\n\n3: 2\n\n5: 1\n\n6: 1\n\n20: 1",
        "completion": "\n\nYou are given an array of size N. Array can have duplicate values in it. You have to write code for the calculating the frequency of a unique value repeated in the array.\n\n-----INPUT-----\nThe first line of input contains an integer T denoting the number of test cases. T test cases follow.\n\nThe first line of each test case contains an integer N denoting the number of days chef has contributed towards the forum.\n\nThe next line contains N spaced integers the number of contributions chef has made if he has made any.\n\n-----OUTPUT-----\n\nThe output will contain numbers on separate lines that show the number of individual green shades chef has earned in ascending order of intensity of the shades of green.\n\n-----CONSTRAINTS-----\n1 <= T <= 25\n\n5 <= N <= 50\n\n1 <= Ai <= 50\n\n-----EXAMPLE-----Input:\n\n1\n\n7\n\n20 6 5 3 3 1 1\nOutput:\n\n1: 2\n\n3: 2\n\n5: 1\n\n6: 1\n\n20: 1"
    },
    {
        "prompt": "You are given n pairs of numbers where the first number is always smaller than the second number.\n\n\n\nNow, we define a pair (c, d) can follow another pair (a, b) if and only if b < c. Chain of pairs can be formed in this fashion. \n\n\n\nGiven a set of pairs, find the length longest chain which can be formed. You needn't use up all the given pairs. You can select pairs in any order.\n\n\n\nExample 1:\n\nInput: [[1,2], [2,3], [3,4]]\nOutput: 2\nExplanation: The longest chain is [1,2] -> [3,4]\n\n\n\nNote:\n\nThe number of given pairs will be in the range [1, 1000].",
        "completion": "You are given n pairs of numbers where the first number is always smaller than the second number.\n\nA pair (c, d) can follow another pair (a, b) if and only if b < c.Chain can be formed in such a fashion.\n\n\nFind the length of longest chain which can be formed. \n\nExample 1:\n\nInput: [[1,2], [2,3], [3,4]]\nOutput: 2\nExplanation: The longest chain is [1,2] -> [3,4]\n\n"
    },
    {
        "prompt": "Being tired of participating in too many Codeforces rounds, Gildong decided to take some rest in a park. He sat down on a bench, and soon he found two rabbits hopping around. One of the rabbits was taller than the other.\n\nHe noticed that the two rabbits were hopping towards each other. The positions of the two rabbits can be represented as integer coordinates on a horizontal line. The taller rabbit is currently on position $x$, and the shorter rabbit is currently on position $y$ ($x \\lt y$). Every second, each rabbit hops to another position. The taller rabbit hops to the positive direction by $a$, and the shorter rabbit hops to the negative direction by $b$.\n\n [Image] \n\nFor example, let's say $x=0$, $y=10$, $a=2$, and $b=3$. At the $1$-st second, each rabbit will be at position $2$ and $7$. At the $2$-nd second, both rabbits will be at position $4$.\n\nGildong is now wondering: Will the two rabbits be at the same position at the same moment? If so, how long will it take? Let's find a moment in time (in seconds) after which the rabbits will be at the same point.\n\n\n-----Input-----\n\nEach test contains one or more test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 1000$).\n\nEach test case contains exactly one line. The line consists of four integers $x$, $y$, $a$, $b$ ($0 \\le x \\lt y \\le 10^9$, $1 \\le a,b \\le 10^9$) \u2014 the current position of the taller rabbit, the current position of the shorter rabbit, the hopping distance of the taller rabbit, and the hopping distance of the shorter rabbit, respectively.\n\n\n-----Output-----\n\nFor each test case, print the single integer: number of seconds the two rabbits will take to be at the same position.\n\nIf the two rabbits will never be at the same position simultaneously, print $-1$.\n\n\n-----Example-----\nInput\n5\n0 10 2 3\n0 10 3 3\n900000000 1000000000 1 9999999\n1 2 1 1\n1 3 1 1\n\nOutput\n2\n-1\n10\n-1\n1\n\n\n\n-----Note-----\n\nThe first case is explained in the description.\n\nIn the second case, each rabbit will be at position $3$ and $7$ respectively at the $1$-st second. But in the $2$-nd second they will be at $6$ and $4$ respectively, and we can see that they will never be at the same position since the distance between the two rabbits will only increase afterward.",
        "completion": "You are given two entities A and B and their positions are represented by integer coordinates on a horizantal line. the first position $x$ and a second position $y$. The Entity A moves in the positive direction by $a$, and the entity b moves to the negative direction by $b$.\n\nFor example, let's say $x=0$, $y=10$, $a=2$, and $b=3$. At the $1$-st second, entities will be at position $2$ and $7$. At the $2$-nd second, both A and B will be at position $4$.\n\nWill the two entities be at the same position at the same moment? If so, how long will it take? Let's find a moment in time (in seconds) after which the entities will be at the same point.\n\n\n\n-----Input-----\n\nEach test contains one or more test cases. The first line contains the number of test cases $t$ ($1 \\le t \\le 1000$).\n\nEach test case contains exactly one line. The line consists of four integers $x$, $y$, $a$, $b$ ($0 \\le x \\lt y \\le 10^9$, $1 \\le a,b \\le 10^9$) \u2014 the current position of the entity A , the current position of the entity b, the moving distance of the entity A, and the moving distance of the entity b, respectively.\n\n\n-----Output-----\n\nFor each test case, print the single integer: number of seconds the two entities will take to be at the same position.\n\nIf the two entities will never be at the same position simultaneously, print $-1$.\n\n\n-----Example-----\nInput\n5\n0 10 2 3\n0 10 3 3\n900000000 1000000000 1 9999999\n1 2 1 1\n1 3 1 1\n\nOutput\n2\n-1\n10\n-1\n1\n\n\n\n-----Note-----\n\nThe first case is explained in the description.\n\nIn the second case, each rabbit will be at position $3$ and $7$ respectively at the $1$-st second. But in the $2$-nd second they will be at $6$ and $4$ respectively, and we can see that they will never be at the same position since the distance between the two rabbits will only increase afterward.\n"
    },
    {
        "prompt": "You are playing a very popular game called Cubecraft. Initially, you have one stick and want to craft $k$ torches. One torch can be crafted using one stick and one coal.\n\nHopefully, you've met a very handsome wandering trader who has two trade offers:  exchange $1$ stick for $x$ sticks (you lose $1$ stick and gain $x$ sticks).  exchange $y$ sticks for $1$ coal (you lose $y$ sticks and gain $1$ coal). \n\nDuring one trade, you can use only one of these two trade offers. You can use each trade offer any number of times you want to, in any order.\n\nYour task is to find the minimum number of trades you need to craft at least $k$ torches. The answer always exists under the given constraints.\n\nYou have to answer $t$ independent test cases.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $t$ ($1 \\le t \\le 2 \\cdot 10^4$) \u2014 the number of test cases. Then $t$ test cases follow.\n\nThe only line of the test case contains three integers $x$, $y$ and $k$ ($2 \\le x \\le 10^9$; $1 \\le y, k \\le 10^9$) \u2014 the number of sticks you can buy with one stick, the number of sticks required to buy one coal and the number of torches you need, respectively.\n\n\n-----Output-----\n\nFor each test case, print the answer: the minimum number of trades you need to craft at least $k$ torches. The answer always exists under the given constraints.\n\n\n-----Example-----\nInput\n5\n2 1 5\n42 13 24\n12 11 12\n1000000000 1000000000 1000000000\n2 1000000000 1000000000\n\nOutput\n14\n33\n25\n2000000003\n1000000001999999999",
        "completion": "Initially, you have one stick and want to craft $k$ torches. One torch can be crafted using one stick and one coal.\n\nYou can trade $1$ stick for $x$ sticks or $y$ sticks for $1$ coal. \n\nYou can trade any number of times you want to, in any order.\n\nYour task is to find the minimum number of trades you need to craft at least $k$ torches. The answer always exists under the given constraints.\n\nYou have to answer $t$ independent test cases.\n\n-----Input-----\n\nThe first line of the input contains one integer $t$ ($1 \\le t \\le 2 \\cdot 10^4$) \u2014 the number of test cases. Then $t$ test cases follow.\n\nThe only line of the test case contains three integers $x$, $y$ and $k$ ($2 \\le x \\le 10^9$; $1 \\le y, k \\le 10^9$) \u2014 the number of sticks you can buy with one stick, the number of sticks required to buy one coal and the number of torches you need, respectively.\n\n\n-----Output-----\n\nFor each test case, print the answer: the minimum number of trades you need to craft at least $k$ torches. The answer always exists under the given constraints.\n\n\n-----Example-----\nInput\n5\n2 1 5\n42 13 24\n12 11 12\n1000000000 1000000000 1000000000\n2 1000000000 1000000000\n\nOutput\n14\n33\n25\n2000000003\n1000000001999999999\n"
    },
    {
        "prompt": "Reverse a linked list from position m to n. Do it in one-pass.\n\nNote:\u00a01 \u2264 m \u2264 n \u2264 length of list.\n\nExample:\n\n\nInput: 1->2->3->4->5->NULL, m = 2, n = 4\nOutput: 1->4->3->2->5->NULL",
        "completion": "Reverse a linked list from position m to n.\n\nNote:\u00a01 \u2264 m \u2264 n \u2264 length of list.\n\nExample:\n\n\nInput: 1->2->3->4->5->NULL, m = 2, n = 4\nOutput: 1->4->3->2->5->NULL"
    },
    {
        "prompt": "Write a program, which takes an integer N and if the number is less than 10 then display \"Thanks for helping Chef!\" otherwise print \"-1\".\n\n-----Input-----\n\nThe first line contains an integer T, total number of testcases. Then follow T lines, each line contains an integer N. \n\n-----Output-----\nFor each test case, output the given string or -1 depending on conditions, in a new line.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 1000\n- -20 \u2264 N \u2264 20\n\n-----Example-----\nInput\n3 \n1\n12\n-5\nOutput\nThanks for helping Chef!\n-1\nThanks for helping Chef!",
        "completion": "You are given an integer N. if N is less than 10 then display \"Thanks for helping Chef!\" otherwise print \"-1\".\n\n-----Input-----\n\nThe first line contains an integer T, total number of testcases. Then follow T lines, each line contains an integer N. \n\n-----Output-----\nFor each test case, output the given string or -1 depending on conditions, in a new line.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 1000\n- -20 \u2264 N \u2264 20\n\n-----Example-----\nInput\n3 \n1\n12\n-5\nOutput\nThanks for helping Chef!\n-1\nThanks for helping Chef!"
    },
    {
        "prompt": "Zonal Computing Olympiad 2013, 10 Nov 2012\nN teams participate in a league cricket tournament on Mars, where each pair of distinct teams plays each other exactly once. Thus, there are a total of (N \u00d7 (N-1))/2 matches. An expert has assigned a strength to each team, a positive integer. Strangely, the Martian crowds love one-sided matches and the advertising revenue earned from a match is the absolute value of the difference between the strengths of the two matches. Given the strengths of the N teams, find the total advertising revenue earned from all the matches.\n\nFor example, suppose N is 4 and the team strengths for teams 1, 2, 3, and 4 are 3, 10, 3, and 5 respectively. Then the advertising revenues from the 6 matches are as follows:\n\nMatch Team A Team B Ad revenue 1 1 2 7  2 1 3 0  3 1 4 2  4 2 3 7  5 2 4 5  6 3 4 2 \n\nThus the total advertising revenue is 23.\n\n-----Input format-----\nLine 1 : A single integer, N.\nLine 2 : N space-separated integers, the strengths of the N teams.\n\n-----Output format-----\nA single integer, the total advertising revenue from the tournament.\n\n-----Sample input-----\n4\n3 10 3 5\n\n-----Sample output-----\n23\n\n-----Test data-----\nIn all subtasks, the strength of each team is an integer between 1 and 1,000 inclusive.\n- Subtask 1 (30 marks) : 2 \u2264 N \u2264 1,000.\n- Subtask 2 (70 marks) : 2 \u2264 N \u2264 200,000.\n\n-----Live evaluation data-----\n- Subtask 1: Testcases 0,1,2.\n- Subtask 2: Testcases 3,4,5.\n\n-----Note-----\nThe answer might not fit in a variable of type int. We recommend that type long long be used for computing all advertising revenues. If you use printf and scanf, you can use %lld for long long.",
        "completion": "\nYou are given N teams which can play with each exactly one time.Thus, there are a total of (N \u00d7 (N-1))/2 matches. Each team is assigned a strength as a positive integer.Find the sum of all the absolute difference between the strengths of the two matches.\n\n\n-----Input format-----\nLine 1 : A single integer, N.\nLine 2 : N space-separated integers, the strengths of the N teams.\n\n-----Output format-----\nA single integer, the total advertising revenue from the tournament.\n\n-----Sample input-----\n4\n3 10 3 5\n\n-----Sample output-----\n23\n"
    },
    {
        "prompt": "Screen resolution of Polycarp's monitor is $a \\times b$ pixels. Unfortunately, there is one dead pixel at his screen. It has coordinates $(x, y)$ ($0 \\le x < a, 0 \\le y < b$). You can consider columns of pixels to be numbered from $0$ to $a-1$, and rows\u00a0\u2014 from $0$ to $b-1$.\n\nPolycarp wants to open a rectangular window of maximal size, which doesn't contain the dead pixel. The boundaries of the window should be parallel to the sides of the screen.\n\nPrint the maximal area (in pixels) of a window that doesn't contain the dead pixel inside itself.\n\n\n-----Input-----\n\nIn the first line you are given an integer $t$ ($1 \\le t \\le 10^4$)\u00a0\u2014 the number of test cases in the test. In the next lines you are given descriptions of $t$ test cases.\n\nEach test case contains a single line which consists of $4$ integers $a, b, x$ and $y$ ($1 \\le a, b \\le 10^4$; $0 \\le x < a$; $0 \\le y < b$)\u00a0\u2014 the resolution of the screen and the coordinates of a dead pixel. It is guaranteed that $a+b>2$ (e.g. $a=b=1$ is impossible).\n\n\n-----Output-----\n\nPrint $t$ integers\u00a0\u2014 the answers for each test case. Each answer should contain an integer equal to the maximal possible area (in pixels) of a rectangular window, that doesn't contain the dead pixel.\n\n\n-----Example-----\nInput\n6\n8 8 0 0\n1 10 0 3\n17 31 10 4\n2 1 0 0\n5 10 3 9\n10 10 4 8\n\nOutput\n56\n6\n442\n1\n45\n80\n\n\n\n-----Note-----\n\nIn the first test case, the screen resolution is $8 \\times 8$, and the upper left pixel is a dead pixel. Here you can see one of two possible layouts of the maximal window. [Image]",
        "completion": "You are given grid of size $a \\times b$ and a coordinate $(x, y)$ within that grid. \nYou need to find the largest area of a rectangle that does not include the coordinate $(x, y)$.\n\nThe columns are numbered from $0$ to $a-1$, and rows from $0$ to $b-1$.\n\nThe boundaries of the rectangle should be parallel to the sides of the grid.\n\nThe output should be the maximal area of the rectangle, that does not include the coordinate $(x, y)$.\n\n\n-----Input-----\n\nIn the first line you are given an integer $t$ ($1 \\le t \\le 10^4$)\u00a0\u2014 the\nnumber of test cases in the test. In the next lines you are given descriptions\nof $t$ test cases.\n\nEach test case contains a single line which consists of $4$ integers $a, b, x$\nand $y$ ($1 \\le a, b \\le 10^4$; $0 \\le x < a$; $0 \\le y < b$)\u00a0\u2014 the size of the\ngrid and the coordinate. It is guaranteed that $a+b>2$.\n\n\n-----Output-----\n\nPrint $t$ integers\u00a0\u2014 the answers for each test case. Each answer should contain\nan integer equal to the maximal possible area of a rectangular, that doesn't\ncontain the coordinate.\n\n\n-----Example-----\nInput\n6\n8 8 0 0\n1 10 0 3\n17 31 10 4\n2 1 0 0\n5 10 3 9\n10 10 4 8\n\nOutput\n56\n6\n442\n1\n45\n80\n"
    },
    {
        "prompt": "Given a complete binary tree, count the number of nodes.\n\nNote: \n\nDefinition of a complete binary tree from Wikipedia:\nIn a complete binary tree every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible. It can have between 1 and 2h nodes inclusive at the last level h.\n\nExample:\n\n\nInput: \n    1\n   / \\\n  2   3\n / \\  /\n4  5 6\n\nOutput: 6",
        "completion": "Given a complete binary tree, count the number of nodes.\n\nExample:\n\n\nInput: \n    1\n   / \\\n  2   3\n / \\  /\n4  5 6\n\nOutput: 6"
    },
    {
        "prompt": "Sereja has two integers \u2014 A and B \u2014 in 7-ary system. He wants to calculate the number C, such that B * C = A. It is guaranteed that B is a divisor of A.\n\nPlease, help Sereja calculate the number C modulo 7L.\n\n-----Input-----\n\nFirst line of input contains an integer T \u2014 the number of test cases. T tests follow.\n\nFor each test case, the first line contains the integer A, and the second line contains the integer B, and the third line contains the integer L. A and B are given in 7-ary system.\n\n-----Output-----\nOutput the answer in 7-ary system.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 10\n- A and B are both positive integers.\n- Length of A is a positive integer and doesn't exceed 106.\n- L and length of B are positive integers and do not exceed 10000.\n\n-----Subtasks-----\n- Sub task #1 (20 points): Length of A is a positive integer and doesn't exceed 20.\n- Sub task #2 (30 points): Length of A is a positive integer and doesn't exceed 2000.\n- Sub task #3 (50 points): Original constraints.\n\n-----Example-----\nInput:3\n21\n5\n10\n202\n13\n1\n202\n13\n2\n\nOutput:3\n3\n13",
        "completion": "You are given two integers \u2014 A and B \u2014 in 7-ary system. Find C, such that B * C = A and  B is a divisor of A. Calculate the number C modulo 7L.\n\n-----Input-----\n\nFirst line of input contains an integer T \u2014 the number of test cases. T tests follow.\n\nFor each test case, the first line contains the integer A, and the second line contains the integer B, and the third line contains the integer L. A and B are given in 7-ary system.\n\n-----Output-----\nOutput the answer in 7-ary system.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 10\n- A and B are both positive integers.\n- Length of A is a positive integer and doesn't exceed 106.\n- L and length of B are positive integers and do not exceed 10000.\n\n\n-----Example-----\nInput:3\n21\n5\n10\n202\n13\n1\n202\n13\n2\n\nOutput:3\n3\n13"
    },
    {
        "prompt": "Your are given a string $S$ containing only lowercase letter and a array of character $arr$. Find whether the given string only contains characters from the given character array. \nPrint $1$ if the string contains characters from the given array only else print $0$.\nNote: string contains characters in lower case only.\n\n-----Input:-----\n- First line will contain $T$, number of testcases. Then the testcases follow. \n- Each testcase contains- \na string $S$ of lowercase letter\na integer $n$ denoting length of character array $arr$\nnext line contains $n$ space separated characters.\n\n-----Output:-----\nFor each testcase, Print $1$ if the string contains characters from the given array only else print $0$.\n\n-----Constraints-----\n- $1 \\leq T \\leq 1000$\n- $0 \\leq n \\leq 10^5$\n\n-----Sample Input:-----\n3\nabcd\n4\na b c d\naabbbcccdddd\n4\na b c d\nacd\n3\na b d\n\n-----Sample Output:-----\n1\n1\n0",
        "completion": "You are given a string which has lowercase letter. A array is given to check whether the characters of string belongs to it or not. Print 1 if array contains the letter of given string else print 0.\n\n-----Input:-----\n- First line will contain $T$, number of testcases. Then the testcases follow. \n- Each testcase contains- \na string $S$ of lowercase letter\na integer $n$ denoting length of character array $arr$\nnext line contains $n$ space separated characters.\n\n-----Output:-----\nFor each testcase, Print $1$ if the string contains characters from the given array only else print $0$.\n\n-----Constraints-----\n- $1 \\leq T \\leq 1000$\n- $0 \\leq n \\leq 10^5$\n\n-----Sample Input:-----\n3\nabcd\n4\na b c d\naabbbcccdddd\n4\na b c d\nacd\n3\na b d\n\n-----Sample Output:-----\n1\n1\n0"
    },
    {
        "prompt": "You have initially a string of N characters, denoted by A1,A2...AN. You have to print the size of the largest subsequence of string A such that all the characters in that subsequence are distinct ie. no two characters in that subsequence should be same.\n\nA subsequence of string A is a sequence that can be derived from A by deleting some elements  and without changing the order of the remaining elements.\n\n-----Input-----\nFirst line contains T, number of testcases. Each testcase consists of a single string in one line. Each character of the string will be a small alphabet(ie. 'a' to 'z').\n\n-----Output-----\nFor each testcase, print the required answer in one line.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 10\n- Subtask 1 (20 points):1 \u2264 N \u2264 10\n- Subtask 2 (80 points):1 \u2264 N \u2264 105\n\n-----Example-----\nInput:\n2\nabc\naba\n\nOutput:\n3\n2\n\n-----Explanation-----\nFor first testcase, the whole string is a subsequence which has all distinct characters.\n\nIn second testcase, the we can delete last or first 'a' to get the required subsequence.",
        "completion": "You are given N string. You have to identify the duplicates and print the length of the new string as a combination of unique characters only.\n\n-----Input-----\nFirst line contains T, number of testcases. Each testcase consists of a single string in one line. Each character of the string will be a small alphabet(ie. 'a' to 'z').\n\n-----Output-----\nFor each testcase, print the required answer in one line.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 10\n- Subtask 1 (20 points):1 \u2264 N \u2264 10\n- Subtask 2 (80 points):1 \u2264 N \u2264 105\n\n-----Example-----\nInput:\n2\nabc\naba\n\nOutput:\n3\n2\n"
    },
    {
        "prompt": "Based on the well known ['Eight Queens' problem](https://en.wikipedia.org/wiki/Eight_queens_puzzle).\n\n#### Summary\nYour challenge is to place N queens on a chess board such that none of the queens are attacking each other.\n\n#### Details\nA standard 8x8 chess board has its rows (aka ranks) labelled 1-8 from bottom to top, and its columns (aka files) labelled a-h from left to right. Any square can be denoted by a combination of letter and number. For example, the top left square is a8. A queen may attack any square on its rank or file. It may also attack any square diagonally.\n\nIn this kata, chessboard may have any size from 1 to 10. Columns are marked with letters a-j, and rows with single digit from 1 to 0 (first row is marked with 1, ninth row is marked with 9, and tenth row is marked with 0, so `a1` denotes bottom left field of the chessboard, and `j0` - top right field on a 10x10 board).\n\nYou will be given the position of one queen on the board (e.g. `'c3'`). Your challenge is to compute the position of the remaining queens and return the full solution (including the original input) as a comma-separated string (e.g. `'d8,a7,e6,h5,b4,g3,c2,f1'`). Fields do not have to be sorted in any particular way, but you have to adhere to above format (lowercase letters, no spaces, fields separated with commas).\n\nNote that there may be multiple valid solutions for a given starting position. Your function only needs to produce (any) one of these. All given starting positions produce valid solutions.\n\nIf you wish to write more tests, the validity of a solution may be checked using preloaded function (see sample tests).\n\nHint: check the wiki article for the various algorithms that are applicable to this problem.\n\n----\nNext steps:\n - [N queens problem (with no mandatory queen position)](https://www.codewars.com/kata/52cdc1b015db27c484000031)\n - [N queens problem (with one mandatory queen position) - challenge version](https://www.codewars.com/kata/5985ea20695be6079e000003)",
        "completion": "A standard 8x8 chess board has its rows (aka ranks) labelled 1-8 from bottom to top, and its columns (aka files) labelled a-h from left to right. \nAny square can be denoted by a combination of letter and number. \nFor example, the top left square is a8. A queen may attack any square on its rank or file. It may also attack any square diagonally.\n\nIn this kata, chessboard may have any size from 1 to 10. \nColumns are marked with letters a-j, and rows with single digit from 1 to 0 (first row is marked with 1, and tenth row is marked with 0).\n\nYou will be given the position of one queen on the board. \nYour challenge is to compute the position of the remaining queens and return the full solution (including the original input) as a comma-separated string (e.g. `'d8,a7,e6,h5,b4,g3,c2,f1'`). \nFields do not have to be sorted in any particular way, but you have to adhere to above format."
    },
    {
        "prompt": "Consider a currency system in which there are notes of six denominations, namely, Rs. 1, Rs. 2, Rs. 5, Rs. 10, Rs. 50, Rs. 100.\nIf the sum of Rs. N is input, write a program to computer smallest number of notes that will combine to give Rs. N.\n\n-----Input-----\n\nThe first line contains an integer T, total number of testcases. Then follow T lines, each line contains an integer N. \n\n-----Output-----\nFor each test case, display the smallest number of notes that will combine to give N, in a new line.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 1000\n- 1 \u2264 N \u2264 1000000\n\n-----Example-----\nInput\n3 \n1200\n500\n242\n\nOutput\n12\n5\n7",
        "completion": "You are given six denominations of a currency, namely, Rs. 1, Rs. 2, Rs. 5, Rs. 10, Rs. 50, Rs. 100.\nIf the sum of Rs. N is input, write a program to computer smallest number of notes that will combine to give Rs. N.\n\n-----Input-----\n\nThe first line contains an integer T, total number of testcases. Then follow T lines, each line contains an integer N. \n\n-----Output-----\nFor each test case, display the smallest number of notes that will combine to give N, in a new line.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 1000\n- 1 \u2264 N \u2264 1000000\n\n-----Example-----\nInput\n3 \n1200\n500\n242\n\nOutput\n12\n5\n7"
    },
    {
        "prompt": "Given a string s. Can you make it a palindrome by deleting exactly one character? Note that size of the string after deletion would be one less than it was before. \n\n-----Input-----\nFirst line of the input contains a single integer T denoting number of test cases.\nFor each test case, you are given a single line containing string  s. \n\n-----Output-----\nFor each test case, print YES or NO depending on the answer of the problem. \n\n-----Constraints-----\nSubtask 1, 35 points \n-  1 \u2264 T \u2264 100\n- 2 \u2264  size of string s \u2264 1000\n-  String s contains lowercase English alphabets (ie. from 'a' to 'z').\n\nSubtask 2, 65 points \n- 2 \u2264  size of string s \u2264 10^5\n-  Sum of size of string s over all the input test cases won't exceed 10^6\n-  String s contains lowercase English alphabets (ie. from 'a' to 'z').\n\n-----Example-----\nInput:\n4\naaa\nabc\nabdbca\nabba\n\nOutput:\nYES\nNO\nYES\nYES\n\n-----Explanation-----\nExample case 1. Delete any one 'a', resulting string is \"aa\" which is a palindrome.\nExample case 2. It is not possible to delete exactly one character and having a palindrome.\nExample case 3. Delete 'c', resulting string is \"abdba\" which is a palindrome. \nExample case 4. Delete 'b', resulting string is \"aba\" which is a palindrome.",
        "completion": "You are given a string s.Your task is to determine whether you can make a palindrome of a given string by deleting only one character from it.\n\n-----Input-----\nFirst line of the input contains a single integer T denoting number of test cases.\nFor each test case, you are given a single line containing string  s. \n\n-----Output-----\nFor each test case, print YES or NO depending on the answer of the problem. \n\n-----Constraints-----\nSubtask 1, 35 points \n-  1 \u2264 T \u2264 100\n- 2 \u2264  size of string s \u2264 1000\n-  String s contains lowercase English alphabets (ie. from 'a' to 'z').\n\n-----Example-----\nInput:\n4\naaa\nabc\nabdbca\nabba\n\nOutput:\nYES\nNO\nYES\nYES\n"
    },
    {
        "prompt": "Chef has a number N, Cheffina challenges the chef to check the divisibility of all the permutation of N by 5. If any of the permutations is divisible by 5 then print 1 else print 0.\n\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Each test case contains a single line of input,$N$. \n\n-----Output:-----\nFor each test case, output in a single line answer 1 or 0.\n\n-----Constraints-----\n- $1 \\leq T \\leq 10^6$\n- $1 \\leq N \\leq 10^6$\n\n-----Sample Input:-----\n2\n19\n385\n\n-----Sample Output:-----\n0\n1",
        "completion": "You have to check the divisibility of all the permutation of given number N by 5. If any of the permutations is divisible by 5 then print 1 else print 0.\n\n-----Input:-----\n- First-line will contain $T$, the number of test cases. Then the test cases follow. \n- Each test case contains a single line of input,$N$. \n\n-----Output:-----\nFor each test case, output in a single line answer 1 or 0.\n\n-----Constraints-----\n- $1 \\leq T \\leq 10^6$\n- $1 \\leq N \\leq 10^6$\n\n-----Sample Input:-----\n2\n19\n385\n\n-----Sample Output:-----\n0\n1"
    },
    {
        "prompt": "Given the root of a tree, you are asked to find the most frequent subtree sum. The subtree sum of a node is defined as the sum of all the node values formed by the subtree rooted at that node (including the node itself). So what is the most frequent subtree sum value? If there is a tie, return all the values with the highest frequency in any order.\n\n\nExamples 1\nInput:\n\n  5\n /  \\\n2   -3\n\nreturn [2, -3, 4], since all the values happen only once, return all of them in any order.\n\n\nExamples 2\nInput:\n\n  5\n /  \\\n2   -5\n\nreturn [2], since 2 happens twice, however -5 only occur once.\n\n\nNote:\nYou may assume the sum of values in any subtree is in the range of 32-bit signed integer.",
        "completion": "You are given root of a tree. Find the most frequent subtree sum value if the  subtree sum of a node is defined as the sum of all the node values formed by the subtree rooted at that node (including the node itself). If there is a tie, return all the values with the highest frequency in any order.\n\n\nExamples 1\nInput:\n\n  5\n /  \\\n2   -3\n\nreturn [2, -3, 4], since all the values happen only once, return all of them in any order.\n\n\nExamples 2\nInput:\n\n  5\n /  \\\n2   -5\n\nreturn [2], since 2 happens twice, however -5 only occur once.\n\n"
    },
    {
        "prompt": "-----\nARRAY AND DISTINCT ELEMENTS\n-----\n\nChef is multitalented but he mistakenly took part in 2 contest which will take place\nat the same time. So while chef is busy at one cooking contest, he wants you to\ntake part in coding contest. Chef wants u to solve this program for him.\n\n\t\n\nYou have been given an array of size n. You have to calculate a subarray of size k\nwith maximum sum having distinct elements same as original array.\n\n\t\t\n\t\t\n\n-----Input Format-----\n\nFirst line contains no. of test cases. Second line contains n and k. Third line\ncontains array of n integers.\n\n\n-----Output-----\n\nPrint maximum possible sum as stated in question\n\n\t\t\n\t\t\n\n-----Example Text Case-----\nInput:\n\n1\n10 6\n8 8 3 5 3 8 5 7 7 7\n\nOutput:\n37\n\n\t\t",
        "completion": "\n\nYou have been given an array of size n. You have to calculate a subarray of size k\nwith maximum sum having distinct elements same as original array.\n\n\t\t\n\t\t\n\n-----Input Format-----\n\nFirst line contains no. of test cases. Second line contains n and k. Third line\ncontains array of n integers.\n\n\n-----Output-----\n\nPrint maximum possible sum as stated in question\n\n\t\t\n\t\t\n\n-----Example Text Case-----\nInput:\n\n1\n10 6\n8 8 3 5 3 8 5 7 7 7\n\nOutput:\n37\n\n\t\t"
    },
    {
        "prompt": "Kshitij has recently started solving problems on codechef. As he is real problem solving enthusiast, he wants continuous growth in number of problems solved per day.\nHe started with $a$  problems on first day. \nHe solves $d$ problems more than previous day. But after every $k$ days , he increases $d$ by\n$inc$ .\nCan you guess how many questions he will solve on $nth $ day ?\n\n-----Input:-----\n- First line  contains $T$, number of testcases. Then the testcases follow. \n- Each testcase contains of a single line of input,five integers $a, d, k, n, inc$. \n\n-----Output:-----\nFor each testcase, output in a single line number of questions solved on $nth$ day.\n\n-----Constraints-----\n- $1 \\leq T \\leq 15$\n- $1 \\leq a \\leq 99$\n- $1 \\leq d \\leq 100$\n- $1 \\leq n \\leq 10000$\n- $1 \\leq k \\leq n$\n- $0 \\leq inc \\leq 99$\n\n-----Sample Input:-----\n1\n1 4 3 8 2\n\n-----Sample Output:-----\n43\n\n-----EXPLANATION:-----\nThe number of questions solved in first 8 days is :\n$1$ $5$ $9$ $15$ $21$ $27$ $35$ $43$ .\nOn first day he solved 1 problem . Here $d$ is  4 for first 3 days.\nThen after 3 days $d$ increases by 2 (that is 6).",
        "completion": "\nYour friend solved $a$  problems on first day. \nHe solved $d$ problems more than previous day. But after every $k$ days , he increases $d$ by\n$inc$ .Calculate the number of questions he will solve on $nth $ day.\n\n-----Input:-----\n- First line  contains $T$, number of testcases. Then the testcases follow. \n- Each testcase contains of a single line of input,five integers $a, d, k, n, inc$. \n\n-----Output:-----\nFor each testcase, output in a single line number of questions solved on $nth$ day.\n\n-----Constraints-----\n- $1 \\leq T \\leq 15$\n- $1 \\leq a \\leq 99$\n- $1 \\leq d \\leq 100$\n- $1 \\leq n \\leq 10000$\n- $1 \\leq k \\leq n$\n- $0 \\leq inc \\leq 99$\n\n-----Sample Input:-----\n1\n1 4 3 8 2\n\n-----Sample Output:-----\n43\n\n"
    },
    {
        "prompt": "You have a string S consisting of N uppercase English letters. You are allowed to perform at most one operation of following kind: Choose any position in the string, remove the character at that position and insert it back to any other place in the string.\n\nFind the  lexicographically smallest  string you can achieve.\n\n-----Input-----\nThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains the single integer N denoting length of string S.\nThe second line contains the string S.\n\n-----Output-----\nFor each test case, output a single line containing the answer to the corresponding test case.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 50\n- 1 \u2264 N \u2264 50\n- S will consist of uppercase English letters.\n\n-----Example-----\nInput:\n2\n4\nDCBA\n7\nXYZZYZZ\n\nOutput:\nADCB\nXYYZZZZ\n\n-----Explanation-----\nExample case 1. The optimal solution here is to choose the last character and put it in the beginning of the string. So the answer will be ADCB\nExample case 2. The optimal solution here is to choose the 5-th character (1-based index) and put it between the 2-nd and the 3-rd characters. So the answer will be XYYZZZZ",
        "completion": "You have a string S consisting of N uppercase English letters.Only one time you can choose any position in the string, remove the character at that position and insert it back to any other place in the string.Find the  lexicographically smallest  string you can achieve.\n\n-----Input-----\nThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.\nThe first line of each test case contains the single integer N denoting length of string S.\nThe second line contains the string S.\n\n-----Output-----\nFor each test case, output a single line containing the answer to the corresponding test case.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 50\n- 1 \u2264 N \u2264 50\n- S will consist of uppercase English letters.\n\n-----Example-----\nInput:\n2\n4\nDCBA\n7\nXYZZYZZ\n\nOutput:\nADCB\nXYYZZZZ\n"
    },
    {
        "prompt": "Sandu, a teacher in Chefland introduced his students to a new sequence i.e.\n0,1,0,1,2,0,1,2,3,0,1,2,3,4........\nThe Sequence starts from 0 and increases by one till $i$(initially i equals to 1), then repeat itself with $i$ changed to $i+1$\nStudents being curious about the sequence asks the Nth element of the sequence. Help Sandu to answer the Students\n\n-----Input:-----\n- The first-line will contain $T$, the number of test cases. Then the test case follows. \n- Each test case contains a single numbers N.\n\n-----Output:-----\nPrint the Nth element of the sequence\n\n-----Constraints-----\n- $1 \\leq T \\leq 1000$\n- $1 \\leq N  \\leq 10^{18}$\n\n-----Sample Input:-----\n5\n8\n9\n20\n32\n109\n\n-----Sample Output:-----\n2\n3\n5\n4\n4",
        "completion": "0,1,0,1,2,0,1,2,3,0,1,2,3,4........\nThe sequence starts from 0 and increases by one till $i$(initially i equals to 1), then repeat itself with $i$ changed to $i+1$.\nFind the Nth term of the sequence.\n\n-----Input:-----\n- The first-line will contain $T$, the number of test cases. Then the test case follows. \n- Each test case contains a single numbers N.\n\n-----Output:-----\nPrint the Nth element of the sequence\n\n-----Constraints-----\n- $1 \\leq T \\leq 1000$\n- $1 \\leq N  \\leq 10^{18}$\n\n-----Sample Input:-----\n5\n8\n9\n20\n32\n109\n\n-----Sample Output:-----\n2\n3\n5\n4\n4"
    },
    {
        "prompt": "Given an integer N, Chef wants to find the smallest positive integer M such that the bitwise XOR of M and M+1 is N. If no such M exists output -1.\n\n-----Input-----\nThe first line of input contain an integer T denoting the number of test cases. Each of the following T lines contains an integer N for that test case.\n\n-----Output-----\nFor each test case, output a single line containing the number M or -1 as described above.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 5000\n- 1 \u2264 N \u2264 230\n\n-----Example-----\nInput:\n1\n3\n\nOutput:\n1\n\n-----Explanation-----First Example :  M desired in the problem would be 1. As bitwise XOR of 1 and 2 is equal to 3.",
        "completion": "You are given an integer N,to find the smallest positive integer M such that the bitwise XOR of M and M+1 is N. If no such M exists output -1.\n\n-----Input-----\nThe first line of input contain an integer T denoting the number of test cases. Each of the following T lines contains an integer N for that test case.\n\n-----Output-----\nFor each test case, output a single line containing the number M or -1 as described above.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 5000\n- 1 \u2264 N \u2264 230\n\n-----Example-----\nInput:\n1\n3\n\nOutput:\n1\n"
    },
    {
        "prompt": "Alex and Lee play a game with piles of stones.\u00a0 There are an even number of\u00a0piles arranged in a row, and each pile has a positive integer number of stones piles[i].\nThe objective of the game is to end with the most\u00a0stones.\u00a0 The total number of stones is odd, so there are no ties.\nAlex and Lee take turns, with Alex starting first.\u00a0 Each turn, a player\u00a0takes the entire pile of stones from either the beginning or the end of the row.\u00a0 This continues until there are no more piles left, at which point the person with the most stones wins.\nAssuming Alex and Lee play optimally, return True\u00a0if and only if Alex wins the game.\n\u00a0\nExample 1:\nInput: piles = [5,3,4,5]\nOutput: true\nExplanation: \nAlex starts first, and can only take the first 5 or the last 5.\nSay he takes the first 5, so that the row becomes [3, 4, 5].\nIf Lee takes 3, then the board is [4, 5], and Alex takes 5 to win with 10 points.\nIf Lee takes the last 5, then the board is [3, 4], and Alex takes 4 to win with 9 points.\nThis demonstrated that taking the first 5 was a winning move for Alex, so we return true.\n\n\u00a0\nConstraints:\n\n2 <= piles.length <= 500\npiles.length is even.\n1 <= piles[i] <= 500\nsum(piles) is odd.",
        "completion": "Alex and Lee play a game with a list of numbers. There are an even number of\u00a0elements in the list and each value has a positive integer number.\nThe objective of the game is to end with largest value. The total sum of values is odd, so there are no ties.\nAlex and Lee take turns, with Alex starting first. Each turn, a player\u00a0takes value from either the beginning or the end of the list.\u00a0This continues until there are no more values left, at which point the person with the largest value wins.\nAssuming Alex and Lee play optimally, return True\u00a0if and only if Alex wins the game.\n\n\nExample 1:\nInput: piles = [5,3,4,5]\nOutput: true\nExplanation: \nAlex starts first, and can only take the first 5 or the last 5.\nSay he takes the first 5, so that the row becomes [3, 4, 5].\nIf Lee takes 3, then the board is [4, 5], and Alex takes 5 to win with 10 points.\nIf Lee takes the last 5, then the board is [3, 4], and Alex takes 4 to win with 9 points.\nThis demonstrated that taking the first 5 was a winning move for Alex, so we return true.\n\n\u00a0\nConstraints:\n\n2 <= piles.length <= 500\npiles.length is even.\n1 <= piles[i] <= 500\nsum(piles) is odd.\n"
    },
    {
        "prompt": "Theatre Square in the capital city of Berland has a rectangular shape with the size n\u2009\u00d7\u2009m meters. On the occasion of the city's anniversary, a decision was taken to pave the Square with square granite flagstones. Each flagstone is of the size a\u2009\u00d7\u2009a.\nWhat is the least number of flagstones needed to pave the Square? It's allowed to cover the surface larger than the Theatre Square, but the Square has to be covered. It's not allowed to break the flagstones. The sides of flagstones should be parallel to the sides of the Square.\nInput\nThe input contains three positive integer numbers in the first line: n,\u2009\u2009m and a (1\u2009\u2264\u2009\u2009n,\u2009m,\u2009a\u2009\u2264\u200910^9).\nOutput\nPrint the needed number of flagstones in new line.\nExamples\ninput\n6 6 4\noutput\n4",
        "completion": "Given n, m and a, calculate the number of squares of side length a required to completely cover a rectangle of length m and breadth n.\nInput\nThe input contains three positive integer numbers in the first line: n,\u2009\u2009m and a (1\u2009\u2264\u2009\u2009n,\u2009m,\u2009a\u2009\u2264\u200910^9).\nOutput\nPrint the needed squares.\nExamples\ninput\n6 6 4\noutput\n4"
    },
    {
        "prompt": "-----Problem Statement-----\nLevy's conjecture, named after Hyman Levy, states that all odd integers greater than 5 can be represented as the sum of an odd prime number and an even semiprime. To put it algebraically, 2n + 1 = p + 2q always has a solution in primes p and q (not necessary to be distinct) for n > 2. (Source: Wikipedia)\nIn this problem, given a positive integer N (not necessary to be odd integer greater than 5). Your task is to calculate how many distinct ordered pairs (p, q) such that N = p + 2q, where p and q are primes.\n\n-----Input-----\nThe first line of input contains an integer T, denoting the number of test cases. Then T test cases follow.\n\nEach test case consists of exactly one line containing an integer N.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 100000 (105)\n- 1 \u2264 N \u2264 10000 (104)\n\n-----Output-----\nFor each test case, output the number of ordered pairs (p, q) of primes such that N = p + 2q.\n\n-----Example-----\nInput:\n3\n2\n7\n11\n\nOutput:\n0\n1\n2\n\n-----Explanation-----\nCase #1: There are no ordered pairs (p, q) such that p + 2q = 2.\nCase #2: There is only one ordered pair (p, q) = (3, 2) such that p + 2q = 7.\nCase #3: There are two ordered pairs (p, q) = (7, 2), (5, 3) such that p + 2q = 11.",
        "completion": "\nIn this problem, given a positive integer N. Your task is to calculate how many distinct ordered pairs (p, q) such that N = p + 2q, where p and q are primes.\n\n-----Input-----\nThe first line of input contains an integer T, denoting the number of test cases. Then T test cases follow.\n\nEach test case consists of exactly one line containing an integer N.\n\n-----Constraints-----\n- 1 \u2264 T \u2264 100000 (105)\n- 1 \u2264 N \u2264 10000 (104)\n\n-----Output-----\nFor each test case, output the number of ordered pairs (p, q) of primes such that N = p + 2q.\n\n-----Example-----\nInput:\n3\n2\n7\n11\n\nOutput:\n0\n1\n2\n\n-----Explanation-----\nCase #1: There are no ordered pairs (p, q) such that p + 2q = 2.\nCase #2: There is only one ordered pair (p, q) = (3, 2) such that p + 2q = 7.\nCase #3: There are two ordered pairs (p, q) = (7, 2), (5, 3) such that p + 2q = 11."
    },
    {
        "prompt": "Richik$Richik$ has just completed his engineering and has got a job in one of the firms at Sabrina$Sabrina$ which is ranked among the top seven islands in the world in terms of the pay scale. \nSince Richik$Richik$ has to travel a lot to reach the firm, the owner assigns him a number X$X$, and asks him to come to work only on the day which is a multiple of X$X$. Richik joins the firm on 1-st day but starts working from X-th day. Richik$Richik$ is paid exactly the same amount in Dollars as the day number. For example, if Richik$Richik$ has been assigned X=3$X = 3$, then he will be paid 3$3$ dollars and 6$6$ dollars on the 3rd$3rd$ and 6th$6th$ day on which he comes for work. \nOn N\u2212th$N-th$ day, the owner calls up Richik$Richik$ and asks him not to come to his firm anymore. Hence Richik$Richik$ demands his salary of all his working days together. Since it will take a lot of time to add, Richik$Richik$ asks help from people around him, let's see if you can help him out. \n\n-----Input:-----\n- First line will contain T$T$, number of testcases. Then the testcases follow. \n- Each testcase contains of a single line of input, two integers X,N$X, N$. \n\n-----Output:-----\nFor each testcase, output in a single line which is the salary which Richik$Richik$ demands. \n\n-----Constraints-----\n- 1\u2264T\u22641000$1 \\leq T \\leq 1000$\n- 1\u2264X<=N\u2264107$1 \\leq X<=N \\leq 10^7$\n\n-----Sample Input:-----\n1\n3 10\n\n-----Sample Output:-----\n18",
        "completion": "You are given two positive numbers X and N.\nOn each day which is the multiple of X, you are paid the same amount as day number.\nYou need to output the total amount collected until the Nth day. \n\n-----Input:-----\n- First line will contain T, number of testcases. Then the testcases follow. \n- Each testcase contains of a single line of input, two integers X,N. \n\n-----Output:-----\nFor each testcase, output in a single line which is the salary which Richik$Richik$ demands. \n\n-----Constraints-----\n- 1\u2264T\u226410001 \\leq T \\leq 1000\n- 1\u2264X<=N\u22641071 \\leq X<=N \\leq 10^7\n\n-----Sample Input:-----\n1\n3 10\n\n-----Sample Output:-----\n18"
    },
    {
        "prompt": "You are given n strings s_1, s_2, ..., s_{n} consisting of characters 0 and 1. m operations are performed, on each of them you concatenate two existing strings into a new one. On the i-th operation the concatenation s_{a}_{i}s_{b}_{i} is saved into a new string s_{n} + i (the operations are numbered starting from 1). After each operation you need to find the maximum positive integer k such that all possible strings consisting of 0 and 1 of length k (there are 2^{k} such strings) are substrings of the new string. If there is no such k, print 0.\n\n\n-----Input-----\n\nThe first line contains single integer n (1 \u2264 n \u2264 100)\u00a0\u2014 the number of strings. The next n lines contain strings s_1, s_2, ..., s_{n} (1 \u2264 |s_{i}| \u2264 100), one per line. The total length of strings is not greater than 100.\n\nThe next line contains single integer m (1 \u2264 m \u2264 100)\u00a0\u2014 the number of operations. m lines follow, each of them contains two integers a_{i} abd b_{i} (1 \u2264 a_{i}, b_{i} \u2264 n + i - 1)\u00a0\u2014 the number of strings that are concatenated to form s_{n} + i.\n\n\n-----Output-----\n\nPrint m lines, each should contain one integer\u00a0\u2014 the answer to the question after the corresponding operation.\n\n\n-----Example-----\nInput\n5\n01\n10\n101\n11111\n0\n3\n1 2\n6 5\n4 4\n\nOutput\n1\n2\n0\n\n\n\n-----Note-----\n\nOn the first operation, a new string \"0110\" is created. For k = 1 the two possible binary strings of length k are \"0\" and \"1\", they are substrings of the new string. For k = 2 and greater there exist strings of length k that do not appear in this string (for k = 2 such string is \"00\"). So the answer is 1.\n\nOn the second operation the string \"01100\" is created. Now all strings of length k = 2 are present.\n\nOn the third operation the string \"1111111111\" is created. There is no zero, so the answer is 0.",
        "completion": "You are given n strings s_1, s_2, ..., s_{n} consisting of characters 0 and 1. m operations are performed, on each of them you concatenate two existing strings into a new one. On the i-th operation the concatenation s_{a}_{i}s_{b}_{i} is saved into a new string s_{n} + i (the operations are numbered starting from 1). After each operation you need to find the maximum positive integer k such that all possible strings consisting of 0 and 1 of length k (there are 2^{k} such strings) are substrings of the new string. If there is no such k, print 0.\n\n\n-----Input-----\n\nThe first line contains single integer n (1 \u2264 n \u2264 100)\u00a0\u2014 the number of strings. The next n lines contain strings s_1, s_2, ..., s_{n} (1 \u2264 |s_{i}| \u2264 100), one per line. The total length of strings is not greater than 100.\n\nThe next line contains single integer m (1 \u2264 m \u2264 100)\u00a0\u2014 the number of operations. m lines follow, each of them contains two integers a_{i} abd b_{i} (1 \u2264 a_{i}, b_{i} \u2264 n + i - 1)\u00a0\u2014 the number of strings that are concatenated to form s_{n} + i.\n\n\n-----Output-----\n\nPrint m lines, each should contain one integer\u00a0\u2014 the answer to the question after the corresponding operation.\n\n\n-----Example-----\nInput\n5\n01\n10\n101\n11111\n0\n3\n1 2\n6 5\n4 4\n\nOutput\n1\n2\n0\n"
    },
    {
        "prompt": "Watchmen are in a danger and Doctor Manhattan together with his friend Daniel Dreiberg should warn them as soon as possible. There are n watchmen on a plane, the i-th watchman is located at point (x_{i}, y_{i}).\n\nThey need to arrange a plan, but there are some difficulties on their way. As you know, Doctor Manhattan considers the distance between watchmen i and j to be |x_{i} - x_{j}| + |y_{i} - y_{j}|. Daniel, as an ordinary person, calculates the distance using the formula $\\sqrt{(x_{i} - x_{j})^{2} +(y_{i} - y_{j})^{2}}$.\n\nThe success of the operation relies on the number of pairs (i, j) (1 \u2264 i < j \u2264 n), such that the distance between watchman i and watchmen j calculated by Doctor Manhattan is equal to the distance between them calculated by Daniel. You were asked to compute the number of such pairs.\n\n\n-----Input-----\n\nThe first line of the input contains the single integer n (1 \u2264 n \u2264 200 000)\u00a0\u2014 the number of watchmen.\n\nEach of the following n lines contains two integers x_{i} and y_{i} (|x_{i}|, |y_{i}| \u2264 10^9).\n\nSome positions may coincide.\n\n\n-----Output-----\n\nPrint the number of pairs of watchmen such that the distance between them calculated by Doctor Manhattan is equal to the distance calculated by Daniel.\n\n\n-----Examples-----\nInput\n3\n1 1\n7 5\n1 5\n\nOutput\n2\n\nInput\n6\n0 0\n0 1\n0 2\n-1 1\n0 1\n1 1\n\nOutput\n11\n\n\n\n-----Note-----\n\nIn the first sample, the distance between watchman 1 and watchman 2 is equal to |1 - 7| + |1 - 5| = 10 for Doctor Manhattan and $\\sqrt{(1 - 7)^{2} +(1 - 5)^{2}} = 2 \\cdot \\sqrt{13}$ for Daniel. For pairs (1, 1), (1, 5) and (7, 5), (1, 5) Doctor Manhattan and Daniel will calculate the same distances.",
        "completion": "There are n watchmen on a plane, the i-th watchman is located at point (x_{i}, y_{i}).\n\nDoctor Manhattan considers the distance between watchmen i and j to be |x_{i} - x_{j}| + |y_{i} - y_{j}|. Daniel, calculates the distance using the formula $\\sqrt{(x_{i} - x_{j})^{2} +(y_{i} - y_{j})^{2}}$.\n\nThe success of the operation relies on the number of pairs (i, j) (1 \u2264 i < j \u2264 n), such that the distance between watchman i and watchmen j calculated by Doctor Manhattan is equal to the distance between them calculated by Daniel. Compute the number of such pairs.\n\n\n-----Input-----\n\nThe first line of the input contains the single integer n (1 \u2264 n \u2264 200 000)\u00a0\u2014 the number of watchmen.\n\nEach of the following n lines contains two integers x_{i} and y_{i} (|x_{i}|, |y_{i}| \u2264 10^9).\n\nSome positions may coincide.\n\n\n-----Output-----\n\nPrint the number of pairs of watchmen such that the distance between them calculated by Doctor Manhattan is equal to the distance calculated by Daniel.\n\n\n-----Examples-----\nInput\n3\n1 1\n7 5\n1 5\n\nOutput\n2\n\nInput\n6\n0 0\n0 1\n0 2\n-1 1\n0 1\n1 1\n\nOutput\n11\n\n"
    },
    {
        "prompt": "You are given set of n points in 5-dimensional space. The points are labeled from 1 to n. No two points coincide.\n\nWe will call point a bad if there are different points b and c, not equal to a, from the given set such that angle between vectors $\\vec{ab}$ and $\\vec{ac}$ is acute (i.e. strictly less than $90^{\\circ}$). Otherwise, the point is called good.\n\nThe angle between vectors $\\vec{x}$ and $\\vec{y}$ in 5-dimensional space is defined as $\\operatorname{arccos}(\\frac{\\vec{x} \\cdot \\vec{y}}{|\\vec{x}||\\vec{y}|})$, where $\\vec{x} \\cdot \\vec{y} = x_{1} y_{1} + x_{2} y_{2} + x_{3} y_{3} + x_{4} y_{4} + x_{5} y_{5}$ is the scalar product and $|\\vec{x}|= \\sqrt{\\vec{x} \\cdot \\vec{x}}$ is length of $\\vec{x}$.\n\nGiven the list of points, print the indices of the good points in ascending order.\n\n\n-----Input-----\n\nThe first line of input contains a single integer n (1 \u2264 n \u2264 10^3)\u00a0\u2014 the number of points.\n\nThe next n lines of input contain five integers a_{i}, b_{i}, c_{i}, d_{i}, e_{i} (|a_{i}|, |b_{i}|, |c_{i}|, |d_{i}|, |e_{i}| \u2264 10^3) \u00a0\u2014 the coordinates of the i-th point. All points are distinct.\n\n\n-----Output-----\n\nFirst, print a single integer k\u00a0\u2014 the number of good points.\n\nThen, print k integers, each on their own line\u00a0\u2014 the indices of the good points in ascending order.\n\n\n-----Examples-----\nInput\n6\n0 0 0 0 0\n1 0 0 0 0\n0 1 0 0 0\n0 0 1 0 0\n0 0 0 1 0\n0 0 0 0 1\n\nOutput\n1\n1\n\nInput\n3\n0 0 1 2 0\n0 0 9 2 0\n0 0 5 9 0\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first sample, the first point forms exactly a $90^{\\circ}$ angle with all other pairs of points, so it is good.\n\nIn the second sample, along the cd plane, we can see the points look as follows:\n\n[Image]\n\nWe can see that all angles here are acute, so no points are good.",
        "completion": "You are given set of n points in 5-dimensional space. The points are labeled from 1 to n. No two points coincide.\n\nA point is bad if there are different points b and c, not equal to a, from the given set such that angle between vectors $\\vec{ab}$ and $\\vec{ac}$ is acute. Otherwise, the point is called good.\n\nThe angle between vectors $\\vec{x}$ and $\\vec{y}$ in 5-dimensional space is defined as $\\operatorname{arccos}(\\frac{\\vec{x} \\cdot \\vec{y}}{|\\vec{x}||\\vec{y}|})$, where $\\vec{x} \\cdot \\vec{y} = x_{1} y_{1} + x_{2} y_{2} + x_{3} y_{3} + x_{4} y_{4} + x_{5} y_{5}$ is the scalar product and $|\\vec{x}|= \\sqrt{\\vec{x} \\cdot \\vec{x}}$ is length of $\\vec{x}$.\n\nGiven the list of points, print the indices of the good points in ascending order.\n\n\n-----Input-----\n\nThe first line of input contains a single integer n (1 \u2264 n \u2264 10^3)\u00a0\u2014 the number of points.\n\nThe next n lines of input contain five integers a_{i}, b_{i}, c_{i}, d_{i}, e_{i} (|a_{i}|, |b_{i}|, |c_{i}|, |d_{i}|, |e_{i}| \u2264 10^3) \u00a0\u2014 the coordinates of the i-th point. All points are distinct.\n\n\n-----Output-----\n\nFirst, print a single integer k\u00a0\u2014 the number of good points.\n\nThen, print k integers, each on their own line\u00a0\u2014 the indices of the good points in ascending order.\n\n\n-----Examples-----\nInput\n6\n0 0 0 0 0\n1 0 0 0 0\n0 1 0 0 0\n0 0 1 0 0\n0 0 0 1 0\n0 0 0 0 1\n\nOutput\n1\n1\n\nInput\n3\n0 0 1 2 0\n0 0 9 2 0\n0 0 5 9 0\n\nOutput\n0\n\n"
    },
    {
        "prompt": "Igor the analyst has adopted n little bunnies. As we all know, bunnies love carrots. Thus, Igor has bought a carrot to be shared between his bunnies. Igor wants to treat all the bunnies equally, and thus he wants to cut the carrot into n pieces of equal area. \n\nFormally, the carrot can be viewed as an isosceles triangle with base length equal to 1 and height equal to h. Igor wants to make n - 1 cuts parallel to the base to cut the carrot into n pieces. He wants to make sure that all n pieces have the same area. Can you help Igor determine where to cut the carrot so that each piece have equal area?\n\n [Image] Illustration to the first example. \n\n\n-----Input-----\n\nThe first and only line of input contains two space-separated integers, n and h (2 \u2264 n \u2264 1000, 1 \u2264 h \u2264 10^5).\n\n\n-----Output-----\n\nThe output should contain n - 1 real numbers x_1, x_2, ..., x_{n} - 1. The number x_{i} denotes that the i-th cut must be made x_{i} units away from the apex of the carrot. In addition, 0 < x_1 < x_2 < ... < x_{n} - 1 < h must hold. \n\nYour output will be considered correct if absolute or relative error of every number in your output doesn't exceed 10^{ - 6}.\n\nFormally, let your answer be a, and the jury's answer be b. Your answer is considered correct if $\\frac{|a - b|}{\\operatorname{max}(1, b)} \\leq 10^{-6}$.\n\n\n-----Examples-----\nInput\n3 2\n\nOutput\n1.154700538379 1.632993161855\n\nInput\n2 100000\n\nOutput\n70710.678118654752\n\n\n\n-----Note-----\n\nDefinition of isosceles triangle: https://en.wikipedia.org/wiki/Isosceles_triangle.",
        "completion": "You have n bunnies. You have bought a carrot to be shared between these bunnies. You want to treat all the bunnies equally, and thus want to cut the carrot into n pieces of equal area. \n\nFormally, the carrot can be viewed as an isosceles triangle with base length equal to 1 and height equal to h. You want to make n - 1 cuts parallel to the base to cut the carrot into n pieces. Make sure that all n pieces have the same area.\n\n\n\n-----Input-----\n\nThe first and only line of input contains two space-separated integers, n and h (2 \u2264 n \u2264 1000, 1 \u2264 h \u2264 10^5).\n\n\n-----Output-----\n\nThe output should contain n - 1 real numbers x_1, x_2, ..., x_{n} - 1. The number x_{i} denotes that the i-th cut must be made x_{i} units away from the apex of the carrot. In addition, 0 < x_1 < x_2 < ... < x_{n} - 1 < h must hold. \n\nYour output will be considered correct if absolute or relative error of every number in your output doesn't exceed 10^{ - 6}.\n\nFormally, let your answer be a, and the jury's answer be b. Your answer is considered correct if $\\frac{|a - b|}{\\operatorname{max}(1, b)} \\leq 10^{-6}$.\n\n\n-----Examples-----\nInput\n3 2\n\nOutput\n1.154700538379 1.632993161855\n\nInput\n2 100000\n\nOutput\n70710.678118654752\n\n"
    },
    {
        "prompt": "You are given two integer sequences, each of length N: a_1, ..., a_N and b_1, ..., b_N.\nThere are N^2 ways to choose two integers i and j such that 1 \\leq i, j \\leq N. For each of these N^2 pairs, we will compute a_i + b_j and write it on a sheet of paper.\nThat is, we will write N^2 integers in total.\nCompute the XOR of these N^2 integers.\nDefinition of XOR\nThe XOR of integers c_1, c_2, ..., c_m is defined as follows:\n - Let the XOR be X. In the binary representation of X, the digit in the 2^k's place (0 \\leq k; k is an integer) is 1 if there are an odd number of integers among c_1, c_2, ...c_m whose binary representation has 1 in the 2^k's place, and 0 if that number is even.\nFor example, let us compute the XOR of 3 and 5. The binary representation of 3 is 011, and the binary representation of 5 is 101, thus the XOR has the binary representation 110, that is, the XOR is 6.\n\n-----Constraints-----\n - All input values are integers.\n - 1 \\leq N \\leq 200,000\n - 0 \\leq a_i, b_i < 2^{28}\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\na_1 a_2 ... a_N\nb_1 b_2 ... b_N\n\n-----Output-----\nPrint the result of the computation.\n\n-----Sample Input-----\n2\n1 2\n3 4\n\n-----Sample Output-----\n2\n\nOn the sheet, the following four integers will be written: 4(1+3), 5(1+4), 5(2+3) and 6(2+4).",
        "completion": "You are given two integer sequences, each of length N: a_1, ..., a_N and b_1, ..., b_N.\nThere are N^2 ways to choose two integers i and j such that 1 \\leq i, j \\leq N. For each of these N^2 pairs, we will compute a_i + b_j.\nCompute the XOR of these N^2 integers.\n\n-----Constraints-----\n - All input values are integers.\n - 1 \\leq N \\leq 200,000\n - 0 \\leq a_i, b_i < 2^{28}\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\na_1 a_2 ... a_N\nb_1 b_2 ... b_N\n\n-----Output-----\nPrint the result of the computation.\n\n-----Sample Input-----\n2\n1 2\n3 4\n\n-----Sample Output-----\n2\n"
    },
    {
        "prompt": "In Finite Encyclopedia of Integer Sequences (FEIS), all integer sequences of lengths between 1 and N (inclusive) consisting of integers between 1 and K (inclusive) are listed.\nLet the total number of sequences listed in FEIS be X. Among those sequences, find the (X/2)-th (rounded up to the nearest integer) lexicographically smallest one.\n\n-----Constraints-----\n - 1 \\leq N,K \\leq 3 \u00d7 10^5\n - N and K are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nK N\n\n-----Output-----\nPrint the (X/2)-th (rounded up to the nearest integer) lexicographically smallest sequence listed in FEIS, with spaces in between, where X is the total number of sequences listed in FEIS.\n\n-----Sample Input-----\n3 2\n\n-----Sample Output-----\n2 1 \n\nThere are 12 sequences listed in FEIS: (1),(1,1),(1,2),(1,3),(2),(2,1),(2,2),(2,3),(3),(3,1),(3,2),(3,3).\nThe (12/2 = 6)-th lexicographically smallest one among them is (2,1).",
        "completion": "In Finite Encyclopedia of Integer Sequences (FEIS), all integer sequences of lengths between 1 and N (inclusive) consisting of integers between 1 and K (inclusive) are listed.\n\nLet the total number of sequences listed in FEIS be X. Among those sequences, find the (X/2)-th lexicographically smallest one.\n\n-----Constraints-----\n - 1 \\leq N,K \\leq 3 \u00d7 10^5\n\n\n-----Input-----\nInput is given from Standard Input in the following format:\nK N\n\n-----Output-----\nPrint the (X/2)-th lexicographically smallest sequence listed in FEIS, with spaces in between, where X is the total number of sequences listed in FEIS.\n\n-----Sample Input-----\n3 2\n\n-----Sample Output-----\n2 1 \n\nThere are 12 sequences listed in FEIS: (1),(1,1),(1,2),(1,3),(2),(2,1),(2,2),(2,3),(3),(3,1),(3,2),(3,3).\nThe (12/2 = 6)-th lexicographically smallest one among them is (2,1)."
    },
    {
        "prompt": "Johnny has just found the new, great tutorial: \"How to become a grandmaster?\". The tutorial tells many strange and unexpected for Johnny things, such as you have to be patient or that very important is solving many harder and harder problems. \n\nThe boy has found an online judge with tasks divided by topics they cover. He has picked $p^{k_i}$ problems from $i$-th category ($p$ is his favorite number). He wants to solve them in two weeks (the patience condition is too hard for Johnny, so for simplicity, he looks only at easy tasks, which can be solved in such a period). Now our future grandmaster has to decide which topics to cover first and which the second week. Help him assign topics in such a way, that workload is balanced.\n\nFormally, given $n$ numbers $p^{k_i}$, the boy wants to divide them into two disjoint sets, minimizing the absolute difference between sums of numbers in each set. Find the minimal absolute difference. Output the result modulo $10^{9}+7$.\n\n\n-----Input-----\n\nInput consists of multiple test cases. The first line contains one integer $t$ $(1 \\leq t \\leq 10^5)$\u00a0\u2014 the number of test cases. Each test case is described as follows:\n\nThe first line contains two integers $n$ and $p$ $(1 \\leq n, p \\leq 10^6)$. The second line contains $n$ integers $k_i$ $(0 \\leq k_i \\leq 10^6)$.\n\nThe sum of $n$ over all test cases doesn't exceed $10^6$.\n\n\n-----Output-----\n\nOutput one integer\u00a0\u2014 the reminder of division the answer by $1\\,000\\,000\\,007$.\n\n\n-----Example-----\nInput\n4\n5 2\n2 3 4 4 3\n3 1\n2 10 1000\n4 5\n0 1 1 100\n1 8\n89\n\nOutput\n4\n1\n146981438\n747093407\n\n\n\n-----Note-----\n\nYou have to minimize the difference, not it's remainder. For example, if the minimum difference is equal to $2$, but there is also a distribution where the difference is $10^9 + 8$, then the answer is $2$, not $1$.\n\nIn the first test case of the example, there're the following numbers: $4$, $8$, $16$, $16$, and $8$. We can divide them into such two sets: ${4, 8, 16}$ and ${8, 16}$. Then the difference between the sums of numbers in sets would be $4$.",
        "completion": "Given a number $p$ and $n$ numbers $k_1, \\ldots, k_n$, find p^{k_i}$ and divide that into two disjoint sets, minimizing the absolute difference between sums of numbers in\neach set. Find the minimal absolute difference. Output the result modulo $10^{9}+7$.\n\nIn the first test case of the example, there're the following numbers: $4$, $8$, $16$, $16$, and $8$. We can divide them into such two sets: ${4, 8, 16}$ and ${8, 16}$. \nThen the difference between the sums of numbers in sets would be $4$.\n\n-----Input-----\n\nInput consists of multiple test cases. The first line contains one integer $t$ $(1 \\leq t \\leq 10^5)$\u00a0\u2014 the number of test cases. Each test case is described as follows:\n\nThe first line contains two integers $n$ and $p$ $(1 \\leq n, p \\leq 10^6)$. The second line contains $n$ integers $k_i$ $(0 \\leq k_i \\leq 10^6)$.\n\nThe sum of $n$ over all test cases doesn't exceed $10^6$.\n\n\n-----Output-----\n\nOutput one integer\u00a0\u2014 the reminder of division the answer by $1\\,000\\,000\\,007$.\n\n\n-----Example-----\nInput\n4\n5 2\n2 3 4 4 3\n3 1\n2 10 1000\n4 5\n0 1 1 100\n1 8\n89\n\nOutput\n4\n1\n146981438\n747093407\n"
    },
    {
        "prompt": "You are given a non-empty string s consisting of lowercase English letters. You have to pick exactly one non-empty substring of s and shift all its letters 'z' $\\rightarrow$ 'y' $\\rightarrow$ 'x' $\\rightarrow \\ldots \\rightarrow$ 'b' $\\rightarrow$ 'a' $\\rightarrow$ 'z'. In other words, each character is replaced with the previous character of English alphabet and 'a' is replaced with 'z'.\n\nWhat is the lexicographically minimum string that can be obtained from s by performing this shift exactly once?\n\n\n-----Input-----\n\nThe only line of the input contains the string s (1 \u2264 |s| \u2264 100 000) consisting of lowercase English letters.\n\n\n-----Output-----\n\nPrint the lexicographically minimum string that can be obtained from s by shifting letters of exactly one non-empty substring.\n\n\n-----Examples-----\nInput\ncodeforces\n\nOutput\nbncdenqbdr\n\nInput\nabacaba\n\nOutput\naaacaba\n\n",
        "completion": "You are given a non-empty string s consisting of lowercase English letters. You have to pick exactly one non-empty substring of s and shift all its letters 'z' $\\rightarrow$ 'y' $\\rightarrow$ 'x' $\\rightarrow \\ldots \\rightarrow$ 'b' $\\rightarrow$ 'a' $\\rightarrow$ 'z'.\nWhat is the lexicographically minimum string that can be obtained from s by performing this shift exactly once?\n\n\n-----Input-----\n\nThe only line of the input contains the string s (1 \u2264 |s| \u2264 100 000) consisting of lowercase English letters.\n\n\n-----Output-----\n\nPrint the lexicographically minimum string that can be obtained from s by shifting letters of exactly one non-empty substring.\n\n\n-----Examples-----\nInput\ncodeforces\n\nOutput\nbncdenqbdr\n\nInput\nabacaba\n\nOutput\naaacaba\n\n"
    },
    {
        "prompt": "Zookeeper is buying a carton of fruit to feed his pet wabbit. The fruits are a sequence of apples and oranges, which is represented by a binary string $s_1s_2\\ldots s_n$ of length $n$. $1$ represents an apple and $0$ represents an orange.\n\nSince wabbit is allergic to eating oranges, Zookeeper would like to find the longest contiguous sequence of apples. Let $f(l,r)$ be the longest contiguous sequence of apples in the substring $s_{l}s_{l+1}\\ldots s_{r}$. \n\nHelp Zookeeper find $\\sum_{l=1}^{n} \\sum_{r=l}^{n} f(l,r)$, or the sum of $f$ across all substrings.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ $(1 \\leq n \\leq 5 \\cdot 10^5)$.\n\n The next line contains a binary string $s$ of length $n$ $(s_i \\in \\{0,1\\})$ \n\n\n-----Output-----\n\nPrint a single integer: $\\sum_{l=1}^{n} \\sum_{r=l}^{n} f(l,r)$. \n\n\n-----Examples-----\nInput\n4\n0110\n\nOutput\n12\n\nInput\n7\n1101001\n\nOutput\n30\n\nInput\n12\n011100011100\n\nOutput\n156\n\n\n\n-----Note-----\n\nIn the first test, there are ten substrings. The list of them (we let $[l,r]$ be the substring $s_l s_{l+1} \\ldots s_r$):  $[1,1]$: 0  $[1,2]$: 01  $[1,3]$: 011  $[1,4]$: 0110  $[2,2]$: 1  $[2,3]$: 11  $[2,4]$: 110  $[3,3]$: 1  $[3,4]$: 10  $[4,4]$: 0 \n\nThe lengths of the longest contiguous sequence of ones in each of these ten substrings are $0,1,2,2,1,2,2,1,1,0$ respectively. Hence, the answer is $0+1+2+2+1+2+2+1+1+0 = 12$.",
        "completion": "Given a sequence, which is represented by a binary string $s_1s_2\\ldots s_n$ of length $n$.\n\nLet $f(l,r)$ be the longest contiguous sequence of $1$ in the substring $s_{l}s_{l+1}\\ldots s_{r}$. \n\nFind $\\sum_{l=1}^{n} \\sum_{r=l}^{n} f(l,r)$.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ $(1 \\leq n \\leq 5 \\cdot 10^5)$.\n\n The next line contains a binary string $s$ of length $n$ $(s_i \\in \\{0,1\\})$ \n\n\n-----Output-----\n\nPrint a single integer: $\\sum_{l=1}^{n} \\sum_{r=l}^{n} f(l,r)$. \n\n\n-----Examples-----\nInput\n4\n0110\n\nOutput\n12\n\nInput\n7\n1101001\n\nOutput\n30\n\nInput\n12\n011100011100\n\nOutput\n156\n\n\n"
    },
    {
        "prompt": "You are given a sequence a = \\{a_1, ..., a_N\\} with all zeros, and a sequence b = \\{b_1, ..., b_N\\} consisting of 0 and 1. The length of both is N.\nYou can perform Q kinds of operations. The i-th operation is as follows:\n - Replace each of a_{l_i}, a_{l_i + 1}, ..., a_{r_i} with 1.\nMinimize the hamming distance between a and b, that is, the number of i such that a_i \\neq b_i, by performing some of the Q operations.\n\n-----Constraints-----\n - 1 \\leq N \\leq 200,000\n - b consists of 0 and 1.\n - 1 \\leq Q \\leq 200,000\n - 1 \\leq l_i \\leq r_i \\leq N\n - If i \\neq j, either l_i \\neq l_j or r_i \\neq r_j.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nb_1 b_2 ... b_N\nQ\nl_1 r_1\nl_2 r_2\n:\nl_Q r_Q\n\n-----Output-----\nPrint the minimum possible hamming distance.\n\n-----Sample Input-----\n3\n1 0 1\n1\n1 3\n\n-----Sample Output-----\n1\n\nIf you choose to perform the operation, a will become \\{1, 1, 1\\}, for a hamming distance of 1.",
        "completion": "You are given a sequence a = \\{a_1, ..., a_N\\} with all zeros, and a sequence b = \\{b_1, ..., b_N\\} consisting of 0 and 1. The length of both is N.\nYou can perform Q kinds of operations. The i-th operation is as follows:\n - Replace each of a_{l_i}, a_{l_i + 1}, ..., a_{r_i} with 1.\nMinimize the hamming distance between a and b.\n\n-----Constraints-----\n - 1 \\leq N \\leq 200,000\n - b consists of 0 and 1.\n - 1 \\leq Q \\leq 200,000\n - 1 \\leq l_i \\leq r_i \\leq N\n - If i \\neq j, either l_i \\neq l_j or r_i \\neq r_j.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nb_1 b_2 ... b_N\nQ\nl_1 r_1\nl_2 r_2\n:\nl_Q r_Q\n\n-----Output-----\nPrint the minimum possible hamming distance.\n\n-----Sample Input-----\n3\n1 0 1\n1\n1 3\n\n-----Sample Output-----\n1\n"
    },
    {
        "prompt": "Students went into a class to write a test and sat in some way. The teacher thought: \"Probably they sat in this order to copy works of each other. I need to rearrange them in such a way that students that were neighbors are not neighbors in a new seating.\"\n\nThe class can be represented as a matrix with n rows and m columns with a student in each cell. Two students are neighbors if cells in which they sit have a common side.\n\nLet's enumerate students from 1 to n\u00b7m in order of rows. So a student who initially sits in the cell in row i and column j has a number (i - 1)\u00b7m + j. You have to find a matrix with n rows and m columns in which all numbers from 1 to n\u00b7m appear exactly once and adjacent numbers in the original matrix are not adjacent in it, or determine that there is no such matrix.\n\n\n-----Input-----\n\nThe only line contains two integers n and m (1 \u2264 n, m \u2264 10^5; n\u00b7m \u2264 10^5)\u00a0\u2014 the number of rows and the number of columns in the required matrix.\n\n\n-----Output-----\n\nIf there is no such matrix, output \"NO\" (without quotes). \n\nOtherwise in the first line output \"YES\" (without quotes), and in the next n lines output m integers which form the required matrix.\n\n\n-----Examples-----\nInput\n2 4\n\nOutput\nYES\n5 4 7 2 \n3 6 1 8 \n\nInput\n2 1\n\nOutput\nNO\n\n\n\n-----Note-----\n\nIn the first test case the matrix initially looks like this:\n\n1 2 3 4\n\n5 6 7 8\n\n\n\nIt's easy to see that there are no two students that are adjacent in both matrices.\n\nIn the second test case there are only two possible seatings and in both of them students with numbers 1 and 2 are neighbors.",
        "completion": "You are given two integers n and m. Create a matrix numbered from 1 to n\u00b7m in order of rows. So a cell in row i and column j has a number (i - 1)\u00b7m + j.\nYou have to find a matrix with n rows and m columns in which all numbers from 1\nto n\u00b7m appear exactly once and adjacent numbers in the original matrix are not\nadjacent in it, or determine that there is no such matrix.\n\nIn the first test case the matrix initially looks like this:\n\n1 2 3 4\n\n5 6 7 8\n\n\n\nIt's easy to see that there are no two students that are adjacent in both matrices.\n\n-----Input-----\n\nThe only line contains two integers n and m (1 \u2264 n, m \u2264 10^5; n\u00b7m \u2264 10^5)\u00a0\u2014 the number of rows and the number of columns in the required matrix.\n\n\n-----Output-----\n\nIf there is no such matrix, output \"NO\" (without quotes). \n\nOtherwise in the first line output \"YES\" (without quotes), and in the next n lines output m integers which form the required matrix.\n\n\n-----Examples-----\nInput\n2 4\n\nOutput\nYES\n5 4 7 2 \n3 6 1 8 \n\nInput\n2 1\n\nOutput\nNO\n"
    },
    {
        "prompt": "Farmer John has just given the cows a program to play with! The program contains two integer variables, x and y, and performs the following operations on a sequence a_1, a_2, ..., a_{n} of positive integers:  Initially, x = 1 and y = 0. If, after any step, x \u2264 0 or x > n, the program immediately terminates.  The program increases both x and y by a value equal to a_{x} simultaneously.  The program now increases y by a_{x} while decreasing x by a_{x}.  The program executes steps 2 and 3 (first step 2, then step 3) repeatedly until it terminates (it may never terminate). So, the sequence of executed steps may start with: step 2, step 3, step 2, step 3, step 2 and so on. \n\nThe cows are not very good at arithmetic though, and they want to see how the program works. Please help them!\n\nYou are given the sequence a_2, a_3, ..., a_{n}. Suppose for each i (1 \u2264 i \u2264 n - 1) we run the program on the sequence i, a_2, a_3, ..., a_{n}. For each such run output the final value of y if the program terminates or -1 if it does not terminate.\n\n\n-----Input-----\n\nThe first line contains a single integer, n (2 \u2264 n \u2264 2\u00b710^5). The next line contains n - 1 space separated integers, a_2, a_3, ..., a_{n} (1 \u2264 a_{i} \u2264 10^9).\n\n\n-----Output-----\n\nOutput n - 1 lines. On the i-th line, print the requested value when the program is run on the sequence i, a_2, a_3, ...a_{n}.\n\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\n\n-----Examples-----\nInput\n4\n2 4 1\n\nOutput\n3\n6\n8\n\nInput\n3\n1 2\n\nOutput\n-1\n-1\n\n\n\n-----Note-----\n\nIn the first sample   For i = 1,  x becomes $1 \\rightarrow 2 \\rightarrow 0$ and y becomes 1 + 2 = 3.  For i = 2,  x becomes $1 \\rightarrow 3 \\rightarrow - 1$ and y becomes 2 + 4 = 6.  For i = 3,  x becomes $1 \\rightarrow 4 \\rightarrow 3 \\rightarrow 7$ and y becomes 3 + 1 + 4 = 8.",
        "completion": "Perform the following operations on a sequence a_1, a_2, ..., a_{n} of positive integers:  Initially, x = 1 and y = 0. If, after any step, x \u2264 0 or x > n, the program immediately terminates.  The program increases both x and y by a value equal to a_{x} simultaneously.  The program now increases y by a_{x} while decreasing x by a_{x}.  The program executes steps 2 and 3 first step 2, then step 3 repeatedly until it terminates .It may never terminate. So, the sequence of executed steps may start with: step 2, step 3, step 2, step 3, step 2 and so on. \n\n\nYou are given the sequence a_2, a_3, ..., a_{n}. Suppose for each i (1 \u2264 i \u2264 n - 1) we run the program on the sequence i, a_2, a_3, ..., a_{n}. For each such run output the final value of y if the program terminates or -1 if it does not terminate.\n\n\n-----Input-----\n\nThe first line contains a single integer, n (2 \u2264 n \u2264 2\u00b710^5). The next line contains n - 1 space separated integers, a_2, a_3, ..., a_{n} (1 \u2264 a_{i} \u2264 10^9).\n\n\n-----Output-----\n\nOutput n - 1 lines. On the i-th line, print the requested value when the program is run on the sequence i, a_2, a_3, ...a_{n}.\n\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\n\n-----Examples-----\nInput\n4\n2 4 1\n\nOutput\n3\n6\n8\n\nInput\n3\n1 2\n\nOutput\n-1\n-1\n\n"
    },
    {
        "prompt": "The life goes up and down, just like nice sequences. Sequence t_1, t_2, ..., t_{n} is called nice if the following two conditions are satisfied:   t_{i} < t_{i} + 1 for each odd i < n;  t_{i} > t_{i} + 1 for each even i < n. \n\nFor example, sequences (2, 8), (1, 5, 1) and (2, 5, 1, 100, 99, 120) are nice, while (1, 1), (1, 2, 3) and (2, 5, 3, 2) are not.\n\nBear Limak has a sequence of positive integers t_1, t_2, ..., t_{n}. This sequence is not nice now and Limak wants to fix it by a single swap. He is going to choose two indices i < j and swap elements t_{i} and t_{j} in order to get a nice sequence. Count the number of ways to do so. Two ways are considered different if indices of elements chosen for a swap are different.\n\n\n-----Input-----\n\nThe first line of the input contains one integer n (2 \u2264 n \u2264 150 000)\u00a0\u2014 the length of the sequence.\n\nThe second line contains n integers t_1, t_2, ..., t_{n} (1 \u2264 t_{i} \u2264 150 000) \u2014 the initial sequence. It's guaranteed that the given sequence is not nice.\n\n\n-----Output-----\n\nPrint the number of ways to swap two elements exactly once in order to get a nice sequence.\n\n\n-----Examples-----\nInput\n5\n2 8 4 7 7\n\nOutput\n2\n\nInput\n4\n200 150 100 50\n\nOutput\n1\n\nInput\n10\n3 2 1 4 1 4 1 4 1 4\n\nOutput\n8\n\nInput\n9\n1 2 3 4 5 6 7 8 9\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first sample, there are two ways to get a nice sequence with one swap:   Swap t_2 = 8 with t_4 = 7.  Swap t_1 = 2 with t_5 = 7. \n\nIn the second sample, there is only one way\u00a0\u2014 Limak should swap t_1 = 200 with t_4 = 50.",
        "completion": "Sequence t_1, t_2, ..., t_{n} is called nice if the following two conditions are satisfied:   t_{i} < t_{i} + 1 for each odd i < n;  t_{i} > t_{i} + 1 for each even i < n. \n\nFor example, sequences (2, 8), (1, 5, 1) and (2, 5, 1, 100, 99, 120) are nice, while (1, 1), (1, 2, 3) and (2, 5, 3, 2) are not.\n\nYou have a sequence of positive integers t_1, t_2, ..., t_{n}. This sequence is not nice now and you want to fix it by a single swap. You choose two indices i < j and swap elements t_{i} and t_{j} in order to get a nice sequence. Count the number of ways to do so. Two ways are considered different if indices of elements chosen for a swap are different.\n\n\n-----Input-----\n\nThe first line of the input contains one integer n (2 \u2264 n \u2264 150 000)\u00a0\u2014 the length of the sequence.\n\nThe second line contains n integers t_1, t_2, ..., t_{n} (1 \u2264 t_{i} \u2264 150 000) \u2014 the initial sequence. It's guaranteed that the given sequence is not nice.\n\n\n-----Output-----\n\nPrint the number of ways to swap two elements exactly once in order to get a nice sequence.\n\n\n-----Examples-----\nInput\n5\n2 8 4 7 7\n\nOutput\n2\n\nInput\n4\n200 150 100 50\n\nOutput\n1\n\nInput\n10\n3 2 1 4 1 4 1 4 1 4\n\nOutput\n8\n\nInput\n9\n1 2 3 4 5 6 7 8 9\n\nOutput\n0\n\n\n"
    },
    {
        "prompt": "\nLittle X has n distinct integers: p_1, p_2, ..., p_{n}. He wants to divide all of them into two sets A and B. The following two conditions must be satisfied:  If number x belongs to set A, then number a - x must also belong to set A.  If number x belongs to set B, then number b - x must also belong to set B. \n\nHelp Little X divide the numbers into two sets or determine that it's impossible.\n\n\n-----Input-----\n\nThe first line contains three space-separated integers n, a, b (1 \u2264 n \u2264 10^5;\u00a01 \u2264 a, b \u2264 10^9). The next line contains n space-separated distinct integers p_1, p_2, ..., p_{n}\u00a0(1 \u2264 p_{i} \u2264 10^9).\n\n\n-----Output-----\n\nIf there is a way to divide the numbers into two sets, then print \"YES\" in the first line. Then print n integers: b_1, b_2, ..., b_{n} (b_{i} equals either 0, or 1), describing the division. If b_{i} equals to 0, then p_{i} belongs to set A, otherwise it belongs to set B.\n\nIf it's impossible, print \"NO\" (without the quotes).\n\n\n-----Examples-----\nInput\n4 5 9\n2 3 4 5\n\nOutput\nYES\n0 0 1 1\n\nInput\n3 3 4\n1 2 4\n\nOutput\nNO\n\n\n\n-----Note-----\n\nIt's OK if all the numbers are in the same set, and the other one is empty.",
        "completion": "You have n distinct integers: p_1, p_2, ..., p_{n}. You want to divide all of them into two sets A and B. The following two conditions must be satisfied:  If number x belongs to set A, then number a - x must also belong to set A.  If number x belongs to set B, then number b - x must also belong to set B. \n\nDivide the numbers into two sets or determine that it's impossible.\n\n\n-----Input-----\n\nThe first line contains three space-separated integers n, a, b (1 \u2264 n \u2264 10^5;\u00a01 \u2264 a, b \u2264 10^9). The next line contains n space-separated distinct integers p_1, p_2, ..., p_{n}\u00a0(1 \u2264 p_{i} \u2264 10^9).\n\n\n-----Output-----\n\nIf there is a way to divide the numbers into two sets, then print \"YES\" in the first line. Then print n integers: b_1, b_2, ..., b_{n} (b_{i} equals either 0, or 1), describing the division. If b_{i} equals to 0, then p_{i} belongs to set A, otherwise it belongs to set B.\n\nIf it's impossible, print \"NO\" (without the quotes).\n\n\n-----Examples-----\nInput\n4 5 9\n2 3 4 5\n\nOutput\nYES\n0 0 1 1\n\nInput\n3 3 4\n1 2 4\n\nOutput\nNO\n\n"
    },
    {
        "prompt": "A subsequence of a string S is a string that can be obtained by deleting zero or more characters from S without changing the order of the remaining characters.\nFor example, arc, artistic and (an empty string) are all subsequences of artistic; abc and ci are not.\nYou are given a string A consisting of lowercase English letters.\nFind the shortest string among the strings consisting of lowercase English letters that are not subsequences of A.\nIf there are more than one such string, find the lexicographically smallest one among them.\n\n-----Constraints-----\n - 1 \\leq |A| \\leq 2 \\times 10^5\n - A consists of lowercase English letters.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nA\n\n-----Output-----\nPrint the lexicographically smallest string among the shortest strings consisting of lowercase English letters that are not subsequences of A.\n\n-----Sample Input-----\natcoderregularcontest\n\n-----Sample Output-----\nb\n\nThe string atcoderregularcontest contains a as a subsequence, but not b.",
        "completion": "A subsequence of a string S is a string that can be obtained by deleting zero or more characters from S without changing the order of the remaining characters.\nYou are given a string A consisting of lowercase English letters.\nFind the shortest string among the strings consisting of lowercase English letters that are not subsequences of A.\nIf there are more than one such string, find the lexicographically smallest one among them.\n\n-----Constraints-----\n - 1 \\leq |A| \\leq 2 \\times 10^5\n - A consists of lowercase English letters.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nA\n\n-----Output-----\nPrint the lexicographically smallest string among the shortest strings consisting of lowercase English letters that are not subsequences of A.\n\n-----Sample Input-----\natcoderregularcontest\n\n-----Sample Output-----\nb\n"
    },
    {
        "prompt": "You're playing a game called Osu! Here's a simplified version of it. There are n clicks in a game. For each click there are two outcomes: correct or bad. Let us denote correct as \"O\", bad as \"X\", then the whole play can be encoded as a sequence of n characters \"O\" and \"X\".\n\nUsing the play sequence you can calculate the score for the play as follows: for every maximal consecutive \"O\"s block, add the square of its length (the number of characters \"O\") to the score. For example, if your play can be encoded as \"OOXOOOXXOO\", then there's three maximal consecutive \"O\"s block \"OO\", \"OOO\", \"OO\", so your score will be 2^2 + 3^2 + 2^2 = 17. If there are no correct clicks in a play then the score for the play equals to 0.\n\nYou know that the probability to click the i-th (1 \u2264 i \u2264 n) click correctly is p_{i}. In other words, the i-th character in the play sequence has p_{i} probability to be \"O\", 1 - p_{i} to be \"X\". You task is to calculate the expected score for your play.\n\n\n-----Input-----\n\nThe first line contains an integer n (1 \u2264 n \u2264 10^5) \u2014 the number of clicks. The second line contains n space-separated real numbers p_1, p_2, ..., p_{n} (0 \u2264 p_{i} \u2264 1).\n\nThere will be at most six digits after the decimal point in the given p_{i}.\n\n\n-----Output-----\n\nPrint a single real number \u2014 the expected score for your play. Your answer will be considered correct if its absolute or relative error does not exceed 10^{ - 6}.\n\n\n-----Examples-----\nInput\n3\n0.5 0.5 0.5\n\nOutput\n2.750000000000000\n\nInput\n4\n0.7 0.2 0.1 0.9\n\nOutput\n2.489200000000000\n\nInput\n5\n1 1 1 1 1\n\nOutput\n25.000000000000000\n\n\n\n-----Note-----\n\nFor the first example. There are 8 possible outcomes. Each has a probability of 0.125.  \"OOO\"  \u2192  3^2 = 9;  \"OOX\"  \u2192  2^2 = 4;  \"OXO\"  \u2192  1^2 + 1^2 = 2;  \"OXX\"  \u2192  1^2 = 1;  \"XOO\"  \u2192  2^2 = 4;  \"XOX\"  \u2192  1^2 = 1;  \"XXO\"  \u2192  1^2 = 1;  \"XXX\"  \u2192  0. \n\nSo the expected score is $\\frac{9 + 4 + 2 + 1 + 4 + 1 + 1}{8} = 2.75$",
        "completion": "There are n clicks in a game. For each click there are two outcomes: correct or bad. Let us denote correct as \"O\", bad as \"X\", then the whole play can be encoded as a sequence of n characters \"O\" and \"X\".\n\nUsing the play sequence you can calculate the score for the play as follows: for every maximal consecutive \"O\"s block, add the square of its length (the number of characters \"O\") to the score. If there are no correct clicks in a play then the score for the play equals to 0.\n\nYou know that the probability to click the i-th (1 \u2264 i \u2264 n) click correctly is p_{i}. In other words, the i-th character in the play sequence has p_{i} probability to be \"O\", 1 - p_{i} to be \"X\". You task is to calculate the expected score for your play.\n\n\n-----Input-----\n\nThe first line contains an integer n (1 \u2264 n \u2264 10^5) \u2014 the number of clicks. The second line contains n space-separated real numbers p_1, p_2, ..., p_{n} (0 \u2264 p_{i} \u2264 1).\n\nThere will be at most six digits after the decimal point in the given p_{i}.\n\n\n-----Output-----\n\nPrint a single real number \u2014 the expected score for your play. Your answer will be considered correct if its absolute or relative error does not exceed 10^{ - 6}.\n\n\n-----Examples-----\nInput\n3\n0.5 0.5 0.5\n\nOutput\n2.750000000000000\n\nInput\n4\n0.7 0.2 0.1 0.9\n\nOutput\n2.489200000000000\n\nInput\n5\n1 1 1 1 1\n\nOutput\n25.000000000000000\n\n\n"
    },
    {
        "prompt": "Bessie has way too many friends because she is everyone's favorite cow! Her new friend Rabbit is trying to hop over so they can play! \n\nMore specifically, he wants to get from $(0,0)$ to $(x,0)$ by making multiple hops. He is only willing to hop from one point to another point on the 2D plane if the Euclidean distance between the endpoints of a hop is one of its $n$ favorite numbers: $a_1, a_2, \\ldots, a_n$. What is the minimum number of hops Rabbit needs to get from $(0,0)$ to $(x,0)$? Rabbit may land on points with non-integer coordinates. It can be proved that Rabbit can always reach his destination.\n\nRecall that the Euclidean distance between points $(x_i, y_i)$ and $(x_j, y_j)$ is $\\sqrt{(x_i-x_j)^2+(y_i-y_j)^2}$.\n\nFor example, if Rabbit has favorite numbers $1$ and $3$ he could hop from $(0,0)$ to $(4,0)$ in two hops as shown below. Note that there also exists other valid ways to hop to $(4,0)$ in $2$ hops (e.g. $(0,0)$ $\\rightarrow$ $(2,-\\sqrt{5})$ $\\rightarrow$ $(4,0)$).\n\n $1$ Here is a graphic for the first example. Both hops have distance $3$, one of Rabbit's favorite numbers. \n\nIn other words, each time Rabbit chooses some number $a_i$ and hops with distance equal to $a_i$ in any direction he wants. The same number can be used multiple times.\n\n\n-----Input-----\n\nThe input consists of multiple test cases. The first line contains an integer $t$ ($1 \\le t \\le 1000$) \u00a0\u2014 the number of test cases. Next $2t$ lines contain test cases \u2014 two lines per test case.\n\nThe first line of each test case contains two integers $n$ and $x$ ($1 \\le n \\le 10^5$, $1 \\le x \\le 10^9$) \u00a0\u2014 the number of favorite numbers and the distance Rabbit wants to travel, respectively.\n\nThe second line of each test case contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\le a_i \\le 10^9$) \u00a0\u2014 Rabbit's favorite numbers. It is guaranteed that the favorite numbers are distinct.\n\nIt is guaranteed that the sum of $n$ over all the test cases will not exceed $10^5$.\n\n\n-----Output-----\n\nFor each test case, print a single integer\u00a0\u2014 the minimum number of hops needed.\n\n\n-----Example-----\nInput\n4\n2 4\n1 3\n3 12\n3 4 5\n1 5\n5\n2 10\n15 4\n\nOutput\n2\n3\n1\n2\n\n\n\n-----Note-----\n\nThe first test case of the sample is shown in the picture above. Rabbit can hop to $(2,\\sqrt{5})$, then to $(4,0)$ for a total of two hops. Each hop has a distance of $3$, which is one of his favorite numbers.\n\nIn the second test case of the sample, one way for Rabbit to hop $3$ times is: $(0,0)$ $\\rightarrow$ $(4,0)$ $\\rightarrow$ $(8,0)$ $\\rightarrow$ $(12,0)$.\n\nIn the third test case of the sample, Rabbit can hop from $(0,0)$ to $(5,0)$.\n\nIn the fourth test case of the sample, Rabbit can hop: $(0,0)$ $\\rightarrow$ $(5,10\\sqrt{2})$ $\\rightarrow$ $(10,0)$.",
        "completion": "you wants to get from $(0,0)$ to $(x,0)$ by making multiple hops. you can only hop from one point to another point on the 2D plane if the Euclidean distance between the endpoints of a hop is one of its $n$ favorite numbers: $a_1, a_2, \\ldots, a_n$. What is the minimum number of hops you need to move from $(0,0)$ to $(x,0)$? you may land on points with non-integer coordinates. It can be proved that you can always reach his destination.\n\nRecall that the Euclidean distance between points $(x_i, y_i)$ and $(x_j, y_j)$ is $\\sqrt{(x_i-x_j)^2+(y_i-y_j)^2}$.\n\nFor example, if you have favorite numbers $1$ and $3$ he could hop from $(0,0)$ to $(4,0)$ in two hops as shown below. Note that there also exists other valid ways to hop to $(4,0)$ in $2$ hops (e.g. $(0,0)$ $\\rightarrow$ $(2,-\\sqrt{5})$ $\\rightarrow$ $(4,0)$).\n\n $1$ Here is a graphic for the first example. Both hops have distance $3$, one of your favorite numbers. \n\nIn other words, each time you chooses some number $a_i$ and hops with distance equal to $a_i$ in any direction he wants. The same number can be used multiple times.\n\n\n-----Input-----\n\nThe input consists of multiple test cases. The first line contains an integer $t$ ($1 \\le t \\le 1000$) \u00a0\u2014 the number of test cases. Next $2t$ lines contain test cases \u2014 two lines per test case.\n\nThe first line of each test case contains two integers $n$ and $x$ ($1 \\le n \\le 10^5$, $1 \\le x \\le 10^9$) \u00a0\u2014 the number of favorite numbers and the distance Rabbit wants to travel, respectively.\n\nThe second line of each test case contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\le a_i \\le 10^9$) \u00a0\u2014 Rabbit's favorite numbers. It is guaranteed that the favorite numbers are distinct.\n\nIt is guaranteed that the sum of $n$ over all the test cases will not exceed $10^5$.\n\n\n-----Output-----\n\nFor each test case, print a single integer\u00a0\u2014 the minimum number of hops needed.\n\n\n-----Example-----\nInput\n4\n2 4\n1 3\n3 12\n3 4 5\n1 5\n5\n2 10\n15 4\n\nOutput\n2\n3\n1\n2\n\n\n\n-----Note-----\n\nThe first test case of the sample is shown in the picture above. You can hop to $(2,\\sqrt{5})$, then to $(4,0)$ for a total of two hops. Each hop has a distance of $3$, which is one of his favorite numbers.\n\nIn the second test case of the sample, one way for you to hop $3$ times is: $(0,0)$ $\\rightarrow$ $(4,0)$ $\\rightarrow$ $(8,0)$ $\\rightarrow$ $(12,0)$.\n\nIn the third test case of the sample, you can hop from $(0,0)$ to $(5,0)$.\n\nIn the fourth test case of the sample, you can hop: $(0,0)$ $\\rightarrow$ $(5,10\\sqrt{2})$ $\\rightarrow$ $(10,0)$.\n"
    },
    {
        "prompt": "A permutation p of size n is the sequence p_1, p_2, ..., p_{n}, consisting of n distinct integers, each of them is from 1 to n (1 \u2264 p_{i} \u2264 n).\n\nA lucky permutation is such permutation p, that any integer i (1 \u2264 i \u2264 n) meets this condition p_{p}_{i} = n - i + 1.\n\nYou have integer n. Find some lucky permutation p of size n.\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 10^5) \u2014 the required permutation size.\n\n\n-----Output-----\n\nPrint -1 if the lucky permutation p of size n doesn't exist.\n\nOtherwise, print n distinct integers p_1, p_2, ..., p_{n} (1 \u2264 p_{i} \u2264 n) after a space \u2014 the required permutation.\n\nIf there are multiple answers, you can print any of them.\n\n\n-----Examples-----\nInput\n1\n\nOutput\n1 \n\nInput\n2\n\nOutput\n-1\n\nInput\n4\n\nOutput\n2 4 1 3 \n\nInput\n5\n\nOutput\n2 5 3 1 4",
        "completion": "A permutation p of size n is the sequence p_1, p_2, ..., p_{n}, consisting of n distinct integers, each of them is from 1 to n (1 \u2264 p_{i} \u2264 n).\n\nA lucky permutation is such permutation p, that any integer i (1 \u2264 i \u2264 n) meets this condition p_{p}_{i} = n - i + 1.\n\nYou have integer n. Find some lucky permutation p of size n.\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 10^5) \u2014 the required permutation size.\n\n\n-----Output-----\n\nPrint -1 if the lucky permutation p of size n doesn't exist.\n\nOtherwise, print n distinct integers p_1, p_2, ..., p_{n} (1 \u2264 p_{i} \u2264 n) after a space \u2014 the required permutation.\n\nIf there are multiple answers, you can print any of them.\n\n\n-----Examples-----\nInput\n1\n\nOutput\n1 \n\nInput\n2\n\nOutput\n-1\n\nInput\n4\n\nOutput\n2 4 1 3 \n\nInput\n5\n\nOutput\n2 5 3 1 4"
    },
    {
        "prompt": "Consider a sequence [a_1, a_2, ... , a_{n}]. Define its prefix product sequence $[ a_{1} \\operatorname{mod} n,(a_{1} a_{2}) \\operatorname{mod} n, \\cdots,(a_{1} a_{2} \\cdots a_{n}) \\operatorname{mod} n ]$.\n\nNow given n, find a permutation of [1, 2, ..., n], such that its prefix product sequence is a permutation of [0, 1, ..., n - 1].\n\n\n-----Input-----\n\nThe only input line contains an integer n (1 \u2264 n \u2264 10^5).\n\n\n-----Output-----\n\nIn the first output line, print \"YES\" if such sequence exists, or print \"NO\" if no such sequence exists.\n\nIf any solution exists, you should output n more lines. i-th line contains only an integer a_{i}. The elements of the sequence should be different positive integers no larger than n.\n\nIf there are multiple solutions, you are allowed to print any of them.\n\n\n-----Examples-----\nInput\n7\n\nOutput\nYES\n1\n4\n3\n6\n5\n2\n7\n\nInput\n6\n\nOutput\nNO\n\n\n\n-----Note-----\n\nFor the second sample, there are no valid sequences.",
        "completion": "Consider a sequence [a_1, a_2, ... , a_{n}]. \n\nLet's define its prefix product sequence as $[ a_{1} \\operatorname{mod} n,(a_{1} a_{2}) \\operatorname{mod} n, \\cdots,(a_{1} a_{2} \\cdots a_{n}) \\operatorname{mod} n ]$.\n\nNow given n, find a permutation of [1, 2, ..., n], such that its prefix product sequence is a permutation of [0, 1, ..., n - 1].\n\n\n-----Input-----\n\nThe only input line contains an integer n (1 \u2264 n \u2264 10^5).\n\n\n-----Output-----\n\nIn the first output line, print \"YES\" if such sequence exists, or print \"NO\" if no such sequence exists.\n\nIf any solution exists, you should output n more lines. i-th line contains only an integer a_{i}. The elements of the sequence should be different positive integers no larger than n.\n\nIf there are multiple solutions, you are allowed to print any of them.\n\n\n-----Examples-----\nInput\n7\n\nOutput\nYES\n1\n4\n3\n6\n5\n2\n7\n\nInput\n6\n\nOutput\nNO\n\n"
    },
    {
        "prompt": "Given are integer sequence of length N, A = (A_1, A_2, \\cdots, A_N), and an integer K.\nFor each X such that 1 \\le X \\le K, find the following value:\n\\left(\\displaystyle \\sum_{L=1}^{N-1} \\sum_{R=L+1}^{N} (A_L+A_R)^X\\right) \\bmod 998244353\n\n-----Constraints-----\n - All values in input are integers.\n -  2 \\le N \\le 2 \\times 10^5\n -  1 \\le K \\le 300 \n -  1 \\le A_i \\le 10^8 \n\n-----Input-----\nInput is given from Standard Input in the following format:\nN K\nA_1 A_2 \\cdots A_N\n\n-----Output-----\nPrint K lines.\nThe X-th line should contain the value \\left(\\displaystyle \\sum_{L=1}^{N-1} \\sum_{R=L+1}^{N} (A_L+A_R)^X \\right) \\bmod 998244353.\n\n-----Sample Input-----\n3 3\n1 2 3\n\n-----Sample Output-----\n12\n50\n216\n\nIn the 1-st line, we should print (1+2)^1 + (1+3)^1 + (2+3)^1 = 3 + 4 + 5 = 12.\nIn the 2-nd line, we should print (1+2)^2 + (1+3)^2 + (2+3)^2 = 9 + 16 + 25 = 50.\nIn the 3-rd line, we should print (1+2)^3 + (1+3)^3 + (2+3)^3 = 27 + 64 + 125 = 216.",
        "completion": "Given are integer sequence of length N, A = (A_1, A_2, \\cdots, A_N), and an integer K.\nFor each X such that 1 \\le X \\le K, find the following value:\n\\left(\\displaystyle \\sum_{L=1}^{N-1} \\sum_{R=L+1}^{N} (A_L+A_R)^X\\right) \\bmod 998244353\n\n-----Constraints-----\n - All values in input are integers.\n -  2 \\le N \\le 2 \\times 10^5\n -  1 \\le K \\le 300 \n -  1 \\le A_i \\le 10^8 \n\n-----Input-----\nInput is given from Standard Input in the following format:\nN K\nA_1 A_2 \\cdots A_N\n\n-----Output-----\nPrint K lines.\nThe X-th line should contain the value \\left(\\displaystyle \\sum_{L=1}^{N-1} \\sum_{R=L+1}^{N} (A_L+A_R)^X \\right) \\bmod 998244353.\n\n-----Sample Input-----\n3 3\n1 2 3\n\n-----Sample Output-----\n12\n50\n216\n"
    },
    {
        "prompt": "You are given an array $a$ of $n$ integers and an integer $s$. It is guaranteed that $n$ is odd.\n\nIn one operation you can either increase or decrease any single element by one. Calculate the minimum number of operations required to make the median of the array being equal to $s$.\n\nThe median of the array with odd length is the value of the element which is located on the middle position after the array is sorted. For example, the median of the array $6, 5, 8$ is equal to $6$, since if we sort this array we will get $5, 6, 8$, and $6$ is located on the middle position.\n\n\n-----Input-----\n\nThe first line contains two integers $n$ and $s$ ($1\\le n\\le 2\\cdot 10^5-1$, $1\\le s\\le 10^9$)\u00a0\u2014 the length of the array and the required value of median.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1\\le a_i \\le 10^9$)\u00a0\u2014 the elements of the array $a$.\n\nIt is guaranteed that $n$ is odd.\n\n\n-----Output-----\n\nIn a single line output the minimum number of operations to make the median being equal to $s$.\n\n\n-----Examples-----\nInput\n3 8\n6 5 8\n\nOutput\n2\nInput\n7 20\n21 15 12 11 20 19 12\n\nOutput\n6\n\n\n-----Note-----\n\nIn the first sample, $6$ can be increased twice. The array will transform to $8, 5, 8$, which becomes $5, 8, 8$ after sorting, hence the median is equal to $8$.\n\nIn the second sample, $19$ can be increased once and $15$ can be increased five times. The array will become equal to $21, 20, 12, 11, 20, 20, 12$. If we sort this array we get $11, 12, 12, 20, 20, 20, 21$, this way the median is $20$.",
        "completion": "You are given an array $a$ of $n$ integers and an integer $s$. It is guaranteed that $n$ is odd.\n\nIn one operation you can either increase or decrease any single element by one. Calculate the minimum number of operations required to make the median of the array being equal to $s$.\n\nThe median of the array with odd length is the value of the element which is located on the middle position after the array is sorted. For example, the median of the array $6, 5, 8$ is equal to $6$, since if we sort this array we will get $5, 6, 8$, and $6$ is located on the middle position.\n\n-----Input-----\n\nThe first line contains two integers $n$ and $s$ ($1\\le n\\le 2\\cdot 10^5-1$, $1\\le s\\le 10^9$)\u00a0\u2014 the length of the array and the required value of median.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1\\le a_i \\le 10^9$)\u00a0\u2014 the elements of the array $a$.\n\nIt is guaranteed that $n$ is odd.\n\n\n-----Output-----\n\nIn a single line output the minimum number of operations to make the median being equal to $s$.\n\n\n-----Examples-----\nInput\n3 8\n6 5 8\n\nOutput\n2\nInput\n7 20\n21 15 12 11 20 19 12\n\nOutput\n6\n\n"
    },
    {
        "prompt": "You are given a prime number $p$, $n$ integers $a_1, a_2, \\ldots, a_n$, and an integer $k$. \n\nFind the number of pairs of indexes $(i, j)$ ($1 \\le i < j \\le n$) for which $(a_i + a_j)(a_i^2 + a_j^2) \\equiv k \\bmod p$.\n\n\n-----Input-----\n\nThe first line contains integers $n, p, k$ ($2 \\le n \\le 3 \\cdot 10^5$, $2 \\le p \\le 10^9$, $0 \\le k \\le p-1$). $p$ is guaranteed to be prime.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($0 \\le a_i \\le p-1$). It is guaranteed that all elements are different.\n\n\n-----Output-----\n\nOutput a single integer\u00a0\u2014 answer to the problem.\n\n\n-----Examples-----\nInput\n3 3 0\n0 1 2\n\nOutput\n1\nInput\n6 7 2\n1 2 3 4 5 6\n\nOutput\n3\n\n\n-----Note-----\n\nIn the first example:\n\n$(0+1)(0^2 + 1^2) = 1 \\equiv 1 \\bmod 3$.\n\n$(0+2)(0^2 + 2^2) = 8 \\equiv 2 \\bmod 3$.\n\n$(1+2)(1^2 + 2^2) = 15 \\equiv 0 \\bmod 3$.\n\nSo only $1$ pair satisfies the condition.\n\nIn the second example, there are $3$ such pairs: $(1, 5)$, $(2, 3)$, $(4, 6)$.",
        "completion": "You are given a prime number $p$, $n$ integers $a_1, a_2, \\ldots, a_n$, and an integer $k$. \n\nFind the number of pairs of indexes $(i, j)$ where, $1 \\le i < j \\le n$, for which $(a_i + a_j)(a_i^2 + a_j^2) \\equiv k \\bmod p$.\n\n\n-----Input-----\n\nThe first line contains integers $n, p, k$ ($2 \\le n \\le 3 \\cdot 10^5$, $2 \\le p \\le 10^9$, $0 \\le k \\le p-1$). $p$ is guaranteed to be prime.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($0 \\le a_i \\le p-1$). It is guaranteed that all elements are different.\n\n\n-----Output-----\n\nOutput a single integer\u00a0\u2014 answer to the problem.\n\n\n-----Examples-----\nInput\n3 3 0\n0 1 2\n\nOutput\n1\nInput\n6 7 2\n1 2 3 4 5 6\n\nOutput\n3\n\n"
    },
    {
        "prompt": "You are given a string s of length n.\nDoes a tree with n vertices that satisfies the following conditions exist?\n - The vertices are numbered 1,2,..., n.\n - The edges are numbered 1,2,..., n-1, and Edge i connects Vertex u_i and v_i.\n - If the i-th character in s is 1, we can have a connected component of size i by removing one edge from the tree.\n - If the i-th character in s is 0, we cannot have a connected component of size i by removing any one edge from the tree.\nIf such a tree exists, construct one such tree.\n\n-----Constraints-----\n - 2 \\leq n \\leq 10^5\n - s is a string of length n consisting of 0 and 1.\n\n-----Input-----\nInput is given from Standard Input in the following format:\ns\n\n-----Output-----\nIf a tree with n vertices that satisfies the conditions does not exist, print -1.\nIf a tree with n vertices that satisfies the conditions exist, print n-1 lines.\nThe i-th line should contain u_i and v_i with a space in between.\nIf there are multiple trees that satisfy the conditions, any such tree will be accepted.\n\n-----Sample Input-----\n1111\n\n-----Sample Output-----\n-1\n\nIt is impossible to have a connected component of size n after removing one edge from a tree with n vertices.",
        "completion": "You are given a string s of length n.\nDoes a tree with n vertices that satisfies the following conditions exist?\n - The vertices are numbered 1,2,..., n.\n - The edges are numbered 1,2,..., n-1, and Edge i connects Vertex u_i and v_i.\n - If the i-th character in s is 1, we can have a connected component of size i by removing one edge from the tree.\n - If the i-th character in s is 0, we cannot have a connected component of size i by removing any one edge from the tree.\nIf such a tree exists, construct one such tree.\n\n-----Constraints-----\n - 2 \\leq n \\leq 10^5\n - s is a string of length n consisting of 0 and 1.\n\n-----Input-----\nInput is given from Standard Input in the following format:\ns\n\n-----Output-----\nIf a tree with n vertices that satisfies the conditions does not exist, print -1.\nIf a tree with n vertices that satisfies the conditions exist, print n-1 lines.\nThe i-th line should contain u_i and v_i with a space in between.\nIf there are multiple trees that satisfy the conditions, any such tree will be accepted.\n\n-----Sample Input-----\n1111\n\n-----Sample Output-----\n-1\n\n"
    },
    {
        "prompt": "You are given $n$ arrays that can have different sizes. You also have a table with $w$ columns and $n$ rows. The $i$-th array is placed horizontally in the $i$-th row. You can slide each array within its row as long as it occupies several consecutive cells and lies completely inside the table.\n\nYou need to find the maximum sum of the integers in the $j$-th column for each $j$ from $1$ to $w$ independently.\n\n [Image] Optimal placements for columns $1$, $2$ and $3$ are shown on the pictures from left to right. \n\nNote that you can exclude any array out of a column provided it remains in the window. In this case its value is considered to be zero.\n\n\n-----Input-----\n\nThe first line contains two integers $n$ ($1 \\le n \\le 10^{6}$) and $w$ ($1 \\le w \\le 10^{6}$)\u00a0\u2014 the number of arrays and the width of the table.\n\nEach of the next $n$ lines consists of an integer $l_{i}$ ($1 \\le l_{i} \\le w$), the length of the $i$-th array, followed by $l_{i}$ integers $a_{i1}, a_{i2}, \\ldots, a_{il_i}$ ($-10^{9} \\le a_{ij} \\le 10^{9}$)\u00a0\u2014 the elements of the array.\n\nThe total length of the arrays does no exceed $10^{6}$.\n\n\n-----Output-----\n\nPrint $w$ integers, the $i$-th of them should be the maximum sum for column $i$.\n\n\n-----Examples-----\nInput\n3 3\n3 2 4 8\n2 2 5\n2 6 3\n\nOutput\n10 15 16 \n\nInput\n2 2\n2 7 8\n1 -8\n\nOutput\n7 8 \n\n\n\n-----Note-----\n\nIllustration for the first example is in the statement.",
        "completion": "You are given $n$ arrays that can have different sizes. You also have a table with $w$ columns and $n$ rows. The $i$-th array is placed horizontally in the $i$-th row. You can slide each array within its row as long as it occupies several consecutive cells and lies completely inside the table.\n\nYou need to find the maximum sum of the integers in the $j$-th column for each $j$ from $1$ to $w$ independently.\n\nYou can exclude any array out of a column provided it remains in the window. In this case its value is considered to be zero.\n\n\n-----Input-----\n\nThe first line contains two integers $n$ ($1 \\le n \\le 10^{6}$) and $w$ ($1 \\le w \\le 10^{6}$)\u00a0\u2014 the number of arrays and the width of the table.\n\nEach of the next $n$ lines consists of an integer $l_{i}$ ($1 \\le l_{i} \\le w$), the length of the $i$-th array, followed by $l_{i}$ integers $a_{i1}, a_{i2}, \\ldots, a_{il_i}$ ($-10^{9} \\le a_{ij} \\le 10^{9}$)\u00a0\u2014 the elements of the array.\n\nThe total length of the arrays does no exceed $10^{6}$.\n\n\n-----Output-----\n\nPrint $w$ integers, the $i$-th of them should be the maximum sum for column $i$.\n\n\n-----Examples-----\nInput\n3 3\n3 2 4 8\n2 2 5\n2 6 3\n\nOutput\n10 15 16 \n\nInput\n2 2\n2 7 8\n1 -8\n\nOutput\n7 8 \n\n"
    },
    {
        "prompt": "There are N pinholes on the xy-plane. The i-th pinhole is located at (x_i,y_i).\nWe will denote the Manhattan distance between the i-th and j-th pinholes as d(i,j)(=|x_i-x_j|+|y_i-y_j|).\nYou have a peculiar pair of compasses, called Manhattan Compass.\nThis instrument always points at two of the pinholes.\nThe two legs of the compass are indistinguishable, thus we do not distinguish the following two states: the state where the compass points at the p-th and q-th pinholes, and the state where it points at the q-th and p-th pinholes.\nWhen the compass points at the p-th and q-th pinholes and d(p,q)=d(p,r), one of the legs can be moved so that the compass will point at the p-th and r-th pinholes.\nInitially, the compass points at the a-th and b-th pinholes.\nFind the number of the pairs of pinholes that can be pointed by the compass.\n\n-----Constraints-----\n - 2\u2266N\u226610^5\n - 1\u2266x_i, y_i\u226610^9\n - 1\u2266a < b\u2266N\n - When i \u2260 j, (x_i, y_i) \u2260 (x_j, y_j)\n - x_i and y_i are integers.\n\n-----Input-----\nThe input is given from Standard Input in the following format:\nN a b\nx_1 y_1\n:\nx_N y_N\n\n-----Output-----\nPrint the number of the pairs of pinholes that can be pointed by the compass.\n\n-----Sample Input-----\n5 1 2\n1 1\n4 3\n6 1\n5 5\n4 8\n\n-----Sample Output-----\n4\n\nInitially, the compass points at the first and second pinholes.\nSince d(1,2) = d(1,3), the compass can be moved so that it will point at the first and third pinholes.\nSince d(1,3) = d(3,4), the compass can also point at the third and fourth pinholes.\nSince d(1,2) = d(2,5), the compass can also point at the second and fifth pinholes.\nNo other pairs of pinholes can be pointed by the compass, thus the answer is 4.",
        "completion": "You are given N pinholes on the xy-plane.\nWe will denote the Manhattan distance between the i-th and j-th coordinates as d(i,j)(=|x_i-x_j|+|y_i-y_j|).\n\nA given compass pointing (p, q) can also point to (p,r) when d(p,q) = d(p,r) \n\nInitially, you are at (a,b) coordinates. You need to find the number of pairs of coordinates such that the compass can point.\n\n-----Constraints-----\n - 2\u2266N\u226610^5\n - 1\u2266x_i, y_i\u226610^9\n - 1\u2266a < b\u2266N\n - When i \u2260 j, (x_i, y_i) \u2260 (x_j, y_j)\n - x_i and y_i are integers.\n\n-----Input-----\nThe input is given from Standard Input in the following format:\nN a b\nx_1 y_1\n:\nx_N y_N\n\n-----Output-----\nPrint the number of the pairs of pinholes that can be pointed by the compass.\n\n-----Sample Input-----\n5 1 2\n1 1\n4 3\n6 1\n5 5\n4 8\n\n-----Sample Output-----\n4\n\nInitially, the compass points at the first and second pinholes.\nSince d(1,2) = d(1,3), the compass can be moved so that it will point at the first and third pinholes.\nSince d(1,3) = d(3,4), the compass can also point at the third and fourth pinholes.\nSince d(1,2) = d(2,5), the compass can also point at the second and fifth pinholes.\nNo other pairs of pinholes can be pointed by the compass, thus the answer is 4."
    },
    {
        "prompt": "You are given an array a with n distinct integers. Construct an array b by permuting a such that for every non-empty subset of indices S = {x_1, x_2, ..., x_{k}} (1 \u2264 x_{i} \u2264 n, 0 < k < n) the sums of elements on that positions in a and b are different, i.\u00a0e. $\\sum_{i = 1}^{k} a_{x_{i}} \\neq \\sum_{i = 1}^{k} b_{x_{i}}$\n\n\n-----Input-----\n\nThe first line contains one integer n (1 \u2264 n \u2264 22)\u00a0\u2014 the size of the array.\n\nThe second line contains n space-separated distinct integers a_1, a_2, ..., a_{n} (0 \u2264 a_{i} \u2264 10^9)\u00a0\u2014 the elements of the array.\n\n\n-----Output-----\n\nIf there is no such array b, print -1.\n\nOtherwise in the only line print n space-separated integers b_1, b_2, ..., b_{n}. Note that b must be a permutation of a.\n\nIf there are multiple answers, print any of them.\n\n\n-----Examples-----\nInput\n2\n1 2\n\nOutput\n2 1 \n\nInput\n4\n1000 100 10 1\n\nOutput\n100 1 1000 10\n\n\n\n-----Note-----\n\nAn array x is a permutation of y, if we can shuffle elements of y such that it will coincide with x.\n\nNote that the empty subset and the subset containing all indices are not counted.",
        "completion": "Given an array a with n distinct integers. Construct an array b by permuting a such that for every non-empty subset of indices S = {x_1, x_2, ..., x_{k}} (1 \u2264 x_{i} \u2264 n, 0 < k < n) the sums of elements on that positions in a and b are different.\n\n\n-----Input-----\n\nThe first line contains one integer n (1 \u2264 n \u2264 22)\u00a0\u2014 the size of the array.\n\nThe second line contains n space-separated distinct integers a_1, a_2, ..., a_{n} (0 \u2264 a_{i} \u2264 10^9)\u00a0\u2014 the elements of the array.\n\n\n-----Output-----\n\nIf there is no such array b, print -1.\n\nOtherwise in the only line print n space-separated integers b_1, b_2, ..., b_{n}. Note that b must be a permutation of a.\n\nIf there are multiple answers, print any of them.\n\n\n-----Examples-----\nInput\n2\n1 2\n\nOutput\n2 1 \n\nInput\n4\n1000 100 10 1\n\nOutput\n100 1 1000 10\n\n"
    },
    {
        "prompt": "You are given an array of integers. Vasya can permute (change order) its integers. He wants to do it so that as many as possible integers will become on a place where a smaller integer used to stand. Help Vasya find the maximal number of such integers.\n\nFor instance, if we are given an array $[10, 20, 30, 40]$, we can permute it so that it becomes $[20, 40, 10, 30]$. Then on the first and the second positions the integers became larger ($20>10$, $40>20$) and did not on the third and the fourth, so for this permutation, the number that Vasya wants to maximize equals $2$. Read the note for the first example, there is one more demonstrative test case.\n\nHelp Vasya to permute integers in such way that the number of positions in a new array, where integers are greater than in the original one, is maximal.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($1 \\leq n \\leq 10^5$)\u00a0\u2014 the length of the array.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq 10^9$)\u00a0\u2014 the elements of the array.\n\n\n-----Output-----\n\nPrint a single integer\u00a0\u2014 the maximal number of the array's elements which after a permutation will stand on the position where a smaller element stood in the initial array.\n\n\n-----Examples-----\nInput\n7\n10 1 1 1 5 5 3\n\nOutput\n4\n\nInput\n5\n1 1 1 1 1\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first sample, one of the best permutations is $[1, 5, 5, 3, 10, 1, 1]$. On the positions from second to fifth the elements became larger, so the answer for this permutation is 4.\n\nIn the second sample, there is no way to increase any element with a permutation, so the answer is 0.",
        "completion": "You are given an array of integers. You can permute its integers. You want to do it so that as many as possible integers will become on a place where a smaller integer used to stand. Find the maximal number of such integers.\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($1 \\leq n \\leq 10^5$)\u00a0\u2014 the length of the array.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq 10^9$)\u00a0\u2014 the elements of the array.\n\n\n-----Output-----\n\nPrint a single integer\u00a0\u2014 the maximal number of the array's elements which after a permutation will stand on the position where a smaller element stood in the initial array.\n\n\n-----Examples-----\nInput\n7\n10 1 1 1 5 5 3\n\nOutput\n4\n\nInput\n5\n1 1 1 1 1\n\nOutput\n0\n"
    },
    {
        "prompt": "Masha and Grisha like studying sets of positive integers.\n\nOne day Grisha has written a set A containing n different integers a_{i} on a blackboard. Now he asks Masha to create a set B containing n different integers b_{j} such that all n^2 integers that can be obtained by summing up a_{i} and b_{j} for all possible pairs of i and j are different.\n\nBoth Masha and Grisha don't like big numbers, so all numbers in A are from 1 to 10^6, and all numbers in B must also be in the same range.\n\nHelp Masha to create the set B that satisfies Grisha's requirement.\n\n\n-----Input-----\n\nInput data contains multiple test cases. The first line contains an integer t\u00a0\u2014 the number of test cases (1 \u2264 t \u2264 100).\n\nEach test case is described in the following way: the first line of the description contains one integer n\u00a0\u2014 the number of elements in A (1 \u2264 n \u2264 100).\n\nThe second line contains n integers a_{i}\u00a0\u2014 the elements of A (1 \u2264 a_{i} \u2264 10^6). \n\n\n-----Output-----\n\nFor each test first print the answer:   NO, if Masha's task is impossible to solve, there is no way to create the required set B.  YES, if there is the way to create the required set. In this case the second line must contain n different positive integers b_{j}\u00a0\u2014 elements of B (1 \u2264 b_{j} \u2264 10^6). If there are several possible sets, output any of them. \n\n\n-----Example-----\nInput\n3\n3\n1 10 100\n1\n1\n2\n2 4\n\nOutput\nYES\n1 2 3 \nYES\n1 \nYES\n1 2",
        "completion": "\nSet A containing n positive different integers a_{i} are given. \n\nCreate a set B containing n different integers b_{j} such that all n^2 integers that can be obtained by summing up a_{i} and b_{j} for all possible pairs of i and j are different.\n\nall numbers in A are from 1 to 10^6, and all numbers in B must also be in the same range.\n\n\n\n\n-----Input-----\n\nInput data contains multiple test cases. The first line contains an integer t\u00a0\u2014 the number of test cases (1 \u2264 t \u2264 100).\n\nEach test case is described in the following way: the first line of the description contains one integer n\u00a0\u2014 the number of elements in A (1 \u2264 n \u2264 100).\n\nThe second line contains n integers a_{i}\u00a0\u2014 the elements of A (1 \u2264 a_{i} \u2264 10^6). \n\n\n-----Output-----\n\nFor each test first print the answer:   NO, if task is impossible to solve, there is no way to create the required set B.  YES, if there is the way to create the required set. In this case the second line must contain n different positive integers b_{j}\u00a0\u2014 elements of B (1 \u2264 b_{j} \u2264 10^6). If there are several possible sets, output any of them. \n\n\n-----Example-----\nInput\n3\n3\n1 10 100\n1\n1\n2\n2 4\n\nOutput\nYES\n1 2 3 \nYES\n1 \nYES\n1 2"
    },
    {
        "prompt": "For an array $b$ of length $m$ we define the function $f$ as  $ f(b) = \\begin{cases} b[1] & \\quad \\text{if } m = 1 \\\\ f(b[1] \\oplus b[2],b[2] \\oplus b[3],\\dots,b[m-1] \\oplus b[m]) & \\quad \\text{otherwise,} \\end{cases} $ \n\nwhere $\\oplus$ is bitwise exclusive OR.\n\nFor example, $f(1,2,4,8)=f(1\\oplus2,2\\oplus4,4\\oplus8)=f(3,6,12)=f(3\\oplus6,6\\oplus12)=f(5,10)=f(5\\oplus10)=f(15)=15$\n\nYou are given an array $a$ and a few queries. Each query is represented as two integers $l$ and $r$. The answer is the maximum value of $f$ on all continuous subsegments of the array $a_l, a_{l+1}, \\ldots, a_r$.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($1 \\le n \\le 5000$)\u00a0\u2014 the length of $a$.\n\nThe second line contains $n$ integers $a_1, a_2, \\dots, a_n$ ($0 \\le a_i \\le 2^{30}-1$)\u00a0\u2014 the elements of the array.\n\nThe third line contains a single integer $q$ ($1 \\le q \\le 100\\,000$)\u00a0\u2014 the number of queries.\n\nEach of the next $q$ lines contains a query represented as two integers $l$, $r$ ($1 \\le l \\le r \\le n$).\n\n\n-----Output-----\n\nPrint $q$ lines\u00a0\u2014 the answers for the queries.\n\n\n-----Examples-----\nInput\n3\n8 4 1\n2\n2 3\n1 2\n\nOutput\n5\n12\n\nInput\n6\n1 2 4 8 16 32\n4\n1 6\n2 5\n3 4\n1 2\n\nOutput\n60\n30\n12\n3\n\n\n\n-----Note-----\n\nIn first sample in both queries the maximum value of the function is reached on the subsegment that is equal to the whole segment.\n\nIn second sample, optimal segment for first query are $[3,6]$, for second query \u2014 $[2,5]$, for third \u2014 $[3,4]$, for fourth \u2014 $[1,2]$.",
        "completion": "For an array $b$ of length $m$ we define the function $f$ as  $ f(b) = \\begin{cases} b[1] & \\quad \\text{if } m = 1 \\\\ f(b[1] \\oplus b[2],b[2] \\oplus b[3],\\dots,b[m-1] \\oplus b[m]) & \\quad \\text{otherwise,} \\end{cases} $ \n\nwhere $\\oplus$ is bitwise exclusive OR.\n\nYou are given an array $a$ and a few queries. Each query is represented as two integers $l$ and $r$. The answer is the maximum value of $f$ on all continuous subsegments of the array $a_l, a_{l+1}, \\ldots, a_r$.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($1 \\le n \\le 5000$)\u00a0\u2014 the length of $a$.\n\nThe second line contains $n$ integers $a_1, a_2, \\dots, a_n$ ($0 \\le a_i \\le 2^{30}-1$)\u00a0\u2014 the elements of the array.\n\nThe third line contains a single integer $q$ ($1 \\le q \\le 100\\,000$)\u00a0\u2014 the number of queries.\n\nEach of the next $q$ lines contains a query represented as two integers $l$, $r$ ($1 \\le l \\le r \\le n$).\n\n\n-----Output-----\n\nPrint $q$ lines\u00a0\u2014 the answers for the queries.\n\n\n-----Examples-----\nInput\n3\n8 4 1\n2\n2 3\n1 2\n\nOutput\n5\n12\n\nInput\n6\n1 2 4 8 16 32\n4\n1 6\n2 5\n3 4\n1 2\n\nOutput\n60\n30\n12\n3\n"
    },
    {
        "prompt": "Arkady plays Gardenscapes a lot. Arkady wants to build two new fountains. There are n available fountains, for each fountain its beauty and cost are known. There are two types of money in the game: coins and diamonds, so each fountain cost can be either in coins or diamonds. No money changes between the types are allowed.\n\nHelp Arkady to find two fountains with maximum total beauty so that he can buy both at the same time.\n\n\n-----Input-----\n\nThe first line contains three integers n, c and d (2 \u2264 n \u2264 100 000, 0 \u2264 c, d \u2264 100 000)\u00a0\u2014 the number of fountains, the number of coins and diamonds Arkady has.\n\nThe next n lines describe fountains. Each of these lines contain two integers b_{i} and p_{i} (1 \u2264 b_{i}, p_{i} \u2264 100 000)\u00a0\u2014 the beauty and the cost of the i-th fountain, and then a letter \"C\" or \"D\", describing in which type of money is the cost of fountain i: in coins or in diamonds, respectively.\n\n\n-----Output-----\n\nPrint the maximum total beauty of exactly two fountains Arkady can build. If he can't build two fountains, print 0.\n\n\n-----Examples-----\nInput\n3 7 6\n10 8 C\n4 3 C\n5 6 D\n\nOutput\n9\n\nInput\n2 4 5\n2 5 C\n2 1 D\n\nOutput\n0\n\nInput\n3 10 10\n5 5 C\n5 5 C\n10 11 D\n\nOutput\n10\n\n\n\n-----Note-----\n\nIn the first example Arkady should build the second fountain with beauty 4, which costs 3 coins. The first fountain he can't build because he don't have enough coins. Also Arkady should build the third fountain with beauty 5 which costs 6 diamonds. Thus the total beauty of built fountains is 9.\n\nIn the second example there are two fountains, but Arkady can't build both of them, because he needs 5 coins for the first fountain, and Arkady has only 4 coins.",
        "completion": "There are n available fountains, for each fountain its beauty and cost are known. You have to build two new fountains.There are two types of money: coins and diamonds, so each fountain cost can be either in coins or diamonds. No money changes between the types are allowed.\n\nfind two fountains with maximum total beauty so that both can be bought at the same time.\n\n\n-----Input-----\n\nThe first line contains three integers n, c and d (2 \u2264 n \u2264 100 000, 0 \u2264 c, d \u2264 100 000)\u00a0\u2014 the number of fountains, the number of coins and diamonds.\n\nThe next n lines describe fountains. Each of these lines contain two integers b_{i} and p_{i} (1 \u2264 b_{i}, p_{i} \u2264 100 000)\u00a0\u2014 the beauty and the cost of the i-th fountain, and then a letter \"C\" or \"D\", describing in which type of money is the cost of fountain i: in coins or in diamonds, respectively.\n\n\n-----Output-----\n\nPrint the maximum total beauty of exactly two fountains that can build. If two fountains can't be built, print 0.\n\n\n-----Examples-----\nInput\n3 7 6\n10 8 C\n4 3 C\n5 6 D\n\nOutput\n9\n\nInput\n2 4 5\n2 5 C\n2 1 D\n\nOutput\n0\n\nInput\n3 10 10\n5 5 C\n5 5 C\n10 11 D\n\nOutput\n10\n\n\n\n-----Note-----\n\nIn the first example, the first fountain can't be built because there is not enough number of coins.the third fountain with beauty 5 should be built which costs 6 diamonds. Thus the total beauty of built fountains is 9.\n\nIn the second example there are two fountains, but both of them can't be built , because  5 coins are needed for the first fountain, and there is only 4 coins."
    },
    {
        "prompt": "The Chef has one long loaf of bread of length 1. He wants to cut it into as many little loaves as he can. But he wants to adhere to the following rule: At any moment, the length of the longest loaf which he possesses may not be larger than the length of shortest one, times some constant factor. Every time, he is only allowed to cut exactly one loaf into two shorter ones.\n\n-----Input-----\nOne floating-point number, 1 \u2264 k \u2264 1.999, meaning the stated constant factor. The number will have at most 3 digits after the decimal point.\n\n-----Output-----\n\nFirst, you should output one number n, the maximal achievable number of loaves for the given value of the constant factor. Then, you should output any proof that this number of loaves is in fact achievable: n-1 descriptions of cutting, using the following notation. At each step, you print two numbers: first, the index of the loaf that you want to cut into two parts; second, the length of the newly created loaf (cut off from the original one). It is assumed that the starting loaf has index 0. Each newly created loaf will be given the lowest possible free integer index (so, at the ith step this will be i). Each time, the size of size of the original loaf will be decreased by the size of the newly created loaf.\n\n-----Example-----\nInput:\n1.5\nOutput:\n4\n0 0.4\n0 0.3\n1 0.2",
        "completion": "You are given a number of magnitude 1.\nYou need to divide this number into as many positive parts as possible such that at any moment you can only divide one part into two smaller parts and \nthe length of larger part may not be larger than the length of shortest one, times some constant factor.\n\n-----Input-----\nOne floating-point number, 1 \u2264 k \u2264 1.999, meaning the stated constant factor. The number will have at most 3 digits after the decimal point.\n\n-----Output-----\n\nFirst, you should output one number n, the maximal achievable number of parts for the given value of the constant factor. Then, you should output any proof that this number of parts is in fact achievable: n-1 descriptions of dividing, using the following notation. At each step, you print two numbers: first, the index of the part that you want to divide into two; second, the length of the new number formed. It is assumed that the starting number has index 0. Each newly created number will be given the lowest possible free integer index (so, at the ith step this will be i). Each time, the size of number will be decreased by the size of the newly created number.\n\n-----Example-----\nInput:\n1.5\nOutput:\n4\n0 0.4\n0 0.3\n1 0.2"
    },
    {
        "prompt": "Let's assume that   v(n) is the largest prime number, that does not exceed n;\n\n u(n) is the smallest prime number strictly greater than n. \n\nFind $\\sum_{i = 2}^{n} \\frac{1}{v(i) u(i)}$.\n\n\n-----Input-----\n\nThe first line contains integer t\u00a0(1 \u2264 t \u2264 500) \u2014 the number of testscases. \n\nEach of the following t lines of the input contains integer n (2 \u2264 n \u2264 10^9).\n\n\n-----Output-----\n\nPrint t lines: the i-th of them must contain the answer to the i-th test as an irreducible fraction \"p/q\", where p, q are integers, q > 0.\n\n\n-----Examples-----\nInput\n2\n2\n3\n\nOutput\n1/6\n7/30",
        "completion": "Let's assume that   v(n) is the largest prime number, that does not exceed n;\n\n u(n) is the smallest prime number strictly greater than n. \n\nFind $\\sum_{i = 2}^{n} \\frac{1}{v(i) u(i)}$.\n\n\n-----Input-----\n\nThe first line contains integer t\u00a0(1 \u2264 t \u2264 500) \u2014 the number of testscases. \n\nEach of the following t lines of the input contains integer n (2 \u2264 n \u2264 10^9).\n\n\n-----Output-----\n\nPrint t lines: the i-th of them must contain the answer to the i-th test as an irreducible fraction \"p/q\", where p, q are integers, q > 0.\n\n\n-----Examples-----\nInput\n2\n2\n3\n\nOutput\n1/6\n7/30"
    },
    {
        "prompt": "Toad Pimple has an array of integers $a_1, a_2, \\ldots, a_n$.\n\nWe say that $y$ is reachable from $x$ if $x<y$ and there exists an integer array $p$ such that $x = p_1 < p_2 < \\ldots < p_k=y$, and $a_{p_i}\\, \\&\\, a_{p_{i+1}} > 0$ for all integers $i$ such that $1 \\leq i < k$.\n\nHere $\\&$ denotes the bitwise AND operation.\n\nYou are given $q$ pairs of indices, check reachability for each of them.\n\n\n-----Input-----\n\nThe first line contains two integers $n$ and $q$ ($2 \\leq n \\leq 300\\,000$, $1 \\leq q \\leq 300\\,000$)\u00a0\u2014 the number of integers in the array and the number of queries you need to answer.\n\nThe second line contains $n$ space-separated integers $a_1, a_2, \\ldots, a_n$ ($0 \\leq a_i \\leq 300\\,000$)\u00a0\u2014 the given array.\n\nThe next $q$ lines contain two integers each. The $i$-th of them contains two space-separated integers $x_i$ and $y_i$ ($1 \\leq x_i < y_i \\leq n$). You need to check if $y_i$ is reachable from $x_i$. \n\n\n-----Output-----\n\nOutput $q$ lines. In the $i$-th of them print \"Shi\" if $y_i$ is reachable from $x_i$, otherwise, print \"Fou\".\n\n\n-----Example-----\nInput\n5 3\n1 3 0 2 1\n1 3\n2 4\n1 4\n\nOutput\nFou\nShi\nShi\n\n\n\n-----Note-----\n\nIn the first example, $a_3 = 0$. You can't reach it, because AND with it is always zero. $a_2\\, \\&\\, a_4 > 0$, so $4$ is reachable from $2$, and to go from $1$ to $4$ you can use $p = [1, 2, 4]$.",
        "completion": "Given an array of integers $a_1, a_2, \\ldots, a_n$.\n\nWe say that $y$ is reachable from $x$ if $x<y$ and there exists an integer array $p$ such that $x = p_1 < p_2 < \\ldots < p_k=y$, and $a_{p_i}\\, \\&\\, a_{p_{i+1}} > 0$ for all integers $i$ such that $1 \\leq i < k$.\n\nHere $\\&$ denotes the bitwise AND operation.\n\nCheck reachability for each of them.\n\n\n-----Input-----\n\nThe first line contains two integers $n$ and $q$ ($2 \\leq n \\leq 300\\,000$, $1 \\leq q \\leq 300\\,000$)\u00a0\u2014 the number of integers in the array and the number of queries you need to answer.\n\nThe second line contains $n$ space-separated integers $a_1, a_2, \\ldots, a_n$ ($0 \\leq a_i \\leq 300\\,000$)\u00a0\u2014 the given array.\n\nThe next $q$ lines contain two integers each. The $i$-th of them contains two space-separated integers $x_i$ and $y_i$ ($1 \\leq x_i < y_i \\leq n$). You need to check if $y_i$ is reachable from $x_i$. \n\n\n-----Output-----\n\nOutput $q$ lines. In the $i$-th of them print \"Shi\" if $y_i$ is reachable from $x_i$, otherwise, print \"Fou\".\n\n\n-----Example-----\nInput\n5 3\n1 3 0 2 1\n1 3\n2 4\n1 4\n\nOutput\nFou\nShi\nShi\n\n"
    },
    {
        "prompt": "Polycarpus has a sequence, consisting of n non-negative integers: a_1, a_2, ..., a_{n}.\n\nLet's define function f(l, r) (l, r are integer, 1 \u2264 l \u2264 r \u2264 n) for sequence a as an operation of bitwise OR of all the sequence elements with indexes from l to r. Formally: f(l, r) = a_{l}\u00a0|\u00a0a_{l} + 1\u00a0|\u00a0... \u00a0|\u00a0a_{r}. \n\nPolycarpus took a piece of paper and wrote out the values of function f(l, r) for all l, r (l, r are integer, 1 \u2264 l \u2264 r \u2264 n). Now he wants to know, how many distinct values he's got in the end. \n\nHelp Polycarpus, count the number of distinct values of function f(l, r) for the given sequence a.\n\nExpression x\u00a0|\u00a0y means applying the operation of bitwise OR to numbers x and y. This operation exists in all modern programming languages, for example, in language C++ and Java it is marked as \"|\", in Pascal \u2014 as \"or\".\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 10^5) \u2014 the number of elements of sequence a. The second line contains n space-separated integers a_1, a_2, ..., a_{n} (0 \u2264 a_{i} \u2264 10^6) \u2014 the elements of sequence a.\n\n\n-----Output-----\n\nPrint a single integer \u2014 the number of distinct values of function f(l, r) for the given sequence a.\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier.\n\n\n-----Examples-----\nInput\n3\n1 2 0\n\nOutput\n4\nInput\n10\n1 2 3 4 5 6 1 2 9 10\n\nOutput\n11\n\n\n-----Note-----\n\nIn the first test case Polycarpus will have 6 numbers written on the paper: f(1, 1) = 1, f(1, 2) = 3, f(1, 3) = 3, f(2, 2) = 2, f(2, 3) = 2, f(3, 3) = 0. There are exactly 4 distinct numbers among them: 0, 1, 2, 3.",
        "completion": "You have a sequence, consisting of n non-negative integers: a_1, a_2, ..., a_{n}.\n\nLet's define function f(l, r) where l, r are integer, 1 \u2264 l \u2264 r \u2264 n for sequence a as an operation of bitwise OR of all the sequence elements with indexes from l to r.\n\nCount the number of distinct values of function f(l, r) for the given sequence a.\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 10^5) \u2014 the number of elements of sequence a. The second line contains n space-separated integers a_1, a_2, ..., a_{n} (0 \u2264 a_{i} \u2264 10^6) \u2014 the elements of sequence a.\n\n\n-----Output-----\n\nPrint a single integer \u2014 the number of distinct values of function f(l, r) for the given sequence a.\n\nPlease, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier.\n\n\n-----Examples-----\nInput\n3\n1 2 0\n\nOutput\n4\nInput\n10\n1 2 3 4 5 6 1 2 9 10\n\nOutput\n11\n"
    },
    {
        "prompt": "The USA Construction Operation (USACO) recently ordered Farmer John to arrange a row of $n$ haybale piles on the farm. The $i$-th pile contains $a_i$ haybales. \n\nHowever, Farmer John has just left for vacation, leaving Bessie all on her own. Every day, Bessie the naughty cow can choose to move one haybale in any pile to an adjacent pile. Formally, in one day she can choose any two indices $i$ and $j$ ($1 \\le i, j \\le n$) such that $|i-j|=1$ and $a_i>0$ and apply $a_i = a_i - 1$, $a_j = a_j + 1$. She may also decide to not do anything on some days because she is lazy.\n\nBessie wants to maximize the number of haybales in pile $1$ (i.e. to maximize $a_1$), and she only has $d$ days to do so before Farmer John returns. Help her find the maximum number of haybales that may be in pile $1$ if she acts optimally!\n\n\n-----Input-----\n\nThe input consists of multiple test cases. The first line contains an integer $t$ ($1 \\le t \\le 100$) \u00a0\u2014 the number of test cases. Next $2t$ lines contain a description of test cases \u00a0\u2014 two lines per test case.\n\nThe first line of each test case contains integers $n$ and $d$ ($1 \\le n,d \\le 100$) \u2014 the number of haybale piles and the number of days, respectively. \n\nThe second line of each test case contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($0 \\le a_i \\le 100$) \u00a0\u2014 the number of haybales in each pile.\n\n\n-----Output-----\n\nFor each test case, output one integer: the maximum number of haybales that may be in pile $1$ after $d$ days if Bessie acts optimally.\n\n\n-----Example-----\nInput\n3\n4 5\n1 0 3 2\n2 2\n100 1\n1 8\n0\n\nOutput\n3\n101\n0\n\n\n\n-----Note-----\n\nIn the first test case of the sample, this is one possible way Bessie can end up with $3$ haybales in pile $1$:   On day one, move a haybale from pile $3$ to pile $2$  On day two, move a haybale from pile $3$ to pile $2$  On day three, move a haybale from pile $2$ to pile $1$  On day four, move a haybale from pile $2$ to pile $1$  On day five, do nothing  \n\nIn the second test case of the sample, Bessie can do nothing on the first day and move a haybale from pile $2$ to pile $1$ on the second day.",
        "completion": "You are given a list of $n$ integers and $d$ days.\n\nOn each day you must increment an element and decrement an adjacent positive element.\n\nFind the maximum value possible for element in first postion after $d$ days.\n\n-----Input-----\n\nThe input consists of multiple test cases. The first line contains an integer $t$ ($1 \\le t \\le 100$) \u00a0\u2014 the number of test cases. Next $2t$ lines contain a description of test cases \u00a0\u2014 two lines per test case.\n\nThe first line of each test case contains integers $n$ and $d$ ($1 \\le n,d \\le 100$) \u2014 the number of integers in each array and the number of days, respectively. \n\nThe second line of each test case contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($0 \\le a_i \\le 100$) \u00a0\u2014 the integers in the array.\n\n\n-----Output-----\n\nFor each test case, output one integer: the maximum value of the first element if we take optimal action each day.\n\n\n-----Example-----\nInput\n3\n4 5\n1 0 3 2\n2 2\n100 1\n1 8\n0\n\nOutput\n3\n101\n0\n\n"
    },
    {
        "prompt": "Jzzhu has picked n apples from his big apple tree. All the apples are numbered from 1 to n. Now he wants to sell them to an apple store. \n\nJzzhu will pack his apples into groups and then sell them. Each group must contain two apples, and the greatest common divisor of numbers of the apples in each group must be greater than 1. Of course, each apple can be part of at most one group.\n\nJzzhu wonders how to get the maximum possible number of groups. Can you help him?\n\n\n-----Input-----\n\nA single integer n (1 \u2264 n \u2264 10^5), the number of the apples.\n\n\n-----Output-----\n\nThe first line must contain a single integer m, representing the maximum number of groups he can get. Each of the next m lines must contain two integers \u2014 the numbers of apples in the current group.\n\nIf there are several optimal answers you can print any of them.\n\n\n-----Examples-----\nInput\n6\n\nOutput\n2\n6 3\n2 4\n\nInput\n9\n\nOutput\n3\n9 3\n2 4\n6 8\n\nInput\n2\n\nOutput\n0",
        "completion": "You have n apples numbered from 1 to n. You have to group them. Each group must contain two apples, and the greatest common divisor of numbers of the apples in each group must be greater than 1. Each apple can be part of at most one group.\n\nGet the maximum possible number of groups.\n\n\n-----Input-----\n\nA single integer n (1 \u2264 n \u2264 10^5), the number of the apples.\n\n\n-----Output-----\n\nThe first line must contain a single integer m, representing the maximum number of groups he can get. Each of the next m lines must contain two integers \u2014 the numbers of apples in the current group.\n\nIf there are several optimal answers you can print any of them.\n\n\n-----Examples-----\nInput\n6\n\nOutput\n2\n6 3\n2 4\n\nInput\n9\n\nOutput\n3\n9 3\n2 4\n6 8\n\nInput\n2\n\nOutput\n0"
    },
    {
        "prompt": "A group of n cities is connected by a network of roads. There is an undirected road between every pair of cities, so there are $\\frac{n \\cdot(n - 1)}{2}$ roads in total. It takes exactly y seconds to traverse any single road.\n\nA spanning tree is a set of roads containing exactly n - 1 roads such that it's possible to travel between any two cities using only these roads.\n\nSome spanning tree of the initial network was chosen. For every road in this tree the time one needs to traverse this road was changed from y to x seconds. Note that it's not guaranteed that x is smaller than y.\n\nYou would like to travel through all the cities using the shortest path possible. Given n, x, y and a description of the spanning tree that was chosen, find the cost of the shortest path that starts in any city, ends in any city and visits all cities exactly once.\n\n\n-----Input-----\n\nThe first line of the input contains three integers n, x and y (2 \u2264 n \u2264 200 000, 1 \u2264 x, y \u2264 10^9).\n\nEach of the next n - 1 lines contains a description of a road in the spanning tree. The i-th of these lines contains two integers u_{i} and v_{i} (1 \u2264 u_{i}, v_{i} \u2264 n)\u00a0\u2014 indices of the cities connected by the i-th road. It is guaranteed that these roads form a spanning tree.\n\n\n-----Output-----\n\nPrint a single integer\u00a0\u2014 the minimum number of seconds one needs to spend in order to visit all the cities exactly once.\n\n\n-----Examples-----\nInput\n5 2 3\n1 2\n1 3\n3 4\n5 3\n\nOutput\n9\n\nInput\n5 3 2\n1 2\n1 3\n3 4\n5 3\n\nOutput\n8\n\n\n\n-----Note-----\n\nIn the first sample, roads of the spanning tree have cost 2, while other roads have cost 3. One example of an optimal path is $5 \\rightarrow 3 \\rightarrow 4 \\rightarrow 1 \\rightarrow 2$.\n\nIn the second sample, we have the same spanning tree, but roads in the spanning tree cost 3, while other roads cost 2. One example of an optimal path is $1 \\rightarrow 4 \\rightarrow 5 \\rightarrow 2 \\rightarrow 3$.",
        "completion": "A group of n cities is connected by a network of roads. There is an undirected road between every pair of cities, so there are $\\frac{n \\cdot(n - 1)}{2}$ roads in total. It takes exactly y seconds to traverse any single road.\n\nA spanning tree is a set of roads containing exactly n - 1 roads such that it's possible to travel between any two cities using only these roads.\n\nSome spanning tree of the initial network was chosen. For every road in this tree the time one needs to traverse this road was changed from y to x seconds. It is not guaranteed that x is smaller than y.\n\nYou would like to travel through all the cities using the shortest path possible. Given n, x, y and a description of the spanning tree that was chosen, find the cost of the shortest path that starts in any city, ends in any city and visits all cities exactly once.\n\n\n-----Input-----\n\nThe first line of the input contains three integers n, x and y (2 \u2264 n \u2264 200 000, 1 \u2264 x, y \u2264 10^9).\n\nEach of the next n - 1 lines contains a description of a road in the spanning tree. The i-th of these lines contains two integers u_{i} and v_{i} (1 \u2264 u_{i}, v_{i} \u2264 n)\u00a0\u2014 indices of the cities connected by the i-th road. It is guaranteed that these roads form a spanning tree.\n\n\n-----Output-----\n\nPrint a single integer\u00a0\u2014 the minimum number of seconds one needs to spend in order to visit all the cities exactly once.\n\n\n-----Examples-----\nInput\n5 2 3\n1 2\n1 3\n3 4\n5 3\n\nOutput\n9\n\nInput\n5 3 2\n1 2\n1 3\n3 4\n5 3\n\nOutput\n8\n\n"
    },
    {
        "prompt": "An array of integers $p_{1},p_{2}, \\ldots,p_{n}$ is called a permutation if it contains each number from $1$ to $n$ exactly once. For example, the following arrays are permutations: $[3,1,2], [1], [1,2,3,4,5]$ and $[4,3,1,2]$. The following arrays are not permutations: $[2], [1,1], [2,3,4]$.\n\nThere is a hidden permutation of length $n$.\n\nFor each index $i$, you are given $s_{i}$, which equals to the sum of all $p_{j}$ such that $j < i$ and $p_{j} < p_{i}$. In other words, $s_i$ is the sum of elements before the $i$-th element that are smaller than the $i$-th element.\n\nYour task is to restore the permutation.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($1 \\le n \\le 2 \\cdot 10^{5}$)\u00a0\u2014 the size of the permutation.\n\nThe second line contains $n$ integers $s_{1}, s_{2}, \\ldots, s_{n}$ ($0 \\le s_{i} \\le \\frac{n(n-1)}{2}$).\n\nIt is guaranteed that the array $s$ corresponds to a valid permutation of length $n$.\n\n\n-----Output-----\n\nPrint $n$ integers $p_{1}, p_{2}, \\ldots, p_{n}$ \u2014 the elements of the restored permutation. We can show that the answer is always unique.\n\n\n-----Examples-----\nInput\n3\n0 0 0\n\nOutput\n3 2 1\n\nInput\n2\n0 1\n\nOutput\n1 2\n\nInput\n5\n0 1 1 1 10\n\nOutput\n1 4 3 2 5\n\n\n\n-----Note-----\n\nIn the first example for each $i$ there is no index $j$ satisfying both conditions, hence $s_i$ are always $0$.\n\nIn the second example for $i = 2$ it happens that $j = 1$ satisfies the conditions, so $s_2 = p_1$.\n\nIn the third example for $i = 2, 3, 4$ only $j = 1$ satisfies the conditions, so $s_2 = s_3 = s_4 = 1$. For $i = 5$ all $j = 1, 2, 3, 4$ are possible, so $s_5 = p_1 + p_2 + p_3 + p_4 = 10$.",
        "completion": "An array of integers $p_{1},p_{2}, \\ldots,p_{n}$ is called a permutation if it contains each number from $1$ to $n$ exactly once.\n\nThere is a hidden permutation of length $n$.\n\nFor each index $i$, you are given $s_{i}$, which equals to the sum of all $p_{j}$ such that $j < i$ and $p_{j} < p_{i}$.\n\nYour task is to restore the permutation.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($1 \\le n \\le 2 \\cdot 10^{5}$)\u00a0\u2014 the size of the permutation.\n\nThe second line contains $n$ integers $s_{1}, s_{2}, \\ldots, s_{n}$ ($0 \\le s_{i} \\le \\frac{n(n-1)}{2}$).\n\nIt is guaranteed that the array $s$ corresponds to a valid permutation of length $n$.\n\n\n-----Output-----\n\nPrint $n$ integers $p_{1}, p_{2}, \\ldots, p_{n}$ \u2014 the elements of the restored permutation. We can show that the answer is always unique.\n\n\n-----Examples-----\nInput\n3\n0 0 0\n\nOutput\n3 2 1\n\nInput\n2\n0 1\n\nOutput\n1 2\n\nInput\n5\n0 1 1 1 10\n\nOutput\n1 4 3 2 5\n\n"
    },
    {
        "prompt": "The Bubble Cup hypothesis stood unsolved for $130$ years. Who ever proves the hypothesis will be regarded as one of the greatest mathematicians of our time! A famous mathematician Jerry Mao managed to reduce the hypothesis to this problem:\n\nGiven a number $m$, how many polynomials $P$ with coefficients in set ${\\{0,1,2,3,4,5,6,7\\}}$ have: $P(2)=m$?\n\nHelp Jerry Mao solve the long standing problem!\n\n\n-----Input-----\n\nThe first line contains a single integer $t$ $(1 \\leq t \\leq 5\\cdot 10^5)$ - number of test cases.\n\nOn next line there are $t$ numbers, $m_i$ $(1 \\leq m_i \\leq 10^{18})$ - meaning that in case $i$ you should solve for number $m_i$.\n\n\n-----Output-----\n\nFor each test case $i$, print the answer on separate lines: number of polynomials $P$ as described in statement such that $P(2)=m_i$, modulo $10^9 + 7$.\n\n\n-----Example-----\nInput\n2\n2 4\n\nOutput\n2\n4\n\n\n\n-----Note-----\n\nIn first case, for $m=2$, polynomials that satisfy the constraint are $x$ and $2$.\n\nIn second case, for $m=4$, polynomials that satisfy the constraint are $x^2$, $x + 2$, $2x$ and $4$.",
        "completion": "\nGiven a number $m$, how many polynomials $P$ with coefficients in set ${\\{0,1,2,3,4,5,6,7\\}}$ have: $P(2)=m$?\n\n\n\n-----Input-----\n\nThe first line contains a single integer $t$ $(1 \\leq t \\leq 5\\cdot 10^5)$ - number of test cases.\n\nOn next line there are $t$ numbers, $m_i$ $(1 \\leq m_i \\leq 10^{18})$ - meaning that in case $i$ you should solve for number $m_i$.\n\n\n-----Output-----\n\nFor each test case $i$, print the answer on separate lines: number of polynomials $P$ as described in statement such that $P(2)=m_i$, modulo $10^9 + 7$.\n\n\n-----Example-----\nInput\n2\n2 4\n\nOutput\n2\n4\n\n"
    },
    {
        "prompt": "Pikachu had an array with him. He wrote down all the non-empty subsequences of the array on paper. Note that an array of size n has 2^{n} - 1 non-empty subsequences in it. \n\nPikachu being mischievous as he always is, removed all the subsequences in which Maximum_element_of_the_subsequence  -  Minimum_element_of_subsequence  \u2265 d\n\nPikachu was finally left with X subsequences. \n\nHowever, he lost the initial array he had, and now is in serious trouble. He still remembers the numbers X and d. He now wants you to construct any such array which will satisfy the above conditions. All the numbers in the final array should be positive integers less than 10^18. \n\nNote the number of elements in the output array should not be more than 10^4. If no answer is possible, print  - 1.\n\n\n-----Input-----\n\nThe only line of input consists of two space separated integers X and d (1 \u2264 X, d \u2264 10^9).\n\n\n-----Output-----\n\nOutput should consist of two lines.\n\nFirst line should contain a single integer n (1 \u2264 n \u2264 10 000)\u2014 the number of integers in the final array.\n\nSecond line should consist of n space separated integers \u2014 a_1, a_2, ... , a_{n} (1 \u2264 a_{i} < 10^18).\n\nIf there is no answer, print a single integer -1. If there are multiple answers, print any of them.\n\n\n-----Examples-----\nInput\n10 5\n\nOutput\n6\n5 50 7 15 6 100\nInput\n4 2\n\nOutput\n4\n10 100 1000 10000\n\n\n-----Note-----\n\nIn the output of the first example case, the remaining subsequences after removing those with Maximum_element_of_the_subsequence  -  Minimum_element_of_subsequence  \u2265 5 are [5], [5, 7], [5, 6], [5, 7, 6], [50], [7], [7, 6], [15], [6], [100]. There are 10 of them. Hence, the array [5, 50, 7, 15, 6, 100] is valid.\n\nSimilarly, in the output of the second example case, the remaining sub-sequences after removing those with Maximum_element_of_the_subsequence  -  Minimum_element_of_subsequence  \u2265 2 are [10], [100], [1000], [10000]. There are 4 of them. Hence, the array [10, 100, 1000, 10000] is valid.\n",
        "completion": "You are given two integers X and d.\n\nYou should construct an array such that, removing all non-empty subsequences in which Maximum_element_of_the_subsequence  -  Minimum_element_of_subsequence  \u2265 d from the set of all\nsubsequences will give you X subsequences.\nAll the numbers in the final array should be positive integers less than 10^18. \n\nNote the number of elements in the output array should not be more than 10^4. If no answer is possible, print  - 1.\n\nIn the output of the first example case, the remaining subsequences after\nremoving those with Maximum_element_of_the_subsequence  -\nMinimum_element_of_subsequence  \u2265 5 are [5], [5, 7], [5, 6], [5, 7, 6], [50],\n[7], [7, 6], [15], [6], [100]. There are 10 of them. Hence, the array [5, 50,\n7, 15, 6, 100] is valid.  \n\nSimilarly, in the output of the second example case, the remaining\nsub-sequences after removing those with Maximum_element_of_the_subsequence  -\nMinimum_element_of_subsequence  \u2265 2 are [10], [100], [1000], [10000]. There are\n4 of them. Hence, the array [10, 100, 1000, 10000] is valid.\n\n-----Input-----\n\nThe only line of input consists of two space separated integers X and d (1 \u2264 X, d \u2264 10^9).\n\n\n-----Output-----\n\nOutput should consist of two lines.\n\nFirst line should contain a single integer n (1 \u2264 n \u2264 10 000)\u2014 the number of integers in the final array.\n\nSecond line should consist of n space separated integers \u2014 a_1, a_2, ... , a_{n} (1 \u2264 a_{i} < 10^18).\n\nIf there is no answer, print a single integer -1. If there are multiple answers, print any of them.\n\n\n-----Examples-----\nInput\n10 5\n\nOutput\n6\n5 50 7 15 6 100\nInput\n4 2\n\nOutput\n4\n10 100 1000 10000\n"
    },
    {
        "prompt": "Toad Zitz has an array of integers, each integer is between $0$ and $m-1$ inclusive. The integers are $a_1, a_2, \\ldots, a_n$.\n\nIn one operation Zitz can choose an integer $k$ and $k$ indices $i_1, i_2, \\ldots, i_k$ such that $1 \\leq i_1 < i_2 < \\ldots < i_k \\leq n$. He should then change $a_{i_j}$ to $((a_{i_j}+1) \\bmod m)$ for each chosen integer $i_j$. The integer $m$ is fixed for all operations and indices.\n\nHere $x \\bmod y$ denotes the remainder of the division of $x$ by $y$.\n\nZitz wants to make his array non-decreasing with the minimum number of such operations. Find this minimum number of operations.\n\n\n-----Input-----\n\nThe first line contains two integers $n$ and $m$ ($1 \\leq n, m \\leq 300\\,000$)\u00a0\u2014 the number of integers in the array and the parameter $m$.\n\nThe next line contains $n$ space-separated integers $a_1, a_2, \\ldots, a_n$ ($0 \\leq a_i < m$)\u00a0\u2014 the given array.\n\n\n-----Output-----\n\nOutput one integer: the minimum number of described operations Zitz needs to make his array non-decreasing. If no operations required, print $0$.\n\nIt is easy to see that with enough operations Zitz can always make his array non-decreasing.\n\n\n-----Examples-----\nInput\n5 3\n0 0 0 1 2\n\nOutput\n0\n\nInput\n5 7\n0 6 1 3 2\n\nOutput\n1\n\n\n\n-----Note-----\n\nIn the first example, the array is already non-decreasing, so the answer is $0$.\n\nIn the second example, you can choose $k=2$, $i_1 = 2$, $i_2 = 5$, the array becomes $[0,0,1,3,3]$. It is non-decreasing, so the answer is $1$.",
        "completion": "You have an array of integers, each integer is between $0$ and $m-1$ inclusive. The integers are $a_1, a_2, \\ldots, a_n$.\n\nIn one operation you can choose an integer $k$ and $k$ indices $i_1, i_2, \\ldots, i_k$ such that $1 \\leq i_1 < i_2 < \\ldots < i_k \\leq n$. You should then change $a_{i_j}$ to $((a_{i_j}+1) \\bmod m)$ for each chosen integer $i_j$. The integer $m$ is fixed for all operations and indices.\n\nHere $x \\bmod y$ denotes the remainder of the division of $x$ by $y$.\n\nYou wants to make this array non-decreasing with the minimum number of such operations. Find this minimum number of operations.\n\n\n-----Input-----\n\nThe first line contains two integers $n$ and $m$ ($1 \\leq n, m \\leq 300\\,000$)\u00a0\u2014 the number of integers in the array and the parameter $m$.\n\nThe next line contains $n$ space-separated integers $a_1, a_2, \\ldots, a_n$ ($0 \\leq a_i < m$)\u00a0\u2014 the given array.\n\n\n-----Output-----\n\nOutput one integer: the minimum number of described operations Zitz needs to make his array non-decreasing. If no operations required, print $0$.\n\nIt is easy to see that with enough operations Zitz can always make his array non-decreasing.\n\n\n-----Examples-----\nInput\n5 3\n0 0 0 1 2\n\nOutput\n0\n\nInput\n5 7\n0 6 1 3 2\n\nOutput\n1\n"
    },
    {
        "prompt": "There are N bags, each containing two white balls. The i-th box contains two balls with integers x_i and y_i written on them, respectively.\nFor each of these bags, you will paint one of the balls red, and paint the other blue.\nAfterwards, the 2N balls will be classified according to color.\nThen, we will define the following:\n - R_{max}: the maximum integer written on a ball painted in red\n - R_{min}: the minimum integer written on a ball painted in red\n - B_{max}: the maximum integer written on a ball painted in blue\n - B_{min}: the minimum integer written on a ball painted in blue\nFind the minimum possible value of (R_{max} - R_{min}) \\times (B_{max} - B_{min}).\n\n-----Constraints-----\n - 1 \u2264 N \u2264 200,000\n - 1 \u2264 x_i, y_i \u2264 10^9\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nx_1 y_1\nx_2 y_2\n:\nx_N y_N\n\n-----Output-----\nPrint the minimum possible value.\n\n-----Sample Input-----\n3\n1 2\n3 4\n5 6\n\n-----Sample Output-----\n15\n\nThe optimal solution is to paint the balls with x_1, x_2, y_3 red, and paint the balls with y_1, y_2, x_3 blue.",
        "completion": "There are N bags, each containing two white balls. The i-th box contains two balls with integers x_i and y_i written on them, respectively.\nFor each of these bags, you will paint one of the balls red, and paint the other blue.\nAfterwards, the 2N balls will be classified according to color.\nThen, we will define the following:\n - R_{max}: the maximum integer written on a ball painted in red\n - R_{min}: the minimum integer written on a ball painted in red\n - B_{max}: the maximum integer written on a ball painted in blue\n - B_{min}: the minimum integer written on a ball painted in blue\nFind the minimum possible value of (R_{max} - R_{min}) \\times (B_{max} - B_{min}).\n\n-----Constraints-----\n - 1 \u2264 N \u2264 200,000\n - 1 \u2264 x_i, y_i \u2264 10^9\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nx_1 y_1\nx_2 y_2\n:\nx_N y_N\n\n-----Output-----\nPrint the minimum possible value.\n\n-----Sample Input-----\n3\n1 2\n3 4\n5 6\n\n-----Sample Output-----\n15\n\n"
    },
    {
        "prompt": "There is an integer sequence of length 2^N: A_0, A_1, ..., A_{2^N-1}. (Note that the sequence is 0-indexed.)\nFor every integer K satisfying 1 \\leq K \\leq 2^N-1, solve the following problem:\n - Let i and j be integers. Find the maximum value of A_i + A_j where 0 \\leq i < j \\leq 2^N-1 and (i or j) \\leq K.\nHere, or denotes the bitwise OR.\n\n-----Constraints-----\n - 1 \\leq N \\leq 18\n - 1 \\leq A_i \\leq 10^9\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nA_0 A_1 ... A_{2^N-1}\n\n-----Output-----\nPrint 2^N-1 lines.\nIn the i-th line, print the answer of the problem above for K=i.\n\n-----Sample Input-----\n2\n1 2 3 1\n\n-----Sample Output-----\n3\n4\n5\n\nFor K=1, the only possible pair of i and j is (i,j)=(0,1), so the answer is A_0+A_1=1+2=3.\nFor K=2, the possible pairs of i and j are (i,j)=(0,1),(0,2).\nWhen (i,j)=(0,2), A_i+A_j=1+3=4. This is the maximum value, so the answer is 4.\nFor K=3, the possible pairs of i and j are (i,j)=(0,1),(0,2),(0,3),(1,2),(1,3),(2,3) .\nWhen (i,j)=(1,2), A_i+A_j=2+3=5. This is the maximum value, so the answer is 5.",
        "completion": "There is an integer sequence of length 2^N: A_0, A_1, ..., A_{2^N-1}.\nFor every integer K satisfying 1 \\leq K \\leq 2^N-1, solve the following problem:\n - Let i and j be integers. Find the maximum value of A_i + A_j where 0 \\leq i < j \\leq 2^N-1 and (i or j) \\leq K.\nHere, or denotes the bitwise OR.\n\n-----Constraints-----\n - 1 \\leq N \\leq 18\n - 1 \\leq A_i \\leq 10^9\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nA_0 A_1 ... A_{2^N-1}\n\n-----Output-----\nPrint 2^N-1 lines.\nIn the i-th line, print the answer of the problem above for K=i.\n\n-----Sample Input-----\n2\n1 2 3 1\n\n-----Sample Output-----\n3\n4\n5\n\n"
    },
    {
        "prompt": "Andrew and Eugene are playing a game. Initially, Andrew has string s, consisting of digits. Eugene sends Andrew multiple queries of type \"d_{i} \u2192 t_{i}\", that means \"replace all digits d_{i} in string s with substrings equal to t_{i}\". For example, if s = 123123, then query \"2 \u2192 00\" transforms s to 10031003, and query \"3 \u2192 \" meaning \"replace 3 by an empty string\" transforms it to s = 1212. After all the queries Eugene asks Andrew to find the remainder after division of number with decimal representation equal to s by 1000000007\u00a0(10^9 + 7). When you represent s as a decimal number, please ignore the leading zeroes; also if s is an empty string, then it's assumed that the number equals to zero.\n\nAndrew got tired of processing Eugene's requests manually and he asked you to write a program for that. Help him!\n\n\n-----Input-----\n\nThe first line contains string s (1 \u2264 |s| \u2264 10^5), consisting of digits\u00a0\u2014 the string before processing all the requests.\n\nThe second line contains a single integer n (0 \u2264 n \u2264 10^5)\u00a0\u2014 the number of queries.\n\nThe next n lines contain the descriptions of the queries. The i-th query is described by string \"d_{i}->t_{i}\", where d_{i} is exactly one digit (from 0 to 9), t_{i} is a string consisting of digits (t_{i} can be an empty string). The sum of lengths of t_{i} for all queries doesn't exceed 10^5. The queries are written in the order in which they need to be performed.\n\n\n-----Output-----\n\nPrint a single integer \u2014 remainder of division of the resulting number by 1000000007\u00a0(10^9 + 7).\n\n\n-----Examples-----\nInput\n123123\n1\n2->00\n\nOutput\n10031003\n\nInput\n123123\n1\n3->\n\nOutput\n1212\n\nInput\n222\n2\n2->0\n0->7\n\nOutput\n777\n\nInput\n1000000008\n0\n\nOutput\n1\n\n\n\n-----Note-----\n\nNote that the leading zeroes are not removed from string s after the replacement (you can see it in the third sample).",
        "completion": "Andrew and Eugene are playing a game. Initially, Andrew has string s, consisting of digits. Eugene sends Andrew multiple queries of type \"d_{i} \u2192 t_{i}\", that means \"replace all digits d_{i} in string s with substrings equal to t_{i}\". After all the queries Eugene asks Andrew to find the remainder after division of number with decimal representation equal to s by 1000000007\u00a0(10^9 + 7). When you represent s as a decimal number, ignore the leading zeroes; also if s is an empty string, then it's assumed that the number equals to zero.\n\n\n\n\n-----Input-----\n\nThe first line contains string s (1 \u2264 |s| \u2264 10^5), consisting of digits\u00a0\u2014 the string before processing all the requests.\n\nThe second line contains a single integer n (0 \u2264 n \u2264 10^5)\u00a0\u2014 the number of queries.\n\nThe next n lines contain the descriptions of the queries. The i-th query is described by string \"d_{i}->t_{i}\", where d_{i} is exactly one digit (from 0 to 9), t_{i} is a string consisting of digits (t_{i} can be an empty string). The sum of lengths of t_{i} for all queries doesn't exceed 10^5. The queries are written in the order in which they need to be performed.\n\n\n-----Output-----\n\nPrint a single integer \u2014 remainder of division of the resulting number by 1000000007\u00a0(10^9 + 7).\n\n\n-----Examples-----\nInput\n123123\n1\n2->00\n\nOutput\n10031003\n\nInput\n123123\n1\n3->\n\nOutput\n1212\n\nInput\n222\n2\n2->0\n0->7\n\nOutput\n777\n\nInput\n1000000008\n0\n\nOutput\n1\n\n"
    },
    {
        "prompt": "You are given a rectangular parallelepiped with sides of positive integer lengths $A$, $B$ and $C$. \n\nFind the number of different groups of three integers ($a$, $b$, $c$) such that $1\\leq a\\leq b\\leq c$ and parallelepiped $A\\times B\\times C$ can be paved with parallelepipeds $a\\times b\\times c$. Note, that all small parallelepipeds have to be rotated in the same direction.\n\nFor example, parallelepiped $1\\times 5\\times 6$ can be divided into parallelepipeds $1\\times 3\\times 5$, but can not be divided into parallelepipeds $1\\times 2\\times 3$.\n\n\n-----Input-----\n\nThe first line contains a single integer $t$ ($1 \\leq t \\leq 10^5$)\u00a0\u2014 the number of test cases.\n\nEach of the next $t$ lines contains three integers $A$, $B$ and $C$ ($1 \\leq A, B, C \\leq 10^5$)\u00a0\u2014 the sizes of the parallelepiped.\n\n\n-----Output-----\n\nFor each test case, print the number of different groups of three points that satisfy all given conditions.\n\n\n-----Example-----\nInput\n4\n1 1 1\n1 6 1\n2 2 2\n100 100 100\n\nOutput\n1\n4\n4\n165\n\n\n\n-----Note-----\n\nIn the first test case, rectangular parallelepiped $(1, 1, 1)$ can be only divided into rectangular parallelepiped with sizes $(1, 1, 1)$.\n\nIn the second test case, rectangular parallelepiped $(1, 6, 1)$ can be divided into rectangular parallelepipeds with sizes $(1, 1, 1)$, $(1, 1, 2)$, $(1, 1, 3)$ and $(1, 1, 6)$.\n\nIn the third test case, rectangular parallelepiped $(2, 2, 2)$ can be divided into rectangular parallelepipeds with sizes $(1, 1, 1)$, $(1, 1, 2)$, $(1, 2, 2)$ and $(2, 2, 2)$.",
        "completion": "You are given a rectangular parallelepiped with sides of positive integer lengths $A$, $B$ and $C$. \n\nFind the number of different groups of three integers $a$, $b$, $c$ such that $1\\leq a\\leq b\\leq c$ and parallelepiped $A\\times B\\times C$ can be paved with parallelepipeds $a\\times b\\times c$.\n\n-----Input-----\n\nThe first line contains a single integer $t$ ($1 \\leq t \\leq 10^5$)\u00a0\u2014 the number of test cases.\n\nEach of the next $t$ lines contains three integers $A$, $B$ and $C$ ($1 \\leq A, B, C \\leq 10^5$)\u00a0\u2014 the sizes of the parallelepiped.\n\n\n-----Output-----\n\nFor each test case, print the number of different groups of three points that satisfy all given conditions.\n\n\n-----Example-----\nInput\n4\n1 1 1\n1 6 1\n2 2 2\n100 100 100\n\nOutput\n1\n4\n4\n165\n\n\n"
    },
    {
        "prompt": "The \"BerCorp\" company has got n employees. These employees can use m approved official languages for the formal correspondence. The languages are numbered with integers from 1 to m. For each employee we have the list of languages, which he knows. This list could be empty, i. e. an employee may know no official languages. But the employees are willing to learn any number of official languages, as long as the company pays their lessons. A study course in one language for one employee costs 1 berdollar.\n\nFind the minimum sum of money the company needs to spend so as any employee could correspond to any other one (their correspondence can be indirect, i. e. other employees can help out translating).\n\n\n-----Input-----\n\nThe first line contains two integers n and m (2 \u2264 n, m \u2264 100) \u2014 the number of employees and the number of languages.\n\nThen n lines follow \u2014 each employee's language list. At the beginning of the i-th line is integer k_{i} (0 \u2264 k_{i} \u2264 m) \u2014 the number of languages the i-th employee knows. Next, the i-th line contains k_{i} integers \u2014 a_{ij} (1 \u2264 a_{ij} \u2264 m) \u2014 the identifiers of languages the i-th employee knows. It is guaranteed that all the identifiers in one list are distinct. Note that an employee may know zero languages.\n\nThe numbers in the lines are separated by single spaces.\n\n\n-----Output-----\n\nPrint a single integer \u2014 the minimum amount of money to pay so that in the end every employee could write a letter to every other one (other employees can help out translating).\n\n\n-----Examples-----\nInput\n5 5\n1 2\n2 2 3\n2 3 4\n2 4 5\n1 5\n\nOutput\n0\n\nInput\n8 7\n0\n3 1 2 3\n1 1\n2 5 4\n2 6 7\n1 3\n2 7 4\n1 1\n\nOutput\n2\n\nInput\n2 2\n1 2\n0\n\nOutput\n1\n\n\n\n-----Note-----\n\nIn the second sample the employee 1 can learn language 2, and employee 8 can learn language 4.\n\nIn the third sample employee 2 must learn language 2.",
        "completion": "You are given n sets which are a subset of the set of natural numbers in the range 1 to m. You can add a single number to any one set at the cost 1.\n\nFind the minimum total cost such that for every pair of sets the union is not a null set.\n\n\n-----Input-----\n\nThe first line contains two integers n and m (2 \u2264 n, m \u2264 100) \u2014 the number of sets and the range of natural numbers.\n\nThe next n lines that follow - the sets containing the natural numbers in range 1 to m. If the input is zero it is a null set.\n\nThe numbers in the lines are separated by single spaces.\n\n\n-----Output-----\n\nPrint a single integer \u2014 the minimum cost such that the union of no two pairs is a null set.\n\n\n-----Examples-----\nInput\n5 5\n1 2\n2 2 3\n2 3 4\n2 4 5\n1 5\n\nOutput\n0\n\nInput\n8 7\n0\n3 1 2 3\n1 1\n2 5 4\n2 6 7\n1 3\n2 7 4\n1 1\n\nOutput\n2\n\nInput\n2 2\n1 2\n0\n\nOutput\n1\n\n\n\n-----Note-----\n\nIn the third example add 2 to the third subset."
    },
    {
        "prompt": "Konrad is a Human Relations consultant working for VoltModder, a large electrical equipment producer. Today, he has been tasked with evaluating the level of happiness in the company.\n\nThere are $n$ people working for VoltModder, numbered from $1$ to $n$. Each employee earns a different amount of money in the company \u2014 initially, the $i$-th person earns $i$ rubles per day.\n\nOn each of $q$ following days, the salaries will be revised. At the end of the $i$-th day, employee $v_i$ will start earning $n+i$ rubles per day and will become the best-paid person in the company. The employee will keep his new salary until it gets revised again.\n\nSome pairs of people don't like each other. This creates a great psychological danger in the company. Formally, if two people $a$ and $b$ dislike each other and $a$ earns more money than $b$, employee $a$ will brag about this to $b$. A dangerous triple is a triple of three employees $a$, $b$ and $c$, such that $a$ brags to $b$, who in turn brags to $c$. If $a$ dislikes $b$, then $b$ dislikes $a$.\n\nAt the beginning of each day, Konrad needs to evaluate the number of dangerous triples in the company. Can you help him do it?\n\n\n-----Input-----\n\nThe first line contains two integers $n$ and $m$ ($1 \\le n \\le 100\\,000$, $0 \\le m \\le 100\\,000$) \u2014 the number of employees in the company and the number of pairs of people who don't like each other. Each of the following $m$ lines contains two integers $a_i$, $b_i$ ($1 \\le a_i, b_i \\le n$, $a_i \\neq b_i$) denoting that employees $a_i$ and $b_i$ hate each other (that is, $a_i$ dislikes $b_i$ and $b_i$ dislikes $a_i$). Each such relationship will be mentioned exactly once.\n\nThe next line contains an integer $q$ ($0 \\le q \\le 100\\,000$) \u2014 the number of salary revisions. The $i$-th of the following $q$ lines contains a single integer $v_i$ ($1 \\le v_i \\le n$) denoting that at the end of the $i$-th day, employee $v_i$ will earn the most.\n\n\n-----Output-----\n\nOutput $q + 1$ integers. The $i$-th of them should contain the number of dangerous triples in the company at the beginning of the $i$-th day.\n\n\n-----Examples-----\nInput\n4 5\n1 2\n2 4\n1 3\n3 4\n2 3\n2\n2\n3\n\nOutput\n4\n3\n2\n\nInput\n3 3\n1 2\n2 3\n1 3\n5\n1\n2\n2\n1\n3\n\nOutput\n1\n1\n1\n1\n1\n1\n\n\n\n-----Note-----\n\nConsider the first sample test. The $i$-th row in the following image shows the structure of the company at the beginning of the $i$-th day. A directed edge from $a$ to $b$ denotes that employee $a$ brags to employee $b$. The dangerous triples are marked by highlighted edges. [Image]",
        "completion": "You have $n$ nodes in a graph, numbered from $v_1$ to $v_n$. Each node has a certain value \u2014 initially the $i$-th node has a value of $i$.\n\nThe node values will be revised $q$ times. For the $j$-th revision, node $v_i$ will have a value of $n+i$ and have the highest value amongst every node. \nThe node $v_i$ will have this value for the only the $j$-th revision,\nit will have value $i$ on the next revision unless that node's value is revisied again.\n\nSome nodes dislike with each other which causes conflicts. Formally, if two nodes $a$ and $b$ dislike with each other and $a$ has a higher value than $b$ then $a$ conflicts with $b$.\nA dangerous triple is a triple of three nodes $a$, $b$, $c$ such that $a$ conflicts with $b$ and $b$ conflicts with $c$.\n\nYou need to find the number of dangerous triples before the revisions and after each revision.\n\n-----Input-----\n\nThe first line contains two integers $n$ and $m$ ($1 \\le n \\le 100\\,000$, $0\n\\le m \\le 100\\,000$) \u2014 the number of nodes and the number of nodes that dislike each other. Each of the following $m$ lines\ncontains two integers $a_i$, $b_i$ ($1 \\le a_i, b_i \\le n$, $a_i \\neq b_i$)\ndenoting that nodes $a_i$ and $b_i$ dislike each other (that is, $a_i$\ndislikes $b_i$ and $b_i$ dislikes $a_i$). Each such relationship will be\nmentioned exactly once.\n\nThe next line contains an integer $q$ ($0 \\le q \\le 100\\,000$) \u2014 the number of \nrevisions. The $i$-th of the following $q$ lines contains a single\ninteger $v_i$ ($1 \\le v_i \\le n$) denoting that at the end of the $i$-th day,\nnode $v_i$ will have the highest value. \n\n\n-----Output-----\n\nOutput $q + 1$ integers. The $i$-th of them should contain the number of dangerous triples on the $i$-th revision.\n\n\n-----Examples-----\nInput\n4 5\n1 2\n2 4\n1 3\n3 4\n2 3\n2\n2\n3\n\nOutput\n4\n3\n2\n\nInput\n3 3\n1 2\n2 3\n1 3\n5\n1\n2\n2\n1\n3\n\nOutput\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "prompt": "Codefortia is a small island country located somewhere in the West Pacific. It consists of $n$ settlements connected by $m$ bidirectional gravel roads. Curiously enough, the beliefs of the inhabitants require the time needed to pass each road to be equal either to $a$ or $b$ seconds. It's guaranteed that one can go between any pair of settlements by following a sequence of roads.\n\nCodefortia was recently struck by the financial crisis. Therefore, the king decided to abandon some of the roads so that:\n\n  it will be possible to travel between each pair of cities using the remaining roads only,  the sum of times required to pass each remaining road will be minimum possible (in other words, remaining roads must form minimum spanning tree, using the time to pass the road as its weight),  among all the plans minimizing the sum of times above, the time required to travel between the king's residence (in settlement $1$) and the parliament house (in settlement $p$) using the remaining roads only will be minimum possible. \n\nThe king, however, forgot where the parliament house was. For each settlement $p = 1, 2, \\dots, n$, can you tell what is the minimum time required to travel between the king's residence and the parliament house (located in settlement $p$) after some roads are abandoned?\n\n\n-----Input-----\n\nThe first line of the input contains four integers $n$, $m$, $a$ and $b$ ($2 \\leq n \\leq 70$, $n - 1 \\leq m \\leq 200$, $1 \\leq a < b \\leq 10^7$) \u2014 the number of settlements and gravel roads in Codefortia, and two possible travel times. Each of the following lines contains three integers $u, v, c$ ($1 \\leq u, v \\leq n$, $u \\neq v$, $c \\in \\{a, b\\}$) denoting a single gravel road between the settlements $u$ and $v$, which requires $c$ minutes to travel.\n\nYou can assume that the road network is connected and has no loops or multiedges.\n\n\n-----Output-----\n\nOutput a single line containing $n$ integers. The $p$-th of them should denote the minimum possible time required to travel from $1$ to $p$ after the selected roads are abandoned. Note that for each $p$ you can abandon a different set of roads.\n\n\n-----Examples-----\nInput\n5 5 20 25\n1 2 25\n2 3 25\n3 4 20\n4 5 20\n5 1 20\n\nOutput\n0 25 60 40 20\n\nInput\n6 7 13 22\n1 2 13\n2 3 13\n1 4 22\n3 4 13\n4 5 13\n5 6 13\n6 1 13\n\nOutput\n0 13 26 39 26 13\n\n\n\n-----Note-----\n\nThe minimum possible sum of times required to pass each road in the first example is $85$ \u2014 exactly one of the roads with passing time $25$ must be abandoned. Note that after one of these roads is abandoned, it's now impossible to travel between settlements $1$ and $3$ in time $50$.",
        "completion": "You are given a graph of $n$ nodes and $m$ bidirectional edges.\nThe cost for each edge is either $a$ or $b$.\nThe graph is fully-connected, so you can travel between any pair of nodes using the edges. \n\nFor each node $p = 1, 2, \\dots, n$, you need to remove some edges so that:\nIt will be possible to travel between each pair of nodes using the remaining edges only, and\nthe sum of times required to pass each remaining road will be the minimum possible.\nYou should output the minimum time required to travel between node $1$ and node $p$.\n\n\n-----Input-----\n\nThe first line of the input contains four integers $n$, $m$, $a$ and $b$ ($2 \\leq n \\leq 70$, $n - 1 \\leq m \\leq 200$, $1 \\leq a < b \\leq 10^7$) \u2014 the number of nodes and edges in the graph, and two possible travel times. Each of the following lines contains three integers $u, v, c$ ($1 \\leq u, v \\leq n$, $u \\neq v$, $c \\in \\{a, b\\}$) denoting an edge between the nodes $u$ and $v$, which has cost $c$.\n\nYou can assume that the graph is connected and has no loops or multiedges.\n\n\n-----Output-----\n\nOutput a single line containing $n$ integers. The $p$-th of them should denote the minimum possible post required to travel from $1$ to $p$ after the selected edges are abandoned. Note that for each $p$ you can abandon a different set of edges.\n\n\n-----Examples-----\nInput\n5 5 20 25\n1 2 25\n2 3 25\n3 4 20\n4 5 20\n5 1 20\n\nOutput\n0 25 60 40 20\n\nInput\n6 7 13 22\n1 2 13\n2 3 13\n1 4 22\n3 4 13\n4 5 13\n5 6 13\n6 1 13\n\nOutput\n0 13 26 39 26 13"
    },
    {
        "prompt": "For a vector $\\vec{v} = (x, y)$, define $|v| = \\sqrt{x^2 + y^2}$.\n\nAllen had a bit too much to drink at the bar, which is at the origin. There are $n$ vectors $\\vec{v_1}, \\vec{v_2}, \\cdots, \\vec{v_n}$. Allen will make $n$ moves. As Allen's sense of direction is impaired, during the $i$-th move he will either move in the direction $\\vec{v_i}$ or $-\\vec{v_i}$. In other words, if his position is currently $p = (x, y)$, he will either move to $p + \\vec{v_i}$ or $p - \\vec{v_i}$.\n\nAllen doesn't want to wander too far from home (which happens to also be the bar). You need to help him figure out a sequence of moves (a sequence of signs for the vectors) such that his final position $p$ satisfies $|p| \\le 1.5 \\cdot 10^6$ so that he can stay safe.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($1 \\le n \\le 10^5$)\u00a0\u2014 the number of moves.\n\nEach of the following lines contains two space-separated integers $x_i$ and $y_i$, meaning that $\\vec{v_i} = (x_i, y_i)$. We have that $|v_i| \\le 10^6$ for all $i$.\n\n\n-----Output-----\n\nOutput a single line containing $n$ integers $c_1, c_2, \\cdots, c_n$, each of which is either $1$ or $-1$. Your solution is correct if the value of $p = \\sum_{i = 1}^n c_i \\vec{v_i}$, satisfies $|p| \\le 1.5 \\cdot 10^6$.\n\nIt can be shown that a solution always exists under the given constraints.\n\n\n-----Examples-----\nInput\n3\n999999 0\n0 999999\n999999 0\n\nOutput\n1 1 -1 \n\nInput\n1\n-824590 246031\n\nOutput\n1 \n\nInput\n8\n-67761 603277\n640586 -396671\n46147 -122580\n569609 -2112\n400 914208\n131792 309779\n-850150 -486293\n5272 721899\n\nOutput\n1 1 1 1 1 1 1 -1",
        "completion": "For a vector $\\vec{v} = (x, y)$, define $|v| = \\sqrt{x^2 + y^2}$.\n\nYou are at the origin. There are $n$ vectors $\\vec{v_1}, \\vec{v_2}, \\cdots, \\vec{v_n}$. You will make $n$ moves. During the $i$-th move you will either move to $p + \\vec{v_i}$ or $p - \\vec{v_i}$.\n\nFigure out a sequence of moves such that your final position $p$ satisfies $|p| \\le 1.5 \\cdot 10^6$.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($1 \\le n \\le 10^5$)\u00a0\u2014 the number of moves.\n\nEach of the following lines contains two space-separated integers $x_i$ and $y_i$, meaning that $\\vec{v_i} = (x_i, y_i)$. We have that $|v_i| \\le 10^6$ for all $i$.\n\n\n-----Output-----\n\nOutput a single line containing $n$ integers $c_1, c_2, \\cdots, c_n$, each of which is either $1$ or $-1$. Your solution is correct if the value of $p = \\sum_{i = 1}^n c_i \\vec{v_i}$, satisfies $|p| \\le 1.5 \\cdot 10^6$.\n\nIt can be shown that a solution always exists under the given constraints.\n\n\n-----Examples-----\nInput\n3\n999999 0\n0 999999\n999999 0\n\nOutput\n1 1 -1 \n\nInput\n1\n-824590 246031\n\nOutput\n1 \n\nInput\n8\n-67761 603277\n640586 -396671\n46147 -122580\n569609 -2112\n400 914208\n131792 309779\n-850150 -486293\n5272 721899\n\nOutput\n1 1 1 1 1 1 1 -1"
    },
    {
        "prompt": "You are given a directed graph of $n$ vertices and $m$ edges. Vertices are numbered from $1$ to $n$. There is a token in vertex $1$.\n\nThe following actions are allowed:   Token movement. To move the token from vertex $u$ to vertex $v$ if there is an edge $u \\to v$ in the graph. This action takes $1$ second.  Graph transposition. To transpose all the edges in the graph: replace each edge $u \\to v$ by an edge $v \\to u$. This action takes increasingly more time: $k$-th transposition takes $2^{k-1}$ seconds, i.e. the first transposition takes $1$ second, the second one takes $2$ seconds, the third one takes $4$ seconds, and so on. \n\nThe goal is to move the token from vertex $1$ to vertex $n$ in the shortest possible time. Print this time modulo $998\\,244\\,353$.\n\n\n-----Input-----\n\nThe first line of input contains two integers $n, m$ ($1 \\le n, m \\le 200\\,000$).\n\nThe next $m$ lines contain two integers each: $u, v$ ($1 \\le u, v \\le n; u \\ne v$), which represent the edges of the graph. It is guaranteed that all ordered pairs $(u, v)$ are distinct.\n\nIt is guaranteed that it is possible to move the token from vertex $1$ to vertex $n$ using the actions above.\n\n\n-----Output-----\n\nPrint one integer: the minimum required time modulo $998\\,244\\,353$.\n\n\n-----Examples-----\nInput\n4 4\n1 2\n2 3\n3 4\n4 1\n\nOutput\n2\n\nInput\n4 3\n2 1\n2 3\n4 3\n\nOutput\n10\n\n\n\n-----Note-----\n\nThe first example can be solved by transposing the graph and moving the token to vertex $4$, taking $2$ seconds.\n\nThe best way to solve the second example is the following: transpose the graph, move the token to vertex $2$, transpose the graph again, move the token to vertex $3$, transpose the graph once more and move the token to vertex $4$.",
        "completion": "You are given a directed graph of $n$ vertices and $m$ edges. Vertices are numbered from $1$ to $n$. There is a token in vertex $1$.\n\nThe following actions are allowed: Token movement. To move the token from vertex $u$ to vertex $v$ if there is an edge $u \\to v$ in the graph. This action takes $1$ second. To transpose all the edges in the graph: replace each edge $u \\to v$ by an edge $v \\to u$. This action takes increasingly more time: $k$-th transposition takes $2^{k-1}$ seconds.\n\nThe goal is to move the token from vertex $1$ to vertex $n$ in the shortest possible time. Print this time modulo $998\\,244\\,353$.\n\n\n-----Input-----\n\nThe first line of input contains two integers $n, m$ ($1 \\le n, m \\le 200\\,000$).\n\nThe next $m$ lines contain two integers each: $u, v$ ($1 \\le u, v \\le n; u \\ne v$), which represent the edges of the graph. It is guaranteed that all ordered pairs $(u, v)$ are distinct.\n\nIt is guaranteed that it is possible to move the token from vertex $1$ to vertex $n$ using the actions above.\n\n\n-----Output-----\n\nPrint one integer: the minimum required time modulo $998\\,244\\,353$.\n\n\n-----Examples-----\nInput\n4 4\n1 2\n2 3\n3 4\n4 1\n\nOutput\n2\n\nInput\n4 3\n2 1\n2 3\n4 3\n\nOutput\n10\n"
    },
    {
        "prompt": "Dreamoon likes coloring cells very much.\n\nThere is a row of $n$ cells. Initially, all cells are empty (don't contain any color). Cells are numbered from $1$ to $n$.\n\nYou are given an integer $m$ and $m$ integers $l_1, l_2, \\ldots, l_m$ ($1 \\le l_i \\le n$)\n\nDreamoon will perform $m$ operations.\n\nIn $i$-th operation, Dreamoon will choose a number $p_i$ from range $[1, n-l_i+1]$ (inclusive) and will paint all cells from $p_i$ to $p_i+l_i-1$ (inclusive) in $i$-th color. Note that cells may be colored more one than once, in this case, cell will have the color from the latest operation.\n\nDreamoon hopes that after these $m$ operations, all colors will appear at least once and all cells will be colored. Please help Dreamoon to choose $p_i$ in each operation to satisfy all constraints.\n\n\n-----Input-----\n\nThe first line contains two integers $n,m$ ($1 \\leq m \\leq n \\leq 100\\,000$).\n\nThe second line contains $m$ integers $l_1, l_2, \\ldots, l_m$ ($1 \\leq l_i \\leq n$).\n\n\n-----Output-----\n\nIf it's impossible to perform $m$ operations to satisfy all constraints, print \"'-1\" (without quotes).\n\nOtherwise, print $m$ integers $p_1, p_2, \\ldots, p_m$ ($1 \\leq p_i \\leq n - l_i + 1$), after these $m$ operations, all colors should appear at least once and all cells should be colored.\n\nIf there are several possible solutions, you can print any.\n\n\n-----Examples-----\nInput\n5 3\n3 2 2\n\nOutput\n2 4 1\n\nInput\n10 1\n1\n\nOutput\n-1",
        "completion": "\nThere is a row of $n$ cells. Initially, all cells are empty. Cells are numbered from $1$ to $n$.\n\nYou are given an integer $m$ and $m$ integers $l_1, l_2, \\ldots, l_m$ ($1 \\le l_i \\le n$)\n\nYou will perform $m$ operations.\n\nIn $i$-th operation, You will choose a number $p_i$ from range $[1, n-l_i+1]$ and will paint all cells from $p_i$ to $p_i+l_i-1$ inclusive in $i$-th color. Cells may be colored more than once, in this case, cell will have the color from the latest operation.\n\nYou hope that after these $m$ operations, all colors will appear at least once and all cells will be colored. Choose $p_i$ in each operation to satisfy all constraints.\n\n\n-----Input-----\n\nThe first line contains two integers $n,m$ ($1 \\leq m \\leq n \\leq 100\\,000$).\n\nThe second line contains $m$ integers $l_1, l_2, \\ldots, l_m$ ($1 \\leq l_i \\leq n$).\n\n\n-----Output-----\n\nIf it's impossible to perform $m$ operations to satisfy all constraints, print -1.\n\nOtherwise, print $m$ integers $p_1, p_2, \\ldots, p_m$ ($1 \\leq p_i \\leq n - l_i + 1$), after these $m$ operations, all colors should appear at least once and all cells should be colored.\n\nIf there are several possible solutions, you can print any.\n\n\n-----Examples-----\nInput\n5 3\n3 2 2\n\nOutput\n2 4 1\n\nInput\n10 1\n1\n\nOutput\n-1"
    },
    {
        "prompt": "Sereja has a bracket sequence s_1, s_2, ..., s_{n}, or, in other words, a string s of length n, consisting of characters \"(\" and \")\".\n\nSereja needs to answer m queries, each of them is described by two integers l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 n). The answer to the i-th query is the length of the maximum correct bracket subsequence of sequence s_{l}_{i}, s_{l}_{i} + 1, ..., s_{r}_{i}. Help Sereja answer all queries.\n\nYou can find the definitions for a subsequence and a correct bracket sequence in the notes.\n\n\n-----Input-----\n\nThe first line contains a sequence of characters s_1, s_2, ..., s_{n} (1 \u2264 n \u2264 10^6) without any spaces. Each character is either a \"(\" or a \")\". The second line contains integer m (1 \u2264 m \u2264 10^5) \u2014 the number of queries. Each of the next m lines contains a pair of integers. The i-th line contains integers l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 n) \u2014 the description of the i-th query.\n\n\n-----Output-----\n\nPrint the answer to each question on a single line. Print the answers in the order they go in the input.\n\n\n-----Examples-----\nInput\n())(())(())(\n7\n1 1\n2 3\n1 2\n1 12\n8 12\n5 11\n2 10\n\nOutput\n0\n0\n2\n10\n4\n6\n6\n\n\n\n-----Note-----\n\nA subsequence of length |x| of string s = s_1s_2... s_{|}s| (where |s| is the length of string s) is string x = s_{k}_1s_{k}_2... s_{k}_{|}x| (1 \u2264 k_1 < k_2 < ... < k_{|}x| \u2264 |s|).\n\nA correct bracket sequence is a bracket sequence that can be transformed into a correct aryphmetic expression by inserting characters \"1\" and \"+\" between the characters of the string. For example, bracket sequences \"()()\", \"(())\" are correct (the resulting expressions \"(1)+(1)\", \"((1+1)+1)\"), and \")(\" and \"(\" are not.\n\nFor the third query required sequence will be \u00ab()\u00bb.\n\nFor the fourth query required sequence will be \u00ab()(())(())\u00bb.",
        "completion": "You have a bracket sequence s_1, s_2, ..., s_{n}, or, in other words, a string s of length n, consisting of characters \"(\" and \")\".\n\nYou need to answer m queries, each of them is described by two integers l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 n). The answer to the i-th query is the length of the maximum correct bracket subsequence of sequence s_{l}_{i}, s_{l}_{i} + 1, ..., s_{r}_{i}.\n\n-----Input-----\n\nThe first line contains a sequence of characters s_1, s_2, ..., s_{n} (1 \u2264 n \u2264 10^6) without any spaces. Each character is either a \"(\" or a \")\". The second line contains integer m (1 \u2264 m \u2264 10^5) \u2014 the number of queries. Each of the next m lines contains a pair of integers. The i-th line contains integers l_{i}, r_{i} (1 \u2264 l_{i} \u2264 r_{i} \u2264 n) \u2014 the description of the i-th query.\n\n\n-----Output-----\n\nPrint the answer to each question on a single line. Print the answers in the order they go in the input.\n\n\n-----Examples-----\nInput\n())(())(())(\n7\n1 1\n2 3\n1 2\n1 12\n8 12\n5 11\n2 10\n\nOutput\n0\n0\n2\n10\n4\n6\n6\n"
    },
    {
        "prompt": "There are N people, conveniently numbered 1 through N.\nWe want to divide them into some number of groups, under the following two conditions:\n - Every group contains between A and B people, inclusive.\n - Let F_i be the number of the groups containing exactly i people. Then, for all i, either F_i=0 or C\u2264F_i\u2264D holds.\nFind the number of these ways to divide the people into groups.\nHere, two ways to divide them into groups is considered different if and only if there exists two people such that they belong to the same group in exactly one of the two ways.\nSince the number of these ways can be extremely large, print the count modulo 10^9+7.\n\n-----Constraints-----\n - 1\u2264N\u226410^3\n - 1\u2264A\u2264B\u2264N\n - 1\u2264C\u2264D\u2264N\n\n-----Input-----\nThe input is given from Standard Input in the following format:\nN A B C D\n\n-----Output-----\nPrint the number of ways to divide the people into groups under the conditions, modulo 10^9+7.\n\n-----Sample Input-----\n3 1 3 1 2\n\n-----Sample Output-----\n4\n\nThere are four ways to divide the people:\n - (1,2),(3)\n - (1,3),(2)\n - (2,3),(1)\n - (1,2,3)\nThe following way to divide the people does not count: (1),(2),(3). This is because it only satisfies the first condition and not the second.",
        "completion": "There are N people, numbered 1 through N.\nWe want to divide them into some number of groups, under the following two conditions:\n - Every group contains between A and B people, inclusive.\n - Let F_i be the number of the groups containing exactly i people. Then, for all i, either F_i=0 or C\u2264F_i\u2264D holds.\nFind the number of these ways to divide the people into groups.\nHere, two ways to divide them into groups is considered different if and only if there exists two people such that they belong to the same group in exactly one of the two ways.\nSince the number of these ways can be extremely large, print the count modulo 10^9+7.\n\n-----Constraints-----\n - 1\u2264N\u226410^3\n - 1\u2264A\u2264B\u2264N\n - 1\u2264C\u2264D\u2264N\n\n-----Input-----\nThe input is given from Standard Input in the following format:\nN A B C D\n\n-----Output-----\nPrint the number of ways to divide the people into groups under the conditions, modulo 10^9+7.\n\n-----Sample Input-----\n3 1 3 1 2\n\n-----Sample Output-----\n4\n\n"
    },
    {
        "prompt": "You are given a sequence a_1, a_2, ..., a_{n} consisting of different integers. It is required to split this sequence into the maximum number of subsequences such that after sorting integers in each of them in increasing order, the total sequence also will be sorted in increasing order.\n\nSorting integers in a subsequence is a process such that the numbers included in a subsequence are ordered in increasing order, and the numbers which are not included in a subsequence don't change their places.\n\nEvery element of the sequence must appear in exactly one subsequence.\n\n\n-----Input-----\n\nThe first line of input data contains integer n (1 \u2264 n \u2264 10^5)\u00a0\u2014 the length of the sequence.\n\nThe second line of input data contains n different integers a_1, a_2, ..., a_{n} ( - 10^9 \u2264 a_{i} \u2264 10^9)\u00a0\u2014 the elements of the sequence. It is guaranteed that all elements of the sequence are distinct.\n\n\n-----Output-----\n\nIn the first line print the maximum number of subsequences k, which the original sequence can be split into while fulfilling the requirements.\n\nIn the next k lines print the description of subsequences in the following format: the number of elements in subsequence c_{i} (0 < c_{i} \u2264 n), then c_{i} integers l_1, l_2, ..., l_{c}_{i} (1 \u2264 l_{j} \u2264 n)\u00a0\u2014 indices of these elements in the original sequence. \n\nIndices could be printed in any order. Every index from 1 to n must appear in output exactly once.\n\nIf there are several possible answers, print any of them.\n\n\n-----Examples-----\nInput\n6\n3 2 1 6 5 4\n\nOutput\n4\n2 1 3\n1 2\n2 4 6\n1 5\n\nInput\n6\n83 -75 -49 11 37 62\n\nOutput\n1\n6 1 2 3 4 5 6\n\n\n\n-----Note-----\n\nIn the first sample output:\n\nAfter sorting the first subsequence we will get sequence 1\u00a02\u00a03\u00a06\u00a05\u00a04.\n\nSorting the second subsequence changes nothing.\n\nAfter sorting the third subsequence we will get sequence 1\u00a02\u00a03\u00a04\u00a05\u00a06.\n\nSorting the last subsequence changes nothing.",
        "completion": "You are given a sequence a_1, a_2, ..., a_{n} consisting of different integers. It is required to split this sequence into the maximum number of subsequences such that after sorting integers in each of them in increasing order, the total sequence also will be sorted in increasing order.\n\nSorting integers in a subsequence is a process such that the numbers included in a subsequence are ordered in increasing order, and the numbers which are not included in a subsequence don't change their places.\n\nEvery element of the sequence must appear in exactly one subsequence.\n\n\n-----Input-----\n\nThe first line of input data contains integer n (1 \u2264 n \u2264 10^5)\u00a0\u2014 the length of the sequence.\n\nThe second line of input data contains n different integers a_1, a_2, ..., a_{n} ( - 10^9 \u2264 a_{i} \u2264 10^9)\u00a0\u2014 the elements of the sequence. It is guaranteed that all elements of the sequence are distinct.\n\n\n-----Output-----\n\nIn the first line print the maximum number of subsequences k, which the original sequence can be split into while fulfilling the requirements.\n\nIn the next k lines print the description of subsequences in the following format: the number of elements in subsequence c_{i} (0 < c_{i} \u2264 n), then c_{i} integers l_1, l_2, ..., l_{c}_{i} (1 \u2264 l_{j} \u2264 n)\u00a0\u2014 indices of these elements in the original sequence. \n\nIndices could be printed in any order. Every index from 1 to n must appear in output exactly once.\n\nIf there are several possible answers, print any of them.\n\n\n-----Examples-----\nInput\n6\n3 2 1 6 5 4\n\nOutput\n4\n2 1 3\n1 2\n2 4 6\n1 5\n\nInput\n6\n83 -75 -49 11 37 62\n\nOutput\n1\n6 1 2 3 4 5 6\n\n"
    },
    {
        "prompt": "Let $a_1, \\ldots, a_n$ be an array of $n$ positive integers. In one operation, you can choose an index $i$ such that $a_i = i$, and remove $a_i$ from the array (after the removal, the remaining parts are concatenated).\n\nThe weight of $a$ is defined as the maximum number of elements you can remove.\n\nYou must answer $q$ independent queries $(x, y)$: after replacing the $x$ first elements of $a$ and the $y$ last elements of $a$ by $n+1$ (making them impossible to remove), what would be the weight of $a$?\n\n\n-----Input-----\n\nThe first line contains two integers $n$ and $q$ ($1 \\le n, q \\le 3 \\cdot 10^5$) \u00a0\u2014 the length of the array and the number of queries.\n\nThe second line contains $n$ integers $a_1$, $a_2$, ..., $a_n$ ($1 \\leq a_i \\leq n$)\u00a0\u2014 elements of the array.\n\nThe $i$-th of the next $q$ lines contains two integers $x$ and $y$ ($x, y \\ge 0$ and $x+y < n$).\n\n\n-----Output-----\n\nPrint $q$ lines, $i$-th line should contain a single integer \u00a0\u2014 the answer to the $i$-th query.\n\n\n-----Examples-----\nInput\n13 5\n2 2 3 9 5 4 6 5 7 8 3 11 13\n3 1\n0 0\n2 4\n5 0\n0 12\n\nOutput\n5\n11\n6\n1\n0\n\nInput\n5 2\n1 4 1 2 4\n0 0\n1 0\n\nOutput\n2\n0\n\n\n\n-----Note-----\n\nExplanation of the first query:\n\nAfter making first $x = 3$ and last $y = 1$ elements impossible to remove, $a$ becomes $[\\times, \\times, \\times, 9, 5, 4, 6, 5, 7, 8, 3, 11, \\times]$ (we represent $14$ as $\\times$ for clarity).\n\nHere is a strategy that removes $5$ elements (the element removed is colored in red):  $[\\times, \\times, \\times, 9, \\color{red}{5}, 4, 6, 5, 7, 8, 3, 11, \\times]$  $[\\times, \\times, \\times, 9, 4, 6, 5, 7, 8, 3, \\color{red}{11}, \\times]$  $[\\times, \\times, \\times, 9, 4, \\color{red}{6}, 5, 7, 8, 3, \\times]$  $[\\times, \\times, \\times, 9, 4, 5, 7, \\color{red}{8}, 3, \\times]$  $[\\times, \\times, \\times, 9, 4, 5, \\color{red}{7}, 3, \\times]$  $[\\times, \\times, \\times, 9, 4, 5, 3, \\times]$ (final state) \n\nIt is impossible to remove more than $5$ elements, hence the weight is $5$.",
        "completion": "Let $a_1, \\ldots, a_n$ be an array of $n$ positive integers. In one operation, you can choose an index $i$ such that $a_i = i$, and remove $a_i$ from the array.\n\nThe weight of $a$ is defined as the maximum number of elements you can remove.\n\nYou must answer $q$ independent queries $(x, y)$: after replacing the $x$ first elements of $a$ and the $y$ last elements of $a$ by $n+1$, what would be the weight of $a$?\n\n\n-----Input-----\n\nThe first line contains two integers $n$ and $q$ ($1 \\le n, q \\le 3 \\cdot 10^5$) \u00a0\u2014 the length of the array and the number of queries.\n\nThe second line contains $n$ integers $a_1$, $a_2$, ..., $a_n$ ($1 \\leq a_i \\leq n$)\u00a0\u2014 elements of the array.\n\nThe $i$-th of the next $q$ lines contains two integers $x$ and $y$ ($x, y \\ge 0$ and $x+y < n$).\n\n\n-----Output-----\n\nPrint $q$ lines, $i$-th line should contain a single integer \u00a0\u2014 the answer to the $i$-th query.\n\n\n-----Examples-----\nInput\n13 5\n2 2 3 9 5 4 6 5 7 8 3 11 13\n3 1\n0 0\n2 4\n5 0\n0 12\n\nOutput\n5\n11\n6\n1\n0\n\nInput\n5 2\n1 4 1 2 4\n0 0\n1 0\n\nOutput\n2\n0\n\n"
    },
    {
        "prompt": "$n$ boys and $m$ girls came to the party. Each boy presented each girl some integer number of sweets (possibly zero). All boys are numbered with integers from $1$ to $n$ and all girls are numbered with integers from $1$ to $m$. For all $1 \\leq i \\leq n$ the minimal number of sweets, which $i$-th boy presented to some girl is equal to $b_i$ and for all $1 \\leq j \\leq m$ the maximal number of sweets, which $j$-th girl received from some boy is equal to $g_j$.\n\nMore formally, let $a_{i,j}$ be the number of sweets which the $i$-th boy give to the $j$-th girl. Then $b_i$ is equal exactly to the minimum among values $a_{i,1}, a_{i,2}, \\ldots, a_{i,m}$ and $g_j$ is equal exactly to the maximum among values $b_{1,j}, b_{2,j}, \\ldots, b_{n,j}$.\n\nYou are interested in the minimum total number of sweets that boys could present, so you need to minimize the sum of $a_{i,j}$ for all $(i,j)$ such that $1 \\leq i \\leq n$ and $1 \\leq j \\leq m$. You are given the numbers $b_1, \\ldots, b_n$ and $g_1, \\ldots, g_m$, determine this number. \n\n\n-----Input-----\n\nThe first line contains two integers $n$ and $m$, separated with space\u00a0\u2014 the number of boys and girls, respectively ($2 \\leq n, m \\leq 100\\,000$). The second line contains $n$ integers $b_1, \\ldots, b_n$, separated by spaces\u00a0\u2014 $b_i$ is equal to the minimal number of sweets, which $i$-th boy presented to some girl ($0 \\leq b_i \\leq 10^8$). The third line contains $m$ integers $g_1, \\ldots, g_m$, separated by spaces\u00a0\u2014 $g_j$ is equal to the maximal number of sweets, which $j$-th girl received from some boy ($0 \\leq g_j \\leq 10^8$).\n\n\n-----Output-----\n\nIf the described situation is impossible, print $-1$. In another case, print the minimal total number of sweets, which boys could have presented and all conditions could have satisfied.\n\n\n-----Examples-----\nInput\n3 2\n1 2 1\n3 4\n\nOutput\n12\nInput\n2 2\n0 1\n1 0\n\nOutput\n-1\nInput\n2 3\n1 0\n1 1 2\n\nOutput\n4\n\n\n-----Note-----\n\nIn the first test, the minimal total number of sweets, which boys could have presented is equal to $12$. This can be possible, for example, if the first boy presented $1$ and $4$ sweets, the second boy presented $3$ and $2$ sweets and the third boy presented $1$ and $1$ sweets for the first and the second girl, respectively. It's easy to see, that all conditions are satisfied and the total number of sweets is equal to $12$.\n\nIn the second test, the boys couldn't have presented sweets in such way, that all statements satisfied.\n\nIn the third test, the minimal total number of sweets, which boys could have presented is equal to $4$. This can be possible, for example, if the first boy presented $1$, $1$, $2$ sweets for the first, second, third girl, respectively and the second boy didn't present sweets for each girl. It's easy to see, that all conditions are satisfied and the total number of sweets is equal to $4$.",
        "completion": "$n$ boys and $m$ girls came to the party. Each boy presented each girl some integer number of sweets possibly zero. All boys are numbered with integers from $1$ to $n$ and all girls are numbered with integers from $1$ to $m$. For all $1 \\leq i \\leq n$ the minimal number of sweets, which $i$-th boy presented to some girl is equal to $b_i$ and for all $1 \\leq j \\leq m$ the maximal number of sweets, which $j$-th girl received from some boy is equal to $g_j$.\n\nLet $a_{i,j}$ be the number of sweets which the $i$-th boy gives to the $j$-th girl. Then $b_i$ is equal exactly to the minimum among values $a_{i,1}, a_{i,2}, \\ldots, a_{i,m}$ and $g_j$ is equal exactly to the maximum among values $b_{1,j}, b_{2,j}, \\ldots, b_{n,j}$.\n\nYou are interested in the minimum total number of sweets that boys could present. You are given the numbers $b_1, \\ldots, b_n$ and $g_1, \\ldots, g_m$, determine this number. \n\n\n-----Input-----\n\nThe first line contains two integers $n$ and $m$, separated with space\u00a0\u2014 the number of boys and girls, respectively ($2 \\leq n, m \\leq 100\\,000$). The second line contains $n$ integers $b_1, \\ldots, b_n$, separated by spaces\u00a0\u2014 $b_i$ is equal to the minimal number of sweets, which $i$-th boy presented to some girl ($0 \\leq b_i \\leq 10^8$). The third line contains $m$ integers $g_1, \\ldots, g_m$, separated by spaces\u00a0\u2014 $g_j$ is equal to the maximal number of sweets, which $j$-th girl received from some boy ($0 \\leq g_j \\leq 10^8$).\n\n\n-----Output-----\n\nIf the described situation is impossible, print $-1$. In another case, print the minimal total number of sweets, which boys could have presented and all conditions could have satisfied.\n\n\n-----Examples-----\nInput\n3 2\n1 2 1\n3 4\n\nOutput\n12\nInput\n2 2\n0 1\n1 0\n\nOutput\n-1\nInput\n2 3\n1 0\n1 1 2\n\nOutput\n4\n\n"
    },
    {
        "prompt": "Allen is hosting a formal dinner party. $2n$ people come to the event in $n$ pairs (couples). After a night of fun, Allen wants to line everyone up for a final picture. The $2n$ people line up, but Allen doesn't like the ordering. Allen prefers if each pair occupies adjacent positions in the line, as this makes the picture more aesthetic.\n\nHelp Allen find the minimum number of swaps of adjacent positions he must perform to make it so that each couple occupies adjacent positions in the line.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($1 \\le n \\le 100$), the number of pairs of people.\n\nThe second line contains $2n$ integers $a_1, a_2, \\dots, a_{2n}$. For each $i$ with $1 \\le i \\le n$, $i$ appears exactly twice. If $a_j = a_k = i$, that means that the $j$-th and $k$-th people in the line form a couple.\n\n\n-----Output-----\n\nOutput a single integer, representing the minimum number of adjacent swaps needed to line the people up so that each pair occupies adjacent positions.\n\n\n-----Examples-----\nInput\n4\n1 1 2 3 3 2 4 4\n\nOutput\n2\n\nInput\n3\n1 1 2 2 3 3\n\nOutput\n0\n\nInput\n3\n3 1 2 3 1 2\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the first sample case, we can transform $1 1 2 3 3 2 4 4 \\rightarrow 1 1 2 3 2 3 4 4 \\rightarrow 1 1 2 2 3 3 4 4$ in two steps. Note that the sequence $1 1 2 3 3 2 4 4 \\rightarrow 1 1 3 2 3 2 4 4 \\rightarrow 1 1 3 3 2 2 4 4$ also works in the same number of steps.\n\nThe second sample case already satisfies the constraints; therefore we need $0$ swaps.",
        "completion": "You are given $2n$ number of different items which are in $n$ pairs.\n\nLine up the $2n$ number of items in such a way that each pair occupies adjacent positions in the line.\n\nFind the minimum number of swaps of adjacent positions which must be performed to make it so that each item pair occupies adjacent positions in the line.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($1 \\le n \\le 100$), the number of pairs of different item.\n\nThe second line contains $2n$ integers $a_1, a_2, \\dots, a_{2n}$. For each $i$ with $1 \\le i \\le n$, $i$ appears exactly twice. If $a_j = a_k = i$, that means that the $j$-th and $k$-th itme in the line form a pair.\n\n\n-----Output-----\n\nOutput a single integer, representing the minimum number of adjacent swaps needed to line the item up so that each pair occupies adjacent positions.\n\n\n-----Examples-----\nInput\n4\n1 1 2 3 3 2 4 4\n\nOutput\n2\n\nInput\n3\n1 1 2 2 3 3\n\nOutput\n0\n\nInput\n3\n3 1 2 3 1 2\n\nOutput\n3\n"
    },
    {
        "prompt": "Limak is a little bear who loves to play. Today he is playing by destroying block towers. He built n towers in a row. The i-th tower is made of h_{i} identical blocks. For clarification see picture for the first sample.\n\nLimak will repeat the following operation till everything is destroyed.\n\nBlock is called internal if it has all four neighbors, i.e. it has each side (top, left, down and right) adjacent to other block or to the floor. Otherwise, block is boundary. In one operation Limak destroys all boundary blocks. His paws are very fast and he destroys all those blocks at the same time.\n\nLimak is ready to start. You task is to count how many operations will it take him to destroy all towers.\n\n\n-----Input-----\n\nThe first line contains single integer n (1 \u2264 n \u2264 10^5).\n\nThe second line contains n space-separated integers h_1, h_2, ..., h_{n} (1 \u2264 h_{i} \u2264 10^9) \u2014 sizes of towers.\n\n\n-----Output-----\n\nPrint the number of operations needed to destroy all towers.\n\n\n-----Examples-----\nInput\n6\n2 1 4 6 2 2\n\nOutput\n3\n\nInput\n7\n3 3 3 1 3 3 3\n\nOutput\n2\n\n\n\n-----Note-----\n\nThe picture below shows all three operations for the first sample test. Each time boundary blocks are marked with red color.  [Image]  After first operation there are four blocks left and only one remains after second operation. This last block is destroyed in third operation.",
        "completion": "There are n towers in a row. The i-th tower is made of h_{i} identical blocks. \n\nBlock is called internal if it has all four neighbors adjacent to other block or to the floor. Otherwise, block is boundary. In one operation you can destroy all boundary blocks.\n\nYou will repeat the following operation till everything is destroyed.\n\nCount how many operations you will take to destroy all towers.\n\n\n-----Input-----\n\nThe first line contains single integer n (1 \u2264 n \u2264 10^5).\n\nThe second line contains n space-separated integers h_1, h_2, ..., h_{n} (1 \u2264 h_{i} \u2264 10^9) \u2014 sizes of towers.\n\n\n-----Output-----\n\nPrint the number of operations needed to destroy all towers.\n\n\n-----Examples-----\nInput\n6\n2 1 4 6 2 2\n\nOutput\n3\n\nInput\n7\n3 3 3 1 3 3 3\n\nOutput\n2\n\n\n\n-----Note-----\n\nThe picture below shows all three operations for the first sample test. Each time boundary blocks are marked with red color.  [Image]  After first operation there are four blocks left and only one remains after second operation. This last block is destroyed in third operation."
    },
    {
        "prompt": "Recently, Pari and Arya did some research about NP-Hard problems and they found the minimum vertex cover problem very interesting.\n\nSuppose the graph G is given. Subset A of its vertices is called a vertex cover of this graph, if for each edge uv there is at least one endpoint of it in this set, i.e. $u \\in A$ or $v \\in A$ (or both).\n\nPari and Arya have won a great undirected graph as an award in a team contest. Now they have to split it in two parts, but both of them want their parts of the graph to be a vertex cover.\n\nThey have agreed to give you their graph and you need to find two disjoint subsets of its vertices A and B, such that both A and B are vertex cover or claim it's impossible. Each vertex should be given to no more than one of the friends (or you can even keep it for yourself).\n\n\n-----Input-----\n\nThe first line of the input contains two integers n and m (2 \u2264 n \u2264 100 000, 1 \u2264 m \u2264 100 000)\u00a0\u2014 the number of vertices and the number of edges in the prize graph, respectively.\n\nEach of the next m lines contains a pair of integers u_{i} and v_{i} (1  \u2264  u_{i},  v_{i}  \u2264  n), denoting an undirected edge between u_{i} and v_{i}. It's guaranteed the graph won't contain any self-loops or multiple edges.\n\n\n-----Output-----\n\nIf it's impossible to split the graph between Pari and Arya as they expect, print \"-1\" (without quotes).\n\nIf there are two disjoint sets of vertices, such that both sets are vertex cover, print their descriptions. Each description must contain two lines. The first line contains a single integer k denoting the number of vertices in that vertex cover, and the second line contains k integers\u00a0\u2014 the indices of vertices. Note that because of m \u2265 1, vertex cover cannot be empty.\n\n\n-----Examples-----\nInput\n4 2\n1 2\n2 3\n\nOutput\n1\n2 \n2\n1 3 \n\nInput\n3 3\n1 2\n2 3\n1 3\n\nOutput\n-1\n\n\n\n-----Note-----\n\nIn the first sample, you can give the vertex number 2 to Arya and vertices numbered 1 and 3 to Pari and keep vertex number 4 for yourself (or give it someone, if you wish).\n\nIn the second sample, there is no way to satisfy both Pari and Arya.",
        "completion": "You are given a graph with $n$ vertices and $m$ edges. Subset A of its vertices is called a vertex cover\nof this graph, if for each edge uv there is at least one endpoint of it in this\nset, i.e. $u \\in A$ or $v \\in A$ (or both).\n\nYou should find two disjoint subsets of its vertices A and B, such that both A and B are vertex covers or claim it's impossible.\n\nIn the first sample, you can give the vertex number 2 to A and vertices numbered 1 and 3 to B and leave vertex number 4 out (or give it to A or B).\nIn the second sample, there is no way for two disjoint sets to both be vertex covers.\n\n-----Input-----\n\nThe first line of the input contains two integers n and m (2 \u2264 n \u2264 100 000, 1 \u2264 m \u2264 100 000)\u00a0\u2014 the number of vertices and the number of edges in the graph, respectively.\n\nEach of the next m lines contains a pair of integers u_{i} and v_{i} (1  \u2264  u_{i},  v_{i}  \u2264  n), denoting an undirected edge between u_{i} and v_{i}. It's guaranteed the graph won't contain any self-loops or multiple edges.\n\n\n-----Output-----\n\nIf it's impossible to split the graph, print \"-1\" (without quotes).\n\nIf there are two disjoint sets of vertices, such that both sets are vertex cover, print their descriptions. Each description must contain two lines. The first line contains a single integer k denoting the number of vertices in that vertex cover, and the second line contains k integers\u00a0\u2014 the indices of vertices. Note that because of m \u2265 1, vertex cover cannot be empty.\n\n\n-----Examples-----\nInput\n4 2\n1 2\n2 3\n\nOutput\n1\n2 \n2\n1 3 \n\nInput\n3 3\n1 2\n2 3\n1 3\n\nOutput\n-1\n"
    },
    {
        "prompt": "Cengiz recently learned Fibonacci numbers and now he is studying different algorithms to find them. After getting bored of reading them, he came with his own new type of numbers that he named XORinacci numbers. He defined them as follows:   $f(0) = a$;  $f(1) = b$;  $f(n) = f(n-1) \\oplus f(n-2)$ when $n > 1$, where $\\oplus$ denotes the bitwise XOR operation. \n\nYou are given three integers $a$, $b$, and $n$, calculate $f(n)$.\n\nYou have to answer for $T$ independent test cases.\n\n\n-----Input-----\n\nThe input contains one or more independent test cases.\n\nThe first line of input contains a single integer $T$ ($1 \\le T \\le 10^3$), the number of test cases.\n\nEach of the $T$ following lines contains three space-separated integers $a$, $b$, and $n$ ($0 \\le a, b, n \\le 10^9$) respectively.\n\n\n-----Output-----\n\nFor each test case, output $f(n)$.\n\n\n-----Example-----\nInput\n3\n3 4 2\n4 5 0\n325 265 1231232\n\nOutput\n7\n4\n76\n\n\n\n-----Note-----\n\nIn the first example, $f(2) = f(0) \\oplus f(1) = 3 \\oplus 4 = 7$.",
        "completion": "$f(0) = a$;  $f(1) = b$;  $f(n) = f(n-1) \\oplus f(n-2)$ when $n > 1$, where $\\oplus$ denotes the bitwise XOR operation. \n\nYou are given three integers $a$, $b$, and $n$, calculate $f(n)$.\n\nYou have to answer for $T$ independent test cases.\n\n\n-----Input-----\n\nThe input contains one or more independent test cases.\n\nThe first line of input contains a single integer $T$ ($1 \\le T \\le 10^3$), the number of test cases.\n\nEach of the $T$ following lines contains three space-separated integers $a$, $b$, and $n$ ($0 \\le a, b, n \\le 10^9$) respectively.\n\n\n-----Output-----\n\nFor each test case, output $f(n)$.\n\n\n-----Example-----\nInput\n3\n3 4 2\n4 5 0\n325 265 1231232\n\nOutput\n7\n4\n76\n"
    },
    {
        "prompt": "It is known that there are k fish species in the polar ocean, numbered from 1 to k. They are sorted by non-decreasing order of their weight, which is a positive number. Let the weight of the i-th type of fish be w_{i}, then 0 < w_1 \u2264 w_2 \u2264 ... \u2264 w_{k} holds.\n\nPolar bears Alice and Bob each have caught some fish, and they are guessing who has the larger sum of weight of the fish he/she's caught. Given the type of the fish they've caught, determine whether it is possible that the fish caught by Alice has a strictly larger total weight than Bob's. In other words, does there exist a sequence of weights w_{i} (not necessary integers), such that the fish caught by Alice has a strictly larger total weight?\n\n\n-----Input-----\n\nThe first line contains three integers n, m, k (1 \u2264 n, m \u2264 10^5, 1 \u2264 k \u2264 10^9) \u2014 the number of fish caught by Alice and Bob respectively, and the number of fish species.\n\nThe second line contains n integers each from 1 to k, the list of fish type caught by Alice. The third line contains m integers each from 1 to k, the list of fish type caught by Bob.\n\nNote that one may have caught more than one fish for a same species.\n\n\n-----Output-----\n\nOutput \"YES\" (without quotes) if it is possible, and \"NO\" (without quotes) otherwise.\n\n\n-----Examples-----\nInput\n3 3 3\n2 2 2\n1 1 3\n\nOutput\nYES\n\nInput\n4 7 9\n5 2 7 3\n3 5 2 7 3 8 7\n\nOutput\nNO\n\n\n\n-----Note-----\n\nIn the first sample, if w_1 = 1, w_2 = 2, w_3 = 2.5,  then Alice has a total of 2 + 2 + 2 = 6 weight units, while Bob only has 1 + 1 + 2.5 = 4.5.\n\nIn the second sample, the fish that Alice caught is a subset of Bob's. Therefore, the total weight of Bob\u2019s fish is always not less than the total weight of Alice\u2019s fish.",
        "completion": "It is known that there are k fish species in the polar ocean, numbered from 1 to k. They are sorted by non-decreasing order of their weight, which is a positive number. Let the weight of the i-th type of fish be w_{i}, then 0 < w_1 \u2264 w_2 \u2264 ... \u2264 w_{k} holds.\n\nDetermine whether it is possible that the fish caught by Alice has a strictly larger total weight than Bob's. In other words, does there exist a sequence of weights w_{i} (not necessary integers), such that the fish caught by Alice has a strictly larger total weight?\n\n\n-----Input-----\n\nThe first line contains three integers n, m, k (1 \u2264 n, m \u2264 10^5, 1 \u2264 k \u2264 10^9) \u2014 the number of fish caught by Alice and Bob respectively, and the number of fish species.\n\nThe second line contains n integers each from 1 to k, the list of fish type caught by Alice. The third line contains m integers each from 1 to k, the list of fish type caught by Bob.\n\nNote that one may have caught more than one fish for a same species.\n\n\n-----Output-----\n\nOutput \"YES\" (without quotes) if it is possible, and \"NO\" (without quotes) otherwise.\n\n\n-----Examples-----\nInput\n3 3 3\n2 2 2\n1 1 3\n\nOutput\nYES\n\nInput\n4 7 9\n5 2 7 3\n3 5 2 7 3 8 7\n\nOutput\nNO\n"
    },
    {
        "prompt": "A tree is a graph with n vertices and exactly n - 1 edges; this graph should meet the following condition: there exists exactly one shortest (by number of edges) path between any pair of its vertices.\n\nA subtree of a tree T is a tree with both vertices and edges as subsets of vertices and edges of T.\n\nYou're given a tree with n vertices. Consider its vertices numbered with integers from 1 to n. Additionally an integer is written on every vertex of this tree. Initially the integer written on the i-th vertex is equal to v_{i}. In one move you can apply the following operation:  Select the subtree of the given tree that includes the vertex with number 1.  Increase (or decrease) by one all the integers which are written on the vertices of that subtree. \n\nCalculate the minimum number of moves that is required to make all the integers written on the vertices of the given tree equal to zero.\n\n\n-----Input-----\n\nThe first line of the input contains n (1 \u2264 n \u2264 10^5). Each of the next n - 1 lines contains two integers a_{i} and b_{i} (1 \u2264 a_{i}, b_{i} \u2264 n;\u00a0a_{i} \u2260 b_{i}) indicating there's an edge between vertices a_{i} and b_{i}. It's guaranteed that the input graph is a tree. \n\nThe last line of the input contains a list of n space-separated integers v_1, v_2, ..., v_{n} (|v_{i}| \u2264 10^9).\n\n\n-----Output-----\n\nPrint the minimum number of operations needed to solve the task.\n\nPlease, do not write the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\n\n-----Examples-----\nInput\n3\n1 2\n1 3\n1 -1 1\n\nOutput\n3",
        "completion": "You're given a tree with n vertices numbered with integers from 1 to n. Additionally an integer is written on every vertex of this tree. Initially the integer written on the i-th vertex is equal to v_{i}. In one move you can apply the following operation:  Select the subtree of the given tree that includes the vertex with number 1.  Increase or decrease by one all the integers which are written on the vertices of that subtree. \n\nCalculate the minimum number of moves that is required to make all the integers written on the vertices of the given tree equal to zero.\n\n\n-----Input-----\n\nThe first line of the input contains n (1 \u2264 n \u2264 10^5). Each of the next n - 1 lines contains two integers a_{i} and b_{i} (1 \u2264 a_{i}, b_{i} \u2264 n;\u00a0a_{i} \u2260 b_{i}) indicating there's an edge between vertices a_{i} and b_{i}. It's guaranteed that the input graph is a tree. \n\nThe last line of the input contains a list of n space-separated integers v_1, v_2, ..., v_{n} (|v_{i}| \u2264 10^9).\n\n\n-----Output-----\n\nPrint the minimum number of operations needed to solve the task.\n\nPlease, do not write the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\n\n-----Examples-----\nInput\n3\n1 2\n1 3\n1 -1 1\n\nOutput\n3"
    },
    {
        "prompt": "A rectangle with sides $A$ and $B$ is cut into rectangles with cuts parallel to its sides. For example, if $p$ horizontal and $q$ vertical cuts were made, $(p + 1) \\cdot (q + 1)$ rectangles were left after the cutting. After the cutting, rectangles were of $n$ different types. Two rectangles are different if at least one side of one rectangle isn't equal to the corresponding side of the other. Note that the rectangle can't be rotated, this means that rectangles $a \\times b$ and $b \\times a$ are considered different if $a \\neq b$.\n\nFor each type of rectangles, lengths of the sides of rectangles are given along with the amount of the rectangles of this type that were left after cutting the initial rectangle.\n\nCalculate the amount of pairs $(A; B)$ such as the given rectangles could be created by cutting the rectangle with sides of lengths $A$ and $B$. Note that pairs $(A; B)$ and $(B; A)$ are considered different when $A \\neq B$.\n\n\n-----Input-----\n\nThe first line consists of a single integer $n$ ($1 \\leq n \\leq 2 \\cdot 10^{5}$)\u00a0\u2014 amount of different types of rectangles left after cutting the initial rectangle.\n\nThe next $n$ lines each consist of three integers $w_{i}, h_{i}, c_{i}$ $(1 \\leq w_{i}, h_{i}, c_{i} \\leq 10^{12})$\u00a0\u2014 the lengths of the sides of the rectangles of this type and the amount of the rectangles of this type.\n\nIt is guaranteed that the rectangles of the different types are different.\n\n\n-----Output-----\n\nOutput one integer\u00a0\u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n1\n1 1 9\n\nOutput\n3\n\nInput\n2\n2 3 20\n2 4 40\n\nOutput\n6\n\nInput\n2\n1 2 5\n2 3 5\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first sample there are three suitable pairs: $(1; 9)$, $(3; 3)$ and $(9; 1)$.\n\nIn the second sample case there are 6 suitable pairs: $(2; 220)$, $(4; 110)$, $(8; 55)$, $(10; 44)$, $(20; 22)$ and $(40; 11)$.\n\nHere the sample of cut for $(20; 22)$.\n\n [Image] \n\nThe third sample has no suitable pairs.",
        "completion": "A rectangle with sides $A$ and $B$ is cut into rectangles with cuts parallel to its sides.\n\nFor each type of rectangles, lengths of the sides of rectangles are given along with the amount of the rectangles of this type that were left after cutting the initial rectangle.\n\nCalculate the amount of pairs $(A; B)$ such as the given rectangles could be created by cutting the rectangle with sides of lengths $A$ and $B$. Pairs $(A; B)$ and $(B; A)$ are considered different when $A \\neq B$.\n\n\n-----Input-----\n\nThe first line consists of a single integer $n$ ($1 \\leq n \\leq 2 \\cdot 10^{5}$)\u00a0\u2014 amount of different types of rectangles left after cutting the initial rectangle.\n\nThe next $n$ lines each consist of three integers $w_{i}, h_{i}, c_{i}$ $(1 \\leq w_{i}, h_{i}, c_{i} \\leq 10^{12})$\u00a0\u2014 the lengths of the sides of the rectangles of this type and the amount of the rectangles of this type.\n\nIt is guaranteed that the rectangles of the different types are different.\n\n\n-----Output-----\n\nOutput one integer\u00a0\u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n1\n1 1 9\n\nOutput\n3\n\nInput\n2\n2 3 20\n2 4 40\n\nOutput\n6\n\nInput\n2\n1 2 5\n2 3 5\n\nOutput\n0\n\n"
    },
    {
        "prompt": "Arkady needs your help again! This time he decided to build his own high-speed Internet exchange point. It should consist of n nodes connected with minimum possible number of wires into one network (a wire directly connects two nodes). Exactly k of the nodes should be exit-nodes, that means that each of them should be connected to exactly one other node of the network, while all other nodes should be connected to at least two nodes in order to increase the system stability.\n\nArkady wants to make the system as fast as possible, so he wants to minimize the maximum distance between two exit-nodes. The distance between two nodes is the number of wires a package needs to go through between those two nodes.\n\nHelp Arkady to find such a way to build the network that the distance between the two most distant exit-nodes is as small as possible.\n\n\n-----Input-----\n\nThe first line contains two integers n and k (3 \u2264 n \u2264 2\u00b710^5, 2 \u2264 k \u2264 n - 1)\u00a0\u2014 the total number of nodes and the number of exit-nodes.\n\nNote that it is always possible to build at least one network with n nodes and k exit-nodes within the given constraints.\n\n\n-----Output-----\n\nIn the first line print the minimum possible distance between the two most distant exit-nodes. In each of the next n - 1 lines print two integers: the ids of the nodes connected by a wire. The description of each wire should be printed exactly once. You can print wires and wires' ends in arbitrary order. The nodes should be numbered from 1 to n. Exit-nodes can have any ids.\n\nIf there are multiple answers, print any of them.\n\n\n-----Examples-----\nInput\n3 2\n\nOutput\n2\n1 2\n2 3\n\nInput\n5 3\n\nOutput\n3\n1 2\n2 3\n3 4\n3 5\n\n\n\n-----Note-----\n\nIn the first example the only network is shown on the left picture.\n\nIn the second example one of optimal networks is shown on the right picture.\n\nExit-nodes are highlighted. [Image]",
        "completion": "You want to build your own high-speed Internet exchange point. It should consist of n nodes connected with minimum possible number of wires into one network. Exactly k of the nodes should be exit-nodes, that means that each of them should be connected to exactly one other node of the network, while all other nodes should be connected to at least two nodes in order to increase the system stability.\n\nYou want to make the system as fast as possible, so minimize the maximum distance between two exit-nodes. The distance between two nodes is the number of wires a package needs to go through between those two nodes.\n\nFind such a way to build the network that the distance between the two most distant exit-nodes is as small as possible.\n\n\n-----Input-----\n\nThe first line contains two integers n and k (3 \u2264 n \u2264 2\u00b710^5, 2 \u2264 k \u2264 n - 1)\u00a0\u2014 the total number of nodes and the number of exit-nodes.\n\nNote that it is always possible to build at least one network with n nodes and k exit-nodes within the given constraints.\n\n\n-----Output-----\n\nIn the first line print the minimum possible distance between the two most distant exit-nodes. In each of the next n - 1 lines print two integers: the ids of the nodes connected by a wire. The description of each wire should be printed exactly once. You can print wires and wires' ends in arbitrary order. The nodes should be numbered from 1 to n. Exit-nodes can have any ids.\n\nIf there are multiple answers, print any of them.\n\n\n-----Examples-----\nInput\n3 2\n\nOutput\n2\n1 2\n2 3\n\nInput\n5 3\n\nOutput\n3\n1 2\n2 3\n3 4\n3 5\n\n"
    },
    {
        "prompt": "This is an easier version of the next problem. The difference is only in constraints.\n\nYou are given a rectangular $n \\times m$ matrix $a$. In one move you can choose any column and cyclically shift elements in this column. You can perform this operation as many times as you want (possibly zero). You can perform this operation to a column multiple times.\n\nAfter you are done with cyclical shifts, you compute for every row the maximal value in it. Suppose that for $i$-th row it is equal $r_i$. What is the maximal possible value of $r_1+r_2+\\ldots+r_n$?\n\n\n-----Input-----\n\nThe first line contains an integer $t$ ($1 \\le t \\le 40$), the number of test cases in the input.\n\nThe first line of each test case contains integers $n$ and $m$ ($1 \\le n \\le 4$, $1 \\le m \\le 100$) \u2014 the number of rows and the number of columns in the given matrix $a$. \n\nEach of the following $n$ lines contains $m$ integers, the elements of $a$ ($1 \\le a_{i, j} \\le 10^5$).\n\n\n-----Output-----\n\nPrint $t$ integers: answers for all test cases in the order they are given in the input.\n\n\n-----Example-----\nInput\n2\n2 3\n2 5 7\n4 2 4\n3 6\n4 1 5 2 10 4\n8 6 6 4 9 10\n5 4 9 5 8 7\n\nOutput\n12\n29\n\n\n\n-----Note-----\n\nIn the first test case, you can shift the third column down by one, this way there will be $r_1 = 5$ and $r_2 = 7$.\n\nIn the second case you can don't rotate anything at all, this way there will be $r_1 = r_2 = 10$ and $r_3 = 9$.",
        "completion": "You are given a rectangular $n \\times m$ matrix $a$. In one move you can choose any column and cyclically shift elements in this column. You can perform this operation as many times as you want possibly zero.\n\nAfter you are done with cyclical shifts, you compute for every row the maximal value in it. Suppose that for $i$-th row it is equal $r_i$. What is the maximal possible value of $r_1+r_2+\\ldots+r_n$?\n\n\n-----Input-----\n\nThe first line contains an integer $t$ ($1 \\le t \\le 40$), the number of test cases in the input.\n\nThe first line of each test case contains integers $n$ and $m$ ($1 \\le n \\le 4$, $1 \\le m \\le 100$) \u2014 the number of rows and the number of columns in the given matrix $a$. \n\nEach of the following $n$ lines contains $m$ integers, the elements of $a$ ($1 \\le a_{i, j} \\le 10^5$).\n\n\n-----Output-----\n\nPrint $t$ integers: answers for all test cases in the order they are given in the input.\n\n\n-----Example-----\nInput\n2\n2 3\n2 5 7\n4 2 4\n3 6\n4 1 5 2 10 4\n8 6 6 4 9 10\n5 4 9 5 8 7\n\nOutput\n12\n29\n"
    },
    {
        "prompt": "Genos recently installed the game Zuma on his phone. In Zuma there exists a line of n gemstones, the i-th of which has color c_{i}. The goal of the game is to destroy all the gemstones in the line as quickly as possible.\n\nIn one second, Genos is able to choose exactly one continuous substring of colored gemstones that is a palindrome and remove it from the line. After the substring is removed, the remaining gemstones shift to form a solid line again. What is the minimum number of seconds needed to destroy the entire line?\n\nLet us remind, that the string (or substring) is called palindrome, if it reads same backwards or forward. In our case this means the color of the first gemstone is equal to the color of the last one, the color of the second gemstone is equal to the color of the next to last and so on.\n\n\n-----Input-----\n\nThe first line of input contains a single integer n (1 \u2264 n \u2264 500)\u00a0\u2014 the number of gemstones.\n\nThe second line contains n space-separated integers, the i-th of which is c_{i} (1 \u2264 c_{i} \u2264 n)\u00a0\u2014 the color of the i-th gemstone in a line.\n\n\n-----Output-----\n\nPrint a single integer\u00a0\u2014 the minimum number of seconds needed to destroy the entire line.\n\n\n-----Examples-----\nInput\n3\n1 2 1\n\nOutput\n1\n\nInput\n3\n1 2 3\n\nOutput\n3\n\nInput\n7\n1 4 4 2 3 2 1\n\nOutput\n2\n\n\n\n-----Note-----\n\nIn the first sample, Genos can destroy the entire line in one second.\n\nIn the second sample, Genos can only destroy one gemstone at a time, so destroying three gemstones takes three seconds.\n\nIn the third sample, to achieve the optimal time of two seconds, destroy palindrome 4 4 first and then destroy palindrome 1 2 3 2 1.",
        "completion": "You are given a line of n gemstones, the i-th of which has color c_{i}. The goal is to destroy all the gemstones in the line as quickly as possible.\n\nIn one second, exactly one continuous substring of colored gemstones is chosen that is a palindrome and remove it from the line. After the substring is removed, the remaining gemstones shift to form a solid line again. What is the minimum number of seconds needed to destroy the entire line?\n\nThe color of the first gemstone is equal to the color of the last one, the color of the second gemstone is equal to the color of the next to last and so on.\n\n\n-----Input-----\n\nThe first line of input contains a single integer n (1 \u2264 n \u2264 500)\u00a0\u2014 the number of gemstones.\n\nThe second line contains n space-separated integers, the i-th of which is c_{i} (1 \u2264 c_{i} \u2264 n)\u00a0\u2014 the color of the i-th gemstone in a line.\n\n\n-----Output-----\n\nPrint a single integer\u00a0\u2014 the minimum number of seconds needed to destroy the entire line.\n\n\n-----Examples-----\nInput\n3\n1 2 1\n\nOutput\n1\n\nInput\n3\n1 2 3\n\nOutput\n3\n\nInput\n7\n1 4 4 2 3 2 1\n\nOutput\n2\n"
    },
    {
        "prompt": "We have a permutation of the integers from 1 through N, p_1, p_2, .., p_N.\nWe also have M pairs of two integers between 1 and N (inclusive), represented as (x_1,y_1), (x_2,y_2), .., (x_M,y_M).\nAtCoDeer the deer is going to perform the following operation on p as many times as desired so that the number of i (1 \u2264 i \u2264 N) such that p_i = i is maximized:\n - Choose j such that 1 \u2264 j \u2264 M, and swap p_{x_j} and p_{y_j}.\nFind the maximum possible number of i such that p_i = i after operations.\n\n-----Constraints-----\n - 2 \u2264 N \u2264 10^5\n - 1 \u2264 M \u2264 10^5\n - p is a permutation of integers from 1 through N.\n - 1 \u2264 x_j,y_j \u2264 N\n - x_j \u2260 y_j\n - If i \u2260 j, \\{x_i,y_i\\} \u2260 \\{x_j,y_j\\}.\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN M\np_1 p_2 .. p_N\nx_1 y_1\nx_2 y_2\n:\nx_M y_M\n\n-----Output-----\nPrint the maximum possible number of i such that p_i = i after operations.\n\n-----Sample Input-----\n5 2\n5 3 1 4 2\n1 3\n5 4\n\n-----Sample Output-----\n2\n\nIf we perform the operation by choosing j=1, p becomes 1 3 5 4 2, which is optimal, so the answer is 2.",
        "completion": "You have a permutation of the integers from 1 through N, p_1, p_2, .., p_N.\nYou also have M pairs of two integers between 1 and N (inclusive), represented as (x_1,y_1), (x_2,y_2), .., (x_M,y_M).\nYou are going to perform the following operation on p as many times as desired so that the number of i (1 \u2264 i \u2264 N) such that p_i = i is maximized:\n - Choose j such that 1 \u2264 j \u2264 M, and swap p_{x_j} and p_{y_j}.\nFind the maximum possible number of i such that p_i = i after operations.\n\n-----Constraints-----\n - 2 \u2264 N \u2264 10^5\n - 1 \u2264 M \u2264 10^5\n - p is a permutation of integers from 1 through N.\n - 1 \u2264 x_j,y_j \u2264 N\n - x_j \u2260 y_j\n - If i \u2260 j, \\{x_i,y_i\\} \u2260 \\{x_j,y_j\\}.\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN M\np_1 p_2 .. p_N\nx_1 y_1\nx_2 y_2\n:\nx_M y_M\n\n-----Output-----\nPrint the maximum possible number of i such that p_i = i after operations.\n\n-----Sample Input-----\n5 2\n5 3 1 4 2\n1 3\n5 4\n\n-----Sample Output-----\n2\n"
    },
    {
        "prompt": "You are given a sequence of $n$ digits $d_1d_2 \\dots d_{n}$. You need to paint all the digits in two colors so that:  each digit is painted either in the color $1$ or in the color $2$;  if you write in a row from left to right all the digits painted in the color $1$, and then after them all the digits painted in the color $2$, then the resulting sequence of $n$ digits will be non-decreasing (that is, each next digit will be greater than or equal to the previous digit). \n\nFor example, for the sequence $d=914$ the only valid coloring is $211$ (paint in the color $1$ two last digits, paint in the color $2$ the first digit). But $122$ is not a valid coloring ($9$ concatenated with $14$ is not a non-decreasing sequence).\n\nIt is allowed that either of the two colors is not used at all. Digits painted in the same color are not required to have consecutive positions.\n\nFind any of the valid ways to paint the given sequence of digits or determine that it is impossible to do.\n\n\n-----Input-----\n\nThe first line contains a single integer $t$ ($1 \\le t \\le 10000$) \u2014 the number of test cases in the input.\n\nThe first line of each test case contains an integer $n$ ($1 \\le n \\le 2\\cdot10^5$) \u2014 the length of a given sequence of digits.\n\nThe next line contains a sequence of $n$ digits $d_1d_2 \\dots d_{n}$ ($0 \\le d_i \\le 9$). The digits are written in a row without spaces or any other separators. The sequence can start with 0.\n\nIt is guaranteed that the sum of the values \u200b\u200bof $n$ for all test cases in the input does not exceed $2\\cdot10^5$.\n\n\n-----Output-----\n\nPrint $t$ lines \u2014 the answers to each of the test cases in the input.\n\nIf there is a solution for a test case, the corresponding output line should contain any of the valid colorings written as a string of $n$ digits $t_1t_2 \\dots t_n$ ($1 \\le t_i \\le 2$), where $t_i$ is the color the $i$-th digit is painted in. If there are several feasible solutions, print any of them.\n\nIf there is no solution, then the corresponding output line should contain a single character '-' (the minus sign).\n\n\n-----Example-----\nInput\n5\n12\n040425524644\n1\n0\n9\n123456789\n2\n98\n3\n987\n\nOutput\n121212211211\n1\n222222222\n21\n-\n\n\n\n-----Note-----\n\nIn the first test case, $d=040425524644$. The output $t=121212211211$ is correct because $0022444$ (painted in $1$) concatenated with $44556$ (painted in $2$) is $002244444556$ which is a sorted sequence of $n$ given digits.",
        "completion": "You are given a sequence of $n$ digits $d_1d_2 \\dots d_{n}$. You need to paint all the digits in two colors so that:  each digit is painted either in the color $1$ or in the color $2$;  if you write in a row from left to right all the digits painted in the color $1$, and then after them all the digits painted in the color $2$, then the resulting sequence of $n$ digits will be non-decreasing. \n\nIt is allowed that either of the two colors is not used at all. Digits painted in the same color are not required to have consecutive positions.\n\nFind any of the valid ways to paint the given sequence of digits or determine that it is impossible to do.\n\n\n-----Input-----\n\nThe first line contains a single integer $t$ ($1 \\le t \\le 10000$) \u2014 the number of test cases in the input.\n\nThe first line of each test case contains an integer $n$ ($1 \\le n \\le 2\\cdot10^5$) \u2014 the length of a given sequence of digits.\n\nThe next line contains a sequence of $n$ digits $d_1d_2 \\dots d_{n}$ ($0 \\le d_i \\le 9$). The digits are written in a row without spaces or any other separators. The sequence can start with 0.\n\nIt is guaranteed that the sum of the values \u200b\u200bof $n$ for all test cases in the input does not exceed $2\\cdot10^5$.\n\n\n-----Output-----\n\nPrint $t$ lines \u2014 the answers to each of the test cases in the input.\n\nIf there is a solution for a test case, the corresponding output line should contain any of the valid colorings written as a string of $n$ digits $t_1t_2 \\dots t_n$ ($1 \\le t_i \\le 2$), where $t_i$ is the color the $i$-th digit is painted in. If there are several feasible solutions, print any of them.\n\nIf there is no solution, then the corresponding output line should contain a single character '-' (the minus sign).\n\n\n-----Example-----\nInput\n5\n12\n040425524644\n1\n0\n9\n123456789\n2\n98\n3\n987\n\nOutput\n121212211211\n1\n222222222\n21\n-\n\n"
    },
    {
        "prompt": "Dima is a beginner programmer. During his working process, he regularly has to repeat the following operation again and again: to remove every second element from the array. One day he has been bored with easy solutions of this problem, and he has come up with the following extravagant algorithm.\n\nLet's consider that initially array contains n numbers from 1 to n and the number i is located in the cell with the index 2i - 1 (Indices are numbered starting from one) and other cells of the array are empty. Each step Dima selects a non-empty array cell with the maximum index and moves the number written in it to the nearest empty cell to the left of the selected one. The process continues until all n numbers will appear in the first n cells of the array. For example if n = 4, the array is changing as follows: [Image] \n\nYou have to write a program that allows you to determine what number will be in the cell with index x (1 \u2264 x \u2264 n) after Dima's algorithm finishes.\n\n\n-----Input-----\n\nThe first line contains two integers n and q (1 \u2264 n \u2264 10^18, 1 \u2264 q \u2264 200 000), the number of elements in the array and the number of queries for which it is needed to find the answer.\n\nNext q lines contain integers x_{i} (1 \u2264 x_{i} \u2264 n), the indices of cells for which it is necessary to output their content after Dima's algorithm finishes.\n\n\n-----Output-----\n\nFor each of q queries output one integer number, the value that will appear in the corresponding array cell after Dima's algorithm finishes.\n\n\n-----Examples-----\nInput\n4 3\n2\n3\n4\n\nOutput\n3\n2\n4\n\nInput\n13 4\n10\n5\n4\n8\n\nOutput\n13\n3\n8\n9\n\n\n\n-----Note-----\n\nThe first example is shown in the picture.\n\nIn the second example the final array is [1, 12, 2, 8, 3, 11, 4, 9, 5, 13, 6, 10, 7].",
        "completion": "You are given an array consisting of n numbers from 1 to n and the number i is located in the cell with the index 2i - 1 (Indices are numbered starting from one) and other cells of the array are empty. Each step you selects a non-empty array cell with the maximum index and moves the number written in it to the nearest empty cell to the left of the selected one. The process continues until all n numbers will appear in the first n cells of the array. For example if n = 4, the array is changing as follows: [Image] \n\nYou have to write a program that allows you to determine what number will be in the cell with index x (1 \u2264 x \u2264 n) after your algorithm finishes.\n\nsummary : \n\n\n\n-----Input-----\n\nThe first line contains two integers n and q (1 \u2264 n \u2264 10^18, 1 \u2264 q \u2264 200 000), the number of elements in the array and the number of queries for which it is needed to find the answer.\n\nNext q lines contain integers x_{i} (1 \u2264 x_{i} \u2264 n), the indices of cells for which it is necessary to output their content after your algorithm finishes.\n\n\n-----Output-----\n\nFor each of q queries output one integer number, the value that will appear in the corresponding array cell after your algorithm finishes.\n\n\n-----Examples-----\nInput\n4 3\n2\n3\n4\n\nOutput\n3\n2\n4\n\nInput\n13 4\n10\n5\n4\n8\n\nOutput\n13\n3\n8\n9\n\n\n\n-----Note-----\n\nThe first example is shown in the picture.\n\nIn the second example the final array is [1, 12, 2, 8, 3, 11, 4, 9, 5, 13, 6, 10, 7].\n"
    },
    {
        "prompt": "Eighth-grader Vova is on duty today in the class. After classes, he went into the office to wash the board, and found on it the number n. He asked what is this number and the teacher of mathematics Inna Petrovna answered Vova that n is the answer to the arithmetic task for first-graders. In the textbook, a certain positive integer x was given. The task was to add x to the sum of the digits of the number x written in decimal numeral system.\n\nSince the number n on the board was small, Vova quickly guessed which x could be in the textbook. Now he wants to get a program which will search for arbitrary values of the number n for all suitable values of x or determine that such x does not exist. Write such a program for Vova.\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 10^9).\n\n\n-----Output-----\n\nIn the first line print one integer k\u00a0\u2014 number of different values of x satisfying the condition. \n\nIn next k lines print these values in ascending order.\n\n\n-----Examples-----\nInput\n21\n\nOutput\n1\n15\n\nInput\n20\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first test case x = 15 there is only one variant: 15 + 1 + 5 = 21.\n\nIn the second test case there are no such x.",
        "completion": "\nGiven a number n, find how many numbers x and the numbers whose arithmentic sum of their digits with themselves will give the number n itself. If there is no number possible print 0.\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 10^9).\n\n\n-----Output-----\n\nIn the first line print one integer k\u00a0\u2014 number of different values of x satisfying the condition. \n\nIn next k lines print these values in ascending order.\n\n\n-----Examples-----\nInput\n21\n\nOutput\n1\n15\n\nInput\n20\n\nOutput\n0\n\n\n\n"
    },
    {
        "prompt": "You are given integer $n$. You have to arrange numbers from $1$ to $2n$, using each of them exactly once, on the circle, so that the following condition would be satisfied:\n\nFor every $n$ consecutive numbers on the circle write their sum on the blackboard. Then any two of written on the blackboard $2n$ numbers differ not more than by $1$.\n\nFor example, choose $n = 3$. On the left you can see an example of a valid arrangement: $1 + 4 + 5 = 10$, $4 + 5 + 2 = 11$, $5 + 2 + 3 = 10$, $2 + 3 + 6 = 11$, $3 + 6 + 1 = 10$, $6 + 1 + 4 = 11$, any two numbers differ by at most $1$. On the right you can see an invalid arrangement: for example, $5 + 1 + 6 = 12$, and $3 + 2 + 4 = 9$, $9$ and $12$ differ more than by $1$.\n\n [Image] \n\n\n-----Input-----\n\nThe first and the only line contain one integer $n$ ($1 \\le n \\le 10^5$).\n\n\n-----Output-----\n\nIf there is no solution, output \"NO\" in the first line. \n\nIf there is a solution, output \"YES\" in the first line. In the second line output $2n$ numbers\u00a0\u2014 numbers from $1$ to $2n$ in the order they will stay in the circle. Each number should appear only once. If there are several solutions, you can output any of them.\n\n\n-----Examples-----\nInput\n3\n\nOutput\nYES\n1 4 5 2 3 6 \nInput\n4\n\nOutput\nNO\n\n\n-----Note-----\n\nExample from the statement is shown for the first example. \n\nIt can be proved that there is no solution in the second example.",
        "completion": "You are given integer $n$. You have to arrange numbers from $1$ to $2n$, using each of them exactly once, on the circle, so that the following condition would be satisfied:\n\nFor every $n$ consecutive numbers on the circle write their sum on the blackboard. Then any two of written on the blackboard $2n$ numbers differ not more than by $1$.\n\n\n-----Input-----\n\nThe first and the only line contain one integer $n$ ($1 \\le n \\le 10^5$).\n\n\n-----Output-----\n\nIf there is no solution, output \"NO\" in the first line. \n\nIf there is a solution, output \"YES\" in the first line. In the second line output $2n$ numbers\u00a0\u2014 numbers from $1$ to $2n$ in the order they will stay in the circle. Each number should appear only once. If there are several solutions, you can output any of them.\n\n\n-----Examples-----\nInput\n3\n\nOutput\nYES\n1 4 5 2 3 6 \nInput\n4\n\nOutput\nNO\n\n"
    },
    {
        "prompt": "Haiku is a short form of Japanese poetry. A Haiku consists of three phrases with 5, 7 and 5 syllables, in this order.\nIroha is looking for X,Y,Z-Haiku (defined below) in integer sequences.\nConsider all integer sequences of length N whose elements are between 1 and 10, inclusive. Out of those 10^N sequences, how many contain an X,Y,Z-Haiku?\nHere, an integer sequence a_0, a_1, ..., a_{N-1} is said to contain an X,Y,Z-Haiku if and only if there exist four indices x, y, z, w (0 \u2266 x < y < z < w \u2266 N) such that all of the following are satisfied:\n - a_x + a_{x+1} + ... + a_{y-1} = X\n - a_y + a_{y+1} + ... + a_{z-1} = Y\n - a_z + a_{z+1} + ... + a_{w-1} = Z\nSince the answer can be extremely large, print the number modulo 10^9+7.\n\n-----Constraints-----\n - 3 \u2266 N \u2266 40\n - 1 \u2266 X \u2266 5\n - 1 \u2266 Y \u2266 7\n - 1 \u2266 Z \u2266 5\n\n-----Input-----\nThe input is given from Standard Input in the following format:\nN X Y Z\n\n-----Output-----\nPrint the number of the sequences that contain an X,Y,Z-Haiku, modulo 10^9+7.\n\n-----Sample Input-----\n3 5 7 5\n\n-----Sample Output-----\n1\n\nHere, the only sequence that contains a 5,7,5-Haiku is [5, 7, 5].",
        "completion": "Consider all integer sequences of length N whose elements are between 1 and 10, inclusive. Out of those 10^N sequences, how many contain an X,Y,Z-Haiku?\nHere, an integer sequence a_0, a_1, ..., a_{N-1} is said to contain an X,Y,Z-Haiku if and only if there exist four indices x, y, z, w (0 \u2266 x < y < z < w \u2266 N) such that all of the following are satisfied:\n - a_x + a_{x+1} + ... + a_{y-1} = X\n - a_y + a_{y+1} + ... + a_{z-1} = Y\n - a_z + a_{z+1} + ... + a_{w-1} = Z\nPrint the answer modulo 10^9+7.\n\n-----Constraints-----\n - 3 \u2266 N \u2266 40\n - 1 \u2266 X \u2266 5\n - 1 \u2266 Y \u2266 7\n - 1 \u2266 Z \u2266 5\n\n-----Input-----\nThe input is given from Standard Input in the following format:\nN X Y Z\n\n-----Output-----\nPrint the number of the sequences that contain an X,Y,Z-Haiku, modulo 10^9+7.\n\n-----Sample Input-----\n3 5 7 5\n\n-----Sample Output-----\n1\n"
    },
    {
        "prompt": "Oleg's favorite subjects are History and Math, and his favorite branch of mathematics is division.\n\nTo improve his division skills, Oleg came up with $t$ pairs of integers $p_i$ and $q_i$ and for each pair decided to find the greatest integer $x_i$, such that:   $p_i$ is divisible by $x_i$;  $x_i$ is not divisible by $q_i$.  Oleg is really good at division and managed to find all the answers quickly, how about you?\n\n\n-----Input-----\n\nThe first line contains an integer $t$ ($1 \\le t \\le 50$)\u00a0\u2014 the number of pairs.\n\nEach of the following $t$ lines contains two integers $p_i$ and $q_i$ ($1 \\le p_i \\le 10^{18}$; $2 \\le q_i \\le 10^{9}$)\u00a0\u2014 the $i$-th pair of integers.\n\n\n-----Output-----\n\nPrint $t$ integers: the $i$-th integer is the largest $x_i$ such that $p_i$ is divisible by $x_i$, but $x_i$ is not divisible by $q_i$.\n\nOne can show that there is always at least one value of $x_i$ satisfying the divisibility conditions for the given constraints.\n\n\n-----Example-----\nInput\n3\n10 4\n12 6\n179 822\n\nOutput\n10\n4\n179\n\n\n\n-----Note-----\n\nFor the first pair, where $p_1 = 10$ and $q_1 = 4$, the answer is $x_1 = 10$, since it is the greatest divisor of $10$ and $10$ is not divisible by $4$.\n\nFor the second pair, where $p_2 = 12$ and $q_2 = 6$, note that   $12$ is not a valid $x_2$, since $12$ is divisible by $q_2 = 6$;  $6$ is not valid $x_2$ as well: $6$ is also divisible by $q_2 = 6$.  The next available divisor of $p_2 = 12$ is $4$, which is the answer, since $4$ is not divisible by $6$.",
        "completion": "\nGiven $t$ pairs of integers $p_i$ and $q_i$ and for each pair decided to find the greatest integer $x_i$, such that:   $p_i$ is divisible by $x_i$;  $x_i$ is not divisible by $q_i$.\n\n\n-----Input-----\n\nThe first line contains an integer $t$ ($1 \\le t \\le 50$)\u00a0\u2014 the number of pairs.\n\nEach of the following $t$ lines contains two integers $p_i$ and $q_i$ ($1 \\le p_i \\le 10^{18}$; $2 \\le q_i \\le 10^{9}$)\u00a0\u2014 the $i$-th pair of integers.\n\n\n-----Output-----\n\nPrint $t$ integers: the $i$-th integer is the largest $x_i$ such that $p_i$ is divisible by $x_i$, but $x_i$ is not divisible by $q_i$.\n\nOne can show that there is always at least one value of $x_i$ satisfying the divisibility conditions for the given constraints.\n\n\n-----Example-----\nInput\n3\n10 4\n12 6\n179 822\n\nOutput\n10\n4\n179\n\n"
    },
    {
        "prompt": "Bike loves looking for the second maximum element in the sequence. The second maximum element in the sequence of distinct numbers x_1, x_2, ..., x_{k} (k > 1) is such maximum element x_{j}, that the following inequality holds: $x_{j} \\neq \\operatorname{max}_{i = 1}^{k} x_{i}$.\n\nThe lucky number of the sequence of distinct positive integers x_1, x_2, ..., x_{k} (k > 1) is the number that is equal to the bitwise excluding OR of the maximum element of the sequence and the second maximum element of the sequence.\n\nYou've got a sequence of distinct positive integers s_1, s_2, ..., s_{n} (n > 1). Let's denote sequence s_{l}, s_{l} + 1, ..., s_{r} as s[l..r] (1 \u2264 l < r \u2264 n). Your task is to find the maximum number among all lucky numbers of sequences s[l..r].\n\nNote that as all numbers in sequence s are distinct, all the given definitions make sence.\n\n\n-----Input-----\n\nThe first line contains integer n (1 < n \u2264 10^5). The second line contains n distinct integers s_1, s_2, ..., s_{n} (1 \u2264 s_{i} \u2264 10^9).\n\n\n-----Output-----\n\nPrint a single integer \u2014 the maximum lucky number among all lucky numbers of sequences s[l..r].\n\n\n-----Examples-----\nInput\n5\n5 2 1 4 3\n\nOutput\n7\n\nInput\n5\n9 8 3 5 7\n\nOutput\n15\n\n\n\n-----Note-----\n\nFor the first sample you can choose s[4..5] = {4, 3} and its lucky number is (4\u00a0xor\u00a03) = 7. You can also choose s[1..2].\n\nFor the second sample you must choose s[2..5] = {8, 3, 5, 7}.",
        "completion": "The second maximum element in the sequence of distinct numbers x_1, x_2, ..., x_{k} (k > 1) is such maximum element x_{j}, that the following inequality holds: $x_{j} \\neq \\operatorname{max}_{i = 1}^{k} x_{i}$.\n\nThe lucky number of the sequence of distinct positive integers x_1, x_2, ..., x_{k} (k > 1) is the number that is equal to the bitwise excluding OR of the maximum element of the sequence and the second maximum element of the sequence.\n\nYou've got a sequence of distinct positive integers s_1, s_2, ..., s_{n} (n > 1). Let's denote sequence s_{l}, s_{l} + 1, ..., s_{r} as s[l..r] (1 \u2264 l < r \u2264 n). Your task is to find the maximum number among all lucky numbers of sequences s[l..r].\n\nAll numbers in sequence s are distinct.\n\n\n-----Input-----\n\nThe first line contains integer n (1 < n \u2264 10^5). The second line contains n distinct integers s_1, s_2, ..., s_{n} (1 \u2264 s_{i} \u2264 10^9).\n\n\n-----Output-----\n\nPrint a single integer \u2014 the maximum lucky number among all lucky numbers of sequences s[l..r].\n\n\n-----Examples-----\nInput\n5\n5 2 1 4 3\n\nOutput\n7\n\nInput\n5\n9 8 3 5 7\n\nOutput\n15\n\n"
    },
    {
        "prompt": "In number world, two different numbers are friends if they have a lot in common, but also each one has unique perks.\n\nMore precisely, two different numbers $a$ and $b$ are friends if $gcd(a,b)$, $\\frac{a}{gcd(a,b)}$, $\\frac{b}{gcd(a,b)}$ can form sides of a triangle.\n\nThree numbers $a$, $b$ and $c$ can form sides of a triangle if $a + b > c$, $b + c > a$ and $c + a > b$.\n\nIn a group of numbers, a number is lonely if it doesn't have any friends in that group.\n\nGiven a group of numbers containing all numbers from $1, 2, 3, ..., n$, how many numbers in that group are lonely?\n\n\n-----Input-----\n\nThe first line contains a single integer $t$ $(1 \\leq t \\leq 10^6)$ - number of test cases.\n\nOn next line there are $t$ numbers, $n_i$ $(1 \\leq n_i \\leq 10^6)$ - meaning that in case $i$ you should solve for numbers $1, 2, 3, ..., n_i$.\n\n\n-----Output-----\n\nFor each test case, print the answer on separate lines: number of lonely numbers in group $1, 2, 3, ..., n_i$.\n\n\n-----Example-----\nInput\n3\n1 5 10\n\nOutput\n1\n3\n3\n\n\n\n-----Note-----\n\nFor first test case, $1$ is the only number and therefore lonely.\n\nFor second test case where $n=5$, numbers $1$, $3$ and $5$ are lonely.\n\nFor third test case where $n=10$, numbers $1$, $5$ and $7$ are lonely.",
        "completion": "\nTwo different numbers $a$ and $b$ are friends if $gcd(a,b)$, $\\frac{a}{gcd(a,b)}$, $\\frac{b}{gcd(a,b)}$ can form sides of a triangle.\n\nThree numbers $a$, $b$ and $c$ can form sides of a triangle if $a + b > c$, $b + c > a$ and $c + a > b$.\n\nIn a group of numbers, a number is lonely if it doesn't have any friends in that group.\n\nGiven a group of numbers containing all numbers from $1, 2, 3, ..., n$, how many numbers in that group are lonely?\n\n\n-----Input-----\n\nThe first line contains a single integer $t$ $(1 \\leq t \\leq 10^6)$ - number of test cases.\n\nOn next line there are $t$ numbers, $n_i$ $(1 \\leq n_i \\leq 10^6)$ - meaning that in case $i$ you should solve for numbers $1, 2, 3, ..., n_i$.\n\n\n-----Output-----\n\nFor each test case, print the answer on separate lines: number of lonely numbers in group $1, 2, 3, ..., n_i$.\n\n\n-----Example-----\nInput\n3\n1 5 10\n\nOutput\n1\n3\n3\n\n"
    },
    {
        "prompt": "You've got array A, consisting of n integers and a positive integer k. Array A is indexed by integers from 1 to n.\n\nYou need to permute the array elements so that value $\\sum_{i = 1}^{n - k}|A [ i ] - A [ i + k ]|$ became minimal possible. In particular, it is allowed not to change order of elements at all.\n\n\n-----Input-----\n\nThe first line contains two integers n, k (2 \u2264 n \u2264 3\u00b710^5, 1 \u2264 k \u2264 min(5000, n - 1)). \n\nThe second line contains n integers A[1], A[2], ..., A[n] ( - 10^9 \u2264 A[i] \u2264 10^9), separate by spaces \u2014 elements of the array A.\n\n\n-----Output-----\n\nPrint the minimum possible value of the sum described in the statement.\n\n\n-----Examples-----\nInput\n3 2\n1 2 4\n\nOutput\n1\n\nInput\n5 2\n3 -5 3 -5 3\n\nOutput\n0\n\nInput\n6 3\n4 3 4 3 2 5\n\nOutput\n3\n\n\n\n-----Note-----\n\nIn the first test one of the optimal permutations is 1\u00a04\u00a02. \n\nIn the second test the initial order is optimal. \n\nIn the third test one of the optimal permutations is 2\u00a03\u00a04\u00a04\u00a03\u00a05.",
        "completion": "You've got array A, consisting of n integers and a positive integer k. Array A is indexed by integers from 1 to n.\n\nYou need to permute the array elements so that value $\\sum_{i = 1}^{n - k}|A [ i ] - A [ i + k ]|$ became as minimal as possible. In particular, it is not allowed to change order of elements at all.\n\n\n-----Input-----\n\nThe first line contains two integers n, k (2 \u2264 n \u2264 3\u00b710^5, 1 \u2264 k \u2264 min(5000, n - 1)). \n\nThe second line contains n integers A[1], A[2], ..., A[n] ( - 10^9 \u2264 A[i] \u2264 10^9), separate by spaces \u2014 elements of the array A.\n\n\n-----Output-----\n\nPrint the minimum possible value of the sum described in the statement.\n\n\n-----Examples-----\nInput\n3 2\n1 2 4\n\nOutput\n1\n\nInput\n5 2\n3 -5 3 -5 3\n\nOutput\n0\n\nInput\n6 3\n4 3 4 3 2 5\n\nOutput\n3\n"
    },
    {
        "prompt": "You are given two positive integers N and K. How many multisets of rational numbers satisfy all of the following conditions?\n - The multiset has exactly N elements and the sum of them is equal to K.\n - Each element of the multiset is one of 1, \\frac{1}{2}, \\frac{1}{4}, \\frac{1}{8}, \\dots. In other words, each element can be represented as \\frac{1}{2^i}\\ (i = 0,1,\\dots).\nThe answer may be large, so print it modulo 998244353.\n\n-----Constraints-----\n - 1 \\leq K \\leq N \\leq 3000\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN K\n\n-----Output-----\nPrint the number of multisets of rational numbers that satisfy all of the given conditions modulo 998244353.\n\n-----Sample Input-----\n4 2\n\n-----Sample Output-----\n2\n\nThe following two multisets satisfy all of the given conditions:\n - {1, \\frac{1}{2}, \\frac{1}{4}, \\frac{1}{4}}\n - {\\frac{1}{2}, \\frac{1}{2}, \\frac{1}{2}, \\frac{1}{2}}",
        "completion": "You are given two positive integers N and K. How many multisets of rational numbers satisfy all of the following conditions?\n - The multiset has exactly N elements and the sum of them is equal to K.\n - Each element can be represented as \\frac{1}{2^i}\\ (i = 0,1,\\dots).\nThe answer may be large, so print it modulo 998244353.\n\n-----Constraints-----\n - 1 \\leq K \\leq N \\leq 3000\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN K\n\n-----Output-----\nPrint the number of multisets of rational numbers that satisfy all of the given conditions modulo 998244353.\n\n-----Sample Input-----\n4 2\n\n-----Sample Output-----\n2\n"
    },
    {
        "prompt": "Everybody seems to think that the Martians are green, but it turns out they are metallic pink and fat. Ajs has two bags of distinct nonnegative integers. The bags are disjoint, and the union of the sets of numbers in the bags is $\\{0,1,\u2026,M-1\\}$, for some positive integer $M$. Ajs draws a number from the first bag and a number from the second bag, and then sums them modulo $M$.\n\nWhat are the residues modulo $M$ that Ajs cannot obtain with this action?\n\n\n-----Input-----\n\nThe first line contains two positive integer $N$ ($1 \\leq N \\leq 200\\,000$) and $M$ ($N+1 \\leq M \\leq 10^{9}$), denoting the number of the elements in the first bag and the modulus, respectively.\n\nThe second line contains $N$ nonnegative integers $a_1,a_2,\\ldots,a_N$ ($0 \\leq a_1<a_2< \\ldots< a_N<M$), the contents of the first bag.\n\n \n\n\n-----Output-----\n\nIn the first line, output the cardinality $K$ of the set of residues modulo $M$ which Ajs cannot obtain.\n\nIn the second line of the output, print $K$ space-separated integers greater or equal than zero and less than $M$, which represent the residues Ajs cannot obtain. The outputs should be sorted in increasing order of magnitude. If $K$=0, do not output the second line.\n\n\n-----Examples-----\nInput\n2 5\n3 4\n\nOutput\n1\n2\n\nInput\n4 1000000000\n5 25 125 625\n\nOutput\n0\n\nInput\n2 4\n1 3\n\nOutput\n2\n0 2\n\n\n\n-----Note-----\n\nIn the first sample, the first bag and the second bag contain $\\{3,4\\}$ and $\\{0,1,2\\}$, respectively. Ajs can obtain every residue modulo $5$ except the residue $2$: $ 4+1 \\equiv 0, \\, 4+2 \\equiv 1, \\, 3+0 \\equiv 3, \\, 3+1 \\equiv 4 $ modulo $5$. One can check that there is no choice of elements from the first and the second bag which sum to $2$ modulo $5$.\n\nIn the second sample, the contents of the first bag are $\\{5,25,125,625\\}$, while the second bag contains all other nonnegative integers with at most $9$ decimal digits. Every residue modulo $1\\,000\\,000\\,000$ can be obtained as a sum of an element in the first bag and an element in the second bag.",
        "completion": "You have two bags of distinct nonnegative integers. The bags are disjoint, and the union of the sets of numbers in the bags is $\\{0,1,\u2026,M-1\\}$, for some positive integer $M$. You draw a number from the first bag and a number from the second bag, and then sum them modulo $M$.\n\nWhat are the residues modulo $M$ that you cannot obtain with this action?\n\n\n-----Input-----\n\nThe first line contains two positive integer $N$ ($1 \\leq N \\leq 200\\,000$) and $M$ ($N+1 \\leq M \\leq 10^{9}$), denoting the number of the elements in the first bag and the modulus, respectively.\n\nThe second line contains $N$ nonnegative integers $a_1,a_2,\\ldots,a_N$ ($0 \\leq a_1<a_2< \\ldots< a_N<M$), the contents of the first bag.\n\n \n\n\n-----Output-----\n\nIn the first line, output the cardinality $K$ of the set of residues modulo $M$ which Ajs cannot obtain.\n\nIn the second line of the output, print $K$ space-separated integers greater or equal than zero and less than $M$, which represent the residues Ajs cannot obtain. The outputs should be sorted in increasing order of magnitude. If $K$=0, do not output the second line.\n\n\n-----Examples-----\nInput\n2 5\n3 4\n\nOutput\n1\n2\n\nInput\n4 1000000000\n5 25 125 625\n\nOutput\n0\n\nInput\n2 4\n1 3\n\nOutput\n2\n0 2\n\n"
    },
    {
        "prompt": "There are n psychos standing in a line. Each psycho is assigned a unique integer from 1 to n. At each step every psycho who has an id greater than the psycho to his right (if exists) kills his right neighbor in the line. Note that a psycho might kill and get killed at the same step. \n\nYou're given the initial arrangement of the psychos in the line. Calculate how many steps are needed to the moment of time such, that nobody kills his neighbor after that moment. Look notes to understand the statement more precise.\n\n\n-----Input-----\n\nThe first line of input contains integer n denoting the number of psychos, (1 \u2264 n \u2264 10^5). In the second line there will be a list of n space separated distinct integers each in range 1 to n, inclusive \u2014 ids of the psychos in the line from left to right.\n\n\n-----Output-----\n\nPrint the number of steps, so that the line remains the same afterward.\n\n\n-----Examples-----\nInput\n10\n10 9 7 8 6 5 3 4 2 1\n\nOutput\n2\n\nInput\n6\n1 2 3 4 5 6\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first sample line of the psychos transforms as follows: [10 9 7 8 6 5 3 4 2 1]  \u2192  [10 8 4]  \u2192  [10]. So, there are two steps.",
        "completion": "There are n psycho standing in a line. Each psycho is assigned a unique integer from 1 to n. At each step every psycho who has an id greater than the psycho to his right (if exists) kills his right neighbor in the line. A psycho might kill and get killed at the same step. \n\nYou're given the initial arrangement of the psychos in the line. Calculate how many steps are needed to the moment of time such, that nobody kills his neighbor after that moment.\n\n\n-----Input-----\n\nThe first line of input contains integer n denoting the number of psychos, (1 \u2264 n \u2264 10^5). In the second line there will be a list of n space separated distinct integers each in range 1 to n, inclusive \u2014 ids of the psychos in the line from left to right.\n\n\n-----Output-----\n\nPrint the number of steps, so that the line remains the same afterward.\n\n\n-----Examples-----\nInput\n10\n10 9 7 8 6 5 3 4 2 1\n\nOutput\n2\n\nInput\n6\n1 2 3 4 5 6\n\nOutput\n0\n"
    },
    {
        "prompt": "You are given a string A. Find a string B, where B is a palindrome and A is a subsequence of B.\n\nA subsequence of a string is a string that can be derived from it by deleting some (not necessarily consecutive) characters without changing the order of the remaining characters. For example, \"cotst\" is a subsequence of \"contest\".\n\nA palindrome is a string that reads the same forward or backward.\n\nThe length of string B should be at most 10^4. It is guaranteed that there always exists such string.\n\nYou do not need to find the shortest answer, the only restriction is that the length of string B should not exceed 10^4.\n\n\n-----Input-----\n\nFirst line contains a string A (1 \u2264 |A| \u2264 10^3) consisting of lowercase Latin letters, where |A| is a length of A.\n\n\n-----Output-----\n\nOutput single line containing B consisting of only lowercase Latin letters. You do not need to find the shortest answer, the only restriction is that the length of string B should not exceed 10^4. If there are many possible B, print any of them.\n\n\n-----Examples-----\nInput\naba\n\nOutput\naba\nInput\nab\n\nOutput\naabaa\n\n\n-----Note-----\n\nIn the first example, \"aba\" is a subsequence of \"aba\" which is a palindrome.\n\nIn the second example, \"ab\" is a subsequence of \"aabaa\" which is a palindrome.",
        "completion": "You are given a string A. Find a string B, where B is a palindrome and A is a subsequence of B.\n\nThe length of string B should be at most 10^4.\n\nYou do not need to find the shortest answer, the only restriction is that the length of string B should not exceed 10^4.\n\n\n-----Input-----\n\nFirst line contains a string A (1 \u2264 |A| \u2264 10^3) consisting of lowercase Latin letters, where |A| is a length of A.\n\n\n-----Output-----\n\nOutput single line containing B consisting of only lowercase Latin letters. You do not need to find the shortest answer, the only restriction is that the length of string B should not exceed 10^4. If there are many possible B, print any of them.\n\n\n-----Examples-----\nInput\naba\n\nOutput\naba\nInput\nab\n\nOutput\naabaa\n"
    },
    {
        "prompt": "Fox Ciel wants to write a task for a programming contest. The task is: \"You are given a simple undirected graph with n vertexes. Each its edge has unit length. You should calculate the number of shortest paths between vertex 1 and vertex 2.\"\n\nSame with some writers, she wants to make an example with some certain output: for example, her birthday or the number of her boyfriend. Can you help her to make a test case with answer equal exactly to k?\n\n\n-----Input-----\n\nThe first line contains a single integer k (1 \u2264 k \u2264 10^9).\n\n\n-----Output-----\n\nYou should output a graph G with n vertexes (2 \u2264 n \u2264 1000). There must be exactly k shortest paths between vertex 1 and vertex 2 of the graph.\n\nThe first line must contain an integer n. Then adjacency matrix G with n rows and n columns must follow. Each element of the matrix must be 'N' or 'Y'. If G_{ij} is 'Y', then graph G has a edge connecting vertex i and vertex j. Consider the graph vertexes are numbered from 1 to n.\n\nThe graph must be undirected and simple: G_{ii} = 'N' and G_{ij} = G_{ji} must hold. And there must be at least one path between vertex 1 and vertex 2. It's guaranteed that the answer exists. If there multiple correct answers, you can output any of them. \n\n\n-----Examples-----\nInput\n2\nOutput\n4\nNNYY\nNNYY\nYYNN\nYYNN\nInput\n9\nOutput\n8\nNNYYYNNN\nNNNNNYYY\nYNNNNYYY\nYNNNNYYY\nYNNNNYYY\nNYYYYNNN\nNYYYYNNN\nNYYYYNNN\nInput\n1\nOutput\n2\nNY\nYN\n\n\n-----Note-----\n\nIn first example, there are 2 shortest paths: 1-3-2 and 1-4-2.\n\nIn second example, there are 9 shortest paths: 1-3-6-2, 1-3-7-2, 1-3-8-2, 1-4-6-2, 1-4-7-2, 1-4-8-2, 1-5-6-2, 1-5-7-2, 1-5-8-2.",
        "completion": "You are given an undirected graph with n vertexes. Each its edge has unit length. Calculate the number of shortest paths between vertex 1 and vertex 2.\n\n\n-----Input-----\n\nThe first line contains a single integer k (1 \u2264 k \u2264 10^9).\n\n\n-----Output-----\n\nYou should output a graph G with n vertexes (2 \u2264 n \u2264 1000). There must be exactly k shortest paths between vertex 1 and vertex 2 of the graph.\n\nThe first line must contain an integer n. Then adjacency matrix G with n rows and n columns must follow. Each element of the matrix must be 'N' or 'Y'. If G_{ij} is 'Y', then graph G has a edge connecting vertex i and vertex j. Consider the graph vertexes are numbered from 1 to n.\n\nThe graph must be undirected and simple: G_{ii} = 'N' and G_{ij} = G_{ji} must hold. And there must be at least one path between vertex 1 and vertex 2. It's guaranteed that the answer exists. If there multiple correct answers, you can output any of them. \n\n\n-----Examples-----\nInput\n2\nOutput\n4\nNNYY\nNNYY\nYYNN\nYYNN\nInput\n9\nOutput\n8\nNNYYYNNN\nNNNNNYYY\nYNNNNYYY\nYNNNNYYY\nYNNNNYYY\nNYYYYNNN\nNYYYYNNN\nNYYYYNNN\nInput\n1\nOutput\n2\nNY\nYN\n"
    },
    {
        "prompt": "There are some ambiguities when one writes Berland names with the letters of the Latin alphabet.\n\nFor example, the Berland sound u can be written in the Latin alphabet as \"u\", and can be written as \"oo\". For this reason, two words \"ulyana\" and \"oolyana\" denote the same name.\n\nThe second ambiguity is about the Berland sound h: one can use both \"h\" and \"kh\" to write it. For example, the words \"mihail\" and \"mikhail\" denote the same name.\n\nThere are n users registered on the Polycarp's website. Each of them indicated a name represented by the Latin letters. How many distinct names are there among them, if two ambiguities described above are taken into account?\n\nFormally, we assume that two words denote the same name, if using the replacements \"u\"\u00a0[Image]\u00a0\"oo\" and \"h\"\u00a0[Image]\u00a0\"kh\", you can make the words equal. One can make replacements in both directions, in any of the two words an arbitrary number of times. A letter that resulted from the previous replacement can participate in the next replacements.\n\nFor example, the following pairs of words denote the same name:  \"koouper\" and \"kuooper\". Making the replacements described above, you can make both words to be equal: \"koouper\" $\\rightarrow$ \"kuuper\" and \"kuooper\" $\\rightarrow$ \"kuuper\".  \"khun\" and \"kkkhoon\". With the replacements described above you can make both words to be equal: \"khun\" $\\rightarrow$ \"khoon\" and \"kkkhoon\" $\\rightarrow$ \"kkhoon\" $\\rightarrow$ \"khoon\". \n\nFor a given list of words, find the minimal number of groups where the words in each group denote the same name.\n\n\n-----Input-----\n\nThe first line contains integer number n (2 \u2264 n \u2264 400) \u2014 number of the words in the list.\n\nThe following n lines contain words, one word per line. Each word consists of only lowercase Latin letters. The length of each word is between 1 and 20 letters inclusive.\n\n\n-----Output-----\n\nPrint the minimal number of groups where the words in each group denote the same name.\n\n\n-----Examples-----\nInput\n10\nmihail\noolyana\nkooooper\nhoon\nulyana\nkoouper\nmikhail\nkhun\nkuooper\nkkkhoon\n\nOutput\n4\n\nInput\n9\nhariton\nhkariton\nbuoi\nkkkhariton\nboooi\nbui\nkhariton\nboui\nboi\n\nOutput\n5\n\nInput\n2\nalex\nalex\n\nOutput\n1\n\n\n\n-----Note-----\n\nThere are four groups of words in the first example. Words in each group denote same name:  \"mihail\", \"mikhail\"  \"oolyana\", \"ulyana\"  \"kooooper\", \"koouper\"  \"hoon\", \"khun\", \"kkkhoon\" \n\nThere are five groups of words in the second example. Words in each group denote same name:  \"hariton\", \"kkkhariton\", \"khariton\"  \"hkariton\"  \"buoi\", \"boooi\", \"boui\"  \"bui\"  \"boi\" \n\nIn the third example the words are equal, so they denote the same name.",
        "completion": "Some names with latin alphabets have ambiguities.\nFor example, the Berland sound u can be written in the Latin alphabet as \"u\", and can be written as \"oo\". For this reason, two words \"ulyana\" and \"oolyana\" denote the same name.\n\nThe second ambiguity is about the Berland sound h: one can use both \"h\" and \"kh\" to write it. For example, the words \"mihail\" and \"mikhail\" denote the same name.\n\nYour are given n users name registered on the Polycarp's website using latin alphabets. How many distinct names are there among them, if two ambiguities described above are taken into account?\n\nFormally, we assume that two words denote the same name, if using the replacements \"u\"\u00a0[Image]\u00a0\"oo\" and \"h\"\u00a0[Image]\u00a0\"kh\", you can make the words equal. One can make replacements in both directions, in any of the two words an arbitrary number of times. A letter that resulted from the previous replacement can participate in the next replacements.\n\nFor example, the following pairs of words denote the same name:  \"koouper\" and \"kuooper\". Making the replacements described above, you can make both words to be equal: \"koouper\" $\\rightarrow$ \"kuuper\" and \"kuooper\" $\\rightarrow$ \"kuuper\".  \"khun\" and \"kkkhoon\". With the replacements described above you can make both words to be equal: \"khun\" $\\rightarrow$ \"khoon\" and \"kkkhoon\" $\\rightarrow$ \"kkhoon\" $\\rightarrow$ \"khoon\". \n\nFor a given list of words, find the minimal number of groups where the words in each group denote the same name.\n\n\n-----Input-----\n\nThe first line contains integer number n (2 \u2264 n \u2264 400) \u2014 number of the words in the list.\n\nThe following n lines contain words, one word per line. Each word consists of only lowercase Latin letters. The length of each word is between 1 and 20 letters inclusive.\n\n\n-----Output-----\n\nPrint the minimal number of groups where the words in each group denote the same name.\n\n\n-----Examples-----\nInput\n10\nmihail\noolyana\nkooooper\nhoon\nulyana\nkoouper\nmikhail\nkhun\nkuooper\nkkkhoon\n\nOutput\n4\n\nInput\n9\nhariton\nhkariton\nbuoi\nkkkhariton\nboooi\nbui\nkhariton\nboui\nboi\n\nOutput\n5\n\nInput\n2\nalex\nalex\n\nOutput\n1\n\n\n\n-----Note-----\n\nThere are four groups of words in the first example. Words in each group denote same name:  \"mihail\", \"mikhail\"  \"oolyana\", \"ulyana\"  \"kooooper\", \"koouper\"  \"hoon\", \"khun\", \"kkkhoon\" \n\nThere are five groups of words in the second example. Words in each group denote same name:  \"hariton\", \"kkkhariton\", \"khariton\"  \"hkariton\"  \"buoi\", \"boooi\", \"boui\"  \"bui\"  \"boi\" \n\nIn the third example the words are equal, so they denote the same name."
    },
    {
        "prompt": "Given positive integers N, K and M, solve the following problem for every integer x between 1 and N (inclusive):\n - Find the number, modulo M, of non-empty multisets containing between 0 and K (inclusive) instances of each of the integers 1, 2, 3 \\cdots, N such that the average of the elements is x.\n\n-----Constraints-----\n - 1 \\leq N, K \\leq 100\n - 10^8 \\leq M \\leq 10^9 + 9\n - M is prime.\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN K M\n\n-----Output-----\nUse the following format:\nc_1\nc_2\n:\nc_N\n\nHere, c_x should be the number, modulo M, of multisets such that the average of the elements is x.\n\n-----Sample Input-----\n3 1 998244353\n\n-----Sample Output-----\n1\n3\n1\n\nConsider non-empty multisets containing between 0 and 1 instance(s) of each of the integers between 1 and 3. Among them, there are:\n - one multiset such that the average of the elements is k = 1: \\{1\\};\n - three multisets such that the average of the elements is k = 2: \\{2\\}, \\{1, 3\\}, \\{1, 2, 3\\};\n - one multiset such that the average of the elements is k = 3: \\{3\\}.",
        "completion": "Given positive integers N, K and M, solve the following problem for every integer x between 1 and N (inclusive):\n - Find the number, modulo M, of non-empty multisets containing between 0 and K (inclusive) instances of each of the integers 1, 2, 3 \\cdots, N such that the average of the elements is x.\n\n-----Constraints-----\n - 1 \\leq N, K \\leq 100\n - 10^8 \\leq M \\leq 10^9 + 9\n - M is prime.\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN K M\n\n-----Output-----\nUse the following format:\nc_1\nc_2\n:\nc_N\n\nHere, c_x should be the number, modulo M, of multisets such that the average of the elements is x.\n\n-----Sample Input-----\n3 1 998244353\n\n-----Sample Output-----\n1\n3\n1\n"
    },
    {
        "prompt": "A hypergraph is a generalization of a graph, where an edge can connect any number of vertices. A k-uniform hypergraph is a hypergraph such that all its hyperedges have size k. For more information, see Wikipedia.\n\nLet's call a particular hypergraph a hypertree if it is connected (that is, you can move from any vertex to any other vertex using only its hyperedges) and removing any of its hyperedges makes the hypergraph disconnected (note that this definition of hypertrees differs from the standard one).\n\nGiven just one integer N, find the number of 3-uniform hypertrees on N vertices. Two 3-uniform hypertrees are considered different if a hyperedge (u, v, w) exists such that it is present in exactly one of these hypertrees (note that the order of vertices in the hyperedge doesn't matter, and neither does the order of hyperedges in the hypertree).\n\n-----Input-----\nThe first line of the input contains an integer T -- the number of test cases (at most 15). Then T lines follow, each contains an integer N (3 \u2264 N \u2264 17).\n\nImportant! Please include all code used in solving this problem in your solution.\n\n-----Output-----\nFor each test case output one line containing the requested number. It's guaranteed that this number won't exceed 263-1.\n\n-----Examples-----\nInput:\n4\n3\n4\n5\n8\n\nOutput:\n1\n6\n25\n93268\n\nExplanation:\nThere is just one 3-uniform hypertree on 3 vertices: {(1,2,3)}. There are six of them on 4 vertices: {(1,2,3), (1,2,4)}, {(1,2,3), (1,3,4)}, {(1,2,3), (2,3,4)}, {(1,2,4), (1,3,4)}, {(1,2,4), (2,3,4)}, {(1,3,4), (2,3,4)}. Two of the 25 possible hypertrees on 5 vertices are {(1,2,3), (3,4,5)} and {(1,2,3), (1,2,4), (1,2,5)}.",
        "completion": "\nGiven an integer N, find the number of 3-uniform hypertrees on N vertices. Two 3-uniform hypertrees are considered different if a hyperedge (u, v, w) exists such that it is present in exactly one of these hypertrees.\n-----Input-----\nThe first line of the input contains an integer T -- the number of test cases (at most 15). Then T lines follow, each contains an integer N (3 \u2264 N \u2264 17).\n\nImportant! Please include all code used in solving this problem in your solution.\n\n-----Output-----\nFor each test case output one line containing the requested number. It's guaranteed that this number won't exceed 263-1.\n\n-----Examples-----\nInput:\n4\n3\n4\n5\n8\n\nOutput:\n1\n6\n25\n93268\n\n"
    },
    {
        "prompt": "You are given a string S of length n with each character being one of the first m lowercase English letters. \n\nCalculate how many different strings T of length n composed from the first m lowercase English letters exist such that the length of LCS (longest common subsequence) between S and T is n - 1.\n\nRecall that LCS of two strings S and T is the longest string C such that C both in S and T as a subsequence.\n\n\n-----Input-----\n\nThe first line contains two numbers n and m denoting the length of string S and number of first English lowercase characters forming the character set for strings (1 \u2264 n \u2264 100 000, 2 \u2264 m \u2264 26).\n\nThe second line contains string S.\n\n\n-----Output-----\n\nPrint the only line containing the answer.\n\n\n-----Examples-----\nInput\n3 3\naaa\n\nOutput\n6\n\nInput\n3 3\naab\n\nOutput\n11\n\nInput\n1 2\na\n\nOutput\n1\n\nInput\n10 9\nabacadefgh\n\nOutput\n789\n\n\n\n-----Note-----\n\nFor the first sample, the 6 possible strings T are: aab, aac, aba, aca, baa, caa. \n\nFor the second sample, the 11 possible strings T are: aaa, aac, aba, abb, abc, aca, acb, baa, bab, caa, cab.\n\nFor the third sample, the only possible string T is b.",
        "completion": "You are given a string S of length n with each character being one of the first m lowercase English letters. \n\nCalculate how many different strings T of length n can be composed from the first m lowercase English letters exist such that the length of Longest Common Subsequence between S and T is n - 1.\n\nLongest Common Subsequence of two strings S and T is the longest string C such that C both in S and T as a subsequence.\n\n\n-----Input-----\n\nThe first line contains two numbers n and m denoting the length of string S and number of first English lowercase characters forming the character set for strings (1 \u2264 n \u2264 100 000, 2 \u2264 m \u2264 26).\n\nThe second line contains string S.\n\n\n-----Output-----\n\nPrint the only line containing the answer.\n\n\n-----Examples-----\nInput\n3 3\naaa\n\nOutput\n6\n\nInput\n3 3\naab\n\nOutput\n11\n\nInput\n1 2\na\n\nOutput\n1\n\nInput\n10 9\nabacadefgh\n\nOutput\n789\n"
    },
    {
        "prompt": "You are given a sequence a consisting of n integers. Find the maximum possible value of $a_{i} \\operatorname{mod} a_{j}$ (integer remainder of a_{i} divided by a_{j}), where 1 \u2264 i, j \u2264 n and a_{i} \u2265 a_{j}.\n\n\n-----Input-----\n\nThe first line contains integer n\u00a0\u2014 the length of the sequence (1 \u2264 n \u2264 2\u00b710^5). \n\nThe second line contains n space-separated integers a_{i} (1 \u2264 a_{i} \u2264 10^6).\n\n\n-----Output-----\n\nPrint the answer to the problem.\n\n\n-----Examples-----\nInput\n3\n3 4 5\n\nOutput\n2",
        "completion": "You are given a sequence a consisting of n integers. Find the maximum possible value of integer remainder of a_{i} divided by a_{j}, where 1 \u2264 i, j \u2264 n and a_{i} \u2265 a_{j}.\n\n\n-----Input-----\n\nThe first line contains integer n\u00a0\u2014 the length of the sequence (1 \u2264 n \u2264 2\u00b710^5). \n\nThe second line contains n space-separated integers a_{i} (1 \u2264 a_{i} \u2264 10^6).\n\n\n-----Output-----\n\nPrint the answer to the problem.\n\n\n-----Examples-----\nInput\n3\n3 4 5\n\nOutput\n2"
    },
    {
        "prompt": "We have a sequence A of N non-negative integers.\nCompute the sum of \\prod _{i = 1} ^N \\dbinom{B_i}{A_i} over all sequences B of N non-negative integers whose sum is at most M, and print it modulo (10^9 + 7).\nHere, \\dbinom{B_i}{A_i}, the binomial coefficient, denotes the number of ways to choose A_i objects from B_i objects, and is 0 when B_i < A_i.\n\n-----Constraints-----\n - All values in input are integers.\n - 1 \\leq N \\leq 2000\n - 1 \\leq M \\leq 10^9\n - 0 \\leq A_i \\leq 2000\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN M\nA_1 A_2 \\ldots A_N\n\n-----Output-----\nPrint the sum of \\prod _{i = 1} ^N \\dbinom{B_i}{A_i}, modulo (10^9 + 7).\n\n-----Sample Input-----\n3 5\n1 2 1\n\n-----Sample Output-----\n8\n\nThere are four sequences B such that \\prod _{i = 1} ^N \\dbinom{B_i}{A_i} is at least 1:\n - B = \\{1, 2, 1\\}, where \\prod _{i = 1} ^N \\dbinom{B_i}{A_i} = \\dbinom{1}{1} \\times \\dbinom{2}{2} \\times \\dbinom{1}{1} = 1;\n - B = \\{2, 2, 1\\}, where \\prod _{i = 1} ^N \\dbinom{B_i}{A_i} = \\dbinom{2}{1} \\times \\dbinom{2}{2} \\times \\dbinom{1}{1} = 2;\n - B = \\{1, 3, 1\\}, where \\prod _{i = 1} ^N \\dbinom{B_i}{A_i} = \\dbinom{1}{1} \\times \\dbinom{3}{2} \\times \\dbinom{1}{1} = 3;\n - B = \\{1, 2, 2\\}, where \\prod _{i = 1} ^N \\dbinom{B_i}{A_i} = \\dbinom{1}{1} \\times \\dbinom{2}{2} \\times \\dbinom{2}{1} = 2.\nThe sum of these is 1 + 2 + 3 + 2 = 8.",
        "completion": "You have a sequence A of N non-negative integers.\nCompute the sum of \\prod _{i = 1} ^N \\dbinom{B_i}{A_i} over all sequences B of N non-negative integers whose sum is at most M, and print it modulo (10^9 + 7).\n\\dbinom{B_i}{A_i}, the binomial coefficient, denotes the number of ways to choose A_i objects from B_i objects, and is 0 when B_i < A_i.\n\n-----Constraints-----\n - All values in input are integers.\n - 1 \\leq N \\leq 2000\n - 1 \\leq M \\leq 10^9\n - 0 \\leq A_i \\leq 2000\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN M\nA_1 A_2 \\ldots A_N\n\n-----Output-----\nPrint the sum of \\prod _{i = 1} ^N \\dbinom{B_i}{A_i}, modulo (10^9 + 7).\n\n-----Sample Input-----\n3 5\n1 2 1\n\n-----Sample Output-----\n8\n\n"
    },
    {
        "prompt": "You are given a graph with $3 \\cdot n$ vertices and $m$ edges. You are to find a matching of $n$ edges, or an independent set of $n$ vertices.\n\nA set of edges is called a matching if no two edges share an endpoint.\n\nA set of vertices is called an independent set if no two vertices are connected with an edge.\n\n\n-----Input-----\n\nThe first line contains a single integer $T \\ge 1$\u00a0\u2014 the number of graphs you need to process. The description of $T$ graphs follows.\n\nThe first line of description of a single graph contains two integers $n$ and $m$, where $3 \\cdot n$ is the number of vertices, and $m$ is the number of edges in the graph ($1 \\leq n \\leq 10^{5}$, $0 \\leq m \\leq 5 \\cdot 10^{5}$).\n\nEach of the next $m$ lines contains two integers $v_i$ and $u_i$ ($1 \\leq v_i, u_i \\leq 3 \\cdot n$), meaning that there is an edge between vertices $v_i$ and $u_i$.\n\nIt is guaranteed that there are no self-loops and no multiple edges in the graph.\n\nIt is guaranteed that the sum of all $n$ over all graphs in a single test does not exceed $10^{5}$, and the sum of all $m$ over all graphs in a single test does not exceed $5 \\cdot 10^{5}$.\n\n\n-----Output-----\n\nPrint your answer for each of the $T$ graphs. Output your answer for a single graph in the following format.\n\nIf you found a matching of size $n$, on the first line print \"Matching\" (without quotes), and on the second line print $n$ integers\u00a0\u2014 the indices of the edges in the matching. The edges are numbered from $1$ to $m$ in the input order.\n\nIf you found an independent set of size $n$, on the first line print \"IndSet\" (without quotes), and on the second line print $n$ integers\u00a0\u2014 the indices of the vertices in the independent set.\n\nIf there is no matching and no independent set of the specified size, print \"Impossible\" (without quotes).\n\nYou can print edges and vertices in any order.\n\nIf there are several solutions, print any. In particular, if there are both a matching of size $n$, and an independent set of size $n$, then you should print exactly one of such matchings or exactly one of such independent sets.\n\n\n-----Example-----\nInput\n4\n1 2\n1 3\n1 2\n1 2\n1 3\n1 2\n2 5\n1 2\n3 1\n1 4\n5 1\n1 6\n2 15\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6\n\nOutput\nMatching\n2\nIndSet\n1\nIndSet\n2 4\nMatching\n1 15\n\n\n\n-----Note-----\n\nThe first two graphs are same, and there are both a matching of size 1 and an independent set of size 1. Any of these matchings and independent sets is a correct answer.\n\nThe third graph does not have a matching of size 2, however, there is an independent set of size 2. Moreover, there is an independent set of size 5: 2 3 4 5 6. However such answer is not correct, because you are asked to find an independent set (or matching) of size exactly $n$.\n\nThe fourth graph does not have an independent set of size 2, but there is a matching of size 2.",
        "completion": "You are given a graph with $3 \\cdot n$ vertices and $m$ edges. You are to find a matching of $n$ edges, or an independent set of $n$ vertices.\n\nA set of edges is called a matching if no two edges share an endpoint.\n\nA set of vertices is called an independent set if no two vertices are connected with an edge.\n\n-----Input-----\n\nThe first line contains a single integer $T \\ge 1$\u00a0\u2014 the number of graphs you need to process. The description of $T$ graphs follows.\n\nThe first line of description of a single graph contains two integers $n$ and $m$, where $3 \\cdot n$ is the number of vertices, and $m$ is the number of edges in the graph ($1 \\leq n \\leq 10^{5}$, $0 \\leq m \\leq 5 \\cdot 10^{5}$).\n\nEach of the next $m$ lines contains two integers $v_i$ and $u_i$ ($1 \\leq v_i, u_i \\leq 3 \\cdot n$), meaning that there is an edge between vertices $v_i$ and $u_i$.\n\nThere are no self-loops and no multiple edges in the graph.\n\nThe sum of all $n$ over all graphs in a single test does not exceed $10^{5}$, and the sum of all $m$ over all graphs in a single test does not exceed $5 \\cdot 10^{5}$.\n\n\n-----Output-----\n\nPrint your answer for each of the $T$ graphs which has the following output format.\n\nIf you found a matching of size $n$, on the first line print \"Matching\", and on the second line print $n$ integers\u00a0\u2014 the indices of the edges in the matching. The edges are numbered from $1$ to $m$ in the input order.\n\nIf an independent set of size $n$, on the first line print \"IndSet\", and on the second line print $n$ integers\u00a0\u2014 the indices of the vertices in the independent set.\n\nIf there is no matching and no independent set of the specified size, print \"Impossible\" .\n\nIf there are several solutions, print any one only.\n\n\n-----Example-----\nInput\n4\n1 2\n1 3\n1 2\n1 2\n1 3\n1 2\n2 5\n1 2\n3 1\n1 4\n5 1\n1 6\n2 15\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6\n\nOutput\nMatching\n2\nIndSet\n1\nIndSet\n2 4\nMatching\n1 15\n"
    },
    {
        "prompt": "You are given a set of size $m$ with integer elements between $0$ and $2^{n}-1$ inclusive. Let's build an undirected graph on these integers in the following way: connect two integers $x$ and $y$ with an edge if and only if $x \\& y = 0$. Here $\\&$ is the bitwise AND operation. Count the number of connected components in that graph.\n\n\n-----Input-----\n\nIn the first line of input there are two integers $n$ and $m$ ($0 \\le n \\le 22$, $1 \\le m \\le 2^{n}$).\n\nIn the second line there are $m$ integers $a_1, a_2, \\ldots, a_m$ ($0 \\le a_{i} < 2^{n}$)\u00a0\u2014 the elements of the set. All $a_{i}$ are distinct.\n\n\n-----Output-----\n\nPrint the number of connected components.\n\n\n-----Examples-----\nInput\n2 3\n1 2 3\n\nOutput\n2\n\nInput\n5 5\n5 19 10 20 12\n\nOutput\n2\n\n\n\n-----Note-----\n\nGraph from first sample:\n\n$0$\n\nGraph from second sample:\n\n[Image]",
        "completion": "You are given a set of size $m$ with integer elements between $0$ and $2^{n}-1$ inclusive. Build an undirected graph on these integers in the following way: connect two integers $x$ and $y$ with an edge if and only if $x \\& y = 0$. Here $\\&$ is the bitwise AND operation. Count the number of connected components in that graph.\n\n\n-----Input-----\n\nIn the first line of input there are two integers $n$ and $m$ ($0 \\le n \\le 22$, $1 \\le m \\le 2^{n}$).\n\nIn the second line there are $m$ integers $a_1, a_2, \\ldots, a_m$ ($0 \\le a_{i} < 2^{n}$)\u00a0\u2014 the elements of the set. All $a_{i}$ are distinct.\n\n\n-----Output-----\n\nPrint the number of connected components.\n\n\n-----Examples-----\nInput\n2 3\n1 2 3\n\nOutput\n2\n\nInput\n5 5\n5 19 10 20 12\n\nOutput\n2\n"
    },
    {
        "prompt": "Dreamoon likes sequences very much. So he created a problem about the sequence that you can't find in OEIS: \n\nYou are given two integers $d, m$, find the number of arrays $a$, satisfying the following constraints:  The length of $a$ is $n$, $n \\ge 1$  $1 \\le a_1 < a_2 < \\dots < a_n \\le d$  Define an array $b$ of length $n$ as follows: $b_1 = a_1$, $\\forall i > 1, b_i = b_{i - 1} \\oplus a_i$, where $\\oplus$ is the bitwise exclusive-or (xor). After constructing an array $b$, the constraint $b_1 < b_2 < \\dots < b_{n - 1} < b_n$ should hold. \n\nSince the number of possible arrays may be too large, you need to find the answer modulo $m$.\n\n\n-----Input-----\n\nThe first line contains an integer $t$ ($1 \\leq t \\leq 100$) denoting the number of test cases in the input.\n\nEach of the next $t$ lines contains two integers $d, m$ ($1 \\leq d, m \\leq 10^9$).\n\nNote that $m$ is not necessary the prime!\n\n\n-----Output-----\n\nFor each test case, print the number of arrays $a$, satisfying all given constrains, modulo $m$.\n\n\n-----Example-----\nInput\n10\n1 1000000000\n2 999999999\n3 99999998\n4 9999997\n5 999996\n6 99995\n7 9994\n8 993\n9 92\n10 1\n\nOutput\n1\n3\n5\n11\n17\n23\n29\n59\n89\n0",
        "completion": "You are given two integers $d, m$, find the number of arrays $a$, \nsatisfying the following constraints:  \nThe length of $a$ is $n$, $n \\ge 1$  $1 \\le a_1 < a_2 < \\dots < a_n \\le d$  \nDefine an array $b$ of length $n$ as follows: $b_1 = a_1$, $\\forall i > 1, b_i = b_{i - 1} \\oplus a_i$, \nwhere $\\oplus$ is the bitwise exclusive-or. After constructing an array $b$, \nthe constraint $b_1 < b_2 < \\dots < b_{n - 1} < b_n$ should hold. \nYou need to find the answer modulo $m$.\n\n\n-----Input-----\n\nThe first line contains an integer $t$ ($1 \\leq t \\leq 100$) denoting the number of test cases in the input.\n\nEach of the next $t$ lines contains two integers $d, m$ ($1 \\leq d, m \\leq 10^9$).\n\nNote that $m$ is not necessary the prime!\n\n\n-----Output-----\n\nFor each test case, print the number of arrays $a$, satisfying all given constrains, modulo $m$.\n\n\n-----Example-----\nInput\n10\n1 1000000000\n2 999999999\n3 99999998\n4 9999997\n5 999996\n6 99995\n7 9994\n8 993\n9 92\n10 1\n\nOutput\n1\n3\n5\n11\n17\n23\n29\n59\n89\n0"
    },
    {
        "prompt": "Iahub is very proud of his recent discovery, propagating trees. Right now, he invented a new tree, called xor-tree. After this new revolutionary discovery, he invented a game for kids which uses xor-trees.\n\nThe game is played on a tree having n nodes, numbered from 1 to n. Each node i has an initial value init_{i}, which is either 0 or 1. The root of the tree is node 1.\n\nOne can perform several (possibly, zero) operations on the tree during the game. The only available type of operation is to pick a node x. Right after someone has picked node x, the value of node x flips, the values of sons of x remain the same, the values of sons of sons of x flips, the values of sons of sons of sons of x remain the same and so on.\n\nThe goal of the game is to get each node i to have value goal_{i}, which can also be only 0 or 1. You need to reach the goal of the game by using minimum number of operations.\n\n\n-----Input-----\n\nThe first line contains an integer n (1 \u2264 n \u2264 10^5). Each of the next n - 1 lines contains two integers u_{i} and v_{i} (1 \u2264 u_{i}, v_{i} \u2264 n; u_{i} \u2260 v_{i}) meaning there is an edge between nodes u_{i} and v_{i}. \n\nThe next line contains n integer numbers, the i-th of them corresponds to init_{i} (init_{i} is either 0 or 1). The following line also contains n integer numbers, the i-th number corresponds to goal_{i} (goal_{i} is either 0 or 1).\n\n\n-----Output-----\n\nIn the first line output an integer number cnt, representing the minimal number of operations you perform. Each of the next cnt lines should contain an integer x_{i}, representing that you pick a node x_{i}.\n\n\n-----Examples-----\nInput\n10\n2 1\n3 1\n4 2\n5 1\n6 2\n7 5\n8 6\n9 8\n10 5\n1 0 1 1 0 1 0 1 0 1\n1 0 1 0 0 1 1 1 0 1\n\nOutput\n2\n4\n7",
        "completion": "A tree having n nodes, numbered from 1 to n. Each node i has an initial value init_{i}, which is either 0 or 1. The root of the tree is node 1.\n\nOne can perform several (possibly, zero) operations on the tree. The only available type of operation is to pick a node x. Right after picking node x, the value of node x flips, the values of sons of x remain the same, the values of sons of sons of x flips, the values of sons of sons of sons of x remain the same and so on.\n\nThe goal is to get each node i to have value goal_{i}, which can also be only 0 or 1. You need to reach the goal  by using minimum number of operations.\n\n\n-----Input-----\n\nThe first line contains an integer n (1 \u2264 n \u2264 10^5). Each of the next n - 1 lines contains two integers u_{i} and v_{i} (1 \u2264 u_{i}, v_{i} \u2264 n; u_{i} \u2260 v_{i}) meaning there is an edge between nodes u_{i} and v_{i}. \n\nThe next line contains n integer numbers, the i-th of them corresponds to init_{i} (init_{i} is either 0 or 1). The following line also contains n integer numbers, the i-th number corresponds to goal_{i} (goal_{i} is either 0 or 1).\n\n\n-----Output-----\n\nIn the first line output an integer number cnt, representing the minimal number of operations you perform. Each of the next cnt lines should contain an integer x_{i}, representing that you pick a node x_{i}.\n\n\n-----Examples-----\nInput\n10\n2 1\n3 1\n4 2\n5 1\n6 2\n7 5\n8 6\n9 8\n10 5\n1 0 1 1 0 1 0 1 0 1\n1 0 1 0 0 1 1 1 0 1\n\nOutput\n2\n4\n7"
    },
    {
        "prompt": "You are given an array $a$ of $n$ positive integers.\n\nYou can use the following operation as many times as you like: select any integer $1 \\le k \\le n$ and do one of two things:   decrement by one $k$ of the first elements of the array.  decrement by one $k$ of the last elements of the array. \n\nFor example, if $n=5$ and $a=[3,2,2,1,4]$, then you can apply one of the following operations to it (not all possible options are listed below):   decrement from the first two elements of the array. After this operation $a=[2, 1, 2, 1, 4]$;  decrement from the last three elements of the array. After this operation $a=[3, 2, 1, 0, 3]$;  decrement from the first five elements of the array. After this operation $a=[2, 1, 1, 0, 3]$; \n\nDetermine if it is possible to make all the elements of the array equal to zero by applying a certain number of operations.\n\n\n-----Input-----\n\nThe first line contains one positive integer $t$ ($1 \\le t \\le 30000$)\u00a0\u2014 the number of test cases. Then $t$ test cases follow.\n\nEach test case begins with a line containing one integer $n$ ($1 \\le n \\le 30000$)\u00a0\u2014 the number of elements in the array.\n\nThe second line of each test case contains $n$ integers $a_1 \\ldots a_n$ ($1 \\le a_i \\le 10^6$).\n\nThe sum of $n$ over all test cases does not exceed $30000$.\n\n\n-----Output-----\n\nFor each test case, output on a separate line:   YES, if it is possible to make all elements of the array equal to zero by applying a certain number of operations.  NO, otherwise. \n\nThe letters in the words YES and NO can be outputed in any case.\n\n\n-----Example-----\nInput\n4\n3\n1 2 1\n5\n11 7 9 6 8\n5\n1 3 1 3 1\n4\n5 2 1 10\n\nOutput\nYES\nYES\nNO\nYES",
        "completion": "You are given an array $a$ of $n$ positive integers.\n\nYou can use the following operation as many times as you like: select any integer $1 \\le k \\le n$ and do one of two things:   decrement by one $k$ of the first elements of the array.  decrement by one $k$ of the last elements of the array. \n\nDetermine if it is possible to make all the elements of the array equal to zero by applying a certain number of operations.\n\n\n-----Input-----\n\nThe first line contains one positive integer $t$ ($1 \\le t \\le 30000$)\u00a0\u2014 the number of test cases. Then $t$ test cases follow.\n\nEach test case begins with a line containing one integer $n$ ($1 \\le n \\le 30000$)\u00a0\u2014 the number of elements in the array.\n\nThe second line of each test case contains $n$ integers $a_1 \\ldots a_n$ ($1 \\le a_i \\le 10^6$).\n\nThe sum of $n$ over all test cases does not exceed $30000$.\n\n\n-----Output-----\n\nFor each test case, output on a separate line:   YES, if it is possible to make all elements of the array equal to zero by applying a certain number of operations.  NO, otherwise. \n\nThe letters in the words YES and NO can be outputed in any case.\n\n\n-----Example-----\nInput\n4\n3\n1 2 1\n5\n11 7 9 6 8\n5\n1 3 1 3 1\n4\n5 2 1 10\n\nOutput\nYES\nYES\nNO\nYES"
    },
    {
        "prompt": "It is Borya's eleventh birthday, and he has got a great present: n cards with numbers. The i-th card has the number a_{i} written on it. Borya wants to put his cards in a row to get one greater number. For example, if Borya has cards with numbers 1, 31, and 12, and he puts them in a row in this order, he would get a number 13112.\n\nHe is only 11, but he already knows that there are n! ways to put his cards in a row. But today is a special day, so he is only interested in such ways that the resulting big number is divisible by eleven. So, the way from the previous paragraph is good, because 13112 = 1192 \u00d7 11, but if he puts the cards in the following order: 31, 1, 12, he would get a number 31112, it is not divisible by 11, so this way is not good for Borya. Help Borya to find out how many good ways to put the cards are there.\n\nBorya considers all cards different, even if some of them contain the same number. For example, if Borya has two cards with 1 on it, there are two good ways.\n\nHelp Borya, find the number of good ways to put the cards. This number can be large, so output it modulo 998244353.\n\n\n-----Input-----\n\nInput data contains multiple test cases. The first line of the input data contains an integer t\u00a0\u2014 the number of test cases (1 \u2264 t \u2264 100). The descriptions of test cases follow.\n\nEach test is described by two lines.\n\nThe first line contains an integer n (1 \u2264 n \u2264 2000)\u00a0\u2014 the number of cards in Borya's present.\n\nThe second line contains n integers a_{i} (1 \u2264 a_{i} \u2264 10^9)\u00a0\u2014 numbers written on the cards.\n\nIt is guaranteed that the total number of cards in all tests of one input data doesn't exceed 2000.\n\n\n-----Output-----\n\nFor each test case output one line: the number of ways to put the cards to the table so that the resulting big number was divisible by 11, print the number modulo 998244353.\n\n\n-----Example-----\nInput\n4\n2\n1 1\n3\n1 31 12\n3\n12345 67 84\n9\n1 2 3 4 5 6 7 8 9\n\nOutput\n2\n2\n2\n31680",
        "completion": "You are given n cards with numbers. The i-th card has the number a_{i} written on it. You have to put cards in a row to get one greater number.\n\nThere are n! ways to put his cards in a row. The resulting big number is divisible by eleven.\n\nFind out how many  ways are there to put the cards.\n\nConsiders all cards different, even if some of them contain the same number. This number can be large, so output it modulo 998244353.\n\n\n-----Input-----\n\nThe first line of the input data contains an integer t\u00a0\u2014 the number of test cases (1 \u2264 t \u2264 100). The descriptions of test cases follow.\n\nEach test is described by two lines.\n\nThe first line contains an integer n (1 \u2264 n \u2264 2000)\u00a0\u2014 the number of cards.\n\nThe second line contains n integers a_{i} (1 \u2264 a_{i} \u2264 10^9)\u00a0\u2014 numbers written on the cards.\n\nIt is guaranteed that the total number of cards in all tests of one input data doesn't exceed 2000.\n\n\n-----Output-----\n\nFor each test case output one line: the number of ways to put the cards to the table so that the resulting big number was divisible by 11, print the number modulo 998244353.\n\n\n-----Example-----\nInput\n4\n2\n1 1\n3\n1 31 12\n3\n12345 67 84\n9\n1 2 3 4 5 6 7 8 9\n\nOutput\n2\n2\n2\n31680"
    },
    {
        "prompt": "You are given several queries. Each query consists of three integers $p$, $q$ and $b$. You need to answer whether the result of $p/q$ in notation with base $b$ is a finite fraction.\n\nA fraction in notation with base $b$ is finite if it contains finite number of numerals after the decimal point. It is also possible that a fraction has zero numerals after the decimal point.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($1 \\le n \\le 10^5$)\u00a0\u2014 the number of queries.\n\nNext $n$ lines contain queries, one per line. Each line contains three integers $p$, $q$, and $b$ ($0 \\le p \\le 10^{18}$, $1 \\le q \\le 10^{18}$, $2 \\le b \\le 10^{18}$). All numbers are given in notation with base $10$.\n\n\n-----Output-----\n\nFor each question, in a separate line, print Finite if the fraction is finite and Infinite otherwise.\n\n\n-----Examples-----\nInput\n2\n6 12 10\n4 3 10\n\nOutput\nFinite\nInfinite\n\nInput\n4\n1 1 2\n9 36 2\n4 12 3\n3 5 4\n\nOutput\nFinite\nFinite\nFinite\nInfinite\n\n\n\n-----Note-----\n\n$\\frac{6}{12} = \\frac{1}{2} = 0,5_{10}$\n\n$\\frac{4}{3} = 1,(3)_{10}$\n\n$\\frac{9}{36} = \\frac{1}{4} = 0,01_2$\n\n$\\frac{4}{12} = \\frac{1}{3} = 0,1_3$",
        "completion": "You are given several queries. Each query consists of three integers $p$, $q$ and $b$. You need to answer whether the result of $p/q$ in notation with base $b$ is a finite fraction.\n\nA fraction in notation with base $b$ is finite if it contains finite number of numerals after the decimal point.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($1 \\le n \\le 10^5$)\u00a0\u2014 the number of queries.\n\nNext $n$ lines contain queries, one per line. Each line contains three integers $p$, $q$, and $b$ ($0 \\le p \\le 10^{18}$, $1 \\le q \\le 10^{18}$, $2 \\le b \\le 10^{18}$). All numbers are given in notation with base $10$.\n\n\n-----Output-----\n\nFor each question, in a separate line, print Finite if the fraction is finite and Infinite otherwise.\n\n\n-----Examples-----\nInput\n2\n6 12 10\n4 3 10\n\nOutput\nFinite\nInfinite\n\nInput\n4\n1 1 2\n9 36 2\n4 12 3\n3 5 4\n\nOutput\nFinite\nFinite\nFinite\nInfinite\n\n"
    },
    {
        "prompt": "You are given an array $a$ consisting of $n$ non-negative integers. You have to choose a non-negative integer $x$ and form a new array $b$ of size $n$ according to the following rule: for all $i$ from $1$ to $n$, $b_i = a_i \\oplus x$ ($\\oplus$ denotes the operation bitwise XOR).\n\nAn inversion in the $b$ array is a pair of integers $i$ and $j$ such that $1 \\le i < j \\le n$ and $b_i > b_j$.\n\nYou should choose $x$ in such a way that the number of inversions in $b$ is minimized. If there are several options for $x$ \u2014 output the smallest one.\n\n\n-----Input-----\n\nFirst line contains a single integer $n$ ($1 \\le n \\le 3 \\cdot 10^5$) \u2014 the number of elements in $a$.\n\nSecond line contains $n$ space-separated integers $a_1$, $a_2$, ..., $a_n$ ($0 \\le a_i \\le 10^9$), where $a_i$ is the $i$-th element of $a$.\n\n\n-----Output-----\n\nOutput two integers: the minimum possible number of inversions in $b$, and the minimum possible value of $x$, which achieves those number of inversions.\n\n\n-----Examples-----\nInput\n4\n0 1 3 2\n\nOutput\n1 0\n\nInput\n9\n10 7 9 10 7 5 5 3 5\n\nOutput\n4 14\n\nInput\n3\n8 10 3\n\nOutput\n0 8\n\n\n\n-----Note-----\n\nIn the first sample it is optimal to leave the array as it is by choosing $x = 0$.\n\nIn the second sample the selection of $x = 14$ results in $b$: $[4, 9, 7, 4, 9, 11, 11, 13, 11]$. It has $4$ inversions:\n\n  $i = 2$, $j = 3$;  $i = 2$, $j = 4$;  $i = 3$, $j = 4$;  $i = 8$, $j = 9$. \n\nIn the third sample the selection of $x = 8$ results in $b$: $[0, 2, 11]$. It has no inversions.",
        "completion": "You are given an array $a$ consisting of $n$ non-negative integers. You have to choose a non-negative integer $x$ and form a new array $b$ of size $n$ according to the following rule: for all $i$ from $1$ to $n$, $b_i = a_i \\oplus x$ where $\\oplus$ denotes the operation bitwise XOR.\n\nAn inversion in the $b$ array is a pair of integers $i$ and $j$ such that $1 \\le i < j \\le n$ and $b_i > b_j$.\n\nYou should choose $x$ in such a way that the number of inversions in $b$ is minimized. If there are several options for $x$ \u2014 output the smallest one.\n\n\n-----Input-----\n\nFirst line contains a single integer $n$ ($1 \\le n \\le 3 \\cdot 10^5$) \u2014 the number of elements in $a$.\n\nSecond line contains $n$ space-separated integers $a_1$, $a_2$, ..., $a_n$ ($0 \\le a_i \\le 10^9$), where $a_i$ is the $i$-th element of $a$.\n\n\n-----Output-----\n\nOutput two integers: the minimum possible number of inversions in $b$, and the minimum possible value of $x$, which achieves those number of inversions.\n\n\n-----Examples-----\nInput\n4\n0 1 3 2\n\nOutput\n1 0\n\nInput\n9\n10 7 9 10 7 5 5 3 5\n\nOutput\n4 14\n\nInput\n3\n8 10 3\n\nOutput\n0 8\n"
    },
    {
        "prompt": "Little Petya likes points a lot. Recently his mom has presented him n points lying on the line OX. Now Petya is wondering in how many ways he can choose three distinct points so that the distance between the two farthest of them doesn't exceed d.\n\nNote that the order of the points inside the group of three chosen points doesn't matter.\n\n\n-----Input-----\n\nThe first line contains two integers: n and d (1 \u2264 n \u2264 10^5;\u00a01 \u2264 d \u2264 10^9). The next line contains n integers x_1, x_2, ..., x_{n}, their absolute value doesn't exceed 10^9 \u2014 the x-coordinates of the points that Petya has got.\n\nIt is guaranteed that the coordinates of the points in the input strictly increase.\n\n\n-----Output-----\n\nPrint a single integer \u2014 the number of groups of three points, where the distance between two farthest points doesn't exceed d.\n\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\n\n-----Examples-----\nInput\n4 3\n1 2 3 4\n\nOutput\n4\n\nInput\n4 2\n-3 -2 -1 0\n\nOutput\n2\n\nInput\n5 19\n1 10 20 30 50\n\nOutput\n1\n\n\n\n-----Note-----\n\nIn the first sample any group of three points meets our conditions.\n\nIn the seconds sample only 2 groups of three points meet our conditions: {-3, -2, -1} and {-2, -1, 0}.\n\nIn the third sample only one group does: {1, 10, 20}.",
        "completion": "Given a list of n points in one-dimensional space, find the number of ways to select 3 points such that the distance between any two is not greater than d.\n\n\n-----Input-----\n\nThe first line contains two integers: n and d (1 \u2264 n \u2264 10^5;\u00a01 \u2264 d \u2264 10^9). The next line contains n integers x_1, x_2, ..., x_{n}, their absolute value doesn't exceed 10^9 \u2014 the x-coordinates of the points in the list.\n\nIt is guaranteed that the coordinates of the points in the input strictly increase.\n\n\n-----Output-----\n\nPrint a single integer \u2014 the number of groups of three points, where the distance between two farthest points doesn't exceed d.\n\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\n\n-----Examples-----\nInput\n4 3\n1 2 3 4\n\nOutput\n4\n\nInput\n4 2\n-3 -2 -1 0\n\nOutput\n2\n\nInput\n5 19\n1 10 20 30 50\n\nOutput\n1\n\n\n\n-----Note-----\n\nIn the first sample any group of three points meets our conditions.\n\nIn the seconds sample only 2 groups of three points meet our conditions: {-3, -2, -1} and {-2, -1, 0}.\n\nIn the third sample only one group does: {1, 10, 20}."
    },
    {
        "prompt": "Let us define two functions f and g on positive integer numbers.  $f(n) = \\text{product of non-zero digits of} n$\n\n$g(n) = \\left\\{\\begin{array}{ll}{n} & {\\text{if} n < 10} \\\\{g(f(n))} & {\\text{otherwise}} \\end{array} \\right.$ \n\nYou need to process Q queries. In each query, you will be given three integers l, r and k. You need to print the number of integers x between l and r inclusive, such that g(x) = k. \n\n\n-----Input-----\n\nThe first line of the input contains an integer Q (1 \u2264 Q \u2264 2 \u00d7 10^5) representing the number of queries. \n\nQ lines follow, each of which contains 3 integers l, r and k (1 \u2264 l \u2264 r \u2264 10^6, 1 \u2264 k \u2264 9).\n\n\n-----Output-----\n\nFor each query, print a single line containing the answer for that query.\n\n\n-----Examples-----\nInput\n4\n22 73 9\n45 64 6\n47 55 7\n2 62 4\n\nOutput\n1\n4\n0\n8\n\nInput\n4\n82 94 6\n56 67 4\n28 59 9\n39 74 4\n\nOutput\n3\n1\n1\n5\n\n\n\n-----Note-----\n\nIn the first example:  g(33) = 9 as g(33) = g(3 \u00d7 3) = g(9) = 9  g(47) = g(48) = g(60) = g(61) = 6  There are no such integers between 47 and 55.  g(4) = g(14) = g(22) = g(27) = g(39) = g(40) = g(41) = g(58) = 4",
        "completion": "$f(n) = \\text{product of non-zero digits of} n$\n\n$g(n) = \\left\\{\\begin{array}{ll}{n} & {\\text{if} n < 10} \\\\{g(f(n))} & {\\text{otherwise}} \\end{array} \\right.$ \n\nYou need to process Q queries. In each query, you will be given three integers l, r and k. You need to print the number of integers x between l and r inclusive, such that g(x) = k. \n\n\n-----Input-----\n\nThe first line of the input contains an integer Q (1 \u2264 Q \u2264 2 \u00d7 10^5) representing the number of queries. \n\nQ lines follow, each of which contains 3 integers l, r and k (1 \u2264 l \u2264 r \u2264 10^6, 1 \u2264 k \u2264 9).\n\n\n-----Output-----\n\nFor each query, print a single line containing the answer for that query.\n\n\n-----Examples-----\nInput\n4\n22 73 9\n45 64 6\n47 55 7\n2 62 4\n\nOutput\n1\n4\n0\n8\n\nInput\n4\n82 94 6\n56 67 4\n28 59 9\n39 74 4\n\nOutput\n3\n1\n1\n5\n\n"
    },
    {
        "prompt": "You are given two binary strings $a$ and $b$ of the same length. You can perform the following two operations on the string $a$:\n\nSwap any two bits at indices $i$ and $j$ respectively ($1 \\le i, j \\le n$), the cost of this operation is $|i - j|$, that is, the absolute difference between $i$ and $j$.  Select any arbitrary index $i$ ($1 \\le i \\le n$) and flip (change $0$ to $1$ or $1$ to $0$) the bit at this index. The cost of this operation is $1$. \n\nFind the minimum cost to make the string $a$ equal to $b$. It is not allowed to modify string $b$.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($1 \\le n \\le 10^6$)\u00a0\u2014 the length of the strings $a$ and $b$.\n\nThe second and third lines contain strings $a$ and $b$ respectively.\n\nBoth strings $a$ and $b$ have length $n$ and contain only '0' and '1'.\n\n\n-----Output-----\n\nOutput the minimum cost to make the string $a$ equal to $b$.\n\n\n-----Examples-----\nInput\n3\n100\n001\n\nOutput\n2\n\nInput\n4\n0101\n0011\n\nOutput\n1\n\n\n\n-----Note-----\n\nIn the first example, one of the optimal solutions is to flip index $1$ and index $3$, the string $a$ changes in the following way: \"100\" $\\to$ \"000\" $\\to$ \"001\". The cost is $1 + 1 = 2$.\n\nThe other optimal solution is to swap bits and indices $1$ and $3$, the string $a$ changes then \"100\" $\\to$ \"001\", the cost is also $|1 - 3| = 2$.\n\nIn the second example, the optimal solution is to swap bits at indices $2$ and $3$, the string $a$ changes as \"0101\" $\\to$ \"0011\". The cost is $|2 - 3| = 1$.",
        "completion": "You are given two binary strings $a$ and $b$ of the same length. You can perform the following two operations on the string $a$:\n\nSwap any two bits at indices $i$ and $j$ respectively ($1 \\le i, j \\le n$), the cost of this operation is $|i - j|$, that is, the absolute difference between $i$ and $j$.  Select any arbitrary index $i$ ($1 \\le i \\le n$) and flip the bit at this index. The cost of this operation is $1$. \n\nFind the minimum cost to make the string $a$ equal to $b$. It is not allowed to modify string $b$.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($1 \\le n \\le 10^6$)\u00a0\u2014 the length of the strings $a$ and $b$.\n\nThe second and third lines contain strings $a$ and $b$ respectively.\n\nBoth strings $a$ and $b$ have length $n$ and contain only '0' and '1'.\n\n\n-----Output-----\n\nOutput the minimum cost to make the string $a$ equal to $b$.\n\n\n-----Examples-----\nInput\n3\n100\n001\n\nOutput\n2\n\nInput\n4\n0101\n0011\n\nOutput\n1\n\n"
    },
    {
        "prompt": "You are given an array $a$ of $n$ integers.\n\nYou want to make all elements of $a$ equal to zero by doing the following operation exactly three times:  Select a segment, for each number in this segment we can add a multiple of $len$ to it, where $len$ is the length of this segment (added integers can be different). \n\nIt can be proven that it is always possible to make all elements of $a$ equal to zero.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($1 \\le n \\le 100\\,000$): the number of elements of the array.\n\nThe second line contains $n$ elements of an array $a$ separated by spaces: $a_1, a_2, \\dots, a_n$ ($-10^9 \\le a_i \\le 10^9$).\n\n\n-----Output-----\n\nThe output should contain six lines representing three operations.\n\nFor each operation, print two lines:\n\n  The first line contains two integers $l$, $r$ ($1 \\le l \\le r \\le n$): the bounds of the selected segment.\n\n  The second line contains $r-l+1$ integers $b_l, b_{l+1}, \\dots, b_r$ ($-10^{18} \\le b_i \\le 10^{18}$): the numbers to add to $a_l, a_{l+1}, \\ldots, a_r$, respectively; $b_i$ should be divisible by $r - l + 1$. \n\n\n-----Example-----\nInput\n4\n1 3 2 4\n\nOutput\n1 1 \n-1\n3 4\n4 2\n2 4\n-3 -6 -6",
        "completion": "You are given an array $a$ of $n$ integers.\n\nYou want to make all elements of $a$ equal to zero by doing the following operation exactly three times:  Select a segment, for each number in this segment we can add a multiple of $len$ to it, where $len$ is the length of this segment. \n\nIt is always possible to make all elements of $a$ equal to zero.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($1 \\le n \\le 100\\,000$): the number of elements of the array.\n\nThe second line contains $n$ elements of an array $a$ separated by spaces: $a_1, a_2, \\dots, a_n$ ($-10^9 \\le a_i \\le 10^9$).\n\n\n-----Output-----\n\nThe output should contain six lines representing three operations.\n\nFor each operation, print two lines:\n\n  The first line contains two integers $l$, $r$ ($1 \\le l \\le r \\le n$): the bounds of the selected segment.\n\n  The second line contains $r-l+1$ integers $b_l, b_{l+1}, \\dots, b_r$ ($-10^{18} \\le b_i \\le 10^{18}$): the numbers to add to $a_l, a_{l+1}, \\ldots, a_r$, respectively; $b_i$ should be divisible by $r - l + 1$. \n\n\n-----Example-----\nInput\n4\n1 3 2 4\n\nOutput\n1 1 \n-1\n3 4\n4 2\n2 4\n-3 -6 -6"
    },
    {
        "prompt": "You are given a string S consisting of a,b and c. Find the number of strings that can be possibly obtained by repeatedly performing the following operation zero or more times, modulo 998244353:\n - Choose an integer i such that 1\\leq i\\leq |S|-1 and the i-th and (i+1)-th characters in S are different. Replace each of the i-th and (i+1)-th characters in S with the character that differs from both of them (among a, b and c).\n\n-----Constraints-----\n - 2 \\leq |S| \\leq 2 \u00d7 10^5\n - S consists of a, b and c.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nS\n\n-----Output-----\nPrint the number of strings that can be possibly obtained by repeatedly performing the operation, modulo 998244353.\n\n-----Sample Input-----\nabc\n\n-----Sample Output-----\n3\n\nabc, aaa and ccc can be obtained.",
        "completion": "You are given a string S consisting of a,b and c. Find the number of strings that can be possibly obtained by repeatedly performing the following operation zero or more times, modulo 998244353:\n - Choose an integer i such that 1\\leq i\\leq |S|-1 and the i-th and (i+1)-th characters in S are different. Replace each of the i-th and (i+1)-th characters in S with the character that differs from both of them.\n\n-----Constraints-----\n - 2 \\leq |S| \\leq 2 \u00d7 10^5\n - S consists of a, b and c.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nS\n\n-----Output-----\nPrint the number of strings that can be possibly obtained by repeatedly performing the operation, modulo 998244353.\n\n-----Sample Input-----\nabc\n\n-----Sample Output-----\n3\n\n"
    },
    {
        "prompt": "Sasha likes programming. Once, during a very long contest, Sasha decided that he was a bit tired and needed to relax. So he did. But since Sasha isn't an ordinary guy, he prefers to relax unusually. During leisure time Sasha likes to upsolve unsolved problems because upsolving is very useful.\n\nTherefore, Sasha decided to upsolve the following problem:\n\nYou have an array $a$ with $n$ integers. You need to count the number of funny pairs $(l, r)$ $(l \\leq r)$. To check if a pair $(l, r)$ is a funny pair, take $mid = \\frac{l + r - 1}{2}$, then if $r - l + 1$ is an even number and $a_l \\oplus a_{l+1} \\oplus \\ldots \\oplus a_{mid} = a_{mid + 1} \\oplus a_{mid + 2} \\oplus \\ldots \\oplus a_r$, then the pair is funny. In other words, $\\oplus$ of elements of the left half of the subarray from $l$ to $r$ should be equal to $\\oplus$ of elements of the right half. Note that $\\oplus$ denotes the bitwise XOR operation.\n\nIt is time to continue solving the contest, so Sasha asked you to solve this task.\n\n\n-----Input-----\n\nThe first line contains one integer $n$ ($2 \\le n \\le 3 \\cdot 10^5$)\u00a0\u2014 the size of the array.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($0 \\le a_i < 2^{20}$)\u00a0\u2014 array itself.\n\n\n-----Output-----\n\nPrint one integer\u00a0\u2014 the number of funny pairs. You should consider only pairs where $r - l + 1$ is even number.\n\n\n-----Examples-----\nInput\n5\n1 2 3 4 5\n\nOutput\n1\n\nInput\n6\n3 2 2 3 7 6\n\nOutput\n3\n\nInput\n3\n42 4 2\n\nOutput\n0\n\n\n\n-----Note-----\n\nBe as cool as Sasha, upsolve problems!\n\nIn the first example, the only funny pair is $(2, 5)$, as $2 \\oplus 3 = 4 \\oplus 5 = 1$.\n\nIn the second example, funny pairs are $(2, 3)$, $(1, 4)$, and $(3, 6)$.\n\nIn the third example, there are no funny pairs.",
        "completion": "You have an array $a$ with $n$ integers. You need to count the number of funny pairs $(l, r)$ $(l \\leq r)$. To check if a pair $(l, r)$ is a funny pair, take $mid = \\frac{l + r - 1}{2}$, then if $r - l + 1$ is an even number and $a_l \\oplus a_{l+1} \\oplus \\ldots \\oplus a_{mid} = a_{mid + 1} \\oplus a_{mid + 2} \\oplus \\ldots \\oplus a_r$, then the pair is funny. $\\oplus$ denotes the bitwise XOR operation.\n\n-----Input-----\n\nThe first line contains one integer $n$ ($2 \\le n \\le 3 \\cdot 10^5$)\u00a0\u2014 the size of the array.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($0 \\le a_i < 2^{20}$)\u00a0\u2014 array itself.\n\n\n-----Output-----\n\nPrint one integer\u00a0\u2014 the number of funny pairs. You should consider only pairs where $r - l + 1$ is even number.\n\n\n-----Examples-----\nInput\n5\n1 2 3 4 5\n\nOutput\n1\n\nInput\n6\n3 2 2 3 7 6\n\nOutput\n3\n\nInput\n3\n42 4 2\n\nOutput\n0\n"
    },
    {
        "prompt": "Sonya was unable to think of a story for this problem, so here comes the formal description.\n\nYou are given the array containing n positive integers. At one turn you can pick any element and increase or decrease it by 1. The goal is the make the array strictly increasing by making the minimum possible number of operations. You are allowed to change elements in any way, they can become negative or equal to 0.\n\n\n-----Input-----\n\nThe first line of the input contains a single integer n (1 \u2264 n \u2264 3000)\u00a0\u2014 the length of the array.\n\nNext line contains n integer a_{i} (1 \u2264 a_{i} \u2264 10^9).\n\n\n-----Output-----\n\nPrint the minimum number of operation required to make the array strictly increasing.\n\n\n-----Examples-----\nInput\n7\n2 1 5 11 5 9 11\n\nOutput\n9\n\nInput\n5\n5 4 3 2 1\n\nOutput\n12\n\n\n\n-----Note-----\n\nIn the first sample, the array is going to look as follows:\n\n2 3 5 6 7 9 11\n\n|2 - 2| + |1 - 3| + |5 - 5| + |11 - 6| + |5 - 7| + |9 - 9| + |11 - 11| = 9\n\nAnd for the second sample:\n\n1 2 3 4 5\n\n|5 - 1| + |4 - 2| + |3 - 3| + |2 - 4| + |1 - 5| = 12",
        "completion": "\nYou are given the array containing n positive integers. At one turn you can pick any element and increase or decrease it by 1. The goal is the make the array strictly increasing by making the minimum possible number of operations. You are allowed to change elements in any way, they can become negative or equal to 0.\n\n\n-----Input-----\n\nThe first line of the input contains a single integer n (1 \u2264 n \u2264 3000)\u00a0\u2014 the length of the array.\n\nNext line contains n integer a_{i} (1 \u2264 a_{i} \u2264 10^9).\n\n\n-----Output-----\n\nPrint the minimum number of operation required to make the array strictly increasing.\n\n\n-----Examples-----\nInput\n7\n2 1 5 11 5 9 11\n\nOutput\n9\n\nInput\n5\n5 4 3 2 1\n\nOutput\n12\n\n\n\n-----Note-----\n\nIn the first sample, the array is going to look as follows:\n\n2 3 5 6 7 9 11\n\n|2 - 2| + |1 - 3| + |5 - 5| + |11 - 6| + |5 - 7| + |9 - 9| + |11 - 11| = 9\n\nAnd for the second sample:\n\n1 2 3 4 5\n\n|5 - 1| + |4 - 2| + |3 - 3| + |2 - 4| + |1 - 5| = 12"
    },
    {
        "prompt": "You are given $n$ points on the plane. The polygon formed from all the $n$ points is strictly convex, that is, the polygon is convex, and there are no three collinear points (i.e. lying in the same straight line). The points are numbered from $1$ to $n$, in clockwise order.\n\nWe define the distance between two points $p_1 = (x_1, y_1)$ and $p_2 = (x_2, y_2)$ as their Manhattan distance: $$d(p_1, p_2) = |x_1 - x_2| + |y_1 - y_2|.$$\n\nFurthermore, we define the perimeter of a polygon, as the sum of Manhattan distances between all adjacent pairs of points on it; if the points on the polygon are ordered as $p_1, p_2, \\ldots, p_k$ $(k \\geq 3)$, then the perimeter of the polygon is $d(p_1, p_2) + d(p_2, p_3) + \\ldots + d(p_k, p_1)$.\n\nFor some parameter $k$, let's consider all the polygons that can be formed from the given set of points, having any $k$ vertices, such that the polygon is not self-intersecting. For each such polygon, let's consider its perimeter. Over all such perimeters, we define $f(k)$ to be the maximal perimeter.\n\nPlease note, when checking whether a polygon is self-intersecting, that the edges of a polygon are still drawn as straight lines. For instance, in the following pictures:\n\n [Image] \n\nIn the middle polygon, the order of points ($p_1, p_3, p_2, p_4$) is not valid, since it is a self-intersecting polygon. The right polygon (whose edges resemble the Manhattan distance) has the same order and is not self-intersecting, but we consider edges as straight lines. The correct way to draw this polygon is ($p_1, p_2, p_3, p_4$), which is the left polygon.\n\nYour task is to compute $f(3), f(4), \\ldots, f(n)$. In other words, find the maximum possible perimeter for each possible number of points (i.e. $3$ to $n$).\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($3 \\leq n \\leq 3\\cdot 10^5$)\u00a0\u2014 the number of points. \n\nEach of the next $n$ lines contains two integers $x_i$ and $y_i$ ($-10^8 \\leq x_i, y_i \\leq 10^8$)\u00a0\u2014 the coordinates of point $p_i$.\n\nThe set of points is guaranteed to be convex, all points are distinct, the points are ordered in clockwise order, and there will be no three collinear points.\n\n\n-----Output-----\n\nFor each $i$ ($3\\leq i\\leq n$), output $f(i)$.\n\n\n-----Examples-----\nInput\n4\n2 4\n4 3\n3 0\n1 3\n\nOutput\n12 14 \nInput\n3\n0 0\n0 2\n2 0\n\nOutput\n8 \n\n\n-----Note-----\n\nIn the first example, for $f(3)$, we consider four possible polygons:   ($p_1, p_2, p_3$), with perimeter $12$.  ($p_1, p_2, p_4$), with perimeter $8$.  ($p_1, p_3, p_4$), with perimeter $12$.  ($p_2, p_3, p_4$), with perimeter $12$. \n\nFor $f(4)$, there is only one option, taking all the given points. Its perimeter $14$.\n\nIn the second example, there is only one possible polygon. Its perimeter is $8$.",
        "completion": "You are given $n$ points on the plane. The polygon formed from all the $n$ points is strictly convex, that is, the polygon is convex, and there are no three collinear points. The points are numbered from $1$ to $n$, in clockwise order.\n\nWe define the distance between two points $p_1 = (x_1, y_1)$ and $p_2 = (x_2, y_2)$ as their Manhattan distance: $$d(p_1, p_2) = |x_1 - x_2| + |y_1 - y_2|.$$\n\nFurthermore, we define the perimeter of a polygon, as the sum of Manhattan distances between all adjacent pairs of points on it; if the points on the polygon are ordered as $p_1, p_2, \\ldots, p_k$ $(k \\geq 3)$, then the perimeter of the polygon is $d(p_1, p_2) + d(p_2, p_3) + \\ldots + d(p_k, p_1)$.\n\nFor some parameter $k$, let's consider all the polygons that can be formed from the given set of points, having any $k$ vertices, such that the polygon is not self-intersecting. For each such polygon, let's consider its perimeter. Over all such perimeters, we define $f(k)$ to be the maximal perimeter.\n\nIn the middle polygon, the order of points ($p_1, p_3, p_2, p_4$) is not valid, since it is a self-intersecting polygon. The right polygon (whose edges resemble the Manhattan distance) has the same order and is not self-intersecting, but we consider edges as straight lines. The correct way to draw this polygon is ($p_1, p_2, p_3, p_4$), which is the left polygon.\n\nYour task is to compute $f(3), f(4), \\ldots, f(n)$. In other words, find the maximum possible perimeter for each possible number of points (i.e. $3$ to $n$).\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($3 \\leq n \\leq 3\\cdot 10^5$)\u00a0\u2014 the number of points. \n\nEach of the next $n$ lines contains two integers $x_i$ and $y_i$ ($-10^8 \\leq x_i, y_i \\leq 10^8$)\u00a0\u2014 the coordinates of point $p_i$.\n\nThe set of points is guaranteed to be convex, all points are distinct, the points are ordered in clockwise order, and there will be no three collinear points.\n\n\n-----Output-----\n\nFor each $i$ ($3\\leq i\\leq n$), output $f(i)$.\n\n\n-----Examples-----\nInput\n4\n2 4\n4 3\n3 0\n1 3\n\nOutput\n12 14 \nInput\n3\n0 0\n0 2\n2 0\n\nOutput\n8 \n\n"
    },
    {
        "prompt": "You are given a sequence of n integers a_1, a_2, ..., a_{n}. \n\nDetermine a real number x such that the weakness of the sequence a_1 - x, a_2 - x, ..., a_{n} - x is as small as possible.\n\nThe weakness of a sequence is defined as the maximum value of the poorness over all segments (contiguous subsequences) of a sequence.\n\nThe poorness of a segment is defined as the absolute value of sum of the elements of segment.\n\n\n-----Input-----\n\nThe first line contains one integer n (1 \u2264 n \u2264 200 000), the length of a sequence.\n\nThe second line contains n integers a_1, a_2, ..., a_{n} (|a_{i}| \u2264 10 000).\n\n\n-----Output-----\n\nOutput a real number denoting the minimum possible weakness of a_1 - x, a_2 - x, ..., a_{n} - x. Your answer will be considered correct if its relative or absolute error doesn't exceed 10^{ - 6}.\n\n\n-----Examples-----\nInput\n3\n1 2 3\n\nOutput\n1.000000000000000\n\nInput\n4\n1 2 3 4\n\nOutput\n2.000000000000000\n\nInput\n10\n1 10 2 9 3 8 4 7 5 6\n\nOutput\n4.500000000000000\n\n\n\n-----Note-----\n\nFor the first case, the optimal value of x is 2 so the sequence becomes  - 1, 0, 1 and the max poorness occurs at the segment \"-1\" or segment \"1\". The poorness value (answer) equals to 1 in this case. \n\nFor the second sample the optimal value of x is 2.5 so the sequence becomes  - 1.5,  - 0.5, 0.5, 1.5 and the max poorness occurs on segment \"-1.5 -0.5\" or \"0.5 1.5\". The poorness value (answer) equals to 2 in this case.",
        "completion": "You are given a sequence of n integers a_1, a_2, ..., a_{n}. \n\nDetermine a real number x such that the weakness of the sequence a_1 - x, a_2 - x, ..., a_{n} - x is as small as possible.\n\nThe weakness of a sequence is defined as the maximum value of the poorness over all segments of a sequence.\n\nThe poorness of a segment is defined as the absolute value of sum of the elements of segment.\n\n\n-----Input-----\n\nThe first line contains one integer n (1 \u2264 n \u2264 200 000), the length of a sequence.\n\nThe second line contains n integers a_1, a_2, ..., a_{n} (|a_{i}| \u2264 10 000).\n\n\n-----Output-----\n\nOutput a real number denoting the minimum possible weakness of a_1 - x, a_2 - x, ..., a_{n} - x. Your answer will be considered correct if its relative or absolute error doesn't exceed 10^{ - 6}.\n\n\n-----Examples-----\nInput\n3\n1 2 3\n\nOutput\n1.000000000000000\n\nInput\n4\n1 2 3 4\n\nOutput\n2.000000000000000\n\nInput\n10\n1 10 2 9 3 8 4 7 5 6\n\nOutput\n4.500000000000000\n\n"
    },
    {
        "prompt": "Sasha is taking part in a programming competition. In one of the problems she should check if some rooted trees are isomorphic or not. She has never seen this problem before, but, being an experienced participant, she guessed that she should match trees to some sequences and then compare these sequences instead of trees. Sasha wants to match each tree with a sequence a_0, a_1, ..., a_{h}, where h is the height of the tree, and a_{i} equals to the number of vertices that are at distance of i edges from root. \n\nUnfortunately, this time Sasha's intuition was wrong, and there could be several trees matching the same sequence. To show it, you need to write a program that, given the sequence a_{i}, builds two non-isomorphic rooted trees that match that sequence, or determines that there is only one such tree.\n\nTwo rooted trees are isomorphic, if you can reenumerate the vertices of the first one in such a way, that the index of the root becomes equal the index of the root of the second tree, and these two trees become equal.\n\nThe height of a rooted tree is the maximum number of edges on a path from the root to any other vertex.\n\n\n-----Input-----\n\nThe first line contains a single integer h (2 \u2264 h \u2264 10^5)\u00a0\u2014 the height of the tree.\n\nThe second line contains h + 1 integers\u00a0\u2014 the sequence a_0, a_1, ..., a_{h} (1 \u2264 a_{i} \u2264 2\u00b710^5). The sum of all a_{i} does not exceed 2\u00b710^5. It is guaranteed that there is at least one tree matching this sequence.\n\n\n-----Output-----\n\nIf there is only one tree matching this sequence, print \"perfect\".\n\nOtherwise print \"ambiguous\" in the first line. In the second and in the third line print descriptions of two trees in the following format: in one line print $\\sum_{i = 0}^{h} a_{i}$ integers, the k-th of them should be the parent of vertex k or be equal to zero, if the k-th vertex is the root.\n\nThese treese should be non-isomorphic and should match the given sequence.\n\n\n-----Examples-----\nInput\n2\n1 1 1\n\nOutput\nperfect\n\nInput\n2\n1 2 2\n\nOutput\nambiguous\n0 1 1 3 3\n0 1 1 3 2\n\n\n\n-----Note-----\n\nThe only tree in the first example and the two printed trees from the second example are shown on the picture:\n\n$88$",
        "completion": "You need to write a program that, given the sequence a_{i}, builds two non-isomorphic rooted trees that match that sequence, or determines that there is only one such tree.\n\nTwo rooted trees are isomorphic, if you can reenumerate the vertices of the first one in such a way, that the index of the root becomes equal the index of the root of the second tree, and these two trees become equal.\n\nThe height of a rooted tree is the maximum number of edges on a path from the root to any other vertex.\n\n\n-----Input-----\n\nThe first line contains a single integer h (2 \u2264 h \u2264 10^5)\u00a0\u2014 the height of the tree.\n\nThe second line contains h + 1 integers\u00a0\u2014 the sequence a_0, a_1, ..., a_{h} (1 \u2264 a_{i} \u2264 2\u00b710^5). The sum of all a_{i} does not exceed 2\u00b710^5. It is guaranteed that there is at least one tree matching this sequence.\n\n\n-----Output-----\n\nIf there is only one tree matching this sequence, print \"perfect\".\n\nOtherwise print \"ambiguous\" in the first line. In the second and in the third line print descriptions of two trees in the following format: in one line print $\\sum_{i = 0}^{h} a_{i}$ integers, the k-th of them should be the parent of vertex k or be equal to zero, if the k-th vertex is the root.\n\nThese treese should be non-isomorphic and should match the given sequence.\n\n\n-----Examples-----\nInput\n2\n1 1 1\n\nOutput\nperfect\n\nInput\n2\n1 2 2\n\nOutput\nambiguous\n0 1 1 3 3\n0 1 1 3 2\n\n"
    },
    {
        "prompt": "You are given a permutation $p_1, p_2, \\ldots, p_n$.\n\nIn one move you can swap two adjacent values.\n\nYou want to perform a minimum number of moves, such that in the end there will exist a subsegment $1,2,\\ldots, k$, in other words in the end there should be an integer $i$, $1 \\leq i \\leq n-k+1$ such that $p_i = 1, p_{i+1} = 2, \\ldots, p_{i+k-1}=k$.\n\nLet $f(k)$ be the minimum number of moves that you need to make a subsegment with values $1,2,\\ldots,k$ appear in the permutation.\n\nYou need to find $f(1), f(2), \\ldots, f(n)$.\n\n\n-----Input-----\n\nThe first line of input contains one integer $n$ ($1 \\leq n \\leq 200\\,000$): the number of elements in the permutation.\n\nThe next line of input contains $n$ integers $p_1, p_2, \\ldots, p_n$: given permutation ($1 \\leq p_i \\leq n$).\n\n\n-----Output-----\n\nPrint $n$ integers, the minimum number of moves that you need to make a subsegment with values $1,2,\\ldots,k$ appear in the permutation, for $k=1, 2, \\ldots, n$.\n\n\n-----Examples-----\nInput\n5\n5 4 3 2 1\n\nOutput\n0 1 3 6 10 \n\nInput\n3\n1 2 3\n\nOutput\n0 0 0",
        "completion": "You are given a permutation $p_1, p_2, \\ldots, p_n$.\n\nIn one move you can swap two adjacent values.\n\nYou want to perform a minimum number of moves, such that in the end there should be an integer $i$, $1 \\leq i \\leq n-k+1$ such that $p_i = 1, p_{i+1} = 2, \\ldots, p_{i+k-1}=k$.\n\nLet $f(k)$ be the minimum number of moves that you need to make a subsegment with values $1,2,\\ldots,k$ appear in the permutation.\n\nYou need to find $f(1), f(2), \\ldots, f(n)$.\n\n\n-----Input-----\n\nThe first line of input contains one integer $n$ ($1 \\leq n \\leq 200\\,000$): the number of elements in the permutation.\n\nThe next line of input contains $n$ integers $p_1, p_2, \\ldots, p_n$: given permutation ($1 \\leq p_i \\leq n$).\n\n\n-----Output-----\n\nPrint $n$ integers, the minimum number of moves that you need to make a subsegment with values $1,2,\\ldots,k$ appear in the permutation, for $k=1, 2, \\ldots, n$.\n\n\n-----Examples-----\nInput\n5\n5 4 3 2 1\n\nOutput\n0 1 3 6 10 \n\nInput\n3\n1 2 3\n\nOutput\n0 0 0"
    },
    {
        "prompt": "Toad Rash has a binary string $s$. A binary string consists only of zeros and ones.\n\nLet $n$ be the length of $s$.\n\nRash needs to find the number of such pairs of integers $l$, $r$ that $1 \\leq l \\leq r \\leq n$ and there is at least one pair of integers $x$, $k$ such that $1 \\leq x, k \\leq n$, $l \\leq x < x + 2k \\leq r$, and $s_x = s_{x+k} = s_{x+2k}$.\n\nFind this number of pairs for Rash.\n\n\n-----Input-----\n\nThe first line contains the string $s$ ($1 \\leq |s| \\leq 300\\,000$), consisting of zeros and ones.\n\n\n-----Output-----\n\nOutput one integer: the number of such pairs of integers $l$, $r$ that $1 \\leq l \\leq r \\leq n$ and there is at least one pair of integers $x$, $k$ such that $1 \\leq x, k \\leq n$, $l \\leq x < x + 2k \\leq r$, and $s_x = s_{x+k} = s_{x+2k}$.\n\n\n-----Examples-----\nInput\n010101\n\nOutput\n3\n\nInput\n11001100\n\nOutput\n0\n\n\n\n-----Note-----\n\nIn the first example, there are three $l$, $r$ pairs we need to count: $1$, $6$; $2$, $6$; and $1$, $5$.\n\nIn the second example, there are no values $x$, $k$ for the initial string, so the answer is $0$.",
        "completion": "Given a binary string $s$ consisting of zeros and ones. Let $n$ be the length of $s$. Find the number of such pairs of integers $l$, $r$ that $1 \\leq l \\leq r \\leq n$ and there is at least one pair of integers $x$, $k$ such that $1 \\leq x, k \\leq n$, $l \\leq x < x + 2k \\leq r$, and $s_x = s_{x+k} = s_{x+2k}$.\n\n\n-----Input-----\n\nThe first line contains the string $s$ ($1 \\leq |s| \\leq 300\\,000$), consisting of zeros and ones.\n\n\n-----Output-----\n\nOutput one integer: the number of such pairs of integers $l$, $r$ that $1 \\leq l \\leq r \\leq n$ and there is at least one pair of integers $x$, $k$ such that $1 \\leq x, k \\leq n$, $l \\leq x < x + 2k \\leq r$, and $s_x = s_{x+k} = s_{x+2k}$.\n\n\n-----Examples-----\nInput\n010101\n\nOutput\n3\n\nInput\n11001100\n\nOutput\n0\n\n"
    },
    {
        "prompt": "We have three stones at points (0, 0), (1,0), and (0,1) on a two-dimensional plane.\nThese three stones are said to form an L when they satisfy the following conditions:\n - Each of the stones is at integer coordinates.\n - Each of the stones is adjacent to another stone. (That is, for each stone, there is another stone whose distance from that stone is 1.)\n - The three stones do not lie on the same line.\nParticularly, the initial arrangement of the stone - (0, 0), (1,0), and (0,1) - forms an L.\nYou can do the following operation any number of times: choose one of the stones and move it to any position. However, after each operation, the stones must form an L.\nYou want to do as few operations as possible to put stones at points (ax, ay), (bx, by), and (cx, cy). How many operations do you need to do this?\nIt is guaranteed that the desired arrangement of stones - (ax, ay), (bx, by), and (cx, cy) - forms an L. Under this condition, it is always possible to achieve the objective with a finite number of operations.\nYou will be given T cases of this problem. Solve each of them.\n\n-----Notes-----\nWe assume that the three stones are indistinguishable. For example, the stone that is initially at point (0,0) may be at any of the points (ax, ay), (bx, by), and (cx, cy) in the end.\n\n-----Constraints-----\n - 1 \\leq T \\leq 10^3\n - |ax|,|ay|,|bx|,|by|,|cx|,|cy| \\leq 10^9\n - The desired arrangement of stones - (ax, ay), (bx, by), and (cx, cy) - forms an L.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nT\n\\text{case}_1\n\\vdots\n\\text{case}_T\n\nEach case is in the following format:\nax ay bx by cx cy\n\n-----Output-----\nPrint T values. The i-th value should be the minimum number of operations for \\text{case}_i.\n\n-----Sample Input-----\n1\n3 2 2 2 2 1\n\n-----Sample Output-----\n4\n\nLet us use # to represent a stone.\nYou can move the stones to the specified positions with four operations, as follows:\n....    ....    ....    ..#.    ..##\n#... -> ##.. -> .##. -> .##. -> ..#.\n##..    .#..    .#..    ....    ....\n",
        "completion": "We have three stones at points (0, 0), (1,0), and (0,1) on a two-dimensional plane.\nThese three stones are said to form an L when they satisfy the following conditions:\n - Each of the stones is at integer coordinates.\n - Each of the stones is adjacent to another stone. (That is, for each stone, there is another stone whose distance from that stone is 1.)\n - The three stones do not lie on the same line.\nParticularly, the initial arrangement of the stone - (0, 0), (1,0), and (0,1) - forms an L.\nYou can do the following operation any number of times: choose one of the stones and move it to any position. However, after each operation, the stones must form an L.\nYou want to do as few operations as possible to put stones at points (ax, ay), (bx, by), and (cx, cy). How many operations do you need to do this?\nIt is guaranteed that the desired arrangement of stones - (ax, ay), (bx, by), and (cx, cy) - forms an L.\nAssume that the three stones are indistinguishable.\n\n-----Constraints-----\n - 1 \\leq T \\leq 10^3\n - |ax|,|ay|,|bx|,|by|,|cx|,|cy| \\leq 10^9\n - The desired arrangement of stones - (ax, ay), (bx, by), and (cx, cy) - forms an L.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nT\n\\text{case}_1\n\\vdots\n\\text{case}_T\n\nEach case is in the following format:\nax ay bx by cx cy\n\n-----Output-----\nPrint T values. The i-th value should be the minimum number of operations for \\text{case}_i.\n\n-----Sample Input-----\n1\n3 2 2 2 2 1\n\n-----Sample Output-----\n4\n\n"
    },
    {
        "prompt": "Jeff's friends know full well that the boy likes to get sequences and arrays for his birthday. Thus, Jeff got sequence p_1, p_2, ..., p_{n} for his birthday.\n\nJeff hates inversions in sequences. An inversion in sequence a_1, a_2, ..., a_{n} is a pair of indexes i, j (1 \u2264 i < j \u2264 n), such that an inequality a_{i} > a_{j} holds.\n\nJeff can multiply some numbers of the sequence p by -1. At that, he wants the number of inversions in the sequence to be minimum. Help Jeff and find the minimum number of inversions he manages to get.\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 2000). The next line contains n integers \u2014 sequence p_1, p_2, ..., p_{n} (|p_{i}| \u2264 10^5). The numbers are separated by spaces.\n\n\n-----Output-----\n\nIn a single line print the answer to the problem \u2014 the minimum number of inversions Jeff can get.\n\n\n-----Examples-----\nInput\n2\n2 1\n\nOutput\n0\n\nInput\n9\n-2 0 -1 0 -1 2 1 0 -1\n\nOutput\n6",
        "completion": "\nYou are given a sequence. An inversion in sequence a_1, a_2, ..., a_{n} is a pair of indexes i, j (1 \u2264 i < j \u2264 n), such that an inequality a_{i} > a_{j} holds.\n\nYou can multiply some numbers of the sequence p by -1. You want the number of inversions in the sequence to be minimum. Find the minimum number of inversions you can get.\n\n\n-----Input-----\n\nThe first line contains integer n (1 \u2264 n \u2264 2000). The next line contains n integers \u2014 sequence p_1, p_2, ..., p_{n} (|p_{i}| \u2264 10^5). The numbers are separated by spaces.\n\n\n-----Output-----\n\nIn a single line print the answer to the problem \u2014 the minimum number of inversions you can get.\n\n\n-----Examples-----\nInput\n2\n2 1\n\nOutput\n0\n\nInput\n9\n-2 0 -1 0 -1 2 1 0 -1\n\nOutput\n6"
    },
    {
        "prompt": "You are given a string S consisting of lowercase English letters.\nDetermine whether we can turn S into a palindrome by repeating the operation of swapping two adjacent characters. If it is possible, find the minimum required number of operations.\n\n-----Constraints-----\n - 1 \\leq |S| \\leq 2 \u00d7 10^5\n - S consists of lowercase English letters.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nS\n\n-----Output-----\nIf we cannot turn S into a palindrome, print -1. Otherwise, print the minimum required number of operations.\n\n-----Sample Input-----\neel\n\n-----Sample Output-----\n1\n\nWe can turn S into a palindrome by the following operation:\n - Swap the 2-nd and 3-rd characters. S is now ele.",
        "completion": "You are given a string S consisting of lowercase English letters.\nDetermine whether we can turn S into a palindrome by repeating the operation of swapping two adjacent characters. If it is possible, find the minimum required number of operations.\n\n-----Constraints-----\n - 1 \\leq |S| \\leq 2 \u00d7 10^5\n - S consists of lowercase English letters.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nS\n\n-----Output-----\nIf we cannot turn S into a palindrome, print -1. Otherwise, print the minimum required number of operations.\n\n-----Sample Input-----\neel\n\n-----Sample Output-----\n1\n\n"
    },
    {
        "prompt": "Snuke is playing a puzzle game.\nIn this game, you are given a rectangular board of dimensions R \u00d7 C, filled with numbers. Each integer i from 1 through N is written twice, at the coordinates (x_{i,1},y_{i,1}) and (x_{i,2},y_{i,2}).\nThe objective is to draw a curve connecting the pair of points where the same integer is written, for every integer from 1 through N.\nHere, the curves may not go outside the board or cross each other.\nDetermine whether this is possible.\n\n-----Constraints-----\n - 1 \u2264 R,C \u2264 10^8\n - 1 \u2264 N \u2264 10^5\n - 0 \u2264 x_{i,1},x_{i,2} \u2264 R(1 \u2264 i \u2264 N)\n - 0 \u2264 y_{i,1},y_{i,2} \u2264 C(1 \u2264 i \u2264 N)\n - All given points are distinct.\n - All input values are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nR C N\nx_{1,1} y_{1,1} x_{1,2} y_{1,2}\n:\nx_{N,1} y_{N,1} x_{N,2} y_{N,2}\n\n-----Output-----\nPrint YES if the objective is achievable; print NO otherwise.\n\n-----Sample Input-----\n4 2 3\n0 1 3 1\n1 1 4 1\n2 0 2 2\n\n-----Sample Output-----\nYES\n\n\nThe above figure shows a possible solution.",
        "completion": "You are given a rectangular board of dimensions R \u00d7 C, filled with numbers. Each integer i from 1 through N is written twice, at the coordinates (x_{i,1},y_{i,1}) and (x_{i,2},y_{i,2}).\nThe objective is to draw a curve connecting the pair of points where the same integer is written, for every integer from 1 through N.\nCurves may not go outside the board or cross each other.\nDetermine whether this is possible.\n\n-----Constraints-----\n - 1 \u2264 R,C \u2264 10^8\n - 1 \u2264 N \u2264 10^5\n - 0 \u2264 x_{i,1},x_{i,2} \u2264 R(1 \u2264 i \u2264 N)\n - 0 \u2264 y_{i,1},y_{i,2} \u2264 C(1 \u2264 i \u2264 N)\n - All given points are distinct.\n - All input values are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nR C N\nx_{1,1} y_{1,1} x_{1,2} y_{1,2}\n:\nx_{N,1} y_{N,1} x_{N,2} y_{N,2}\n\n-----Output-----\nPrint YES if the objective is achievable; print NO otherwise.\n\n-----Sample Input-----\n4 2 3\n0 1 3 1\n1 1 4 1\n2 0 2 2\n\n-----Sample Output-----\nYES\n"
    },
    {
        "prompt": "We have a string of letters 'a' and 'b'. We want to perform some operations on it. On each step we choose one of substrings \"ab\" in the string and replace it with the string \"bba\". If we have no \"ab\" as a substring, our job is done. Print the minimum number of steps we should perform to make our job done modulo 10^9 + 7.\n\nThe string \"ab\" appears as a substring if there is a letter 'b' right after the letter 'a' somewhere in the string.\n\n\n-----Input-----\n\nThe first line contains the initial string consisting of letters 'a' and 'b' only with length from 1 to 10^6.\n\n\n-----Output-----\n\nPrint the minimum number of steps modulo 10^9 + 7.\n\n\n-----Examples-----\nInput\nab\n\nOutput\n1\n\nInput\naab\n\nOutput\n3\n\n\n\n-----Note-----\n\nThe first example: \"ab\"  \u2192  \"bba\".\n\nThe second example: \"aab\"  \u2192  \"abba\"  \u2192  \"bbaba\"  \u2192  \"bbbbaa\".",
        "completion": "We have a string of letters 'a' and 'b'. We want to perform some operations on it. On each step we choose one of substrings \"ab\" in the string and replace it with the string \"bba\". If we have no \"ab\" as a substring, our job is done. Print the minimum number of steps we should perform to make our job done modulo 10^9 + 7.\n\nThe string \"ab\" appears as a substring if there is a letter 'b' right after the letter 'a' somewhere in the string.\n\n\n-----Input-----\n\nThe first line contains the initial string consisting of letters 'a' and 'b' only with length from 1 to 10^6.\n\n\n-----Output-----\n\nPrint the minimum number of steps modulo 10^9 + 7.\n\n\n-----Examples-----\nInput\nab\n\nOutput\n1\n\nInput\naab\n\nOutput\n3\n\n\n\n"
    },
    {
        "prompt": "You are given a permutation of 1,2,...,N: p_1,p_2,...,p_N. Determine if the state where p_i=i for every i can be reached by performing the following operation any number of times:\n - Choose three elements p_{i-1},p_{i},p_{i+1} (2\\leq i\\leq N-1) such that p_{i-1}>p_{i}>p_{i+1} and reverse the order of these three.\n\n-----Constraints-----\n - 3 \\leq N \\leq 3 \u00d7 10^5\n - p_1,p_2,...,p_N is a permutation of 1,2,...,N.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\np_1\n:\np_N\n\n-----Output-----\nIf the state where p_i=i for every i can be reached by performing the operation, print Yes; otherwise, print No.\n\n-----Sample Input-----\n5\n5\n2\n1\n4\n3\n\n-----Sample Output-----\nYes\n\nThe state where p_i=i for every i can be reached as follows:\n - Reverse the order of p_1,p_2,p_3. The sequence p becomes 1,2,5,4,3.\n - Reverse the order of p_3,p_4,p_5. The sequence p becomes 1,2,3,4,5.",
        "completion": "You are given a permutation of 1,2,...,N: p_1,p_2,...,p_N. Determine if the state where p_i=i for every i can be reached by performing the following operation any number of times:\n - Choose three elements p_{i-1},p_{i},p_{i+1} (2\\leq i\\leq N-1) such that p_{i-1}>p_{i}>p_{i+1} and reverse the order of these three.\n\n-----Constraints-----\n - 3 \\leq N \\leq 3 \u00d7 10^5\n - p_1,p_2,...,p_N is a permutation of 1,2,...,N.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\np_1\n:\np_N\n\n-----Output-----\nIf the state where p_i=i for every i can be reached by performing the operation, print Yes; otherwise, print No.\n\n-----Sample Input-----\n5\n5\n2\n1\n4\n3\n\n-----Sample Output-----\nYes\n\n"
    },
    {
        "prompt": "You are given a sequence D_1, D_2, ..., D_N of length N.\nThe values of D_i are all distinct.\nDoes a tree with N vertices that satisfies the following conditions exist?\n - The vertices are numbered 1,2,..., N.\n - The edges are numbered 1,2,..., N-1, and Edge i connects Vertex u_i and v_i.\n - For each vertex i, the sum of the distances from i to the other vertices is D_i, assuming that the length of each edge is 1.\nIf such a tree exists, construct one such tree.\n\n-----Constraints-----\n - 2 \\leq N \\leq 100000\n - 1 \\leq D_i \\leq 10^{12}\n - D_i are all distinct.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nD_1\nD_2\n:\nD_N\n\n-----Output-----\nIf a tree with n vertices that satisfies the conditions does not exist, print -1.\nIf a tree with n vertices that satisfies the conditions exist, print n-1 lines.\nThe i-th line should contain u_i and v_i with a space in between.\nIf there are multiple trees that satisfy the conditions, any such tree will be accepted.\n\n-----Sample Input-----\n7\n10\n15\n13\n18\n11\n14\n19\n\n-----Sample Output-----\n1 2\n1 3\n1 5\n3 4\n5 6\n6 7\n\nThe tree shown below satisfies the conditions.",
        "completion": "You are given a sequence D_1, D_2, ..., D_N of length N.\nThe values of D_i are all distinct.\nDoes a tree with N vertices that satisfies the following conditions exist?\n - The vertices are numbered 1,2,..., N.\n - The edges are numbered 1,2,..., N-1, and Edge i connects Vertex u_i and v_i.\n - For each vertex i, the sum of the distances from i to the other vertices is D_i, assuming that the length of each edge is 1.\nIf such a tree exists, construct one such tree.\n\n-----Constraints-----\n - 2 \\leq N \\leq 100000\n - 1 \\leq D_i \\leq 10^{12}\n - D_i are all distinct.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nD_1\nD_2\n:\nD_N\n\n-----Output-----\nIf a tree with n vertices that satisfies the conditions does not exist, print -1.\nIf a tree with n vertices that satisfies the conditions exist, print n-1 lines.\nThe i-th line should contain u_i and v_i with a space in between.\nIf there are multiple trees that satisfy the conditions, any such tree will be accepted.\n\n-----Sample Input-----\n7\n10\n15\n13\n18\n11\n14\n19\n\n-----Sample Output-----\n1 2\n1 3\n1 5\n3 4\n5 6\n6 7\n"
    },
    {
        "prompt": "You have unweighted tree of $n$ vertices. You have to assign a positive weight to each edge so that the following condition would hold:\n\n  For every two different leaves $v_{1}$ and $v_{2}$ of this tree, bitwise XOR of weights of all edges on the simple path between $v_{1}$ and $v_{2}$ has to be equal to $0$. \n\nNote that you can put very large positive integers (like $10^{(10^{10})}$).\n\nIt's guaranteed that such assignment always exists under given constraints. Now let's define $f$ as the number of distinct weights in assignment.\n\n [Image] In this example, assignment is valid, because bitwise XOR of all edge weights between every pair of leaves is $0$. $f$ value is $2$ here, because there are $2$ distinct edge weights($4$ and $5$).\n\n[Image] In this example, assignment is invalid, because bitwise XOR of all edge weights between vertex $1$ and vertex $6$ ($3, 4, 5, 4$) is not $0$. \n\nWhat are the minimum and the maximum possible values of $f$ for the given tree? Find and print both.\n\n\n-----Input-----\n\nThe first line contains integer $n$ ($3 \\le n \\le 10^{5}$)\u00a0\u2014 the number of vertices in given tree.\n\nThe $i$-th of the next $n-1$ lines contains two integers $a_{i}$ and $b_{i}$ ($1 \\le a_{i} \\lt b_{i} \\le n$)\u00a0\u2014 it means there is an edge between $a_{i}$ and $b_{i}$. It is guaranteed that given graph forms tree of $n$ vertices.\n\n\n-----Output-----\n\nPrint two integers\u00a0\u2014 the minimum and maximum possible value of $f$ can be made from valid assignment of given tree. Note that it's always possible to make an assignment under given constraints.\n\n\n-----Examples-----\nInput\n6\n1 3\n2 3\n3 4\n4 5\n5 6\n\nOutput\n1 4\n\nInput\n6\n1 3\n2 3\n3 4\n4 5\n4 6\n\nOutput\n3 3\n\nInput\n7\n1 2\n2 7\n3 4\n4 7\n5 6\n6 7\n\nOutput\n1 6\n\n\n\n-----Note-----\n\nIn the first example, possible assignments for each minimum and maximum are described in picture below. Of course, there are multiple possible assignments for each minimum and maximum.  [Image] \n\nIn the second example, possible assignments for each minimum and maximum are described in picture below. The $f$ value of valid assignment of this tree is always $3$.  [Image] \n\nIn the third example, possible assignments for each minimum and maximum are described in picture below. Of course, there are multiple possible assignments for each minimum and maximum.  [Image]",
        "completion": "You have unweighted tree of $n$ vertices. You have to assign a positive weight to each edge so that the following condition would hold:\n\nFor every two different leaves $v_{1}$ and $v_{2}$ of this tree, bitwise XOR of weights of all edges on the simple path between $v_{1}$ and $v_{2}$ has to be equal to $0$. \n\nYou can put very large positive integers like $10^{(10^{10})}$.\n\nIt's guaranteed that such assignment always exists under given constraints. Let $f$ be the number of distinct weights in assignment.\n\nWhat are the minimum and the maximum possible values of $f$ for the given tree? Find and print both.\n\n\n-----Input-----\n\nThe first line contains integer $n$ ($3 \\le n \\le 10^{5}$)\u00a0\u2014 the number of vertices in given tree.\n\nThe $i$-th of the next $n-1$ lines contains two integers $a_{i}$ and $b_{i}$ ($1 \\le a_{i} \\lt b_{i} \\le n$)\u00a0\u2014 it means there is an edge between $a_{i}$ and $b_{i}$. It is guaranteed that given graph forms tree of $n$ vertices.\n\n\n-----Output-----\n\nPrint two integers\u00a0\u2014 the minimum and maximum possible value of $f$ can be made from valid assignment of given tree. Note that it's always possible to make an assignment under given constraints.\n\n\n-----Examples-----\nInput\n6\n1 3\n2 3\n3 4\n4 5\n5 6\n\nOutput\n1 4\n\nInput\n6\n1 3\n2 3\n3 4\n4 5\n4 6\n\nOutput\n3 3\n\nInput\n7\n1 2\n2 7\n3 4\n4 7\n5 6\n6 7\n\nOutput\n1 6\n"
    },
    {
        "prompt": "The Little Elephant has an integer a, written in the binary notation. He wants to write this number on a piece of paper.\n\nTo make sure that the number a fits on the piece of paper, the Little Elephant ought to delete exactly one any digit from number a in the binary record. At that a new number appears. It consists of the remaining binary digits, written in the corresponding order (possible, with leading zeroes).\n\nThe Little Elephant wants the number he is going to write on the paper to be as large as possible. Help him find the maximum number that he can obtain after deleting exactly one binary digit and print it in the binary notation.\n\n\n-----Input-----\n\nThe single line contains integer a, written in the binary notation without leading zeroes. This number contains more than 1 and at most 10^5 digits.\n\n\n-----Output-----\n\nIn the single line print the number that is written without leading zeroes in the binary notation \u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n101\n\nOutput\n11\n\nInput\n110010\n\nOutput\n11010\n\n\n\n-----Note-----\n\nIn the first sample the best strategy is to delete the second digit. That results in number 11_2 = 3_10.\n\nIn the second sample the best strategy is to delete the third or fourth digits \u2014 that results in number 11010_2 = 26_10.",
        "completion": "Given an integer a in binary notation. Print the maximum number that can be obtained after removing one digit from a and keeping the remaining digits in the same order. \n\n-----Input-----\n\nThe single line contains integer a, written in the binary notation without leading zeroes. This number contains more than 1 and at most 10^5 digits.\n\n\n-----Output-----\n\nIn the single line print the number that is written without leading zeroes in the binary notation \u2014 the answer to the problem.\n\n\n-----Examples-----\nInput\n101\n\nOutput\n11\n\nInput\n110010\n\nOutput\n11010\n"
    },
    {
        "prompt": "There are $n$ lamps on a line, numbered from $1$ to $n$. Each one has an initial state off ($0$) or on ($1$).\n\nYou're given $k$ subsets $A_1, \\ldots, A_k$ of $\\{1, 2, \\dots, n\\}$, such that the intersection of any three subsets is empty. In other words, for all $1 \\le i_1 < i_2 < i_3 \\le k$, $A_{i_1} \\cap A_{i_2} \\cap A_{i_3} = \\varnothing$.\n\nIn one operation, you can choose one of these $k$ subsets and switch the state of all lamps in it. It is guaranteed that, with the given subsets, it's possible to make all lamps be simultaneously on using this type of operation.\n\nLet $m_i$ be the minimum number of operations you have to do in order to make the $i$ first lamps be simultaneously on. Note that there is no condition upon the state of other lamps (between $i+1$ and $n$), they can be either off or on.\n\nYou have to compute $m_i$ for all $1 \\le i \\le n$.\n\n\n-----Input-----\n\nThe first line contains two integers $n$ and $k$ ($1 \\le n, k \\le 3 \\cdot 10^5$).\n\nThe second line contains a binary string of length $n$, representing the initial state of each lamp (the lamp $i$ is off if $s_i = 0$, on if $s_i = 1$).\n\nThe description of each one of the $k$ subsets follows, in the following format:\n\nThe first line of the description contains a single integer $c$ ($1 \\le c \\le n$) \u00a0\u2014 the number of elements in the subset.\n\nThe second line of the description contains $c$ distinct integers $x_1, \\ldots, x_c$ ($1 \\le x_i \\le n$) \u00a0\u2014 the elements of the subset.\n\nIt is guaranteed that:   The intersection of any three subsets is empty;  It's possible to make all lamps be simultaneously on using some operations. \n\n\n-----Output-----\n\nYou must output $n$ lines. The $i$-th line should contain a single integer $m_i$ \u00a0\u2014 the minimum number of operations required to make the lamps $1$ to $i$ be simultaneously on.\n\n\n-----Examples-----\nInput\n7 3\n0011100\n3\n1 4 6\n3\n3 4 7\n2\n2 3\n\nOutput\n1\n2\n3\n3\n3\n3\n3\n\nInput\n8 6\n00110011\n3\n1 3 8\n5\n1 2 5 6 7\n2\n6 8\n2\n3 5\n2\n4 7\n1\n2\n\nOutput\n1\n1\n1\n1\n1\n1\n4\n4\n\nInput\n5 3\n00011\n3\n1 2 3\n1\n4\n3\n3 4 5\n\nOutput\n1\n1\n1\n1\n1\n\nInput\n19 5\n1001001001100000110\n2\n2 3\n2\n5 6\n2\n8 9\n5\n12 13 14 15 16\n1\n19\n\nOutput\n0\n1\n1\n1\n2\n2\n2\n3\n3\n3\n3\n4\n4\n4\n4\n4\n4\n4\n5\n\n\n\n-----Note-----\n\nIn the first example:   For $i = 1$, we can just apply one operation on $A_1$, the final states will be $1010110$;  For $i = 2$, we can apply operations on $A_1$ and $A_3$, the final states will be $1100110$;  For $i \\ge 3$, we can apply operations on $A_1$, $A_2$ and $A_3$, the final states will be $1111111$. \n\nIn the second example:   For $i \\le 6$, we can just apply one operation on $A_2$, the final states will be $11111101$;  For $i \\ge 7$, we can apply operations on $A_1, A_3, A_4, A_6$, the final states will be $11111111$.",
        "completion": "There are $n$ lamps on a line, numbered from $1$ to $n$. Each one has an initial state off ($0$) or on ($1$).\n\nYou're given $k$ subsets $A_1, \\ldots, A_k$ of $\\{1, 2, \\dots, n\\}$, such that the intersection of any three subsets is empty.\n\nIn one operation, you can choose one of these $k$ subsets and switch the state of all lamps in it. It is guaranteed that, with the given subsets, it's possible to make all lamps be simultaneously on using this type of operation.\n\nLet $m_i$ be the minimum number of operations you have to do in order to make the $i$ first lamps be simultaneously on. There is no condition upon the state of other lamps (between $i+1$ and $n$), they can be either off or on.\n\nYou have to compute $m_i$ for all $1 \\le i \\le n$.\n\n\n-----Input-----\n\nThe first line contains two integers $n$ and $k$ ($1 \\le n, k \\le 3 \\cdot 10^5$).\n\nThe second line contains a binary string of length $n$, representing the initial state of each lamp (the lamp $i$ is off if $s_i = 0$, on if $s_i = 1$).\n\nThe description of each one of the $k$ subsets follows, in the following format:\n\nThe first line of the description contains a single integer $c$ ($1 \\le c \\le n$) \u00a0\u2014 the number of elements in the subset.\n\nThe second line of the description contains $c$ distinct integers $x_1, \\ldots, x_c$ ($1 \\le x_i \\le n$) \u00a0\u2014 the elements of the subset.\n\nIt is guaranteed that:   The intersection of any three subsets is empty;  It's possible to make all lamps be simultaneously on using some operations. \n\n\n-----Output-----\n\nYou must output $n$ lines. The $i$-th line should contain a single integer $m_i$ \u00a0\u2014 the minimum number of operations required to make the lamps $1$ to $i$ be simultaneously on.\n\n\n-----Examples-----\nInput\n7 3\n0011100\n3\n1 4 6\n3\n3 4 7\n2\n2 3\n\nOutput\n1\n2\n3\n3\n3\n3\n3\n\nInput\n8 6\n00110011\n3\n1 3 8\n5\n1 2 5 6 7\n2\n6 8\n2\n3 5\n2\n4 7\n1\n2\n\nOutput\n1\n1\n1\n1\n1\n1\n4\n4\n\nInput\n5 3\n00011\n3\n1 2 3\n1\n4\n3\n3 4 5\n\nOutput\n1\n1\n1\n1\n1\n\nInput\n19 5\n1001001001100000110\n2\n2 3\n2\n5 6\n2\n8 9\n5\n12 13 14 15 16\n1\n19\n\nOutput\n0\n1\n1\n1\n2\n2\n2\n3\n3\n3\n3\n4\n4\n4\n4\n4\n4\n4\n5\n"
    },
    {
        "prompt": "Vanya wants to minimize a tree. He can perform the following operation multiple times: choose a vertex v, and two disjoint (except for v) paths of equal length a_0 = v, a_1, ..., a_{k}, and b_0 = v, b_1, ..., b_{k}. Additionally, vertices a_1, ..., a_{k}, b_1, ..., b_{k} must not have any neighbours in the tree other than adjacent vertices of corresponding paths. After that, one of the paths may be merged into the other, that is, the vertices b_1, ..., b_{k} can be effectively erased: [Image] \n\nHelp Vanya determine if it possible to make the tree into a path via a sequence of described operations, and if the answer is positive, also determine the shortest length of such path.\n\n\n-----Input-----\n\nThe first line of input contains the number of vertices n (2 \u2264 n \u2264 2\u00b710^5).\n\nNext n - 1 lines describe edges of the tree. Each of these lines contains two space-separated integers u and v (1 \u2264 u, v \u2264 n, u \u2260 v)\u00a0\u2014 indices of endpoints of the corresponding edge. It is guaranteed that the given graph is a tree.\n\n\n-----Output-----\n\nIf it is impossible to obtain a path, print -1. Otherwise, print the minimum number of edges in a possible path.\n\n\n-----Examples-----\nInput\n6\n1 2\n2 3\n2 4\n4 5\n1 6\n\nOutput\n3\n\nInput\n7\n1 2\n1 3\n3 4\n1 5\n5 6\n6 7\n\nOutput\n-1\n\n\n\n-----Note-----\n\nIn the first sample case, a path of three edges is obtained after merging paths 2 - 1 - 6 and 2 - 4 - 5.\n\nIt is impossible to perform any operation in the second sample case. For example, it is impossible to merge paths 1 - 3 - 4 and 1 - 5 - 6, since vertex 6 additionally has a neighbour 7 that is not present in the corresponding path.",
        "completion": "You want to minimize a tree. You can perform the following operation multiple times: choose a vertex v, and two disjoint (except for v) paths of equal length a_0 = v, a_1, ..., a_{k}, and b_0 = v, b_1, ..., b_{k}. Additionally, vertices a_1, ..., a_{k}, b_1, ..., b_{k} must not have any neighbours in the tree other than adjacent vertices of corresponding paths. After that, one of the paths may be merged into the other, that is, the vertices b_1, ..., b_{k} can be effectively erased.\n\nDetermine if it possible to make the tree into a path via a sequence of described operations, and if the answer is positive, also determine the shortest length of such path.\n\n\n-----Input-----\n\nThe first line of input contains the number of vertices n (2 \u2264 n \u2264 2\u00b710^5).\n\nNext n - 1 lines describe edges of the tree. Each of these lines contains two space-separated integers u and v (1 \u2264 u, v \u2264 n, u \u2260 v)\u00a0\u2014 indices of endpoints of the corresponding edge. It is guaranteed that the given graph is a tree.\n\n\n-----Output-----\n\nIf it is impossible to obtain a path, print -1. Otherwise, print the minimum number of edges in a possible path.\n\n\n-----Examples-----\nInput\n6\n1 2\n2 3\n2 4\n4 5\n1 6\n\nOutput\n3\n\nInput\n7\n1 2\n1 3\n3 4\n1 5\n5 6\n6 7\n\nOutput\n-1\n"
    },
    {
        "prompt": "Catherine received an array of integers as a gift for March 8. Eventually she grew bored with it, and she started calculated various useless characteristics for it. She succeeded to do it for each one she came up with. But when she came up with another one\u00a0\u2014 xor of all pairwise sums of elements in the array, she realized that she couldn't compute it for a very large array, thus she asked for your help. Can you do it? Formally, you need to compute\n\n$$ (a_1 + a_2) \\oplus (a_1 + a_3) \\oplus \\ldots \\oplus (a_1 + a_n) \\\\ \\oplus (a_2 + a_3) \\oplus \\ldots \\oplus (a_2 + a_n) \\\\ \\ldots \\\\ \\oplus (a_{n-1} + a_n) \\\\ $$\n\nHere $x \\oplus y$ is a bitwise XOR operation (i.e. $x$ ^ $y$ in many modern programming languages). You can read about it in Wikipedia: https://en.wikipedia.org/wiki/Exclusive_or#Bitwise_operation.\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($2 \\leq n \\leq 400\\,000$)\u00a0\u2014 the number of integers in the array.\n\nThe second line contains integers $a_1, a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq 10^7$).\n\n\n-----Output-----\n\nPrint a single integer\u00a0\u2014 xor of all pairwise sums of integers in the given array.\n\n\n-----Examples-----\nInput\n2\n1 2\n\nOutput\n3\nInput\n3\n1 2 3\n\nOutput\n2\n\n\n-----Note-----\n\nIn the first sample case there is only one sum $1 + 2 = 3$.\n\nIn the second sample case there are three sums: $1 + 2 = 3$, $1 + 3 = 4$, $2 + 3 = 5$. In binary they are represented as $011_2 \\oplus 100_2 \\oplus 101_2 = 010_2$, thus the answer is 2.\n\n$\\oplus$ is the bitwise xor operation. To define $x \\oplus y$, consider binary representations of integers $x$ and $y$. We put the $i$-th bit of the result to be 1 when exactly one of the $i$-th bits of $x$ and $y$ is 1. Otherwise, the $i$-th bit of the result is put to be 0. For example, $0101_2 \\, \\oplus \\, 0011_2 = 0110_2$.",
        "completion": "You are given an array of integers. You need to compute\n\n$$ (a_1 + a_2) \\oplus (a_1 + a_3) \\oplus \\ldots \\oplus (a_1 + a_n) \\\\ \\oplus\n(a_2 + a_3) \\oplus \\ldots \\oplus (a_2 + a_n) \\\\ \\ldots \\\\ \\oplus (a_{n-1} +\na_n) \\\\ $$\n\nHere $x \\oplus y$ is a bitwise XOR operation (i.e. $x$ ^ $y$).\nIn the second sample case there are three sums: $1 + 2 = 3$, $1 + 3 = 4$, $2 + 3 = 5$. In binary they are represented as $011_2 \\oplus 100_2 \\oplus 101_2 = 010_2$, thus the answer is 2.\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($2 \\leq n \\leq 400\\,000$)\u00a0\u2014 the number of integers in the array.\n\nThe second line contains integers $a_1, a_2, \\ldots, a_n$ ($1 \\leq a_i \\leq 10^7$).\n\n\n-----Output-----\n\nPrint a single integer\u00a0\u2014 xor of all pairwise sums of integers in the given array.\n\n\n-----Examples-----\nInput\n2\n1 2\n\nOutput\n3\nInput\n3\n1 2 3\n\nOutput\n2\n"
    },
    {
        "prompt": "Let's denote as $\\text{popcount}(x)$ the number of bits set ('1' bits) in the binary representation of the non-negative integer x.\n\nYou are given multiple queries consisting of pairs of integers l and r. For each query, find the x, such that l \u2264 x \u2264 r, and $\\text{popcount}(x)$ is maximum possible. If there are multiple such numbers find the smallest of them.\n\n\n-----Input-----\n\nThe first line contains integer n\u00a0\u2014 the number of queries (1 \u2264 n \u2264 10000).\n\nEach of the following n lines contain two integers l_{i}, r_{i}\u00a0\u2014 the arguments for the corresponding query (0 \u2264 l_{i} \u2264 r_{i} \u2264 10^18).\n\n\n-----Output-----\n\nFor each query print the answer in a separate line.\n\n\n-----Examples-----\nInput\n3\n1 2\n2 4\n1 10\n\nOutput\n1\n3\n7\n\n\n\n-----Note-----\n\nThe binary representations of numbers from 1 to 10 are listed below:\n\n1_10 = 1_2\n\n2_10 = 10_2\n\n3_10 = 11_2\n\n4_10 = 100_2\n\n5_10 = 101_2\n\n6_10 = 110_2\n\n7_10 = 111_2\n\n8_10 = 1000_2\n\n9_10 = 1001_2\n\n10_10 = 1010_2",
        "completion": "Let's denote $\\text{popcount}(x)$ as the number of bits set in the binary representation of the non-negative integer x.\n\nYou are given multiple queries consisting of pairs of integers l and r. For each query, find the x, such that l \u2264 x \u2264 r, and $\\text{popcount}(x)$ is maximum possible. If there are multiple such numbers find the smallest of them.\n\n\n-----Input-----\n\nThe first line contains integer n\u00a0\u2014 the number of queries (1 \u2264 n \u2264 10000).\n\nEach of the following n lines contain two integers l_{i}, r_{i}\u00a0\u2014 the arguments for the corresponding query (0 \u2264 l_{i} \u2264 r_{i} \u2264 10^18).\n\n\n-----Output-----\n\nFor each query print the answer in a separate line.\n\n\n-----Examples-----\nInput\n3\n1 2\n2 4\n1 10\n\nOutput\n1\n3\n7\n"
    },
    {
        "prompt": "This is the easy version of the problem. The only difference between easy and hard versions is the constraint of $m$. You can make hacks only if both versions are solved.\n\nChiori loves dolls and now she is going to decorate her bedroom![Image]\u00a0\n\nAs a doll collector, Chiori has got $n$ dolls. The $i$-th doll has a non-negative integer value $a_i$ ($a_i < 2^m$, $m$ is given). Chiori wants to pick some (maybe zero) dolls for the decoration, so there are $2^n$ different picking ways.\n\nLet $x$ be the bitwise-xor-sum of values of dolls Chiori picks (in case Chiori picks no dolls $x = 0$). The value of this picking way is equal to the number of $1$-bits in the binary representation of $x$. More formally, it is also equal to the number of indices $0 \\leq i < m$, such that $\\left\\lfloor \\frac{x}{2^i} \\right\\rfloor$ is odd.\n\nTell her the number of picking ways with value $i$ for each integer $i$ from $0$ to $m$. Due to the answers can be very huge, print them by modulo $998\\,244\\,353$.\n\n\n-----Input-----\n\nThe first line contains two integers $n$ and $m$ ($1 \\le n \\le 2 \\cdot 10^5$, $0 \\le m \\le 35$) \u00a0\u2014 the number of dolls and the maximum value of the picking way.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($0 \\le a_i < 2^m$) \u00a0\u2014 the values of dolls.\n\n\n-----Output-----\n\nPrint $m+1$ integers $p_0, p_1, \\ldots, p_m$ \u00a0\u2014 $p_i$ is equal to the number of picking ways with value $i$ by modulo $998\\,244\\,353$.\n\n\n-----Examples-----\nInput\n4 4\n3 5 8 14\n\nOutput\n2 2 6 6 0 \nInput\n6 7\n11 45 14 9 19 81\n\nOutput\n1 2 11 20 15 10 5 0",
        "completion": "You have $n$ dolls. The $i$-th doll has a non-negative integer value $a_i$ ($a_i < 2^m$, $m$ is given). You want to pick some dolls, so there are $2^n$ different picking ways.\n\nLet $x$ be the bitwise-xor-sum of values of dolls Chiori picks. The value of this picking way is equal to the number of $1$-bits in the binary representation of $x$. More formally, it is also equal to the number of indices $0 \\leq i < m$, such that $\\left\\lfloor \\frac{x}{2^i} \\right\\rfloor$ is odd.\n\nFind the number of picking ways with value $i$ for each integer $i$ from $0$ to $m$. Due to the answers can be very huge, print them by modulo $998\\,244\\,353$.\n\n\n-----Input-----\n\nThe first line contains two integers $n$ and $m$ ($1 \\le n \\le 2 \\cdot 10^5$, $0 \\le m \\le 35$) \u00a0\u2014 the number of dolls and the maximum value of the picking way.\n\nThe second line contains $n$ integers $a_1, a_2, \\ldots, a_n$ ($0 \\le a_i < 2^m$) \u00a0\u2014 the values of dolls.\n\n\n-----Output-----\n\nPrint $m+1$ integers $p_0, p_1, \\ldots, p_m$ \u00a0\u2014 $p_i$ is equal to the number of picking ways with value $i$ by modulo $998\\,244\\,353$.\n\n\n-----Examples-----\nInput\n4 4\n3 5 8 14\n\nOutput\n2 2 6 6 0 \nInput\n6 7\n11 45 14 9 19 81\n\nOutput\n1 2 11 20 15 10 5 0"
    },
    {
        "prompt": "=====Problem Statement=====\nABCXYZ company has up to 100 employees.\nThe company decides to create a unique identification number (UID) for each of its employees.\nThe company has assigned you the task of validating all the randomly generated UIDs.\n\nA valid UID must follow the rules below:\n\nIt must contain at least 2 uppercase English alphabet characters.\nIt must contain at least 3 digits (0-9).\nIt should only contain alphanumeric characters (a-z, A-Z & 0-9).\nNo character should repeat.\nThere must be exactly 10 characters in a valid UID.\n\n\n\n=====Input Format=====\nThe first line contains an integer T, the number of test cases.\nThe next T lines contains an employee's UID.\n\n=====Output Format=====\nFor each test case, print 'Valid' if the UID is valid. Otherwise, print 'Invalid', on separate lines. Do not print the quotation marks.\n",
        "completion": "=====Problem Statement=====\nYou are given a string\n\nA valid string must follow the conditions below:\n\nIt must contain at least 2 uppercase English alphabet characters.\nIt must contain at least 3 digits 0 to 9.\nIt should only contain alphanumeric characters a-z, A-Z & 0-9.\nNo character should repeat.\nThere must be exactly 10 characters in a valid string.\n\n\n\n=====Input Format=====\nThe first line contains an integer T, the number of test cases.\nThe next T lines contains a string.\n\n=====Output Format=====\nFor each test case, print 'Valid' if the string is valid. Otherwise, print 'Invalid', on separate lines. Do not print the quotation marks.\n"
    },
    {
        "prompt": "Initially, there is a Robot at position (0, 0). Given a sequence of its moves, judge if this robot makes a circle, which means it moves back to the original place. \n\n\n\nThe move sequence is represented by a string. And each move is represent by a character. The valid robot moves are R (Right), L (Left), U (Up) and D (down). The output should be true or false representing whether the robot makes a circle.\n\n\nExample 1:\n\nInput: \"UD\"\nOutput: true\n\n\n\nExample 2:\n\nInput: \"LL\"\nOutput: false",
        "completion": "Initially, there is a Robot at position (0, 0). Given a sequence of its moves, judge if this robot makes a circle, which means it moves back to the original place. \n\nThere is a entity at position (0, 0). Given a sequence of its moves, judge if entity moves back to the original place. \n\nThe move sequence is represented by a string. And each move is represent by a character. The valid entity moves are R (Right), L (Left), U (Up) and D (down). The output should be true or false representing whether the entity makes a circle.\n\n\nExample 1:\n\nInput: \"UD\"\nOutput: true\n\n\n\nExample 2:\n\nInput: \"LL\"\nOutput: false\n"
    },
    {
        "prompt": "You are given a graph consisting of $n$ vertices and $m$ edges. It is not guaranteed that the given graph is connected. Some edges are already directed and you can't change their direction. Other edges are undirected and you have to choose some direction for all these edges.\n\nYou have to direct undirected edges in such a way that the resulting graph is directed and acyclic (i.e. the graph with all edges directed and having no directed cycles). Note that you have to direct all undirected edges.\n\nYou have to answer $t$ independent test cases.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $t$ ($1 \\le t \\le 2 \\cdot 10^4$) \u2014 the number of test cases. Then $t$ test cases follow.\n\nThe first line of the test case contains two integers $n$ and $m$ ($2 \\le n \\le 2 \\cdot 10^5$, $1 \\le m \\le min(2 \\cdot 10^5, \\frac{n(n-1)}{2})$) \u2014 the number of vertices and the number of edges in the graph, respectively.\n\nThe next $m$ lines describe edges of the graph. The $i$-th edge is described with three integers $t_i$, $x_i$ and $y_i$ ($t_i \\in [0; 1]$, $1 \\le x_i, y_i \\le n$) \u2014 the type of the edge ($t_i = 0$ if the edge is undirected and $t_i = 1$ if the edge is directed) and vertices this edge connects (the undirected edge connects vertices $x_i$ and $y_i$ and directed edge is going from the vertex $x_i$ to the vertex $y_i$). It is guaranteed that the graph do not contain self-loops (i.e. edges from the vertex to itself) and multiple edges (i.e. for each pair ($x_i, y_i$) there are no other pairs ($x_i, y_i$) or ($y_i, x_i$)).\n\nIt is guaranteed that both sum $n$ and sum $m$ do not exceed $2 \\cdot 10^5$ ($\\sum n \\le 2 \\cdot 10^5$; $\\sum m \\le 2 \\cdot 10^5$).\n\n\n-----Output-----\n\nFor each test case print the answer \u2014 \"NO\" if it is impossible to direct undirected edges in such a way that the resulting graph is directed and acyclic, otherwise print \"YES\" on the first line and $m$ lines describing edges of the resulted directed acyclic graph (in any order). Note that you cannot change the direction of the already directed edges. If there are several answers, you can print any.\n\n\n-----Example-----\nInput\n4\n3 1\n0 1 3\n5 5\n0 2 1\n1 1 5\n1 5 4\n0 5 2\n1 3 5\n4 5\n1 1 2\n0 4 3\n1 3 1\n0 2 3\n1 2 4\n4 5\n1 4 1\n1 1 3\n0 1 2\n1 2 4\n1 3 2\n\nOutput\nYES\n3 1\nYES\n2 1\n1 5\n5 4\n2 5\n3 5\nYES\n1 2\n3 4\n3 1\n3 2\n2 4\nNO\n\n\n\n-----Note-----\n\nExplanation of the second test case of the example:\n\n[Image]\n\nExplanation of the third test case of the example:\n\n[Image]",
        "completion": "You are given a graph consisting of $n$ vertices and $m$ edges.\nSome edges are already directed and you can't change their direction. \nOther edges are undirected and you have to choose some direction for all these edges.\n\nYou have to direct undirected edges in such a way that the resulting graph is directed and having no directed cycles.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $t$ ($1 \\le t \\le 2 \\cdot 10^4$) \u2014 the number of test cases. Then $t$ test cases follow.\n\nThe first line of the test case contains two integers $n$ and $m$ ($2 \\le n \\le 2 \\cdot 10^5$, $1 \\le m \\le min(2 \\cdot 10^5, \\frac{n(n-1)}{2})$) \u2014 the number of vertices and the number of edges in the graph, respectively.\n\nThe next $m$ lines describe edges of the graph. The $i$-th edge is described with three integers $t_i$, $x_i$ and $y_i$ ($t_i \\in [0; 1]$, $1 \\le x_i, y_i \\le n$) \u2014 the type of the edge ($t_i = 0$ if the edge is undirected and $t_i = 1$ if the edge is directed) and vertices this edge connects (the undirected edge connects vertices $x_i$ and $y_i$ and directed edge is going from the vertex $x_i$ to the vertex $y_i$). It is guaranteed that the graph do not contain self-loops (i.e. edges from the vertex to itself) and multiple edges (i.e. for each pair ($x_i, y_i$) there are no other pairs ($x_i, y_i$) or ($y_i, x_i$)).\n\nIt is guaranteed that both sum $n$ and sum $m$ do not exceed $2 \\cdot 10^5$ ($\\sum n \\le 2 \\cdot 10^5$; $\\sum m \\le 2 \\cdot 10^5$).\n\n\n-----Output-----\n\nFor each test case print the answer \u2014 \"NO\" if it is impossible to direct undirected edges in such a way that the resulting graph is directed and acyclic, otherwise print \"YES\" on the first line and $m$ lines describing edges of the resulted directed acyclic graph (in any order). Note that you cannot change the direction of the already directed edges. If there are several answers, you can print any.\n\n\n-----Example-----\nInput\n4\n3 1\n0 1 3\n5 5\n0 2 1\n1 1 5\n1 5 4\n0 5 2\n1 3 5\n4 5\n1 1 2\n0 4 3\n1 3 1\n0 2 3\n1 2 4\n4 5\n1 4 1\n1 1 3\n0 1 2\n1 2 4\n1 3 2\n\nOutput\nYES\n3 1\nYES\n2 1\n1 5\n5 4\n2 5\n3 5\nYES\n1 2\n3 4\n3 1\n3 2\n2 4\nNO\n"
    },
    {
        "prompt": "Given an array of positive integers\u00a0arr, calculate the sum of all possible odd-length subarrays.\nA subarray is a contiguous\u00a0subsequence of the array.\nReturn\u00a0the sum of all odd-length subarrays of\u00a0arr.\n\u00a0\nExample 1:\nInput: arr = [1,4,2,5,3]\nOutput: 58\nExplanation: The odd-length subarrays of arr and their sums are:\n[1] = 1\n[4] = 4\n[2] = 2\n[5] = 5\n[3] = 3\n[1,4,2] = 7\n[4,2,5] = 11\n[2,5,3] = 10\n[1,4,2,5,3] = 15\nIf we add all these together we get 1 + 4 + 2 + 5 + 3 + 7 + 11 + 10 + 15 = 58\nExample 2:\nInput: arr = [1,2]\nOutput: 3\nExplanation: There are only 2 subarrays of odd length, [1] and [2]. Their sum is 3.\nExample 3:\nInput: arr = [10,11,12]\nOutput: 66\n\n\u00a0\nConstraints:\n\n1 <= arr.length <= 100\n1 <= arr[i] <= 1000",
        "completion": "You are given an array arr. \nA subarray is a contiguous\u00a0subsequence of the array.\nCalculate and return the sum of all possible odd-length subarrays.\n\nExample 1:\nInput: arr = [1,4,2,5,3]\nOutput: 58\nExplanation: The odd-length subarrays of arr and their sums are:\n[1] = 1\n[4] = 4\n[2] = 2\n[5] = 5\n[3] = 3\n[1,4,2] = 7\n[4,2,5] = 11\n[2,5,3] = 10\n[1,4,2,5,3] = 15\nIf we add all these together we get 1 + 4 + 2 + 5 + 3 + 7 + 11 + 10 + 15 = 58\nExample 2:\nInput: arr = [1,2]\nOutput: 3\nExplanation: There are only 2 subarrays of odd length, [1] and [2]. Their sum is 3.\nExample 3:\nInput: arr = [10,11,12]\nOutput: 66\n\n\u00a0\nConstraints:\n\n1 <= arr.length <= 100\n1 <= arr[i] <= 1000"
    },
    {
        "prompt": "There are $n$ athletes in front of you. Athletes are numbered from $1$ to $n$ from left to right. You know the strength of each athlete\u00a0\u2014 the athlete number $i$ has the strength $s_i$.\n\nYou want to split all athletes into two teams. Each team must have at least one athlete, and each athlete must be exactly in one team.\n\nYou want the strongest athlete from the first team to differ as little as possible from the weakest athlete from the second team. Formally, you want to split the athletes into two teams $A$ and $B$ so that the value $|\\max(A) - \\min(B)|$ is as small as possible, where $\\max(A)$ is the maximum strength of an athlete from team $A$, and $\\min(B)$ is the minimum strength of an athlete from team $B$.\n\nFor example, if $n=5$ and the strength of the athletes is $s=[3, 1, 2, 6, 4]$, then one of the possible split into teams is:   first team: $A = [1, 2, 4]$,  second team: $B = [3, 6]$. \n\nIn this case, the value $|\\max(A) - \\min(B)|$ will be equal to $|4-3|=1$. This example illustrates one of the ways of optimal split into two teams.\n\nPrint the minimum value $|\\max(A) - \\min(B)|$.\n\n\n-----Input-----\n\nThe first line contains an integer $t$ ($1 \\le t \\le 1000$)\u00a0\u2014 the number of test cases in the input. Then $t$ test cases follow.\n\nEach test case consists of two lines. \n\nThe first line contains positive integer $n$ ($2 \\le n \\le 50$)\u00a0\u2014 number of athletes. \n\nThe second line contains $n$ positive integers $s_1, s_2, \\ldots, s_n$ ($1 \\le s_i \\le 1000$), where $s_i$\u00a0\u2014 is the strength of the $i$-th athlete. Please note that $s$ values may not be distinct.\n\n\n-----Output-----\n\nFor each test case print one integer\u00a0\u2014 the minimum value of $|\\max(A) - \\min(B)|$ with the optimal split of all athletes into two teams. Each of the athletes must be a member of exactly one of the two teams.\n\n\n-----Example-----\nInput\n5\n5\n3 1 2 6 4\n6\n2 1 3 2 4 3\n4\n7 9 3 1\n2\n1 1000\n3\n100 150 200\n\nOutput\n1\n0\n2\n999\n50\n\n\n\n-----Note-----\n\nThe first test case was explained in the statement. In the second test case, one of the optimal splits is $A=[2, 1]$, $B=[3, 2, 4, 3]$, so the answer is $|2-2|=0$.",
        "completion": "You are given a list of integers of length $n$. You need to split the list into two smaller lists.\nEach list must have at least one integer, and every integer must be in exactly one list.\n\nYou want to largest integer from the first list to differ as little as possible from the smallest integer in the second list.\nThe output will be the smallest value of this difference.\n\nFor example, if $n=5$ and the list is $s=[3, 1, 2, 6, 4]$, then one of the possible splits is:   \n$A = [1, 2, 4]$, $B = [3, 6]$. \n\nThe value $|\\max(A) - \\min(B)|$ is equal to $|4-3|=1$. \n\n-----Input-----\n\nThe first line contains an integer $t$ ($1 \\le t \\le 1000$)\u00a0\u2014 the number of test cases in the input. Then $t$ test cases follow.\n\nEach test case consists of two lines. \n\nThe first line contains positive integer $n$ ($2 \\le n \\le 50$)\u00a0\u2014 length of the list. \n\nThe second line contains $n$ positive integers $s_1, s_2, \\ldots, s_n$ ($1 \\le s_i \\le 1000$), where $s_i$\u00a0\u2014 is the integer of the $i$-th element.\n\n\n-----Output-----\n\nFor each test case print one integer\u00a0\u2014 the minimum value of $|\\max(A) - \\min(B)|$\n\n\n-----Example-----\nInput\n5\n5\n3 1 2 6 4\n6\n2 1 3 2 4 3\n4\n7 9 3 1\n2\n1 1000\n3\n100 150 200\n\nOutput\n1\n0\n2\n999\n50\n"
    },
    {
        "prompt": "You have a total of n coins that you want to form in a staircase shape, where every k-th row must have exactly k coins.\n \nGiven n, find the total number of full staircase rows that can be formed.\n\nn is a non-negative integer and fits within the range of a 32-bit signed integer.\n\nExample 1:\n\nn = 5\n\nThe coins can form the following rows:\n\u00a4\n\u00a4 \u00a4\n\u00a4 \u00a4\n\nBecause the 3rd row is incomplete, we return 2.\n\n\n\nExample 2:\n\nn = 8\n\nThe coins can form the following rows:\n\u00a4\n\u00a4 \u00a4\n\u00a4 \u00a4 \u00a4\n\u00a4 \u00a4\n\nBecause the 4th row is incomplete, we return 3.",
        "completion": "You have a total of n coins that you want to form in a staircase shape, where every k-th row must have exactly k coins.\n \nThe output should be the total number of full staircase rows formed.\n\nn>=0 and has the range of a 32-bit signed integer.\n\nExample 1:\n\nn = 5\n\nThe coins can form the following rows:\n\u00a4\n\u00a4 \u00a4\n\u00a4 \u00a4\n\nBecause the 3rd row is incomplete, we return 2.\n\n\n\nExample 2:\n\nn = 8\n\nThe coins can form the following rows:\n\u00a4\n\u00a4 \u00a4\n\u00a4 \u00a4 \u00a4\n\u00a4 \u00a4\n\nBecause the 4th row is incomplete, we return 3."
    },
    {
        "prompt": "=====Problem Statement=====\nYou are asked to ensure that the first and last names of people begin with a capital letter in their passports. For example, alison heck should be capitalised correctly as Alison Heck. \n\nalison heck => Alison Heck\n\nGiven a full name, your task is to capitalize the name appropriately.\n\n=====Input Format=====\nA single line of input containing the full name, S.\n\n=====Constraints=====\n0<len(S)<1000\nThe string consists of alphanumeric characters and spaces.\n\nNote: in a word only the first character is capitalized. Example 12abc when capitalized remains 12abc.\n\n=====Output Format=====\nPrint the capitalized string, S.",
        "completion": "=====Problem Statement=====\nGiven a string, capitalize each word by making the first letter of each word uppercase. \n\nFor example:\nalison heck => Alison Heck\n\nGiven a string, your task is to capitalize the words appropriately.\n\n=====Input Format=====\nA single line of input containing a string, S.\n\n=====Constraints=====\n0<len(S)<1000\nThe string consists of alphanumeric characters and spaces.\n\n=====Output Format=====\nPrint the capitalized string, S."
    },
    {
        "prompt": "You are playing the following Nim Game with your friend: There is a heap of stones on the table, each time one of you take turns to remove 1 to 3 stones. The one who removes the last stone will be the winner. You will take the first turn to remove the stones.\n\nBoth of you are very clever and have optimal strategies for the game. Write a function to determine whether you can win the game given the number of stones in the heap.\n\nExample:\n\n\nInput: 4\nOutput: false \nExplanation: If there are 4 stones in the heap, then you will never win the game;\n\u00a0            No matter 1, 2, or 3 stones you remove, the last stone will always be \n\u00a0            removed by your friend.",
        "completion": "A heap of stones is given to you and your friend.In one move, each of you can remove 1 to 3 stones. The one who removes the last stone will be the winner. You will take the first turn to remove the stones.\n\nDetermine whether you can win the game given the number of stones in the heap.\n\nExample:\n\n\nInput: 4\nOutput: false \nExplanation: If there are 4 stones in the heap, then you will never win the game;\n\u00a0            No matter 1, 2, or 3 stones you remove, the last stone will always be \n\u00a0            removed by your friend."
    },
    {
        "prompt": "Christmas is coming, and Santa has a long list to go through, to find who deserves presents for the big day. Go through a list of children, and return a list containing every child who appeared on Santa's list. Do not add any child more than once. Output should be sorted.\n~~~if:java\nFor java, use Lists.\n~~~\n\nComparison should be case sensitive and the returned list should contain only one copy of each name: `\"Sam\"` and `\"sam\"` are different, but `\"sAm\"` and `\"sAm\"` are not.\n\n",
        "completion": "You are given a list of words. \nYou need to output sorted list of words such that any of the words returned are not duplicated and comparison is case sensitive\n\n"
    },
    {
        "prompt": "You are given two strings $s$ and $t$ both of length $n$ and both consisting of lowercase Latin letters.\n\nIn one move, you can choose any length $len$ from $1$ to $n$ and perform the following operation:   Choose any contiguous substring of the string $s$ of length $len$ and reverse it;  at the same time choose any contiguous substring of the string $t$ of length $len$ and reverse it as well. \n\nNote that during one move you reverse exactly one substring of the string $s$ and exactly one substring of the string $t$.\n\nAlso note that borders of substrings you reverse in $s$ and in $t$ can be different, the only restriction is that you reverse the substrings of equal length. For example, if $len=3$ and $n=5$, you can reverse $s[1 \\dots 3]$ and $t[3 \\dots 5]$, $s[2 \\dots 4]$ and $t[2 \\dots 4]$, but not $s[1 \\dots 3]$ and $t[1 \\dots 2]$.\n\nYour task is to say if it is possible to make strings $s$ and $t$ equal after some (possibly, empty) sequence of moves.\n\nYou have to answer $q$ independent test cases.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $q$ ($1 \\le q \\le 10^4$) \u2014 the number of test cases. Then $q$ test cases follow.\n\nThe first line of the test case contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) \u2014 the length of $s$ and $t$.\n\nThe second line of the test case contains one string $s$ consisting of $n$ lowercase Latin letters.\n\nThe third line of the test case contains one string $t$ consisting of $n$ lowercase Latin letters.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$ ($\\sum n \\le 2 \\cdot 10^5$).\n\n\n-----Output-----\n\nFor each test case, print the answer on it \u2014 \"YES\" (without quotes) if it is possible to make strings $s$ and $t$ equal after some (possibly, empty) sequence of moves and \"NO\" otherwise.\n\n\n-----Example-----\nInput\n4\n4\nabcd\nabdc\n5\nababa\nbaaba\n4\nasdf\nasdg\n4\nabcd\nbadc\n\nOutput\nNO\nYES\nNO\nYES",
        "completion": "You are given two strings s and t both of length n and both consisting of lowercase Latin letters.\n\nIn one move, you can choose any length len from 1 to n and perform the following operation:   Choose any contiguous substring of the string s of length len and reverse it;  at the same time choose any contiguous substring of the string t of length len and reverse it as well. \n\nYour task is to say if it is possible to make strings s and t equal after some (possibly, empty) sequence of moves.\n\n\n-----Input-----\n\nThe first line of the input contains one integer q (1 \\le q \\le 10^4) \u2014 the number of test cases. Then q test cases follow.\n\nThe first line of the test case contains one integer n (1 \\le n \\le 2 \\cdot 10^5) \u2014 the length of s and t.\n\nThe second line of the test case contains one string s consisting of n lowercase Latin letters.\n\nThe third line of the test case contains one string t consisting of n lowercase Latin letters.\n\nIt is guaranteed that the sum of n over all test cases does not exceed 2 \\cdot 10^5 (\\sum n \\le 2 \\cdot 10^5).\n\n\n-----Output-----\n\nFor each test case, print the answer on it \u2014 \"YES\" (without quotes) if it is possible to make strings s and t equal after some (possibly, empty) sequence of moves and \"NO\" otherwise.\n\n\n-----Example-----\nInput\n4\n4\nabcd\nabdc\n5\nababa\nbaaba\n4\nasdf\nasdg\n4\nabcd\nbadc\n\nOutput\nNO\nYES\nNO\nYES"
    },
    {
        "prompt": "# Task\n Given a position of a knight on the standard chessboard, find the number of different moves the knight can perform.\n\n The knight can move to a square that is two squares horizontally and one square vertically, or two squares vertically and one square horizontally away from it. The complete move therefore looks like the letter L. Check out the image below to see all valid moves for a knight piece that is placed on one of the central squares.\n\n ![](https://codefightsuserpics.s3.amazonaws.com/tasks/chessKnight/img/knight.jpg?_tm=1473533979951)\n\n# Example\n\n For `cell = \"a1\"`, the output should be `2`.\n\n ![](https://codefightsuserpics.s3.amazonaws.com/tasks/chessKnight/img/ex_1.jpg?_tm=1473533980197)\n\n For `cell = \"c2\"`, the output should be `6`.\n\n ![](https://codefightsuserpics.s3.amazonaws.com/tasks/chessKnight/img/ex_2.jpg?_tm=1473533980368)\n\n# Input/Output\n\n\n - `[input]` string `cell`\n\n    String consisting of letter+number - coordinates of the knight on an 8 \u00d7 8 chessboard in chess notation.\n\n\n - `[output]` an integer",
        "completion": "# Task\n Given a position of a knight on the standard chessboard, find the number of different moves the knight can perform.\n\n The knight can move to a square that is two squares horizontally and one square vertically, or two squares vertically and one square horizontally away from it. The complete move therefore looks like the letter L.\n\n# Example\n\n For `cell = \"a1\"`, the output should be `2`.\n\n For `cell = \"c2\"`, the output should be `6`.\n\n# Input/Output\n\n\n - `[input]` string `cell`\n\n    String consisting of letter+number - coordinates of the knight on an 8 \u00d7 8 chessboard in chess notation.\n\n\n - `[output]` an integer"
    },
    {
        "prompt": "Students are asked to stand in non-decreasing order of heights for an annual photo.\nReturn the minimum number of students that must move in order for all students to be standing in non-decreasing order of height.\nNotice that when a group of students is selected they can reorder in any possible way between themselves and the non selected students\u00a0remain on their seats.\n\u00a0\nExample 1:\nInput: heights = [1,1,4,2,1,3]\nOutput: 3\nExplanation: \nCurrent array : [1,1,4,2,1,3]\nTarget array  : [1,1,1,2,3,4]\nOn index 2 (0-based) we have 4 vs 1 so we have to move this student.\nOn index 4 (0-based) we have 1 vs 3 so we have to move this student.\nOn index 5 (0-based) we have 3 vs 4 so we have to move this student.\n\nExample 2:\nInput: heights = [5,1,2,3,4]\nOutput: 5\n\nExample 3:\nInput: heights = [1,2,3,4,5]\nOutput: 0\n\n\u00a0\nConstraints:\n\n1 <= heights.length <= 100\n1 <= heights[i] <= 100\n",
        "completion": "you are given an array.\nReturn the minimum number of elements in array that must move in order for all numbers in array to be in non-decreasing order.\nNotice that when a group of indexes are selected they can reorder in any possible way between themselves and the non selected indexes\u00a0remain the same.\n\u00a0\nExample 1:\nInput: heights = [1,1,4,2,1,3]\nOutput: 3\nExplanation: \nCurrent array : [1,1,4,2,1,3]\nTarget array  : [1,1,1,2,3,4]\nOn index 2 we have 4 vs 1 so we have to move this element.\nOn index 4 we have 1 vs 3 so we have to move this element.\nOn index 5 we have 3 vs 4 so we have to move this element.\n\nExample 2:\nInput: heights = [5,1,2,3,4]\nOutput: 5\n\nExample 3:\nInput: heights = [1,2,3,4,5]\nOutput: 0\n\n\u00a0\nConstraints:\n\n1 <= heights.length <= 100\n1 <= heights[i] <= 100\n"
    },
    {
        "prompt": "A bus\u00a0has n stops numbered from 0 to n - 1 that form\u00a0a circle. We know the distance between all pairs of neighboring stops where distance[i] is the distance between the stops number\u00a0i and (i + 1) % n.\nThe bus goes along both directions\u00a0i.e. clockwise and counterclockwise.\nReturn the shortest distance between the given\u00a0start\u00a0and destination\u00a0stops.\n\u00a0\nExample 1:\n\nInput: distance = [1,2,3,4], start = 0, destination = 1\nOutput: 1\nExplanation: Distance between 0 and 1 is 1 or 9, minimum is 1.\n\u00a0\nExample 2:\n\nInput: distance = [1,2,3,4], start = 0, destination = 2\nOutput: 3\nExplanation: Distance between 0 and 2 is 3 or 7, minimum is 3.\n\n\u00a0\nExample 3:\n\nInput: distance = [1,2,3,4], start = 0, destination = 3\nOutput: 4\nExplanation: Distance between 0 and 3 is 6 or 4, minimum is 4.\n\n\u00a0\nConstraints:\n\n1 <= n\u00a0<= 10^4\ndistance.length == n\n0 <= start, destination < n\n0 <= distance[i] <= 10^4",
        "completion": "You are given a array of numbers. we know distance between all pairs of neighboring indexes where distance[i] is sum of numbers between the index i and (i + 1) % n. you can count distance in both direction of indexes\nReturn the shortest distance between the given indexes. Also, you can traverse the array in both directions\n\nExample 1:\n\nInput: distance = [1,2,3,4], start = 0, destination = 1\nOutput: 1\nExplanation: Distance between 0 and 1 is 1 or 9, minimum is 1.\n\u00a0\nExample 2:\n\nInput: distance = [1,2,3,4], start = 0, destination = 2\nOutput: 3\nExplanation: Distance between 0 and 2 is 3 or 7, minimum is 3.\n\n\u00a0\nExample 3:\n\nInput: distance = [1,2,3,4], start = 0, destination = 3\nOutput: 4\nExplanation: Distance between 0 and 3 is 6 or 4, minimum is 4.\n\n\u00a0\nConstraints:\n\n1 <= n\u00a0<= 10^4\ndistance.length == n\n0 <= start, destination < n\n0 <= distance[i] <= 10^4\n"
    },
    {
        "prompt": "You are given an array $a$ of length $n$ consisting of zeros. You perform $n$ actions with this array: during the $i$-th action, the following sequence of operations appears:  Choose the maximum by length subarray (continuous subsegment) consisting only of zeros, among all such segments choose the leftmost one;  Let this segment be $[l; r]$. If $r-l+1$ is odd (not divisible by $2$) then assign (set) $a[\\frac{l+r}{2}] := i$ (where $i$ is the number of the current action), otherwise (if $r-l+1$ is even) assign (set) $a[\\frac{l+r-1}{2}] := i$. \n\nConsider the array $a$ of length $5$ (initially $a=[0, 0, 0, 0, 0]$). Then it changes as follows:  Firstly, we choose the segment $[1; 5]$ and assign $a[3] := 1$, so $a$ becomes $[0, 0, 1, 0, 0]$;  then we choose the segment $[1; 2]$ and assign $a[1] := 2$, so $a$ becomes $[2, 0, 1, 0, 0]$;  then we choose the segment $[4; 5]$ and assign $a[4] := 3$, so $a$ becomes $[2, 0, 1, 3, 0]$;  then we choose the segment $[2; 2]$ and assign $a[2] := 4$, so $a$ becomes $[2, 4, 1, 3, 0]$;  and at last we choose the segment $[5; 5]$ and assign $a[5] := 5$, so $a$ becomes $[2, 4, 1, 3, 5]$. \n\nYour task is to find the array $a$ of length $n$ after performing all $n$ actions. Note that the answer exists and unique.\n\nYou have to answer $t$ independent test cases.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $t$ ($1 \\le t \\le 10^4$) \u2014 the number of test cases. Then $t$ test cases follow.\n\nThe only line of the test case contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) \u2014 the length of $a$.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$ ($\\sum n \\le 2 \\cdot 10^5$).\n\n\n-----Output-----\n\nFor each test case, print the answer \u2014 the array $a$ of length $n$ after performing $n$ actions described in the problem statement. Note that the answer exists and unique.\n\n\n-----Example-----\nInput\n6\n1\n2\n3\n4\n5\n6\n\nOutput\n1 \n1 2 \n2 1 3 \n3 1 2 4 \n2 4 1 3 5 \n3 4 1 5 2 6",
        "completion": "You are given an array $a$ of length $n$ consisting of zeros. \nYou perform $n$ actions with this array: during the $i$-th action:\n\nChoose the maximum length subarray consisting only of zeros, among all such segments choose the leftmost one;  \nLet this segment be $[l; r]$.\nIf $r-l+1$ is odd then assign $a[\\frac{l+r}{2}] := i$ otherwise assign $a[\\frac{l+r-1}{2}] := i$. \n\nConsider the array $a$ of length $5$. \nFirstly, we choose the segment $[1; 5]$ and assign $a[3] := 1$, \nso $a$ becomes $[0, 0, 1, 0, 0]$;  then we choose the segment $[1; 2]$ and assign $a[1] := 2$, \nso $a$ becomes $[2, 0, 1, 0, 0]$;  then we choose the segment $[4; 5]$ and assign $a[4] := 3$, \nso $a$ becomes $[2, 0, 1, 3, 0]$;  then we choose the segment $[2; 2]$ and assign $a[2] := 4$, \nso $a$ becomes $[2, 4, 1, 3, 0]$;  and at last we choose the segment $[5; 5]$ and assign $a[5] := 5$, \nso $a$ becomes $[2, 4, 1, 3, 5]$. \n\n-----Input-----\n\nThe first line of the input contains one integer $t$ ($1 \\le t \\le 10^4$) \u2014 the number of test cases. Then $t$ test cases follow.\n\nThe only line of the test case contains one integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) \u2014 the length of $a$.\n\nIt is guaranteed that the sum of $n$ over all test cases does not exceed $2 \\cdot 10^5$ ($\\sum n \\le 2 \\cdot 10^5$).\n\n\n-----Output-----\n\nFor each test case, print the answer \u2014 the array $a$ of length $n$ after performing $n$ actions described in the problem statement. Note that the answer exists and unique.\n\n\n-----Example-----\nInput\n6\n1\n2\n3\n4\n5\n6\n\nOutput\n1 \n1 2 \n2 1 3 \n3 1 2 4 \n2 4 1 3 5 \n3 4 1 5 2 6\n"
    },
    {
        "prompt": "Polycarp analyzes the prices of the new berPhone. At his disposal are the prices for $n$ last days: $a_1, a_2, \\dots, a_n$, where $a_i$ is the price of berPhone on the day $i$.\n\nPolycarp considers the price on the day $i$ to be bad if later (that is, a day with a greater number) berPhone was sold at a lower price. For example, if $n=6$ and $a=[3, 9, 4, 6, 7, 5]$, then the number of days with a bad price is $3$ \u2014 these are days $2$ ($a_2=9$), $4$ ($a_4=6$) and $5$ ($a_5=7$).\n\nPrint the number of days with a bad price.\n\nYou have to answer $t$ independent data sets.\n\n\n-----Input-----\n\nThe first line contains an integer $t$ ($1 \\le t \\le 10000$) \u2014 the number of sets of input data in the test. Input data sets must be processed independently, one after another.\n\nEach input data set consists of two lines. The first line contains an integer $n$ ($1 \\le n \\le 150000$) \u2014 the number of days. The second line contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^6$), where $a_i$ is the price on the $i$-th day.\n\nIt is guaranteed that the sum of $n$ over all data sets in the test does not exceed $150000$.\n\n\n-----Output-----\n\nPrint $t$ integers, the $j$-th of which should be equal to the number of days with a bad price in the $j$-th input data set.\n\n\n-----Example-----\nInput\n5\n6\n3 9 4 6 7 5\n1\n1000000\n2\n2 1\n10\n31 41 59 26 53 58 97 93 23 84\n7\n3 2 1 2 3 4 5\n\nOutput\n3\n0\n1\n8\n2",
        "completion": "you are given a list of of integers of length $n$ of values $a_1, a_2, \\dots, a_n$, where $a_i$ is the value of index $i$.\n\nA vaue of index $i$ is bad if later that index the list contains a smaller value. For example, if $n=6$ and $a=[3, 9, 4, 6, 7, 5]$, then the number of indexes with a bad value is $3$ \u2014 these are index $2$ ($a_2=9$), $4$ ($a_4=6$) and $5$ ($a_5=7$).\n\nPrint the number of index with a bad value.\n\nYou have to answer $t$ independent data sets.\n\n-----Input-----\n\nThe first line contains an integer $t$ ($1 \\le t \\le 10000$) \u2014 the number of sets of input data in the test. Input data sets must be processed independently, one after another.\n\nEach input data set consists of two lines. The first line contains an integer $n$ ($1 \\le n \\le 150000$) \u2014 the number of days. The second line contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^6$), where $a_i$ is the price on the $i$-th day.\n\nIt is guaranteed that the sum of $n$ over all data sets in the test does not exceed $150000$.\n\n\n-----Output-----\n\nPrint $t$ integers, the $j$-th of which should be equal to the number of indexes with a bad values in the $j$-th input data set.\n\n\n-----Example-----\nInput\n5\n6\n3 9 4 6 7 5\n1\n1000000\n2\n2 1\n10\n31 41 59 26 53 58 97 93 23 84\n7\n3 2 1 2 3 4 5\n\nOutput\n3\n0\n1\n8\n2\n"
    },
    {
        "prompt": "Polycarp is reading a book consisting of $n$ pages numbered from $1$ to $n$. Every time he finishes the page with the number divisible by $m$, he writes down the last digit of this page number. For example, if $n=15$ and $m=5$, pages divisible by $m$ are $5, 10, 15$. Their last digits are $5, 0, 5$ correspondingly, their sum is $10$.\n\nYour task is to calculate the sum of all digits Polycarp has written down.\n\nYou have to answer $q$ independent queries.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $q$ ($1 \\le q \\le 1000$) \u2014 the number of queries.\n\nThe following $q$ lines contain queries, one per line. Each query is given as two integers $n$ and $m$ ($1 \\le n, m \\le 10^{16}$) \u2014 the number of pages in the book and required divisor, respectively.\n\n\n-----Output-----\n\nFor each query print the answer for it \u2014 the sum of digits written down by Polycarp.\n\n\n-----Example-----\nInput\n7\n1 1\n10 1\n100 3\n1024 14\n998244353 1337\n123 144\n1234312817382646 13\n\nOutput\n1\n45\n153\n294\n3359835\n0\n427262129093995",
        "completion": "given a number $n$ and $m$. Find sum of last digits of all the numbers from $1$ to $n$ which are divisible by $m$\n\n-----Input-----\n\nThe first line of the input contains one integer $q$ ($1 \\le q \\le 1000$) \u2014 the number of queries.\n\nThe following $q$ lines contain queries, one per line. Each query is given as two integers $n$ and $m$ ($1 \\le n, m \\le 10^{16}$) \u2014 the number of pages in the book and required divisor, respectively.\n\n\n-----Output-----\n\nFor each query print the answer for it \u2014 the sum of digits.\n\n\n-----Example-----\nInput\n7\n1 1\n10 1\n100 3\n1024 14\n998244353 1337\n123 144\n1234312817382646 13\n\nOutput\n1\n45\n153\n294\n3359835\n0\n427262129093995\n"
    },
    {
        "prompt": "You have $n$ gifts and you want to give all of them to children. Of course, you don't want to offend anyone, so all gifts should be equal between each other. The $i$-th gift consists of $a_i$ candies and $b_i$ oranges.\n\nDuring one move, you can choose some gift $1 \\le i \\le n$ and do one of the following operations:\n\n  eat exactly one candy from this gift (decrease $a_i$ by one);  eat exactly one orange from this gift (decrease $b_i$ by one);  eat exactly one candy and exactly one orange from this gift (decrease both $a_i$ and $b_i$ by one). \n\nOf course, you can not eat a candy or orange if it's not present in the gift (so neither $a_i$ nor $b_i$ can become less than zero).\n\nAs said above, all gifts should be equal. This means that after some sequence of moves the following two conditions should be satisfied: $a_1 = a_2 = \\dots = a_n$ and $b_1 = b_2 = \\dots = b_n$ (and $a_i$ equals $b_i$ is not necessary).\n\nYour task is to find the minimum number of moves required to equalize all the given gifts.\n\nYou have to answer $t$ independent test cases.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $t$ ($1 \\le t \\le 1000$) \u2014 the number of test cases. Then $t$ test cases follow.\n\nThe first line of the test case contains one integer $n$ ($1 \\le n \\le 50$) \u2014 the number of gifts. The second line of the test case contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^9$), where $a_i$ is the number of candies in the $i$-th gift. The third line of the test case contains $n$ integers $b_1, b_2, \\dots, b_n$ ($1 \\le b_i \\le 10^9$), where $b_i$ is the number of oranges in the $i$-th gift.\n\n\n-----Output-----\n\nFor each test case, print one integer: the minimum number of moves required to equalize all the given gifts.\n\n\n-----Example-----\nInput\n5\n3\n3 5 6\n3 2 3\n5\n1 2 3 4 5\n5 4 3 2 1\n3\n1 1 1\n2 2 2\n6\n1 1000000000 1000000000 1000000000 1000000000 1000000000\n1 1 1 1 1 1\n3\n10 12 8\n7 5 4\n\nOutput\n6\n16\n0\n4999999995\n7\n\n\n\n-----Note-----\n\nIn the first test case of the example, we can perform the following sequence of moves:\n\n  choose the first gift and eat one orange from it, so $a = [3, 5, 6]$ and $b = [2, 2, 3]$;  choose the second gift and eat one candy from it, so $a = [3, 4, 6]$ and $b = [2, 2, 3]$;  choose the second gift and eat one candy from it, so $a = [3, 3, 6]$ and $b = [2, 2, 3]$;  choose the third gift and eat one candy and one orange from it, so $a = [3, 3, 5]$ and $b = [2, 2, 2]$;  choose the third gift and eat one candy from it, so $a = [3, 3, 4]$ and $b = [2, 2, 2]$;  choose the third gift and eat one candy from it, so $a = [3, 3, 3]$ and $b = [2, 2, 2]$.",
        "completion": "  You are given 2 integer arrays of length $n$, array $x$ and array $y$. For each array, you want to make all its values equivalent\nsuch that $x_1$ = $x_2$ = $x_3$ = ... = $x_n$ and $y_1$ = $y_2$ = $y_3$ = ... = $y_n$.\n\nIn one move, you can decrement the value of an element by 1 at $x_i$ or $y_i$, or at both $x_i$ and $y_i$, where $i$ is an index of your choosing.\n\nThe value of an element can not go below 0, so no negative numbers are allowed.\n\nYour goal is to make each array contain equivlanet values in the least number of moves possible.\n\nYou have to answer $t$ independent test cases.\n\n-----Input-----\n\nThe first line of the input contains one integer $t$ ($1 \\le t \\le 1000$) \u2014 the number of test cases. Then $t$ test cases follow.\n\nThe first line of the test case contains one integer $n$ ($1 \\le n \\le 50$) \u2014 the length of the arrays.\nThe second line of the test case contains $n$ integers $x_1, x_2, \\dots, x_n$ ($1 \\le x_i \\le 10^9$).\nThe third line of the test case contains $n$ integers $y_1, y_2, \\dots, y_n$ ($1 \\le y_i \\le 10^9$).\n\n\n-----Output-----\n\nFor each test case, print one integer: the minimum number of moves required to equalize all the given values in each array.\n\n\n-----Example-----\nInput\n5\n3\n3 5 6\n3 2 3\n5\n1 2 3 4 5\n5 4 3 2 1\n3\n1 1 1\n2 2 2\n6\n1 1000000000 1000000000 1000000000 1000000000 1000000000\n1 1 1 1 1 1\n3\n10 12 8\n7 5 4\n\nOutput\n6\n16\n0\n4999999995\n7"
    },
    {
        "prompt": "Initially, you have the array $a$ consisting of one element $1$ ($a = [1]$).\n\nIn one move, you can do one of the following things:\n\n  Increase some (single) element of $a$ by $1$ (choose some $i$ from $1$ to the current length of $a$ and increase $a_i$ by one);  Append the copy of some (single) element of $a$ to the end of the array (choose some $i$ from $1$ to the current length of $a$ and append $a_i$ to the end of the array). \n\nFor example, consider the sequence of five moves:\n\n  You take the first element $a_1$, append its copy to the end of the array and get $a = [1, 1]$.  You take the first element $a_1$, increase it by $1$ and get $a = [2, 1]$.  You take the second element $a_2$, append its copy to the end of the array and get $a = [2, 1, 1]$.  You take the first element $a_1$, append its copy to the end of the array and get $a = [2, 1, 1, 2]$.  You take the fourth element $a_4$, increase it by $1$ and get $a = [2, 1, 1, 3]$. \n\nYour task is to find the minimum number of moves required to obtain the array with the sum at least $n$.\n\nYou have to answer $t$ independent test cases.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $t$ ($1 \\le t \\le 1000$) \u2014 the number of test cases. Then $t$ test cases follow.\n\nThe only line of the test case contains one integer $n$ ($1 \\le n \\le 10^9$) \u2014 the lower bound on the sum of the array.\n\n\n-----Output-----\n\nFor each test case, print the answer: the minimum number of moves required to obtain the array with the sum at least $n$.\n\n\n-----Example-----\nInput\n5\n1\n5\n42\n1337\n1000000000\n\nOutput\n0\n3\n11\n72\n63244",
        "completion": "You are given an array $a$ consisting of one element $1$ ($a = [1]$).\n\nIn one move, you can do one of the following things:\n\n  Increase some (single) element of $a$ by $1$ (choose some $i$ from $1$ to the current length of $a$ and increase $a_i$ by one);  Append the copy of some (single) element of $a$ to the end of the array (choose some $i$ from $1$ to the current length of $a$ and append $a_i$ to the end of the array). \n\nYour task is to find the minimum number of moves required to obtain the array with the sum at least $n$.\n\nYou have to answer $t$ independent test cases.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $t$ ($1 \\le t \\le 1000$) \u2014 the number of test cases. Then $t$ test cases follow.\n\nThe only line of the test case contains one integer $n$ ($1 \\le n \\le 10^9$) \u2014 the lower bound on the sum of the array.\n\n\n-----Output-----\n\nFor each test case, print the answer: the minimum number of moves required to obtain the array with the sum at least $n$.\n\n\n-----Example-----\nInput\n5\n1\n5\n42\n1337\n1000000000\n\nOutput\n0\n3\n11\n72\n63244"
    },
    {
        "prompt": "Given an array containing only zeros and ones, find the index of the zero that, if converted to one, will make the longest sequence of ones.\n\nFor instance, given the array:\n\n```\n[1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1]\n```\n\nreplacing the zero at index 10 (counting from 0) forms a sequence of 9 ones:\n\n```\n[1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1]\n                  '------------^------------'\n```\n\n\nYour task is to complete the function that determines where to replace a zero with a one to make the maximum length subsequence.\n\n\n**Notes:**\n- If there are multiple results, return the last one:\n\n `[1, 1, 0, 1, 1, 0, 1, 1] ==> 5`\n\n\n- The array will always contain only zeros and ones.\n\n\nCan you do this in one pass?",
        "completion": "Given an array containing only zeros and ones, find the index of the zero that, if converted to one, will make the longest sequence of ones.\n\nFor instance, given the array:\n\n```\n[1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1]\n```\n\nreplacing the zero at index 10 forms a sequence of 9 ones:\n\n```\n[1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1]\n```\n\nYour task is to complete the function that determines where to replace a zero with a one to make the maximum length subsequence.\nIf there are multiple valid answers, return the last one"
    },
    {
        "prompt": "=====Problem Statement=====\nA newly opened multinational brand has decided to base their company logo on the three most common characters in the company name. They are now trying out various combinations of company names and logos based on this condition. Given a string s, which is the company name in lowercase letters, your task is to find the top three most common characters in the string.\nPrint the three most common characters along with their occurrence count.\nSort in descending order of occurrence count.\nIf the occurrence count is the same, sort the characters in alphabetical order.\n\nFor example, according to the conditions described above, GOOGLE would have it's logo with the letters G, O, E. \n\n=====Input Format=====\nA single line of input containing the string S.\n\n=====Constraints=====\n3\u2264len(S)\u226410^4",
        "completion": "=====Problem Statement=====\nGiven a string s in lowercase, your task is to find the top three most common characters in the string.\n\nPrint the three most common characters along with their occurrence count.\nSort in descending order of occurrence count.\nIf the occurrence count is the same, sort the characters in alphabetical order.\n\nFor example, according to the conditions described above, GOOGLE would output\nG 2\nO 2\nE 1\n\n=====Input Format=====\nA single line of input containing the string S.\n\n=====Constraints=====\n3\u2264len(S)\u226410^4"
    },
    {
        "prompt": "Given an array of unique integers salary\u00a0where salary[i] is the salary of the employee i.\nReturn the average salary of employees excluding the minimum and maximum salary.\n\u00a0\nExample 1:\nInput: salary = [4000,3000,1000,2000]\nOutput: 2500.00000\nExplanation: Minimum salary and maximum salary are 1000 and 4000 respectively.\nAverage salary excluding minimum and maximum salary is (2000+3000)/2= 2500\n\nExample 2:\nInput: salary = [1000,2000,3000]\nOutput: 2000.00000\nExplanation: Minimum salary and maximum salary are 1000 and 3000 respectively.\nAverage salary excluding minimum and maximum salary is (2000)/1= 2000\n\nExample 3:\nInput: salary = [6000,5000,4000,3000,2000,1000]\nOutput: 3500.00000\n\nExample 4:\nInput: salary = [8000,9000,2000,3000,6000,1000]\nOutput: 4750.00000\n\n\u00a0\nConstraints:\n\n3 <= salary.length <= 100\n10^3\u00a0<= salary[i] <= 10^6\nsalary[i] is unique.\nAnswers within 10^-5 of the actual value will be accepted as correct.",
        "completion": "You are given an array of unique integers which represents salaries of employees.\nReturn the average salary of employees excluding the minimum and maximum salary.\n\u00a0\nExample 1:\nInput: salary = [4000,3000,1000,2000]\nOutput: 2500.00000\nExplanation: Minimum salary and maximum salary are 1000 and 4000 respectively.\nAverage salary excluding minimum and maximum salary is (2000+3000)/2= 2500\n\nExample 2:\nInput: salary = [1000,2000,3000]\nOutput: 2000.00000\nExplanation: Minimum salary and maximum salary are 1000 and 3000 respectively.\nAverage salary excluding minimum and maximum salary is (2000)/1= 2000\n\nExample 3:\nInput: salary = [6000,5000,4000,3000,2000,1000]\nOutput: 3500.00000\n\nExample 4:\nInput: salary = [8000,9000,2000,3000,6000,1000]\nOutput: 4750.00000\n\n\u00a0\nConstraints:\n\n3 <= salary.length <= 100\n10^3\u00a0<= salary[i] <= 10^6\nAnswers within 10^-5 of the actual value will be accepted as correct."
    },
    {
        "prompt": "We have two special characters. The first character can be represented by one bit 0. The second character can be represented by two bits (10 or 11).  \n\nNow given a string represented by several bits. Return whether the last character must be a one-bit character or not. The given string will always end with a zero.\n\nExample 1:\n\nInput: \nbits = [1, 0, 0]\nOutput: True\nExplanation: \nThe only way to decode it is two-bit character and one-bit character. So the last character is one-bit character.\n\n\n\nExample 2:\n\nInput: \nbits = [1, 1, 1, 0]\nOutput: False\nExplanation: \nThe only way to decode it is two-bit character and two-bit character. So the last character is NOT one-bit character.\n\n\n\nNote:\n1 .\nbits[i] is always 0 or 1.",
        "completion": "We have two patterns in characters. The first one can be represented by one bit 0. The second one can be represented by two bits either 10 or 11. \n\nYou are given an array with several bits. Return whether the last character must be a one-bit character or not. the given array will always ends with a zero\n\nExample 1:\n\nInput: \nbits = [1, 0, 0]\nOutput: True\nExplanation: \nThe only way to decode it is two-bit character and one-bit character. So the last character is one-bit character.\n\n\n\nExample 2:\n\nInput: \nbits = [1, 1, 1, 0]\nOutput: False\nExplanation: \nThe only way to decode it is two-bit character and two-bit character. So the last character is NOT one-bit character.\n\n\n\nNote:\n1 .\nbits[i] is always 0 or 1.\n"
    },
    {
        "prompt": "Given an arbitrary ransom note string and another string containing letters from all the magazines, write a function that will return true if the ransom \nnote can be constructed from the magazines ; otherwise, it will return false. \n\n\nEach letter in the magazine string can only be used once in your ransom note.\n\n\nNote:\nYou may assume that both strings contain only lowercase letters.\n\n\n\ncanConstruct(\"a\", \"b\") -> false\ncanConstruct(\"aa\", \"ab\") -> false\ncanConstruct(\"aa\", \"aab\") -> true",
        "completion": "Given a string a and another string b containing letters from all the magazines, write a function that will return true if string a can be constructed from the string b ; otherwise, it will return false. \n\nEach letter in the b string can only be used once in your a string.\n\n\nNote:\nYou may assume that both strings contain only lowercase letters.\n\n\n\ncanConstruct(\"a\", \"b\") -> false\ncanConstruct(\"aa\", \"ab\") -> false\ncanConstruct(\"aa\", \"aab\") -> true\n"
    }
]