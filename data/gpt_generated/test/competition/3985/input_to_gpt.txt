Chef and his friends are playing the game AMONG US. They all have chosen their names as numbers. There are N people in Chef s group including him, and each swears that he is not the imposter. However, it turns out there were N+1 people in the game. Now all that Chef needs to know is the name of the imposter, which is a number. Also remember that numbers can be duplicate. Can you help out Chef in finding the imposter  Input :  First line contains the value of N. Second line contains the N numbers that Chef s friends used as their names. Third line contains the N+1 numbers that people in the game have used as their names. Output :  Print the extra number in new line. Constraints :  1   Numbers used as names   1,000 1   N   1,000,000 Sample Input :  3 4 2 5 4 2 3 5 Sample Output :  
tl;dr: Given two unordered lists of Size N and N+1 find and return the additional element in the second list. Input :  First line contains the value of N. Second line contains list of size N. Third line contains list of size N+1. Output :  Print the extra number in new line. Constraints :  1   Elements   1,000 1   N   1,000,000 Sample Input :  3 4 2 5 4 2 3 5 Sample Output :  

Jon and Joe have received equal marks in the school examination.  But, they won't reconcile in peace when equated with each other.  To prove his might, Jon challenges Joe to write a program to find all possible number combos that sum to a given number.  While unsure whether he would be able to accomplish this feat or not, Joe accpets the challenge.  Being Joe's friend, your task is to help him out. # Task Create a function `combos`, that accepts a single positive integer `num` (30 > `num` > 0) and returns an array of arrays of positive integers that sum to `num`. 
tl;dr: Your need to create a function `combos` that accepts `num` (30 > `num` > 0) and returns an array of arrays of positive integers that sum to `num`. For an optimal solution, the following operation should complete within 6000ms

Vasya claims that he had a paper square. He cut it into two rectangular parts using one vertical or horizontal cut. Then Vasya informed you the dimensions of these two rectangular parts. You need to check whether Vasya originally had a square. In other words, check if it is possible to make a square using two given rectangles. 
tl;dr: Vasya claims that he had a paper square. He cut it into two rectangular parts using one vertical or horizontal cut. Then Vasya informed you the dimensions of these two rectangular parts. You need to check whether Vasya originally had a square. In other words, check if it is possible to make a square using two given rectangles. 

You have written on a piece of paper an array of n positive integers a[1], a[2], ..., a[n] and m good pairs of integers (i_1, j_1), (i_2, j_2), ..., (i_{m}, j_{m}). Each good pair (i_{k}, j_{k}) meets the following conditions: i_{k} + j_{k} is an odd number and 1   i_{k} < j_{k}   n. In one operation you can perform a sequence of actions:   take one of the good pairs (i_{k}, j_{k}) and some integer v (v > 1), which divides both numbers a[i_{k}] and a[j_{k}];  divide both numbers by v, i. e. perform the assignments: $a [ i_{k} ] = \frac{a [ i_{k} ]}{v}$ and $a [ j_{k} ] = \frac{a [ j_{k} ]}{v}$.  Determine the maximum number of operations you can sequentially perform on the given array. Note that one pair may be used several times in the described operations. 
tl;dr: