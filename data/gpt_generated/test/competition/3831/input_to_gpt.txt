Snuke is playing a puzzle game. In this game, you are given a rectangular board of dimensions R   C, filled with numbers. Each integer i from 1 through N is written twice, at the coordinates (x_{i,1},y_{i,1}) and (x_{i,2},y_{i,2}). The objective is to draw a curve connecting the pair of points where the same integer is written, for every integer from 1 through N. Here, the curves may not go outside the board or cross each other. Determine whether this is possible. -----Constraints-----  - 1   R,C   10^8  - 1   N   10^5  - 0   x_{i,1},x_{i,2}   R(1   i   N)  - 0   y_{i,1},y_{i,2}   C(1   i   N)  - All given points are distinct.  - All input values are integers. 
tl;dr: You are given a rectangular board of dimensions R   C, filled with numbers. Each integer i from 1 through N is written twice, at the coordinates (x_{i,1},y_{i,1}) and (x_{i,2},y_{i,2}). The objective is to draw a curve connecting the pair of points where the same integer is written, for every integer from 1 through N. Curves may not go outside the board or cross each other. Determine whether this is possible. -----Constraints-----  - 1   R,C   10^8  - 1   N   10^5  - 0   x_{i,1},x_{i,2}   R(1   i   N)  - 0   y_{i,1},y_{i,2}   C(1   i   N)  - All given points are distinct.  - All input values are integers. 

Once N boys and M girls attended a party. You are given a matrix A of N rows and M columns where Aij is 1 if the i-th boy likes the j-th girl, otherwise it will be 0. Note that it is not necessary that if a boy x likes girl y, then girl y should like boy x. You know that if there are two different boys x and y, who both like girl z, then there will be a collision. Can you calculate the number of different collisions at this party  Note that order of boys in the collision doesn't matter. 
tl;dr: Calculate the number of different collisions if a matrix N x M of N boys and M girls are given where Aij is 1 if the i-th boy likes the j-th girl, otherwise it will be 0 and collison occurs when two boys like the same girl.  

You are given two binary strings $a$ and $b$ of the same length. You can perform the following two operations on the string $a$: Swap any two bits at indices $i$ and $j$ respectively ($1 \le i, j \le n$), the cost of this operation is $|i - j|$, that is, the absolute difference between $i$ and $j$.  Select any arbitrary index $i$ ($1 \le i \le n$) and flip (change $0$ to $1$ or $1$ to $0$) the bit at this index. The cost of this operation is $1$.  Find the minimum cost to make the string $a$ equal to $b$. It is not allowed to modify string $b$. 
tl;dr: You are given two binary strings $a$ and $b$ of the same length. You can perform the following two operations on the string $a$: Swap any two bits at indices $i$ and $j$ respectively ($1 \le i, j \le n$), the cost of this operation is $|i - j|$. Select any arbitrary index $i$ ($1 \le i \le n$) and flip the bit at this index. The cost of this operation is $1$.  Find the minimum cost to make the string $a$ equal to $b$. It is not allowed to modify string $b$. 

Mayor of city S just hates trees and lawns. They take so much space and there could be a road on the place they occupy! The Mayor thinks that one of the main city streets could be considerably widened on account of lawn nobody needs anyway. Moreover, that might help reduce the car jams which happen from time to time on the street. The street is split into n equal length parts from left to right, the i-th part is characterized by two integers: width of road s_{i} and width of lawn g_{i}. [Image]  For each of n parts the Mayor should decide the size of lawn to demolish. For the i-th part he can reduce lawn width by integer x_{i} (0   x_{i}   g_{i}). After it new road width of the i-th part will be equal to s'_{i} = s_{i} + x_{i} and new lawn width will be equal to g'_{i} = g_{i} - x_{i}. On the one hand, the Mayor wants to demolish as much lawn as possible (and replace it with road). On the other hand, he does not want to create a rapid widening or narrowing of the road, which would lead to car accidents. To avoid that, the Mayor decided that width of the road for consecutive parts should differ by at most 1, i.e. for each i (1   i < n) the inequation |s'_{i} + 1 - s'_{i}|   1 should hold. Initially this condition might not be true. You need to find the the total width of lawns the Mayor will destroy according to his plan. 
tl;dr: