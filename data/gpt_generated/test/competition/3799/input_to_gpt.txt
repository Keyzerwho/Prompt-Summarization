The goal of this Kata is to return the greatest distance of index positions between matching number values in an array or 0 if there are no matching values.   
tl;dr: Return the greatest distance of index positions between matching number values in an array or 0 if there are no matching values.   

Farmer John has just given the cows a program to play with! The program contains two integer variables, x and y, and performs the following operations on a sequence a_1, a_2, ..., a_{n} of positive integers:  Initially, x = 1 and y = 0. If, after any step, x   0 or x > n, the program immediately terminates.  The program increases both x and y by a value equal to a_{x} simultaneously.  The program now increases y by a_{x} while decreasing x by a_{x}.  The program executes steps 2 and 3 (first step 2, then step 3) repeatedly until it terminates (it may never terminate). So, the sequence of executed steps may start with: step 2, step 3, step 2, step 3, step 2 and so on.  The cows are not very good at arithmetic though, and they want to see how the program works. Please help them! You are given the sequence a_2, a_3, ..., a_{n}. Suppose for each i (1   i   n - 1) we run the program on the sequence i, a_2, a_3, ..., a_{n}. For each such run output the final value of y if the program terminates or -1 if it does not terminate. 
tl;dr: Perform the following operations on a sequence a_1, a_2, ..., a_{n} of positive integers:  Initially, x = 1 and y = 0. If, after any step, x   0 or x > n, the program immediately terminates.  The program increases both x and y by a value equal to a_{x} simultaneously.  The program now increases y by a_{x} while decreasing x by a_{x}.  The program executes steps 2 and 3 first step 2, then step 3 repeatedly until it terminates .It may never terminate. You are given the sequence a_2, a_3, ..., a_{n}. Suppose for each i (1   i   n - 1) we run the program on the sequence i, a_2, a_3, ..., a_{n}. For each such run output the final value of y if the program terminates or -1 if it does not terminate. 

There is a string s of length 3 or greater. No two neighboring characters in s are equal. Takahashi and Aoki will play a game against each other. The two players alternately performs the following operation, Takahashi going first:  - Remove one of the characters in s, excluding both ends. However, a character cannot be removed if removal of the character would result in two neighboring equal characters in s. The player who becomes unable to perform the operation, loses the game. Determine which player will win when the two play optimally. -----Constraints-----  - 3   |s|   10^5  - s consists of lowercase English letters.  - No two neighboring characters in s are equal. 
tl;dr: