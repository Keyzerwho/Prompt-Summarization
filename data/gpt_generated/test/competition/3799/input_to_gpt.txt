# Task Your task is to write a function for calculating the score of a 10 pin bowling game. The input for the function is a list of pins knocked down per roll for one player. Output is the player's total score. # Rules ## General rules Rules of bowling in a nutshell: * A game consists of 10 frames. In each frame the player rolls 1 or 2 balls, except for the 10th frame, where the player rolls 2 or 3 balls. * The total score is the sum of your scores for the 10 frames * If you knock down fewer than 10 pins with 2 balls, your frame score is the number of pins knocked down * If you knock down all 10 pins with 2 balls (spare), you score the amount of pins knocked down plus a bonus - amount of pins knocked down with the next ball * If you knock down all 10 pins with 1 ball (strike), you score the amount of pins knocked down plus a bonus - amount of pins knocked down with the next 2 balls ## Rules for 10th frame As the 10th frame is the last one, in case of spare or strike there will be no next balls for the bonus. To account for that: * if the last frame is a spare, player rolls 1 bonus ball. * if the last frame is a strike, player rolls 2 bonus balls. These bonus balls on 10th frame are only counted as a bonus to the respective spare or strike. # More information http://en.wikipedia.org/wiki/Ten-pin_bowling#Scoring # Input You may assume that the input is always valid. This means: * input list length is correct * number of pins knocked out per roll is vali
tl;dr: # Task Given a list of pins knocked down per roll for one player, output the player's total score. # Rules ## General rules Rules of bowling in a nutshell: * A game consists of 10 frames. In each frame the player rolls 1 or 2 balls, except for the 10th frame, where the player rolls 2 or 3 balls. * The total score is the sum of your scores for the 10 frames * If you knock down fewer than 10 pins with 2 balls, your frame score is the number of pins knocked down * If you knock down all 10 pins with 2 balls (spare), you score the amount of pins knocked down plus a bonus - amount of pins knocked down with the next ball * If you knock down all 10 pins with 1 ball (strike), you score the amount of pins knocked down plus a bonus - amount of pins knocked down with the next 2 balls ## Rules for 10th frame As the 10th frame is the last one, in case of spare or strike there will be no next balls for the bonus. To account for that: * if the last frame is a spare, player rolls 1 bonus ball. * if the last frame is a strike, player rolls 2 bonus balls. These bonus balls on 10th frame are only counted as a bonus to the respective spare or strike

For a vector $\vec{v} = (x, y)$, define $|v| = \sqrt{x^2 + y^2}$. Allen had a bit too much to drink at the bar, which is at the origin. There are $n$ vectors $\vec{v_1}, \vec{v_2}, \cdots, \vec{v_n}$. Allen will make $n$ moves. As Allen's sense of direction is impaired, during the $i$-th move he will either move in the direction $\vec{v_i}$ or $-\vec{v_i}$. In other words, if his position is currently $p = (x, y)$, he will either move to $p + \vec{v_i}$ or $p - \vec{v_i}$. Allen doesn't want to wander too far from home (which happens to also be the bar). You need to help him figure out a sequence of moves (a sequence of signs for the vectors) such that his final position $p$ satisfies $|p| \le 1.5 \cdot 10^6$ so that he can stay safe. 
tl;dr: You are at the origin. You will make $n$ moves. There are $n$ vectors $\vec{v_1}, \vec{v_2}, \cdots, \vec{v_n}$. During the $i$-th move you will either move in the direction $\vec{v_i}$ or $-\vec{v_i}$. Figure out a sequence of moves such that your final position $p$ satisfies $|p| \le 1.5 \cdot 10^6$. 

Given a string containing a list of integers separated by commas, write the function string_to_int_list(s) that takes said string and returns a new list containing all integers present in the string, preserving the order. For example, give the string "-1,2,3,4,5", the function string_to_int_list() should return [-1,2,3,4,5] Please note that there can be one or more consecutive commas whithout numbers, like so: "-1,-2,,,,,,3,4,5,,6
tl;dr: You are given a string containing a list of integers separated by commas, write the function string_to_int_list(s) that takes said string and returns a new list containing all integers present in the string. 

There is a string s of length 3 or greater. No two neighboring characters in s are equal. Takahashi and Aoki will play a game against each other. The two players alternately performs the following operation, Takahashi going first:  - Remove one of the characters in s, excluding both ends. However, a character cannot be removed if removal of the character would result in two neighboring equal characters in s. The player who becomes unable to perform the operation, loses the game. Determine which player will win when the two play optimally. -----Constraints-----  - 3   |s|   10^5  - s consists of lowercase English letters.  - No two neighboring characters in s are equal. 
tl;dr: