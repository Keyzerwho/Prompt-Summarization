 Let x, y, and z, be non-negative integers. d_1 reprsents the absolute difference between x and y, and d_2 represents the absolute difference between y and z. Your goal is to figure out if d_1 and d_2 can become equivlanet after all moves have been expended. In each move, you can increment x, y, or z by 1. You will be given n, the total number of moves you're allowed, and k, the number of moves that had already been used. 
-----Input----- Input is given from Standard Input in the following format: H W a_{11} ... a_{1W} : a_{H1} ... a_{HW} -----Output----- If the objective is achievable, print the minimum necessary number of leaves to remove. Otherwise, print -1 instead. -----Sample Input----- 3 3 S.o .o. o.T -----Sample Output----- 2 Remove the upper-right and lower-left leaves.