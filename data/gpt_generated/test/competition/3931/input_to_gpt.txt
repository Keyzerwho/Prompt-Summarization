Take an integer `n (n >= 0)` and a digit `d (0 <= d <= 9)` as an integer. Square all numbers `k (0 <= k <= n)` between 0 and n. Count the numbers of  digits `d` used in the writing of all the `k**2`. Call `nb_dig` (or nbDig or ...) the function taking `n` and `d` as parameters and returning this count. #
tl;dr: Take an integer 'n' (n >= 0) and a digit 'd' (0 <= d <= 9) as an integer. Square all numbers 'k' (0 <= k <= n) between 0 and 'n'. Count the numbers of  digits 'd' used in the writing of all the 'k**2'. Write the function taking 'n' and 'd' as parameters and returning this count. #

Let's say we have a number, `num`. Find the number of values of `n` such that: there exists `n` consecutive **positive** values that sum up to `num`. A positive number is `> 0`. `n` can also be 1. ```python #
tl;dr: Given `num`. Find the total count of existing consecutive **positive** values that sum up to `num`. A positive number is `> 0`. `n` can also be 1. ```python #

Give me Chocolate Anushka wants to buy chocolates.there are many chocolates in front of her, tagged with their prices. Anushka has only a certain amount to spend, and she wants to maximize the number of chocolates she buys with this money. Given a list of prices and an amount to spend, what is the maximum number of chocolates Anushka can buy   For example,  if prices =[1,2,3,4] and Anushka has k=7 to spend, she can buy items [1,2,3] for 6 , or [3,4] for 7 units of currency. she would choose the first group of 3 items. Input Format The first line contains two integers, n and k , the number of priced chocolates and the amount Anushka has to spend. The next line contains n space-separated integers prices[i] Constraints 1<= n <= 105 1<= k <= 109 1<= prices[i] <= 109 A chocolate can't be bought multiple times. Output Format An integer that denotes the maximum number of chocolates Anushka can buy for her. Sample Input 7 50 1 12 5 111 200 1000 10 Sample Output 4 Explanation she can buy only 4 chocolatess at most. These chocolates have the following prices: 1, 12, 5, 10
tl;dr: You are given an array of size n and a limiting number k. Find the maximum count of numbers from array whose sum is not greater than k. Input Format The first line contains two integers, n and k , the number of elements in array and a limiting number. The next line contains n space-separated integers array[i] Constraints 1<= n <= 105 1<= k <= 109 1<= array[i] <= 109 A number can't be repeated multiple times. Output Format An integer that denotes the maximum count of array numbers whose sum can't be greater than k. Sample Input 7 50 1 12 5 111 200 1000 10 Sample Output 

In the evening Polycarp decided to analyze his today's travel expenses on public transport. The bus system in the capital of Berland is arranged in such a way that each bus runs along the route between two stops. Each bus has no intermediate stops. So each of the buses continuously runs along the route from one stop to the other and back. There is at most one bus running between a pair of stops. Polycarp made n trips on buses. About each trip the stop where he started the trip and the the stop where he finished are known. The trips follow in the chronological order in Polycarp's notes. It is known that one trip on any bus costs a burles. In case when passenger makes a transshipment the cost of trip decreases to b burles (b < a). A passenger makes a transshipment if the stop on which he boards the bus coincides with the stop where he left the previous bus. Obviously, the first trip can not be made with transshipment. For example, if Polycarp made three consecutive trips: "BerBank" $\rightarrow$ "University", "University" $\rightarrow$ "BerMall", "University" $\rightarrow$ "BerBank", then he payed a + b + a = 2a + b burles. From the BerBank he arrived to the University, where he made transshipment to the other bus and departed to the BerMall. Then he walked to the University and returned to the BerBank by bus. Also Polycarp can buy no more than k travel cards. Each travel card costs f burles. The travel card for a single bus route makes free of charge any trip by this route (in both directions). Once purchased, a travel card can be used any number of times in any direction. What is the smallest amount of money Polycarp could have spent today if he can buy no more than k travel cards  
tl;dr: