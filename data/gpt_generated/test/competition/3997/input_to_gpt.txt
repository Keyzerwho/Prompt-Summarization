The sequence of $m$ integers is called the permutation if it contains all integers from $1$ to $m$ exactly once. The number $m$ is called the length of the permutation. Dreamoon has two permutations $p_1$ and $p_2$ of non-zero lengths $l_1$ and $l_2$. Now Dreamoon concatenates these two permutations into another sequence $a$ of length $l_1 + l_2$. First $l_1$ elements of $a$ is the permutation $p_1$ and next $l_2$ elements of $a$ is the permutation $p_2$.  You are given the sequence $a$, and you need to find two permutations $p_1$ and $p_2$. If there are several possible ways to restore them, you should find all of them. (Note that it is also possible that there will be no ways.) 
tl;dr: The sequence of $m$ integers is called the permutation if it contains all integers from $1$ to $m$ exactly once. We hava two permutations $p_1$ and $p_2$ of non-zero lengths $l_1$ and $l_2$. Now we concatenate these two permutations into another sequence $a$ of length $l_1 + l_2$. First $l_1$ elements of $a$ is the permutation $p_1$ and next $l_2$ elements of $a$ is the permutation $p_2$.  You are given the sequence $a$, and you need to find two permutations $p_1$ and $p_2$. If there are several possible ways to restore them, you should find all of them. (Note that it is also possible that there will be no ways.) 

Chef is very organised in whatever he does and likes to maintain statistics of his work. Chef has expertise in web development and hence is a regular contributor on a forum. Chef sometimes makes multiple contributions in a single day.. Each day chef makes at least 1 contribution he is assigned a shade of green. The greater the number of contribution in a single day the darker shade of green he gets assigned and vice versa. Your job is to find out the number of days chef is assigned a same shade of green and print the number of times chef is assigned a unique shade of green. -----INPUT----- The first line of input contains an integer T denoting the number of test cases. T test cases follow. The first line of each test case contains an integer N denoting the number of days chef has contributed towards the forum. The next line contains N spaced integers the number of contributions chef has made if he has made any. -----OUTPUT----- The output will contain numbers on separate lines that show the number of individual green shades chef has earned in ascending order of intensity of the shades of green. -----CONSTRAINTS----- 1 <= T <= 25 5 <= N <= 50 1 <= Ai <= 50 -----EXAMPLE
tl;dr: Find the frequency of the unique values in a given array of size N. -----INPUT----- The first line of input contains an integer T denoting the number of test cases. T test cases follow. The first line of each test case contains an integer N denoting the number of days chef has contributed towards the forum. The next line contains N spaced integers the number of contributions chef has made if he has made any. -----OUTPUT----- The output will contain numbers on separate lines that show the number of individual green shades chef has earned in ascending order of intensity of the shades of green. -----CONSTRAINTS----- 1 <= T <= 25 5 <= N <= 50 1 <= Ai <= 50 -----EXAMPLE

Alyona has a tree with n vertices. The root of the tree is the vertex 1. In each vertex Alyona wrote an positive integer, in the vertex i she wrote a_{i}. Moreover, the girl wrote a positive integer to every edge of the tree (possibly, different integers on different edges). Let's define dist(v, u) as the sum of the integers written on the edges of the simple path from v to u. The vertex v controls the vertex u (v   u) if and only if u is in the subtree of v and dist(v, u)   a_{u}. Alyona wants to settle in some vertex. In order to do this, she wants to know for each vertex v what is the number of vertices u such that v controls u. 
tl;dr: