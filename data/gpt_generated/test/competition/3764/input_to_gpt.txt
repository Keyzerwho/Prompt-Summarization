# Task Your task is to write a function for calculating the score of a 10 pin bowling game. The input for the function is a list of pins knocked down per roll for one player. Output is the player's total score. # Rules ## General rules Rules of bowling in a nutshell: * A game consists of 10 frames. In each frame the player rolls 1 or 2 balls, except for the 10th frame, where the player rolls 2 or 3 balls. * The total score is the sum of your scores for the 10 frames * If you knock down fewer than 10 pins with 2 balls, your frame score is the number of pins knocked down * If you knock down all 10 pins with 2 balls (spare), you score the amount of pins knocked down plus a bonus - amount of pins knocked down with the next ball * If you knock down all 10 pins with 1 ball (strike), you score the amount of pins knocked down plus a bonus - amount of pins knocked down with the next 2 balls ## Rules for 10th frame As the 10th frame is the last one, in case of spare or strike there will be no next balls for the bonus. To account for that: * if the last frame is a spare, player rolls 1 bonus ball. * if the last frame is a strike, player rolls 2 bonus balls. These bonus balls on 10th frame are only counted as a bonus to the respective spare or strike. # More information http://en.wikipedia.org/wiki/Ten-pin_bowling#Scoring # Input You may assume that the input is always valid. This means: * input list length is correct * number of pins knocked out per roll is vali
tl;dr: # Task Given a list of pins knocked down per roll for one player, output the player's total score. # Rules ## General rules Rules of bowling in a nutshell: * A game consists of 10 frames. In each frame the player rolls 1 or 2 balls, except for the 10th frame, where the player rolls 2 or 3 balls. * The total score is the sum of your scores for the 10 frames * If you knock down fewer than 10 pins with 2 balls, your frame score is the number of pins knocked down * If you knock down all 10 pins with 2 balls (spare), you score the amount of pins knocked down plus a bonus - amount of pins knocked down with the next ball * If you knock down all 10 pins with 1 ball (strike), you score the amount of pins knocked down plus a bonus - amount of pins knocked down with the next 2 balls ## Rules for 10th frame As the 10th frame is the last one, in case of spare or strike there will be no next balls for the bonus. To account for that: * if the last frame is a spare, player rolls 1 bonus ball. * if the last frame is a strike, player rolls 2 bonus balls. These bonus balls on 10th frame are only counted as a bonus to the respective spare or strike

You have initially a string of N characters, denoted by A1,A2...AN. You have to print the size of the largest subsequence of string A such that all the characters in that subsequence are distinct ie. no two characters in that subsequence should be same. A subsequence of string A is a sequence that can be derived from A by deleting some elements  and without changing the order of the remaining elements. 
tl;dr: You have to remove duplicates and print the length of unique characters of the given string. 

Jon Snow now has to fight with White Walkers. He has n rangers, each of which has his own strength. Also Jon Snow has his favourite number x. Each ranger can fight with a white walker only if the strength of the white walker equals his strength. He however thinks that his rangers are weak and need to improve. Jon now thinks that if he takes the bitwise XOR of strengths of some of rangers with his favourite number x, he might get soldiers of high strength. So, he decided to do the following operation k times:   Arrange all the rangers in a straight line in the order of increasing strengths.  Take the bitwise XOR (is written as $\oplus$) of the strength of each alternate ranger with x and update it's strength.  Suppose, Jon has 5 rangers with strengths [9, 7, 11, 15, 5] and he performs the operation 1 time with x = 2. He first arranges them in the order of their strengths, [5, 7, 9, 11, 15]. Then he does the following:   The strength of first ranger is updated to $5 \oplus 2$, i.e. 7.  The strength of second ranger remains the same, i.e. 7.  The strength of third ranger is updated to $9 \oplus 2$, i.e. 11.  The strength of fourth ranger remains the same, i.e. 11.  The strength of fifth ranger is updated to $15 \oplus 2$, i.e. 13.  The new strengths of the 5 rangers are [7, 7, 11, 11, 13] Now, Jon wants to know the maximum and minimum strength of the rangers after performing the above operations k times. He wants your help for this task. Can you help him  
tl;dr: