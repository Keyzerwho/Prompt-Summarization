At the legendary times of Nonsenso wars in ISM Dhanbad, there was a neck to neck competition between Barney Stinson and Sheldon Cooper. They both were on level 19. After trying too hard both of them could not decipher the nonsense, so they decided to play alongside. Sheldon Cooper had to pass a message to Barney Stinson. So he decided to convert each letter of the sentence to their corresponding to their ASCII codes. When Barney received the message he could not get anything. Now you have to design a code which converts the encrypted message to readable format. 
tl;dr: You are given N encrypted sentences whose characters are in ASCCI code. Write a code to convert ASCCI code into their corresponding characters. 

Given a string, return the minimal number of parenthesis reversals needed to make balanced parenthesis.  For example: ```Javascript solve(")(") = 2 Because we need to reverse ")" to "(" and "(" to ")". These are 2 reversals.  solve("(((())") = 1 We need to reverse just one "(" parenthesis to make it balanced. solve("(((") = -1 Not possible to form balanced parenthesis. Return -1. ``` Parenthesis will be either `"("` or `")"`.  More examples in the test cases.  Good luck
tl;dr: Given a string, return the minimal number of parenthesis reversals needed to make balanced parenthesis. For example: 

Limak is a little polar bear. Polar bears hate long strings and thus they like to compress them. You should also know that Limak is so young that he knows only first six letters of the English alphabet: 'a', 'b', 'c', 'd', 'e' and 'f'. You are given a set of q possible operations. Limak can perform them in any order, any operation may be applied any number of times. The i-th operation is described by a string a_{i} of length two and a string b_{i} of length one. No two of q possible operations have the same string a_{i}. When Limak has a string s he can perform the i-th operation on s if the first two letters of s match a two-letter string a_{i}. Performing the i-th operation removes first two letters of s and inserts there a string b_{i}. See the notes section for further clarification. You may note that performing an operation decreases the length of a string s exactly by 1. Also, for some sets of operations there may be a string that cannot be compressed any further, because the first two letters don't match any a_{i}. Limak wants to start with a string of length n and perform n - 1 operations to finally get a one-letter string "a". In how many ways can he choose the starting string to be able to get "a"  Remember that Limak can use only letters he knows. 
tl;dr: