-----General Statement:----- Given the actual high and low temperatures for the day and the normal high and low temperatures for that day, calculate the average difference from normal. 
tl;dr: Determine the average of the difference of the high temperatures and the difference of the low temperatures. 

A transaction is possibly invalid if: the amount exceeds $1000, or; if it occurs within (and including) 60 minutes of another transaction with the same name in a different city. Each transaction string transactions[i] consists of comma separated values representing the name, time (in minutes), amount, and city of the transaction. Given a list of transactions, return a list of transactions that are possibly invalid.  You may return the answer in any order.   
tl;dr: You are given a list of strings where each string in format of "A,B,C,D". where A,D are strings and B,C are numbers. A string is possibly invalid if: the C exceeds 1000, or; if two strings have same A and different D and the difference between C is greater than or equal to 60. return list of strings which are possibley invalid in any order 

# A History Lesson Soundex is an interesting phonetic algorithm developed nearly 100 years ago for indexing names as they are pronounced in English. The goal is for homophones to be encoded to the same representation so that they can be matched despite minor differences in spelling. Reference: https://en.wikipedia.org/wiki/Soundex # Preface I first read about Soundex over 30 years ago. At the time it seemed to me almost  like  A.I. that you could just type in somebody's name the way it sounded and there was still a pretty good chance it could match the correct person record. That was about the same year as the first "Terminator" movie so it was easy for me to put 2 and 2 together and conclude that Arnie must have had some kind of futuristic Soundex chip in his titanium skull helping him to locate ```Serah Coner```... or was it ```Sarh Connor```... or maybe ```Sayra Cunnarr```... :-) # Task In this Kata you will encode strings using a Soundex variation called "American Soundex" using the following (case insensitive) steps: * Save the first letter. Remove all occurrences of ```h``` and ```w``` except first letter. * Replace all consonants (include the first letter) with digits as follows:  * ```b```, ```f```, ```p```, ```v``` = 1  * ```c```, ```g```, ```j```, ```k```, ```q```, ```s```, ```x```, ```z``` = 2  * ```d```, ```t``` = 3  * ```l``` = 4  * ```m```, ```n``` = 5  * ```r``` = 6 * Replace all adjacent same digits with one digit. * Remove all occurrences of ```a```, ```e```, ```i```, ```o```, ```u```, ```y``` except first letter. * If first symbol is a digit replace it with letter saved on step 1. * Append 3 zeros if result contains less than 3 digits. Remove all except first letter and 3 digits after it ## Input A space separated string of one or more names. E.g. ```Sarah Connor``` ## Output Space separated string of equivalent Soundex codes (the first character of each code must be uppercase). E.g. ```S600 C560``
tl;dr: # Task Given case insensitive strings, you will encode strings using a Soundex variation called "American Soundex". # Input A space separated string of one or more names. E.g. Sarah Connor # Output Space separated string of equivalent Soundex codes, the first character of each code must be uppercase. E.g. S600 C56

Welcome to Innopolis city. Throughout the whole year, Innopolis citizens suffer from everlasting city construction.  From the window in your room, you see the sequence of n hills, where i-th of them has height a_{i}. The Innopolis administration wants to build some houses on the hills. However, for the sake of city appearance, a house can be only built on the hill, which is strictly higher than neighbouring hills (if they are present). For example, if the sequence of heights is 5, 4, 6, 2, then houses could be built on hills with heights 5 and 6 only. The Innopolis administration has an excavator, that can decrease the height of an arbitrary hill by one in one hour. The excavator can only work on one hill at a time. It is allowed to decrease hills up to zero height, or even to negative values. Increasing height of any hill is impossible. The city administration wants to build k houses, so there must be at least k hills that satisfy the condition above. What is the minimum time required to adjust the hills to achieve the administration's plan  However, the exact value of k is not yet determined, so could you please calculate answers for all k in range $1 \leq k \leq \lceil \frac{n}{2} \rceil$  Here $\lceil \frac{n}{2} \rceil$ denotes n divided by two, rounded up. 
tl;dr: