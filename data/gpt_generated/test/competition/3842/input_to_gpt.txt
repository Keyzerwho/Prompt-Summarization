# Task  Given an integer `n`, find the maximal number you can obtain by deleting exactly one digit of the given number. # 
tl;dr: # Task  Given an integer `n`, find the maximal number you can obtain by deleting exactly one digit of the given number. # 

# Task  Consider the following algorithm for constructing 26 strings S(1) .. S(26): ``` S(1) = "a"; For i in [2, 3, ..., 26]: S(i) = S(i - 1) + character(i) + S(i - 1).```  For example: ``` S(1) = "a" S(2) = S(1) + "b" + S(1) = "a" + "b" + "a" = "aba" S(3) = S(2) + "c" + S(2) = "aba" + "c" +"aba" = "abacaba" ... S(26) = S(25) + "z" + S(25)``` Finally, we got a long string S(26). Your task is to find the `k`th symbol (indexing from 1) in the string S(26). All strings consist of lowercase letters only. # Input / Output  - `[input]` integer `k`   1   k < 2^(26)  - `[output]` a string(char in C#)   the `k`th symbol of S(26
tl;dr: # Task  Consider the following algorithm for constructing strings S(1) .. S(26): ``` S(1) = "a"; For i in [2, 3, ..., 26]: S(i) = S(i - 1) + character(i) + S(i - 1).``` Your task is to find the `k`th symbol (indexing from 1) in the string S(26). # Input / Output  - `[input]` integer `k`   1   k < 2^(26)  - `[output]` a string(char in C#)   the `k`th symbol of S(26

# Task Given an array `arr`, find the maximal value of `k` such `a[i] mod k` = `a[j] mod k` for all valid values of i and j. If it's impossible to find such number (there's an infinite number of `k`s), return `-1` instead. # Input/Output `[input]` integer array `arr` A non-empty array of positive integer. `2 <= arr.length <= 10` `1 <= arr[i] <= 100` `[output]` an integer The maximum value of `k` or `-1` if there is none. # 
tl;dr: # Task You are given an array `arr`, find the maximal value of `k` such `a[i] mod k` = `a[j] mod k` for all valid values of i and j. If it's impossible to find such number, return `-1` instead. # Input/Output `arr` is a non-empty array of positive integer. `2 <= arr.length <= 10` `1 <= arr[i] <= 100` `[output]` is an integer The maximum value of `k` or `-1` if there is none. # 

Mikhail the Freelancer dreams of two things: to become a cool programmer and to buy a flat in Moscow. To become a cool programmer, he needs at least p experience points, and a desired flat in Moscow costs q dollars. Mikhail is determined to follow his dreams and registered at a freelance site. He has suggestions to work on n distinct projects. Mikhail has already evaluated that the participation in the i-th project will increase his experience by a_{i} per day and bring b_{i} dollars per day. As freelance work implies flexible working hours, Mikhail is free to stop working on one project at any time and start working on another project. Doing so, he receives the respective share of experience and money. Mikhail is only trying to become a cool programmer, so he is able to work only on one project at any moment of time. Find the real value, equal to the minimum number of days Mikhail needs to make his dream come true. For example, suppose Mikhail is suggested to work on three projects and a_1 = 6, b_1 = 2, a_2 = 1, b_2 = 3, a_3 = 2, b_3 = 6. Also, p = 20 and q = 20. In order to achieve his aims Mikhail has to work for 2.5 days on both first and third projects. Indeed, a_1 2.5 + a_2 0 + a_3 2.5 = 6 2.5 + 1 0 + 2 2.5 = 20 and b_1 2.5 + b_2 0 + b_3 2.5 = 2 2.5 + 3 0 + 6 2.5 = 20. 
tl;dr: