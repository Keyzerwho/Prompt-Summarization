Chef has recently been playing a lot of chess in preparation for the ICCT (International Chef Chess Tournament). Since putting in long hours is not an easy task, Chef's mind wanders elsewhere. He starts counting the number of squares with odd side length on his chessboard.. However, Chef is not satisfied. He wants to know the number of squares of odd side length on a generic $N*N$ chessboard. 
tl;dr: You have to find the number of squares of odd side length of the a N*N chessboard. 

Given two strings, the first being a random string and the second being the same as the first, but with three added characters somewhere in the string (three same characters), Write a function that returns the added character ### E.g ``` string1 = "hello" string2 = "aaahello" // => 'a' ``` The above is just an example; the characters could be anywhere in the string and string2 is actually **shuffled**. ### Another example ``` string1 = "abcde" string2 = "2db2a2ec" // => '2' ``` Note that the added character could also exist in the original string ``` string1 = "aabbcc" string2 = "aacccbbcc" // => 'c' ``` You can assume that string2 will aways be larger than string1, and there will always be three added characters in string2. ```if:c Write the function `added_char()` that takes two strings and return the added character as described above. ``` ```if:javascript Write the function `addedChar()` that takes two strings and return the added character as described above. ``
tl;dr: Given two strings, the first being a random string and the second being the same as the first, but with three same added characters somewhere in the string. Write a function that returns the added character. 

## Task: You have to create a function `isPronic` to check whether the argument passed is a Pronic Number and return true if it is & false otherwise. ### Description: `Pronic Number` -A pronic number, oblong number, rectangular number or heteromecic number, is a number which is the product of two consecutive integers, that is, n(n + 1). > The first few Pronic Numbers are - 0, 2, 6, 12, 20, 30, 42... ### Explanation:            0 = 0   1   //    0 is a Pronic Number       2 = 1   2   //    2 is a Pronic Number       6 = 2   3   //    6 is a Pronic Number      12 = 3   4   //   12 is a Pronic Number      20 = 4   5   //   20 is a Pronic Number      30 = 5   6   //   30 is a Pronic Number      42 = 6   7   //   42 is a Pronic Numbe
tl;dr: ## Task: Create a function `isPronic` to check whether the argument is a Pronic Number. Return true if it is & false otherwise. ### Description: `Pronic Number` -A pronic number, oblong number, rectangular number or heteromecic number, is a number which is the product of two consecutive integers, that is, n(n + 1). > The first few Pronic Numbers are - 0, 2, 6, 12, 20, 30, 42... ### Explanation:            0 = 0   1   //    0 is a Pronic Number       2 = 1   2   //    2 is a Pronic Number       6 = 2   3   //    6 is a Pronic Number      12 = 3   4   //   12 is a Pronic Number      20 = 4   5   //   20 is a Pronic Number      30 = 5   6   //   30 is a Pronic Number      42 = 6   7   //   42 is a Pronic Numbe

For a permutation P[1... N] of integers from 1 to N, function f is defined as follows:  $f(i, j) = \left\{\begin{array}{ll}{P [ i ]} & {\text{if} j = 1} \\{f(P [ i ], j - 1)} & {\text{otherwise}} \end{array} \right.$  Let g(i) be the minimum positive integer j such that f(i, j) = i. We can show such j always exists. For given N, A, B, find a permutation P of integers from 1 to N such that for 1   i   N, g(i) equals either A or B. 
tl;dr: