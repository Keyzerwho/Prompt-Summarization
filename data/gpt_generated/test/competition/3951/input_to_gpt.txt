Implement a function which  creates a **[radix tree](https://en.wikipedia.org/wiki/Radix_tree)** (a space-optimized trie [prefix tree])  in which each node that is the only child is merged with its parent [unless a word from the input ends there])  from a given list of words  using dictionaries (aka hash maps or hash tables) where: 1. The dictionary keys are the nodes. 2. Leaf nodes are empty dictionaries. 3. The value for empty input is an empty dictionary. 4. Words are all lowercase or empty strings. 5. Words can contain duplicates. ### 
tl;dr: Implement a function which creates a radix tree in which each node that is the only child is merged with its parent from a given list of words using dictionaries where: 1. The dictionary keys are the nodes. 2. Leaf nodes are empty dictionaries. 3. The value for empty input is an empty dictionary. 4. Words are all lowercase or empty strings. 5. Words can contain duplicates. 

Given an integer num, find the closest two integers in absolute difference whose product equals num + 1 or num + 2. Return the two integers in any order.   
tl;dr: You are given an integer num, find the closest two integers in absolute difference whose product equals num + 1 or num + 2.   

The GCD table G of size n   n for an array of positive integers a of length n is defined by formula  $g_{ij} = \operatorname{gcd}(a_{i}, a_{j})$  Let us remind you that the greatest common divisor (GCD) of two positive integers x and y is the greatest integer that is divisor of both x and y, it is denoted as $\operatorname{gcd}(x, y)$. For example, for array a = {4, 3, 6, 2} of length 4 the GCD table will look as follows: [Image]  Given all the numbers of the GCD table G, restore array a. 
tl;dr: