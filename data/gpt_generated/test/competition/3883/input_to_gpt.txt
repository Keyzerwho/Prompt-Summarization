At the legendary times of Nonsenso wars in ISM Dhanbad, there was a neck to neck competition between Barney Stinson and Sheldon Cooper. They both were on level 19. After trying too hard both of them could not decipher the nonsense, so they decided to play alongside. Sheldon Cooper had to pass a message to Barney Stinson. So he decided to convert each letter of the sentence to their corresponding to their ASCII codes. When Barney received the message he could not get anything. Now you have to design a code which converts the encrypted message to readable format. 
tl;dr: You are given N encrypted sentences whose characters are in ASCCI code. Write a code to convert ASCCI code into their corresponding characters. 

# Task  You have some people who are betting money, and they all start with the same amount of money (this number>0).   Find out if the given end-state of amounts is possible after the betting is over and money is redistributed. # Input/Output  - `[input]` integer array arr   the proposed end-state showing final amounts for each player  - `[output]` a boolean value   `true` if this is a possible end-state and `false` otherwise    # 
tl;dr: # Task  Some people start with the same positive amount of money  and the money will be redistributed.   Find out if the given end-state of amounts is possible. # Input/Output  - `[input]` integer array arr   the proposed end-state showing final amounts for each player  - `[output]` a boolean value   `true` if this is a possible end-state and `false` otherwise    # 

There is a polyline going through points (0, 0)   (x, x)   (2x, 0)   (3x, x)   (4x, 0)   ... - (2kx, 0)   (2kx + x, x)   ....  We know that the polyline passes through the point (a, b). Find minimum positive value x such that it is true or determine that there is no such x. 
tl;dr: