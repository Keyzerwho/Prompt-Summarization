In this kata, your job is to return the two distinct highest values in a list. If there're less than 2 unique values, return as many of them, as possible. The result should also be ordered from highest to lowest. 
tl;dr: Your job is to return the two distinct highest values in a list. If there're less than 2 unique values, return as many of them as possible. The result should also be ordered from highest to lowest. 

A robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below). The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below). How many possible unique paths are there  Above is a 7 x 3 grid. How many possible unique paths are there  
tl;dr: You are at top-left corner of an m X n grid. Considering only down or right actions, how many unique paths are present to reach bottom-right corner. 

Write a function named sumDigits which takes a number as input and returns the sum of the absolute value of each of the number's decimal digits.  For example: ```python   sum_digits(10)  # Returns 1   sum_digits(99)  # Returns 18   sum_digits(-32) # Returns 5 ``` Let's assume that all numbers in the input will be integer values
tl;dr: Write a function named sumDigits which takes a number as input and returns the sum of the absolute value of each of the number's decimal digits. For example: sum_digits(10)  # Returns 1 sum_digits(99)  # Returns 18 sum_digits(-32) # Returns 

Seyyed and MoJaK are friends of Sajjad. Sajjad likes a permutation. Seyyed wants to change the permutation in a way that Sajjad won't like it. Seyyed thinks more swaps yield more probability to do that, so he makes MoJaK to perform a swap between every pair of positions (i, j), where i < j, exactly once. MoJaK doesn't like to upset Sajjad. Given the permutation, determine whether it is possible to swap all pairs of positions so that the permutation stays the same. If it is possible find how to do that.  
tl;dr: