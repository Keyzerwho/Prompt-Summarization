The magic sum of 3s is calculated on an array by summing up odd numbers which include the digit `3`. Write a function `magic_sum` which accepts an array of integers and returns the sum. *
tl;dr: The magic sum of 3s is calculated on an array by summing up odd numbers which include the digit 3. Write a function magic_sum which accepts an array of integers and returns the sum. If the sum cannot be calculated, 0 should be returned. 

Make a program that filters a list of strings and returns a list with only your friends name in it. If a name has exactly 4 letters in it, you can be sure that it has to be a friend of yours! Otherwise, you can be sure he's not... Ex: Input = ["Ryan", "Kieran", "Jason", "Yous"], Output = ["Ryan", "Yous"] i.e. 
tl;dr: Make a program that filters a list of strings and returns a list with only names with exactly 4 letters in it. Ex: Input = ["Ryan", "Kieran", "Jason", "Yous"], Output = ["Ryan", "Yous"

Write a function named sumDigits which takes a number as input and returns the sum of the absolute value of each of the number's decimal digits.  For example: ```python   sum_digits(10)  # Returns 1   sum_digits(99)  # Returns 18   sum_digits(-32) # Returns 5 ``` Let's assume that all numbers in the input will be integer values
tl;dr: Write a function named sumDigits which takes a number as input and returns the sum of the absolute value of each of the number's decimal digits. For example: sum_digits(10)  # Returns 1 sum_digits(99)  # Returns 18 sum_digits(-32) # Returns 

We have a board with a 2 \times N grid. Snuke covered the board with N dominoes without overlaps. Here, a domino can cover a 1 \times 2 or 2 \times 1 square. Then, Snuke decided to paint these dominoes using three colors: red, cyan and green. Two dominoes that are adjacent by side should be painted by different colors. Here, it is not always necessary to use all three colors. Find the number of such ways to paint the dominoes, modulo 1000000007. The arrangement of the dominoes is given to you as two strings S_1 and S_2 in the following manner:  - Each domino is represented by a different English letter (lowercase or uppercase).  - The j-th character in S_i represents the domino that occupies the square at the i-th row from the top and j-th column from the left. -----Constraints-----  - 1 \leq N \leq 52  - |S_1| = |S_2| = N  - S_1 and S_2 consist of lowercase and uppercase English letters.  - S_1 and S_2 represent a valid arrangement of dominoes. 
tl;dr: