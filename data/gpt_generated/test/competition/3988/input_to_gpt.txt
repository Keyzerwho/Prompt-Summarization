Chef has a binary array in an unsorted manner. Cheffina challenges chef to find the transition point in the sorted (ascending) binary array. Here indexing is starting from 0. 
tl;dr: You are given a binary array. Find the transition point in the sorted (ascending) binary array. Here indexing is starting from 0. 

## Task Find the sum of the first `n` elements in the Recam n Sequence. Input range: ```python 1000 tests 0 <= n <= 2,500,000 ``` ___ ## Sequence The sequence is formed using the next formula: * We start with `0` * At each step `i`, we subtract `i` from the previous number * If the result is not negative, and not yet present in the sequence, it becomes the `i`th element of the sequence * Otherwise the `i`th element of the sequence will be previous number plus `i` The beginning of the sequence is `[0, 1, 3, 6, 2, ...]` because:   0) `0` <- we start with `0`   1) `1` <- `0 - 1` is negative, hence we choose `0 + 1`   2) `3` <- `1 - 2` is negative, hence we choose `1 + 2`   3) `6` <-`3 - 3` is not negative, but we already have a `0` in the sequence, hence we choose `3 + 3`   4) `2` <- `6 - 4` is positive, and is not present in the sequence yet, so we go for it ___ ## 
tl;dr: Find the sum of the first n elements in the Recam n Sequence. 0 <= n <= 2,500,000. The Recam n sequence is formed using the next formula: * We start with `0` * At each step `i`, we subtract `i` from the previous number * If the result is not negative, and not yet present in the sequence, it becomes the `i`th element of the sequence * Otherwise the `i`th element of the sequence will be previous number plus `i` The beginning of the sequence is `[0, 1, 3, 6, 2, ...]` because:   0) `0` <- we start with `0`   1) `1` <- `0 - 1` is negative, hence we choose `0 + 1`   2) `3` <- `1 - 2` is negative, hence we choose `1 + 2`   3) `6` <-`3 - 3` is not negative, but we already have a `0` in the sequence, hence we choose `3 + 3`   4) `2` <- `6 - 4` is positive, and is not present in the sequence yet, so we go for it 

You are given a graph with $3 \cdot n$ vertices and $m$ edges. You are to find a matching of $n$ edges, or an independent set of $n$ vertices. A set of edges is called a matching if no two edges share an endpoint. A set of vertices is called an independent set if no two vertices are connected with an edge. 
tl;dr: You are given a graph with $3 \cdot n$ vertices and $m$ edges. You are to find a matching of $n$ edges, or an independent set of $n$ vertices. A set of edges is called a matching if no two edges share an endpoint. A set of vertices is called an independent set if no two vertices are connected with an edge. 

Vasya has a graph containing both directed (oriented) and undirected (non-oriented) edges. There can be multiple edges between a pair of vertices. Vasya has picked a vertex s from the graph. Now Vasya wants to create two separate plans:   to orient each undirected edge in one of two possible directions to maximize number of vertices reachable from vertex s;  to orient each undirected edge in one of two possible directions to minimize number of vertices reachable from vertex s.  In each of two plans each undirected edge must become directed. For an edge chosen directions can differ in two plans. Help Vasya find the plans. 
tl;dr: