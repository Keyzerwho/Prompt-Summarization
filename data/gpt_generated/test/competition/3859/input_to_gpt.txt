You are given n strings s_1, s_2, ..., s_{n} consisting of characters 0 and 1. m operations are performed, on each of them you concatenate two existing strings into a new one. On the i-th operation the concatenation s_{a}_{i}s_{b}_{i} is saved into a new string s_{n} + i (the operations are numbered starting from 1). After each operation you need to find the maximum positive integer k such that all possible strings consisting of 0 and 1 of length k (there are 2^{k} such strings) are substrings of the new string. If there is no such k, print 0. 
tl;dr: You are given n strings s_1, s_2, ..., s_{n} consisting of characters 0 and 1. m operations are performed, on each of them you concatenate two existing strings into a new one. On the i-th operation the concatenation s_{a}_{i}s_{b}_{i} is saved into a new string s_{n} + i. After each operation you need to find the maximum positive integer k such that all possible strings consisting of 0 and 1 of length k are substrings of the new string. If there is no such k, print 0. 

You are given several queries. Each query consists of three integers $p$, $q$ and $b$. You need to answer whether the result of $p/q$ in notation with base $b$ is a finite fraction. A fraction in notation with base $b$ is finite if it contains finite number of numerals after the decimal point. It is also possible that a fraction has zero numerals after the decimal point. 
tl;dr: You are given several queries. Each query consists of three integers $p$, $q$ and $b$. You need to answer whether the result of $p/q$ in notation with base $b$ is a finite fraction or not. 

Given are integer sequence of length N, A = (A_1, A_2, \cdots, A_N), and an integer K. For each X such that 1 \le X \le K, find the following value: \left(\displaystyle \sum_{L=1}^{N-1} \sum_{R=L+1}^{N} (A_L+A_R)^X\right) \bmod 998244353 -----Constraints-----  - All values in input are integers.  -  2 \le N \le 2 \times 10^5  -  1 \le K \le 300   -  1 \le A_i \le 10^8  
tl;dr: Given are integer sequence of length N, A = (A_1, A_2, \cdots, A_N), and an integer K. For each X such that 1 \le X \le K, find the following value: \left(\displaystyle \sum_{L=1}^{N-1} \sum_{R=L+1}^{N} (A_L+A_R)^X\right) \bmod 998244353 -----Constraints-----  - All values in input are integers.  -  2 \le N \le 2 \times 10^5  -  1 \le K \le 300   -  1 \le A_i \le 10^8  

There are 2N balls, N white and N black, arranged in a row. The integers from 1 through N are written on the white balls, one on each ball, and they are also written on the black balls, one on each ball. The integer written on the i-th ball from the left (1   i   2N) is a_i, and the color of this ball is represented by a letter c_i. c_i = W represents the ball is white; c_i = B represents the ball is black. Takahashi the human wants to achieve the following objective:  - For every pair of integers (i,j) such that 1   i < j   N, the white ball with i written on it is to the left of the white ball with j written on it.  - For every pair of integers (i,j) such that 1   i < j   N, the black ball with i written on it is to the left of the black ball with j written on it. In order to achieve this, he can perform the following operation:  - Swap two adjacent balls. Find the minimum number of operations required to achieve the objective. -----Constraints-----  - 1   N   2000  - 1   a_i   N  - c_i = W or c_i = B.  - If i   j, (a_i,c_i)   (a_j,c_j). 
tl;dr: