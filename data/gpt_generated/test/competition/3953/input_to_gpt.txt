You have a very large square wall and a circular dartboard placed on the wall. You have been challenged to throw darts into the board blindfolded. Darts thrown at the wall are represented as an array of points on a 2D plane.  Return the maximum number of points that are within or lie on any circular dartboard of radius r.   
tl;dr: you are given a list. each element represent a 2D point. Return the maximum number of points that are inside a circle of radius r. 

There is an integer sequence of length 2^N: A_0, A_1, ..., A_{2^N-1}. (Note that the sequence is 0-indexed.) For every integer K satisfying 1 \leq K \leq 2^N-1, solve the following problem:  - Let i and j be integers. Find the maximum value of A_i + A_j where 0 \leq i < j \leq 2^N-1 and (i or j) \leq K. Here, or denotes the bitwise OR. -----Constraints-----  - 1 \leq N \leq 18  - 1 \leq A_i \leq 10^9  - All values in input are integers. 
tl;dr: There is an integer sequence of length 2^N: A_0, A_1, ..., A_{2^N-1}. For every integer K satisfying 1 \leq K \leq 2^N-1, solve the following problem:  - Let i and j be integers. Find the maximum value of A_i + A_j where 0 \leq i < j \leq 2^N-1 and (i or j) \leq K. Here, or denotes the bitwise OR. -----Constraints-----  - 1 \leq N \leq 18  - 1 \leq A_i \leq 10^9  - All values in input are integers. 

Given a name, turn that name into a perfect square matrix (nested array with the amount of arrays equivalent to the length of each array).  You will need to add periods (`.`) to the end of the name if necessary, to turn it into a matrix.  If the name has a length of 0, return `"name must be at least one letter"` ## 
tl;dr: Given a name, turn that name into a perfect square matrix. You will need to add periods to the end of the name if necessary to turn it into a matrix. If the name has a length of 0, return "name must be at least one letter" 

You are an adventurer currently journeying inside an evil temple. After defeating a couple of weak zombies, you arrived at a square room consisting of tiles forming an n   n grid. The rows are numbered 1 through n from top to bottom, and the columns are numbered 1 through n from left to right. At the far side of the room lies a door locked with evil magical forces. The following inscriptions are written on the door: The cleaning of all evil will awaken the door!  Being a very senior adventurer, you immediately realize what this means. You notice that every single cell in the grid are initially evil. You should purify all of these cells. The only method of tile purification known to you is by casting the "Purification" spell. You cast this spell on a single tile   then, all cells that are located in the same row and all cells that are located in the same column as the selected tile become purified (including the selected tile)! It is allowed to purify a cell more than once. You would like to purify all n   n cells while minimizing the number of times you cast the "Purification" spell. This sounds very easy, but you just noticed that some tiles are particularly more evil than the other tiles. You cannot cast the "Purification" spell on those particularly more evil tiles, not even after they have been purified. They can still be purified if a cell sharing the same row or the same column gets selected by the "Purification" spell. Please find some way to purify all the cells with the minimum number of spells cast. Print -1 if there is no such way. 
tl;dr: