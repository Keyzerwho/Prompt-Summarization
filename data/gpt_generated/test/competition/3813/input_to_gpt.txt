Christmas is coming, and Santa has a long list to go through, to find who deserves presents for the big day. Go through a list of children, and return a list containing every child who appeared on Santa's list. Do not add any child more than once. Output should be sorted. 
tl;dr: You are given a list of words, you need to output a sorted list. Comparison should be case sensitive

Eighth-grader Vova is on duty today in the class. After classes, he went into the office to wash the board, and found on it the number n. He asked what is this number and the teacher of mathematics Inna Petrovna answered Vova that n is the answer to the arithmetic task for first-graders. In the textbook, a certain positive integer x was given. The task was to add x to the sum of the digits of the number x written in decimal numeral system. Since the number n on the board was small, Vova quickly guessed which x could be in the textbook. Now he wants to get a program which will search for arbitrary values of the number n for all suitable values of x or determine that such x does not exist. Write such a program for Vova. 
tl;dr: Given a number n, find the number x and the numbers whose arithmentic sum of their digits with themselves will give the number n itself. 

We have a tree with N vertices. Vertex 1 is the root of the tree, and the parent of Vertex i (2 \leq i \leq N) is Vertex P_i. To each vertex in the tree, Snuke will allocate a color, either black or white, and a non-negative integer weight. Snuke has a favorite integer sequence, X_1, X_2, ..., X_N, so he wants to allocate colors and weights so that the following condition is satisfied for all v.  - The total weight of the vertices with the same color as v among the vertices contained in the subtree whose root is v, is X_v. Here, the subtree whose root is v is the tree consisting of Vertex v and all of its descendants. Determine whether it is possible to allocate colors and weights in this way. -----Constraints-----  - 1 \leq N \leq 1 000  - 1 \leq P_i \leq i - 1  - 0 \leq X_i \leq 5 000 
tl;dr: