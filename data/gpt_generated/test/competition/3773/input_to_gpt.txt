Make a program that filters a list of strings and returns a list with only your friends name in it. If a name has exactly 4 letters in it, you can be sure that it has to be a friend of yours! Otherwise, you can be sure he's not... Ex: Input = ["Ryan", "Kieran", "Jason", "Yous"], Output = ["Ryan", "Yous"] i.e. 
tl;dr: Make a program that filters a list of strings and returns a list with only names with exactly 4 letters in it. Ex: Input = ["Ryan", "Kieran", "Jason", "Yous"], Output = ["Ryan", "Yous"

Dreamoon likes sequences very much. So he created a problem about the sequence that you can't find in OEIS:  You are given two integers $d, m$, find the number of arrays $a$, satisfying the following constraints:  The length of $a$ is $n$, $n \ge 1$  $1 \le a_1 < a_2 < \dots < a_n \le d$  Define an array $b$ of length $n$ as follows: $b_1 = a_1$, $\forall i > 1, b_i = b_{i - 1} \oplus a_i$, where $\oplus$ is the bitwise exclusive-or (xor). After constructing an array $b$, the constraint $b_1 < b_2 < \dots < b_{n - 1} < b_n$ should hold.  Since the number of possible arrays may be too large, you need to find the answer modulo $m$. 
tl;dr: You are given two integers $d, m$, find the number of arrays $a$, with constraints. The length of $a$ is $n$, $n \ge 1$  $1 \le a_1 < a_2 < \dots < a_n \le d$   Define an array $b$ of length $n$ as follows: $b_1 = a_1$, $\forall i > 1, b_i = b_{i - 1} \oplus a_i$,  where $\oplus$ is the bitwise exclusive-or.  After constructing an array $b$, the constraint $b_1 < b_2 < \dots < b_{n - 1} < b_n$ should hold.  You need to find the answer modulo $m$. 

Given an alphanumeric string made up of digits and lower case Latin characters only, find the sum of all the digit characters in the string. 
tl;dr: Given an alphanumeric string made up of digits and lower case Latin characters only, find the sum of all the digit characters in the string. 

Takahashi and Aoki are playing a stone-taking game. Initially, there are N piles of stones, and the i-th pile contains A_i stones and has an associated integer K_i. Starting from Takahashi, Takahashi and Aoki take alternate turns to perform the following operation:  - Choose a pile. If the i-th pile is selected and there are X stones left in the pile, remove some number of stones between 1 and floor(X/K_i) (inclusive) from the pile. The player who first becomes unable to perform the operation loses the game. Assuming that both players play optimally, determine the winner of the game. Here, floor(x) represents the largest integer not greater than x. -----Constraints-----  - 1 \leq N \leq 200  - 1 \leq A_i,K_i \leq 10^9  - All input values are integers. 
tl;dr: