Chef owns an icecream shop in Chefland named scoORZ. There are only three types of coins in Chefland: Rs. 5, Rs. 10 and Rs. 15. An icecream costs Rs. 5. There are $N$ people (numbered $1$ through $N$) standing in a queue to buy icecream from scoORZ. Each person wants to buy exactly one icecream. For each valid $i$, the $i$-th person has one coin with value $a_i$. It is only possible for someone to buy an icecream when Chef can give them back their change exactly   for example, if someone pays with a Rs. 10 coin, Chef needs to have a Rs. 5 coin that he gives to this person as change. Initially, Chef has no money. He wants to know if he can sell icecream to everyone in the queue, in the given order. Since he is busy eating his own icecream, can you tell him if he can serve all these people  
tl;dr: Only coin of Rs 5 ,Rs 10 and Rs 15 can be used to buy icecream which costs 5 Rs. In beginning, shopkeeper does not have any money. Icecream can be sold only if shopkeeper can return the change exactly. Check whether the shopkeeper can sell the icecream or not. 

A category page displays a set number of products per page, with pagination at the bottom allowing the user to move from page to page. Given that you know the page you are on, how many products are in the category in total, and how many products are on any given page, how would you output a simple string showing which products you are viewing.. examples In a category of 30 products with 10 products per page, on page 1 you would see  'Showing 1 to 10 of 30 Products.' In a category of 26 products with 10 products per page, on page 3 you would see 'Showing 21 to 26 of 26 Products.' In a category of 8 products with 10 products per page, on page 1 you would see 'Showing 1 to 8 of 8 Products.
tl;dr: Given that you know the page you are on, how many products are in the category in total, and how many products are on any given page, output a simple string showing which products you are viewing. 

We have N bags numbered 1 through N and N dishes numbered 1 through N. Bag i contains a_i coins, and each dish has nothing on it initially. Taro the first and Jiro the second will play a game against each other. They will alternately take turns, with Taro the first going first. In each player's turn, the player can make one of the following two moves:  - When one or more bags contain coin(s): Choose one bag that contains coin(s) and one dish, then move all coins in the chosen bag onto the chosen dish. (The chosen dish may already have coins on it, or not.)  - When no bag contains coins: Choose one dish with coin(s) on it, then remove one or more coins from the chosen dish. The player who first becomes unable to make a move loses. Determine the winner of the game when the two players play optimally. You are given T test cases. Solve each of them. -----Constraints-----  - All values in input are integers.  - 1 \leq T \leq 10^5  - 1 \leq N \leq 10^{5}  - 1 \leq a_i \leq 10^9  - In one input file, the sum of N does not exceed 2 \times 10^5. 
tl;dr: