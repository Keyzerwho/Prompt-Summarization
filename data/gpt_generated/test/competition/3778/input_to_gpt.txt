Chef has a binary array in an unsorted manner. Cheffina challenges chef to find the transition point in the sorted (ascending) binary array. Here indexing is starting from 0. 
tl;dr: You are given a binary array. Find the transition point in the sorted (ascending) binary array. Here indexing is starting from 0. 

# Task  You have some people who are betting money, and they all start with the same amount of money (this number>0).   Find out if the given end-state of amounts is possible after the betting is over and money is redistributed. # Input/Output  - `[input]` integer array arr   the proposed end-state showing final amounts for each player  - `[output]` a boolean value   `true` if this is a possible end-state and `false` otherwise    # 
tl;dr: # Task  Some people start with the same positive amount of money  and the money will be redistributed.   Find out if the given end-state of amounts is possible. # Input/Output  - `[input]` integer array arr   the proposed end-state showing final amounts for each player  - `[output]` a boolean value   `true` if this is a possible end-state and `false` otherwise    # 

To improve the boomerang throwing skills of the animals, Zookeeper has set up an $n \times n$ grid with some targets, where each row and each column has at most $2$ targets each. The rows are numbered from $1$ to $n$ from top to bottom, and the columns are numbered from $1$ to $n$ from left to right.   For each column, Zookeeper will throw a boomerang from the bottom of the column (below the grid) upwards. When the boomerang hits any target, it will bounce off, make a $90$ degree turn to the right and fly off in a straight line in its new direction. The boomerang can hit multiple targets and does not stop until it leaves the grid.   [Image]  In the above example, $n=6$ and the black crosses are the targets. The boomerang in column $1$ (blue arrows) bounces $2$ times while the boomerang in column $3$ (red arrows) bounces $3$ times.  The boomerang in column $i$ hits exactly $a_i$ targets before flying out of the grid. It is known that $a_i \leq 3$. However, Zookeeper has lost the original positions of the targets. Thus, he asks you to construct a valid configuration of targets that matches the number of hits for each column, or tell him that no such configuration exists. If multiple valid configurations exist, you may print any of them. 
tl;dr: