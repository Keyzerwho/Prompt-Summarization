Check if given chord is minor or major. _____________________________________________________________ Rules: 1. Basic minor/major chord have three elements. 2. Chord is minor when interval between first and second element equals 3 and between second and third -> 4. 3. Chord is major when interval between first and second element equals 4 and between second and third -> 3. 4. In minor/major chord interval between first and third element equals... 7. _______________________________________________________________ There is a preloaded list of the 12 notes of a chromatic scale built on C. This means that there are (almost) all allowed note' s names in music. notes =  ['C', ['C#', 'Db'], 'D', ['D#', 'Eb'], 'E', 'F', ['F#', 'Gb'], 'G', ['G#', 'Ab'], 'A', ['A#', 'Bb'], 'B'] Note that e. g. 'C#' - 'C' = 1, 'C' - 'C#' = 1, 'Db' - 'C' = 1 and 'B' - 'C' = 1.  
tl;dr: Given a string, determine if given string is minor or major or not a chord. _____________________________________________________________ Rules: 1. Basic chord have three elements. 2. Chord is minor when interval between first and second element equals 3 and between second and third -> 4. 3. Chord is major when interval between first and second element equals 4 and between second and third -> 3. 4. In minor/major chord interval between first and third element equals... 7. _______________________________________________________________ notes =  ['C', ['C#', 'Db'], 'D', ['D#', 'Eb'], 'E', 'F', ['F#', 'Gb'], 'G', ['G#', 'Ab'], 'A', ['A#', 'Bb'], 'B'] 

The Jones Trucking Company tracks the location of each of its trucks on a grid similar to an (x, y) plane. The home office is at the location (0, 0). Read the coordinates of truck A and the coordinates of truck B and determine which is closer to the office. 
tl;dr: Print the point name which is closer to point P(0,0) by calculating distance from other given points. 

We have a permutation of the integers from 1 through N, p_1, p_2, .., p_N. We also have M pairs of two integers between 1 and N (inclusive), represented as (x_1,y_1), (x_2,y_2), .., (x_M,y_M). AtCoDeer the deer is going to perform the following operation on p as many times as desired so that the number of i (1   i   N) such that p_i = i is maximized:  - Choose j such that 1   j   M, and swap p_{x_j} and p_{y_j}. Find the maximum possible number of i such that p_i = i after operations. -----Constraints-----  - 2   N   10^5  - 1   M   10^5  - p is a permutation of integers from 1 through N.  - 1   x_j,y_j   N  - x_j   y_j  - If i   j, \{x_i,y_i\}   \{x_j,y_j\}.  - All values in input are integers. 
tl;dr: You have a permutation of the integers from 1 through N, p_1, p_2, .., p_N. You also have M pairs of two integers between 1 and N (inclusive), represented as (x_1,y_1), (x_2,y_2), .., (x_M,y_M). You are going to perform the following operation on p as many times as desired so that the number of i (1   i   N) such that p_i = i is maximized:  - Choose j such that 1   j   M, and swap p_{x_j} and p_{y_j}. Find the maximum possible number of i such that p_i = i after operations. -----Constraints-----  - 2   N   10^5  - 1   M   10^5  - p is a permutation of integers from 1 through N.  - 1   x_j,y_j   N  - x_j   y_j  - If i   j, \{x_i,y_i\}   \{x_j,y_j\}.  - All values in input are integers. 

Mike and Ann are sitting in the classroom. The lesson is boring, so they decided to play an interesting game. Fortunately, all they need to play this game is a string $s$ and a number $k$ ($0 \le k < |s|$). At the beginning of the game, players are given a substring of $s$ with left border $l$ and right border $r$, both equal to $k$ (i.e. initially $l=r=k$). Then players start to make moves one by one, according to the following rules: A player chooses $l^{\prime}$ and $r^{\prime}$ so that $l^{\prime} \le l$, $r^{\prime} \ge r$ and $s[l^{\prime}, r^{\prime}]$ is lexicographically less than $s[l, r]$. Then the player changes $l$ and $r$ in this way: $l := l^{\prime}$, $r := r^{\prime}$. Ann moves first. The player, that can't make a move loses. Recall that a substring $s[l, r]$ ($l \le r$) of a string $s$ is a continuous segment of letters from s that starts at position $l$ and ends at position $r$. For example, "ehn" is a substring ($s[3, 5]$) of "aaaehnsvz" and "ahz" is not. Mike and Ann were playing so enthusiastically that they did not notice the teacher approached them. Surprisingly, the teacher didn't scold them, instead of that he said, that he can figure out the winner of the game before it starts, even if he knows only $s$ and $k$. Unfortunately, Mike and Ann are not so keen in the game theory, so they ask you to write a program, that takes $s$ and determines the winner for all possible $k$. 
tl;dr: