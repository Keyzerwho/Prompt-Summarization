Chef is good at making pancakes. Generally he gets requests to serve N pancakes at once. He serves them in the form of a stack. A pancake can be treated as a circular disk with some radius. Chef needs to take care that when he places a pancake on the top of the stack the radius of the pancake should not exceed the radius of the largest pancake in the stack by more than 1.  Additionally all radii should be positive integers, and the bottom most pancake should have its radius as 1. Chef wants you to find out in how many ways can he create a stack containing N pancakes. Input First line of the input contains T (T <= 1000) denoting the number of test cases. T lines follow each containing a single integer N (1 <= N <= 1000) denoting the size of the required stack. Output For each case the output should be a single integer representing the number of ways a stack of size N can be created. As the answer can be large print it modulo 1000000007. 
tl;dr: Find the number of ways in which a stack of circular disk can be arranged in such a way that radius of disk on the top of the stack should not exceed the radius of the largest disk in the stack by more than 1.  The bottom most disk should have its radius as 1. Input First line of the input contains T (T <= 1000) denoting the number of test cases. T lines follow each containing a single integer N (1 <= N <= 1000) denoting the size of the required stack. Output For each case the output should be a single integer representing the number of ways a stack of size N can be created. As the answer can be large print it modulo 1000000007. 

Zookeeper is buying a carton of fruit to feed his pet wabbit. The fruits are a sequence of apples and oranges, which is represented by a binary string $s_1s_2\ldots s_n$ of length $n$. $1$ represents an apple and $0$ represents an orange. Since wabbit is allergic to eating oranges, Zookeeper would like to find the longest contiguous sequence of apples. Let $f(l,r)$ be the longest contiguous sequence of apples in the substring $s_{l}s_{l+1}\ldots s_{r}$.  Help Zookeeper find $\sum_{l=1}^{n} \sum_{r=l}^{n} f(l,r)$, or the sum of $f$ across all substrings. 
tl;dr: Given a sequence, which is represented by a binary string $s_1s_2\ldots s_n$ of length $n$. Let $f(l,r)$ be the longest contiguous sequence of $1$ in the substring $s_{l}s_{l+1}\ldots s_{r}$.  Find $\sum_{l=1}^{n} \sum_{r=l}^{n} f(l,r)$. 

Once N boys and M girls attended a party. You are given a matrix A of N rows and M columns where Aij is 1 if the i-th boy likes the j-th girl, otherwise it will be 0. Note that it is not necessary that if a boy x likes girl y, then girl y should like boy x. You know that if there are two different boys x and y, who both like girl z, then there will be a collision. Can you calculate the number of different collisions at this party  Note that order of boys in the collision doesn't matter. 
tl;dr: Calculate the number of different collisions if a matrix N x M of N boys and M girls are given where Aij is 1 if the i-th boy likes the j-th girl, otherwise it will be 0 and collison occurs when two boys like the same girl.  

First-rate specialists graduate from Berland State Institute of Peace and Friendship. You are one of the most talented students in this university. The education is not easy because you need to have fundamental knowledge in different areas, which sometimes are not related to each other.  For example, you should know linguistics very well. You learn a structure of Reberland language as foreign language. In this language words are constructed according to the following rules. First you need to choose the "root" of the word   some string which has more than 4 letters. Then several strings with the length 2 or 3 symbols are appended to this word. The only restriction    it is not allowed to append the same string twice in a row. All these strings are considered to be suffixes of the word (this time we use word "suffix" to describe a morpheme but not the few last characters of the string as you may used to).  Here is one exercise that you have found in your task list. You are given the word s. Find all distinct strings with the length 2 or 3, which can be suffixes of this word according to the word constructing rules in Reberland language.  Two strings are considered distinct if they have different length or there is a position in which corresponding characters do not match.  Let's look at the example: the word abacabaca is given. This word can be obtained in the following ways: [Image], where the root of the word is overlined, and suffixes are marked by "corners". Thus, the set of possible suffixes for this word is {aca, ba, ca}.  
tl;dr: