Chef and his friends are playing the game AMONG US. They all have chosen their names as numbers. There are N people in Chef s group including him, and each swears that he is not the imposter. However, it turns out there were N+1 people in the game. Now all that Chef needs to know is the name of the imposter, which is a number. Also remember that numbers can be duplicate. Can you help out Chef in finding the imposter  Input :  First line contains the value of N. Second line contains the N numbers that Chef s friends used as their names. Third line contains the N+1 numbers that people in the game have used as their names. Output :  Print the extra number in new line. Constraints :  1   Numbers used as names   1,000 1   N   1,000,000 Sample Input :  3 4 2 5 4 2 3 5 Sample Output :  
tl;dr: Given two unordered lists of Size N and N+1 find and return the additional element in the second list. Input :  First line contains the value of N. Second line contains list of size N. Third line contains list of size N+1. Output :  Print the extra number in new line. Constraints :  1   Elements   1,000 1   N   1,000,000 Sample Input :  3 4 2 5 4 2 3 5 Sample Output :  

In the computer world, use restricted resource you have to generate maximum benefit is what we always want to pursue. For now, suppose you are a dominator of m 0s and n 1s respectively. On the other hand, there is an array with strings consisting of only 0s and 1s. Now your task is to find the maximum number of strings that you can form with given m 0s and n 1s. Each 0 and 1 can be used at most once. 
tl;dr: You are given numbers m and n. You are given an array of strings of only 0's and 1's. Return the maximum number of strings that can be formed by using less than (m+1) 0's and (n+1) 1's in total. 

First-rate specialists graduate from Berland State Institute of Peace and Friendship. You are one of the most talented students in this university. The education is not easy because you need to have fundamental knowledge in different areas, which sometimes are not related to each other.  For example, you should know linguistics very well. You learn a structure of Reberland language as foreign language. In this language words are constructed according to the following rules. First you need to choose the "root" of the word   some string which has more than 4 letters. Then several strings with the length 2 or 3 symbols are appended to this word. The only restriction    it is not allowed to append the same string twice in a row. All these strings are considered to be suffixes of the word (this time we use word "suffix" to describe a morpheme but not the few last characters of the string as you may used to).  Here is one exercise that you have found in your task list. You are given the word s. Find all distinct strings with the length 2 or 3, which can be suffixes of this word according to the word constructing rules in Reberland language.  Two strings are considered distinct if they have different length or there is a position in which corresponding characters do not match.  Let's look at the example: the word abacabaca is given. This word can be obtained in the following ways: [Image], where the root of the word is overlined, and suffixes are marked by "corners". Thus, the set of possible suffixes for this word is {aca, ba, ca}.  
tl;dr: