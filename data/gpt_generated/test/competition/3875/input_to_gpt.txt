# Task Write a function named `sumEvenNumbers`, taking a sequence of numbers as single parameter. Your function must return the sum of **the even values** of this sequence. Only numbers without decimals like `4` or `4.0` can be even.  ## Input * sequence of numbers: those numbers could be integers and/or floats.  For example, considering this input value : `[4,3,1,2,5,10,6,7,9,8]`, then your function should return `30` (because `4 + 2 + 10 + 6 + 8 = 30`)
tl;dr: Write a function named sumEvenNumbers, taking a sequence of numbers as single parameter. Your function must return the sum of the even values of this sequence. Only numbers without decimals like 4 or 4.0 can be even.  

Let us define two functions f and g on positive integer numbers.  $f(n) = \text{product of non-zero digits of} n$ $g(n) = \left\{\begin{array}{ll}{n} & {\text{if} n < 10} \\{g(f(n))} & {\text{otherwise}} \end{array} \right.$  You need to process Q queries. In each query, you will be given three integers l, r and k. You need to print the number of integers x between l and r inclusive, such that g(x) = k.  
tl;dr: $f(n) = \text{product of non-zero digits of} n$ $g(n) = \left\{\begin{array}{ll}{n} & {\text{if} n < 10} \\{g(f(n))} & {\text{otherwise}} \end{array} \right.$  You need to process Q queries. In each query, you will be given three integers l, r and k. You need to print the number of integers x between l and r inclusive, such that g(x) = k.  

Task ======= Make a custom esolang interpreter for the language Tick. Tick is a descendant of [Ticker](https://www.codewars.com/kata/esolang-ticker) but also very different data and command-wise. Syntax/Info ======== Commands are given in character format. Non-command characters should be ignored. Tick has an potentially infinite memory as opposed to Ticker(which you have a special command to add a new cell) and only has 4 commands(as opposed to 7). Read about this esolang [here](https://esolangs.org/wiki/Tick). Commands ======== `>`: Move data selector right `<`: Move data selector left(infinite in both directions) `+`: Increment memory cell by 1. 255+1=0 `*`: Add ascii value of memory cell to the output tape. 
tl;dr: Task ======= Make a esolang interpreter for the language Tick. Tick is a descendant of [Ticker]. Syntax/Info ======== Commands are given in character format. Non-command characters should be ignored. Tick  only has 4 commands. Commands ======== `>`: Move data selector right `<`: Move data selector left(infinite in both directions) `+`: Increment memory cell by 1. 255+1=0 `*`: Add ascii value of memory cell to the output tape. 

Given is an integer sequence of length N: A_1, A_2, \cdots, A_N. An integer sequence X, which is also of length N, will be chosen randomly by independently choosing X_i from a uniform distribution on the integers 1, 2, \ldots, A_i for each i (1 \leq i \leq N). Compute the expected value of the length of the longest increasing subsequence of this sequence X, modulo 1000000007. More formally, under the constraints of the problem, we can prove that the expected value can be represented as a rational number, that is, an irreducible fraction \frac{P}{Q}, and there uniquely exists an integer R such that R \times Q \equiv P \pmod {1000000007} and 0 \leq R < 1000000007, so print this integer R. -----Notes----- A subsequence of a sequence X is a sequence obtained by extracting some of the elements of X and arrange them without changing the order. The longest increasing subsequence of a sequence X is the sequence of the greatest length among the strictly increasing subsequences of X. -----Constraints-----  - 1 \leq N \leq 6  - 1 \leq A_i \leq 10^9  - All values in input are integers. 
tl;dr: