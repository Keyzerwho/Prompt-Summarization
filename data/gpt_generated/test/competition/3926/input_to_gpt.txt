Chef and Chefina are best friends. Chefina wants to test the Problem Solving skills of chef so she provides Chef 2 integer number  $X$ and $Y$ The task of chef is to take the  two numbers $X$ and $Y$ and return their SUM. Identify whether Chef can solve the problem or not   
tl;dr: Print the sum of the given two numbers $X$ and $Y$. 

You are given a set of n pens, each of them can be red, blue, green, orange, and violet in color. Count a minimum number of pens that should be taken out from the set so that any two neighboring pens have different colors. Pens are considered to be neighboring if there are no other pens between them. 
tl;dr: You are given a set of n pens having red, blue, green, orange, and violet in color. Count a minimum number of pens that should be taken out from the set so that any two neighboring pens have different colors.  

Jon and Joe have received equal marks in the school examination.  But, they won't reconcile in peace when equated with each other.  To prove his might, Jon challenges Joe to write a program to find all possible number combos that sum to a given number.  While unsure whether he would be able to accomplish this feat or not, Joe accpets the challenge.  Being Joe's friend, your task is to help him out. # Task Create a function `combos`, that accepts a single positive integer `num` (30 > `num` > 0) and returns an array of arrays of positive integers that sum to `num`. 
tl;dr: Your need to create a function `combos` that accepts `num` (30 > `num` > 0) and returns an array of arrays of positive integers that sum to `num`. For an optimal solution, the following operation should complete within 6000ms

You are playing some computer game. One of its levels puts you in a maze consisting of n lines, each of which contains m cells. Each cell either is free or is occupied by an obstacle. The starting cell is in the row r and column c. In one step you can move one square up, left, down or right, if the target cell is not occupied by an obstacle. You can't move beyond the boundaries of the labyrinth. Unfortunately, your keyboard is about to break, so you can move left no more than x times and move right no more than y times. There are no restrictions on the number of moves up and down since the keys used to move up and down are in perfect condition. Now you would like to determine for each cell whether there exists a sequence of moves that will put you from the starting cell to this particular one. How many cells of the board have this property  
tl;dr: