In this kata you will create a function that takes a list of non-negative integers and strings and returns a new list with the strings filtered out. ### 
tl;dr: Create a function that takes a list of non-negative integers and strings and returns a new list with the strings filtered out. 

The name of our college is "Government College of Engineering and Textile Technology Berhampore". There is another college named "Government College of Engineering and Textile Technology Serampore". As the names are quite similar, those who are unaware of existence of both the colleges, often get confused. And mistake one with other. Given a string, if it contains the word berhampore (case insensitive), print GCETTB or if it contains serampore(case-insensitive), print GCETTS . If the string contains neither print Others. If it contains both Berhampore and Serampore print Both  Input  - First line contains single integer T, No. of test case   - Next line for every test contain case a string S  Output Print GCETTB or GCETTS or Others or Both on a new line Constraints  - 1 <= T <= 10  - 0 <= len(S) <= 100   - S contain a-z and A-Z and space only Sample Input 3 Government clg Berhampore SeRaMporE textile college  Girls college Kolkata Sample Output GCETTB GCETTS Others        Explanation Self-Explanator
tl;dr: You are given a string, if it contains the word berhampore , print GCETTB or if it contains serampore print GCETTS. If it contains both Berhampore and Serampore print Both, otherwise print others.Ignore the case.   Input  - First line contains single integer T, No. of test case   - Next line for every test contain case a string S  Output Print GCETTB or GCETTS or Others or Both on a new line Constraints  - 1 <= T <= 10  - 0 <= len(S) <= 100   - S contain a-z and A-Z and space only Sample Input 3 Government clg Berhampore SeRaMporE textile college  Girls college Kolkata Sample Output GCETTB GCETTS Others      

Given is a simple undirected graph with N vertices and M edges. Its vertices are numbered 1, 2, \ldots, N and its edges are numbered 1, 2, \ldots, M. On Vertex i (1 \leq i \leq N) two integers A_i and B_i are written. Edge i (1 \leq i \leq M) connects Vertices U_i and V_i. Snuke picks zero or more vertices and delete them. Deleting Vertex i costs A_i. When a vertex is deleted, edges that are incident to the vertex are also deleted. The score after deleting vertices is calculated as follows:  - The score is the sum of the scores of all connected components.  - The score of a connected component is the absolute value of the sum of B_i of the vertices in the connected component. Snuke's profit is (score) - (the sum of costs). Find the maximum possible profit Snuke can gain. -----Constraints-----  - 1 \leq N \leq 300  - 1 \leq M \leq 300  - 1 \leq A_i \leq 10^6  - -10^6 \leq B_i \leq 10^6  - 1 \leq U_i,V_i \leq N  - The given graph does not contain self loops or multiple edges.  - All values in input are integers. 
tl;dr: