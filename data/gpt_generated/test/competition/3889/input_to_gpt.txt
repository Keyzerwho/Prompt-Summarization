You are given a sequence D_1, D_2, ..., D_N of length N. The values of D_i are all distinct. Does a tree with N vertices that satisfies the following conditions exist   - The vertices are numbered 1,2,..., N.  - The edges are numbered 1,2,..., N-1, and Edge i connects Vertex u_i and v_i.  - For each vertex i, the sum of the distances from i to the other vertices is D_i, assuming that the length of each edge is 1. If such a tree exists, construct one such tree. -----Constraints-----  - 2 \leq N \leq 100000  - 1 \leq D_i \leq 10^{12}  - D_i are all distinct. 
tl;dr: You are given a sequence D_1, D_2, ..., D_N of length N. The values of D_i are all distinct. Does a tree with N vertices that satisfies the following conditions exist   - The vertices are numbered 1,2,..., N.  - The edges are numbered 1,2,..., N-1, and Edge i connects Vertex u_i and v_i.  - For each vertex i, the sum of the distances from i to the other vertices is D_i, assuming that the length of each edge is 1. If such a tree exists, construct one such tree. -----Constraints-----  - 2 \leq N \leq 100000  - 1 \leq D_i \leq 10^{12}  - D_i are all distinct. 

Codefortia is a small island country located somewhere in the West Pacific. It consists of $n$ settlements connected by $m$ bidirectional gravel roads. Curiously enough, the beliefs of the inhabitants require the time needed to pass each road to be equal either to $a$ or $b$ seconds. It's guaranteed that one can go between any pair of settlements by following a sequence of roads. Codefortia was recently struck by the financial crisis. Therefore, the king decided to abandon some of the roads so that:   it will be possible to travel between each pair of cities using the remaining roads only,  the sum of times required to pass each remaining road will be minimum possible (in other words, remaining roads must form minimum spanning tree, using the time to pass the road as its weight),  among all the plans minimizing the sum of times above, the time required to travel between the king's residence (in settlement $1$) and the parliament house (in settlement $p$) using the remaining roads only will be minimum possible.  The king, however, forgot where the parliament house was. For each settlement $p = 1, 2, \dots, n$, can you tell what is the minimum time required to travel between the king's residence and the parliament house (located in settlement $p$) after some roads are abandoned  
tl;dr: You are given a connected graph of $n$ nodes and $m$ bidirectional edges. For each node $p = 1, 2, \dots, n$, you need to find a minimum spanning tree. Then output the minimum cost required to travel between node $1$ and node $p$. 

Panic is rising in the committee for doggo standardization   the puppies of the new brood have been born multi-colored! In total there are 26 possible colors of puppies in the nature and they are denoted by letters from 'a' to 'z' inclusive. The committee rules strictly prohibit even the smallest diversity between doggos and hence all the puppies should be of the same color. Thus Slava, the committee employee, has been assigned the task to recolor some puppies into other colors in order to eliminate the difference and make all the puppies have one common color. Unfortunately, due to bureaucratic reasons and restricted budget, there's only one operation Slava can perform: he can choose a color $x$ such that there are currently at least two puppies of color $x$ and recolor all puppies of the color $x$ into some arbitrary color $y$. Luckily, this operation can be applied multiple times (including zero). For example, if the number of puppies is $7$ and their colors are represented as the string "abababc", then in one operation Slava can get the results "zbzbzbc", "bbbbbbc", "aaaaaac", "acacacc" and others. However, if the current color sequence is "abababc", then he can't choose $x$='c' right now, because currently only one puppy has the color 'c'. Help Slava and the committee determine whether it is possible to standardize all the puppies, i.e. after Slava's operations all the puppies should have the same color. 
tl;dr: