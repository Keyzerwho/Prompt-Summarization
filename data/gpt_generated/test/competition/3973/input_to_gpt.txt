Implement a function which  creates a **[radix tree](https://en.wikipedia.org/wiki/Radix_tree)** (a space-optimized trie [prefix tree])  in which each node that is the only child is merged with its parent [unless a word from the input ends there])  from a given list of words  using dictionaries (aka hash maps or hash tables) where: 1. The dictionary keys are the nodes. 2. Leaf nodes are empty dictionaries. 3. The value for empty input is an empty dictionary. 4. Words are all lowercase or empty strings. 5. Words can contain duplicates. ### 
tl;dr: Implement a function which creates a radix tree in which each node that is the only child is merged with its parent from a given list of words using dictionaries where: 1. The dictionary keys are the nodes. 2. Leaf nodes are empty dictionaries. 3. The value for empty input is an empty dictionary. 4. Words are all lowercase or empty strings. 5. Words can contain duplicates. 

You are given an unweighted, undirected graph. Write a program to check if it's a tree topology. 
tl;dr: Write a program to check for a given unweighted, undirected graph whether it's a tree topology or not. 

Snuke is buying a lamp. The light of the lamp can be adjusted to m levels of brightness, represented by integers from 1 through m, by the two buttons on the remote control. The first button is a "forward" button. When this button is pressed, the brightness level is increased by 1, except when the brightness level is m, in which case the brightness level becomes 1. The second button is a "favorite" button. When this button is pressed, the brightness level becomes the favorite brightness level x, which is set when the lamp is purchased. Snuke is thinking of setting the favorite brightness level x so that he can efficiently adjust the brightness. He is planning to change the brightness n-1 times. In the i-th change, the brightness level is changed from a_i to a_{i+1}. The initial brightness level is a_1. Find the number of times Snuke needs to press the buttons when x is set to minimize this number. -----Constraints-----  - 2 \leq n,m \leq 10^5  - 1 \leq a_i\leq m  - a_i \neq a_{i+1}  - n, m and a_i are integers. 
tl;dr: