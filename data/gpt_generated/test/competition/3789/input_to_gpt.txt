There are $n$ lamps on a line, numbered from $1$ to $n$. Each one has an initial state off ($0$) or on ($1$). You're given $k$ subsets $A_1, \ldots, A_k$ of $\{1, 2, \dots, n\}$, such that the intersection of any three subsets is empty. In other words, for all $1 \le i_1 < i_2 < i_3 \le k$, $A_{i_1} \cap A_{i_2} \cap A_{i_3} = \varnothing$. In one operation, you can choose one of these $k$ subsets and switch the state of all lamps in it. It is guaranteed that, with the given subsets, it's possible to make all lamps be simultaneously on using this type of operation. Let $m_i$ be the minimum number of operations you have to do in order to make the $i$ first lamps be simultaneously on. Note that there is no condition upon the state of other lamps (between $i+1$ and $n$), they can be either off or on. You have to compute $m_i$ for all $1 \le i \le n$. 
tl;dr: There are $n$ lamps on a line, numbered from $1$ to $n$. Each one has an initial state off ($0$) or on ($1$). You're given $k$ subsets $A_1, \ldots, A_k$ of $\{1, 2, \dots, n\}$, such that the intersection of any three subsets is empty. In one operation, you can choose one of these $k$ subsets and switch the state of all lamps in it. It is guaranteed that, with the given subsets, it's possible to make all lamps be simultaneously on using this type of operation. Let $m_i$ be the minimum number of operations you have to do in order to make the $i$ first lamps be simultaneously on. You have to compute $m_i$ for all $1 \le i \le n$. 

----- ARRAY AND DISTINCT ELEMENTS ----- Chef is multitalented but he mistakenly took part in 2 contest which will take place at the same time. So while chef is busy at one cooking contest, he wants you to take part in coding contest. Chef wants u to solve this program for him. 	 You have been given an array of size n. You have to calculate a subarray of size k with maximum sum having distinct elements same as original array. 		 		 
tl;dr: You are given an array of size n. Calculate a subarray of size k with maximum sum having distinct elements same as original array. 	 		 

There are total N friends went to Chef's Pizza shop. There they bought a pizza. Chef divided the pizza into K equal slices. Now you have to check whether these K pizza slices can be distributed equally among the friends. Also given that every person should get at least one slice. If the above conditions are possible then print "YES" otherwise print "NO". 
tl;dr: You have to divided K equal slices of pizza to distribute among N people. Check whether these K pizza slices can be distributed equally among the N children if every child should get at least one slice. If it's possible then print "YES" otherwise print "NO". 

We have N gemstones labeled 1 through N. You can perform the following operation any number of times (possibly zero).  - Select a positive integer x, and smash all the gems labeled with multiples of x. Then, for each i, if the gem labeled i remains without getting smashed, you will receive a_i yen (the currency of Japan). However, a_i may be negative, in which case you will be charged money. By optimally performing the operation, how much yen can you earn  -----Constraints-----  - All input values are integers.  - 1 \leq N \leq 100  - |a_i| \leq 10^9 
tl;dr: