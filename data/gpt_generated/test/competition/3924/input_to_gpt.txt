# Definition **_Strong number_** is the number that *the sum of the factorial of its digits is equal to number itself*. ## **_For example_**:  **_145_**, since  ``` 1! + 4! + 5! = 1 + 24 + 120 = 145 ``` So, **_145_** is a **_Strong number_**.  ____ # Task **_Given_** a number, **_Find if it is Strong or not_**. ____ # Warm-up (Highly recommended) # [Playing With Numbers Series](https://www.codewars.com/collections/playing-with-numbers) ___ 
tl;dr: You are given a positive number, find if it is strong or not. 

# Task  Given a rectangular `matrix` and integers `a` and `b`, consider the union of the ath row and the bth (both 0-based) column of the `matrix`. Return sum of all elements of that union. # 
tl;dr: Given a rectangular matrix and integers a and b, consider the union of the ath row and the bth column of the matrix. Return sum of all elements of that union. 

```if-not:rust Your task is to write a function `toLeetSpeak` that converts a regular english sentence to Leetspeak. ``` ```if:rust Your task is to write a function `to_leet_speak` that converts a regular english sentence to Leetspeak. ``` More about LeetSpeak You can read at wiki -> https://en.wikipedia.org/wiki/Leet Consider only uppercase letters (no lowercase letters, no numbers) and spaces. For example: ```if-not:rust ~~~ toLeetSpeak("LEET") returns "1337" ~~~ ``` ```if:rust ~~~ to_leet_speak("LEET") returns "1337" ~~~ ``` In this kata we use a simple LeetSpeak dialect. Use this alphabet: ``` {   A : '@',   B : '8',   C : '(',   D : 'D',   E : '3',   F : 'F',   G : '6',   H : '#',   I : '!',   J : 'J',   K : 'K',   L : '1',   M : 'M',   N : 'N',   O : '0',   P : 'P',   Q : 'Q',   R : 'R',   S : '$',   T : '7',   U : 'U',   V : 'V',   W : 'W',   X : 'X',   Y : 'Y',   Z : '2' } ``
tl;dr: Your task is to write a function `toLeetSpeak` that converts a regular english sentence to Leetspeak. Consider only uppercase letters and spaces. 

Enough is enough. Too many times it happened that Vasya forgot to dispose of garbage and his apartment stank afterwards. Now he wants to create a garbage disposal plan and stick to it. For each of next $n$ days Vasya knows $a_i$   number of units of garbage he will produce on the $i$-th day. Each unit of garbage must be disposed of either on the day it was produced or on the next day. Vasya disposes of garbage by putting it inside a bag and dropping the bag into a garbage container. Each bag can contain up to $k$ units of garbage. It is allowed to compose and drop multiple bags into a garbage container in a single day. Being economical, Vasya wants to use as few bags as possible. You are to compute the minimum number of bags Vasya needs to dispose of all of his garbage for the given $n$ days. No garbage should be left after the $n$-th day. 
tl;dr: