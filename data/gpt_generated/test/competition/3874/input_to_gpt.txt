*This kata is inspired by [Project Euler Problem #387](https://projecteuler.net/problem=387)* --- A [Harshad number](https://en.wikipedia.org/wiki/Harshad_number) (or Niven number) is a number that is divisible by the sum of its digits. A *right truncatable Harshad number* is any Harshad number that, when recursively right-truncated, results in a Harshad number at each truncation. By definition, 1-digit numbers are **not** right truncatable Harshad numbers. For example `201` (which is a Harshad number) yields `20`, then `2` when right-truncated, which are all Harshad numbers. Thus `201` is a *right truncatable Harshad number*. ## Your task Given a range of numbers (`(a, b)`, both included), return the list of right truncatable Harshad numbers in this range. ```if-not:javascript 
tl;dr: A [Harshad number] is a number that is divisible by the sum of its digits. A *right truncatable Harshad number* is any Harshad number that, when recursively right-truncated, results in a Harshad number at each truncation. By definition, 1-digit numbers are **not** right truncatable Harshad numbers. For example `201` (which is a Harshad number) yields `20`, then `2` when right-truncated, which are all Harshad numbers. Thus `201` is a *right truncatable Harshad number*. ## Your task Given a range of numbers , return the list of right truncatable Harshad numbers in this range. ## 

This is a follow up from my kata The old switcheroo Write ```python def encode(str) ``` that takes in a string ```str``` and replaces all the letters with their respective positions in the English alphabet. ```python encode('abc') == '123'   # a is 1st in English alpabet, b is 2nd and c is 3rd encode('codewars') == '315452311819' encode('abc-#@5') == '123-#@5' ``` String are case sensitive
tl;dr: Write a function encode that takes in a string str and replaces all the letters with their respective positions in the English alphabet. String are case sensitive. 

Polycarp is a beginner programmer. He is studying how to use a command line. Polycarp faced the following problem. There are n files in a directory and he needs to delete some of them. Polycarp wants to run a single delete command with filename pattern as an argument. All the files to be deleted should match the pattern and all other files shouldn't match the pattern. Polycarp doesn't know about an asterisk '*', the only special character he knows is a question mark ' ' which matches any single character. All other characters in the pattern match themselves only. Formally, a pattern matches a filename if and only if they have equal lengths and all characters in the corresponding positions are equal except when the character in the pattern is ' ', in which case the corresponding filename character does not matter. For example, the filename pattern "a ba ":  matches filenames "aabaa", "abba.", "a.ba9" and "a.ba.";  does not match filenames "aaba", "abaab", "aabaaa" and "aabaa.".  Help Polycarp find a pattern which matches files to be deleted and only them or report if there is no such pattern. 
tl;dr: