Write a function that checks if all the letters in the second string are present in the first one at least once, regardless of how many times they appear: ``` ["ab", "aaa"]    =>  true ["trances", "nectar"]    =>  true ["compadres", "DRAPES"]  =>  true ["parses", "parsecs"]    =>  false ``` Function should not be case sensitive, as indicated in example #2. 
tl;dr: Write a function that checks if all the letters in the second string are present in the first one at least once, regardless of how many times they appear. Function should not be case sensitive. 

You are given $n$ arrays that can have different sizes. You also have a table with $w$ columns and $n$ rows. The $i$-th array is placed horizontally in the $i$-th row. You can slide each array within its row as long as it occupies several consecutive cells and lies completely inside the table. You need to find the maximum sum of the integers in the $j$-th column for each $j$ from $1$ to $w$ independently.  [Image] Optimal placements for columns $1$, $2$ and $3$ are shown on the pictures from left to right.  Note that you can exclude any array out of a column provided it remains in the window. In this case its value is considered to be zero. 
tl;dr: You are given $n$ arrays that can have different sizes. You also have a table with $w$ columns and $n$ rows. The $i$-th array is placed horizontally in the $i$-th row. You can slide each array within its row as long as it occupies several consecutive cells and lies completely inside the table. You need to find the maximum sum of the integers in the $j$-th column for each $j$ from $1$ to $w$ independently. You can exclude any array out of a column provided it remains in the window. In this case its value is considered to be zero. 

Chef has a number N, Cheffina challenges the chef to check the divisibility of all the permutation of N by 3. If any of the permutations is divisible by 3 then print 1 else print 0. 
tl;dr: Check whether the given number N is divisible by 3 or not. If yes then print 1 else print 0. 

SIHanatsuka - EMber SIHanatsuka - ATONEMENT Back in time, the seven-year-old Nora used to play lots of games with her creation ROBO_Head-02, both to have fun and enhance his abilities. One day, Nora's adoptive father, Phoenix Wyle, brought Nora $n$ boxes of toys. Before unpacking, Nora decided to make a fun game for ROBO. She labelled all $n$ boxes with $n$ distinct integers $a_1, a_2, \ldots, a_n$ and asked ROBO to do the following action several (possibly zero) times:   Pick three distinct indices $i$, $j$ and $k$, such that $a_i \mid a_j$ and $a_i \mid a_k$. In other words, $a_i$ divides both $a_j$ and $a_k$, that is $a_j \bmod a_i = 0$, $a_k \bmod a_i = 0$.  After choosing, Nora will give the $k$-th box to ROBO, and he will place it on top of the box pile at his side. Initially, the pile is empty.  After doing so, the box $k$ becomes unavailable for any further actions.  Being amused after nine different tries of the game, Nora asked ROBO to calculate the number of possible different piles having the largest amount of boxes in them. Two piles are considered different if there exists a position where those two piles have different boxes. Since ROBO was still in his infant stages, and Nora was still too young to concentrate for a long time, both fell asleep before finding the final answer. Can you help them  As the number of such piles can be very large, you should print the answer modulo $10^9 + 7$. 
tl;dr: