You are given an array (which will have a length of at least 3, but could be very large) containing integers. The array is either entirely comprised of odd integers or entirely comprised of even integers except for a single integer `N`. Write a method that takes the array as an argument and returns this "outlier" `N`. ## 
tl;dr: You are given an array which will have a length of at least 3 containing integers. The array is either entirely comprised of odd integers or entirely comprised of even integers except for a single integer N. Write a method that takes the array as an argument and returns this N. 

For an array $b$ of length $m$ we define the function $f$ as  $ f(b) = \begin{cases} b[1] & \quad \text{if } m = 1 \\ f(b[1] \oplus b[2],b[2] \oplus b[3],\dots,b[m-1] \oplus b[m]) & \quad \text{otherwise,} \end{cases} $  where $\oplus$ is bitwise exclusive OR. For example, $f(1,2,4,8)=f(1\oplus2,2\oplus4,4\oplus8)=f(3,6,12)=f(3\oplus6,6\oplus12)=f(5,10)=f(5\oplus10)=f(15)=15$ You are given an array $a$ and a few queries. Each query is represented as two integers $l$ and $r$. The answer is the maximum value of $f$ on all continuous subsegments of the array $a_l, a_{l+1}, \ldots, a_r$. 
tl;dr: For an array $b$ of length $m$ we define the function $f$ as  $ f(b) = \begin{cases} b[1] & \quad \text{if } m = 1 \\ f(b[1] \oplus b[2],b[2] \oplus b[3],\dots,b[m-1] \oplus b[m]) & \quad \text{otherwise,} \end{cases} $  where $\oplus$ is bitwise exclusive OR. You are given an array $a$ and a few queries. Each query is represented as two integers $l$ and $r$. The answer is the maximum value of $f$ on all continuous subsegments of the array $a_l, a_{l+1}, \ldots, a_r$. 

```if-not:rust Your task is to write a function `toLeetSpeak` that converts a regular english sentence to Leetspeak. ``` ```if:rust Your task is to write a function `to_leet_speak` that converts a regular english sentence to Leetspeak. ``` More about LeetSpeak You can read at wiki -> https://en.wikipedia.org/wiki/Leet Consider only uppercase letters (no lowercase letters, no numbers) and spaces. For example: ```if-not:rust ~~~ toLeetSpeak("LEET") returns "1337" ~~~ ``` ```if:rust ~~~ to_leet_speak("LEET") returns "1337" ~~~ ``` In this kata we use a simple LeetSpeak dialect. Use this alphabet: ``` {   A : '@',   B : '8',   C : '(',   D : 'D',   E : '3',   F : 'F',   G : '6',   H : '#',   I : '!',   J : 'J',   K : 'K',   L : '1',   M : 'M',   N : 'N',   O : '0',   P : 'P',   Q : 'Q',   R : 'R',   S : '$',   T : '7',   U : 'U',   V : 'V',   W : 'W',   X : 'X',   Y : 'Y',   Z : '2' } ``
tl;dr: Your task is to write a function `toLeetSpeak` that converts a regular english sentence to Leetspeak. Consider only uppercase letters and spaces. 

You are given an array of $n$ integers. You need to split all integers into two groups so that the GCD of all integers in the first group is equal to one and the GCD of all integers in the second group is equal to one. The GCD of a group of integers is the largest non-negative integer that divides all the integers in the group. Both groups have to be non-empty. 
tl;dr: