There are n cards of different colours placed in a line, each of them can be either red, green or blue cards. Count the minimum number of cards to withdraw from the line so that no two adjacent cards have the same colour. 
tl;dr: You are given n cards of 3 different colours placed in a line. Count the minimum number of cards to withdraw from the line so that no two adjacent cards have the same colour. 

You are given a string s of length n. Does a tree with n vertices that satisfies the following conditions exist   - The vertices are numbered 1,2,..., n.  - The edges are numbered 1,2,..., n-1, and Edge i connects Vertex u_i and v_i.  - If the i-th character in s is 1, we can have a connected component of size i by removing one edge from the tree.  - If the i-th character in s is 0, we cannot have a connected component of size i by removing any one edge from the tree. If such a tree exists, construct one such tree. -----Constraints-----  - 2 \leq n \leq 10^5  - s is a string of length n consisting of 0 and 1. 
tl;dr: You are given a string s of length n. Does a tree with n vertices that satisfies the following conditions exist   - The vertices are numbered 1,2,..., n.  - The edges are numbered 1,2,..., n-1, and Edge i connects Vertex u_i and v_i.  - If the i-th character in s is 1, we can have a connected component of size i by removing one edge from the tree.  - If the i-th character in s is 0, we cannot have a connected component of size i by removing any one edge from the tree. If such a tree exists, construct one such tree. -----Constraints-----  - 2 \leq n \leq 10^5  - s is a string of length n consisting of 0 and 1. 

Iahub and Iahubina went to a picnic in a forest full of trees. Less than 5 minutes passed before Iahub remembered of trees from programming. Moreover, he invented a new problem and Iahubina has to solve it, otherwise Iahub won't give her the food.  Iahub asks Iahubina: can you build a rooted tree, such that   each internal node (a node with at least one son) has at least two sons;  node i has c_{i} nodes in its subtree   Iahubina has to guess the tree. Being a smart girl, she realized that it's possible no tree can follow Iahub's restrictions. In this way, Iahub will eat all the food. You need to help Iahubina: determine if there's at least one tree following Iahub's restrictions. The required tree must contain n nodes. 
tl;dr: