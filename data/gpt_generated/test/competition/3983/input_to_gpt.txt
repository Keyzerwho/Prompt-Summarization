We have three stones at points (0, 0), (1,0), and (0,1) on a two-dimensional plane. These three stones are said to form an L when they satisfy the following conditions:  - Each of the stones is at integer coordinates.  - Each of the stones is adjacent to another stone. (That is, for each stone, there is another stone whose distance from that stone is 1.)  - The three stones do not lie on the same line. Particularly, the initial arrangement of the stone - (0, 0), (1,0), and (0,1) - forms an L. You can do the following operation any number of times: choose one of the stones and move it to any position. However, after each operation, the stones must form an L. You want to do as few operations as possible to put stones at points (ax, ay), (bx, by), and (cx, cy). How many operations do you need to do this  It is guaranteed that the desired arrangement of stones - (ax, ay), (bx, by), and (cx, cy) - forms an L. Under this condition, it is always possible to achieve the objective with a finite number of operations. You will be given T cases of this problem. Solve each of them. -----Notes----- We assume that the three stones are indistinguishable. For example, the stone that is initially at point (0,0) may be at any of the points (ax, ay), (bx, by), and (cx, cy) in the end. -----Constraints-----  - 1 \leq T \leq 10^3  - |ax|,|ay|,|bx|,|by|,|cx|,|cy| \leq 10^9  - The desired arrangement of stones - (ax, ay), (bx, by), and (cx, cy) - forms an L. 
tl;dr: We have three stones at points (0, 0), (1,0), and (0,1) on a two-dimensional plane. These three stones are said to form an L when they satisfy the following conditions:  - Each of the stones is at integer coordinates.  - Each of the stones is adjacent to another stone.  - The three stones do not lie on the same line. Particularly, the initial arrangement of the stone - (0, 0), (1,0), and (0,1) - forms an L. You can do the following operation any number of times: choose one of the stones and move it to any position. However, after each operation, the stones must form an L. You want to do as few operations as possible to put stones at points (ax, ay), (bx, by), and (cx, cy). How many operations do you need to do this  It is guaranteed that the desired arrangement of stones - (ax, ay), (bx, by), and (cx, cy) - forms an L. Assume that the three stones are indistinguishable. -----Constraints-----  - 1 \leq T \leq 10^3  - |ax|,|ay|,|bx|,|by|,|cx|,|cy| \leq 10^9  - The desired arrangement of stones - (ax, ay), (bx, by), and (cx, cy) - forms an L. 

At the legendary times of Nonsenso wars in ISM Dhanbad, there was a neck to neck competition between Barney Stinson and Sheldon Cooper. They both were on level 19. After trying too hard both of them could not decipher the nonsense, so they decided to play alongside. Sheldon Cooper had to pass a message to Barney Stinson. So he decided to convert each letter of the sentence to their corresponding to their ASCII codes. When Barney received the message he could not get anything. Now you have to design a code which converts the encrypted message to readable format. 
tl;dr: You are given N encrypted sentences whose characters are in ASCCI code. Write a code to convert ASCCI code into their corresponding characters. 

**This Kata is intended as a small challenge for my students** All Star Code Challenge #18 Create a function called that accepts 2 string arguments and returns an integer of the count of occurrences the 2nd argument is found in the first one. If no occurrences can be found, a count of 0 should be returned. 
tl;dr: **This Kata is intended as a small challenge for my students** All Star Code Challenge #18 Create a function that accepts 2 string arguments and returns an integer of the count of occurrences the 2nd argument is found in the first one. If no occurrences can be found, a count of 0 should be returned

Given is an undirected graph G consisting of N vertices numbered 1 through N and M edges numbered 1 through M. Edge i connects Vertex a_i and Vertex b_i bidirectionally. G is said to be a good graph when both of the conditions below are satisfied. It is guaranteed that G is initially a good graph.  - Vertex 1 and Vertex N are not connected.  - There are no self-loops and no multi-edges. Taro the first and Jiro the second will play a game against each other. They will alternately take turns, with Taro the first going first. In each player's turn, the player can do the following operation:  - Operation: Choose vertices u and v, then add to G an edge connecting u and v bidirectionally. The player whose addition of an edge results in G being no longer a good graph loses. Determine the winner of the game when the two players play optimally. You are given T test cases. Solve each of them. -----Constraints-----  - All values in input are integers.  - 1 \leq T \leq 10^5  - 2 \leq N \leq 10^{5}  - 0 \leq M \leq \min(N(N-1)/2,10^{5})  - 1 \leq a_i,b_i \leq N  - The given graph is a good graph.  - In one input file, the sum of N and that of M do not exceed 2 \times 10^5. 
tl;dr: