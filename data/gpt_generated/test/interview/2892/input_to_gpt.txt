A transaction is possibly invalid if: the amount exceeds $1000, or; if it occurs within (and including) 60 minutes of another transaction with the same name in a different city. Each transaction string transactions[i] consists of comma separated values representing the name, time (in minutes), amount, and city of the transaction. Given a list of transactions, return a list of transactions that are possibly invalid.  You may return the answer in any order.   
tl;dr: You are given a list of strings where each string in format of "A,B,C,D". where A,D are strings and B,C are numbers. A string is possibly invalid if: the C exceeds 1000, or; if two strings have same A and different D and the difference between C is greater than or equal to 60. return list of strings which are possibley invalid in any order 

## A square of squares You like building blocks. You especially like building blocks that are squares. And what you even like more, is to arrange them into a square of square building blocks! However, sometimes, you can't arrange them into a square. Instead, you end up with an ordinary rectangle! Those blasted things! If you just had a way to know, whether you're currently working in vain  Wait! That's it! You just have to check if your number of building blocks is a _perfect square_. ## Task Given an integral number, determine if it's a [square number](https://en.wikipedia.org/wiki/Square_number): > In mathematics, a __square number__ or __perfect square__ is an integer that is the square of an integer; in other words, it is the product of some integer with itself. The tests will _always_ use some integral number, so don't worry about that in dynamic typed languages. ### 
tl;dr: Given an integral number, determine if it's a square number. 

There are N bags, each containing two white balls. The i-th box contains two balls with integers x_i and y_i written on them, respectively. For each of these bags, you will paint one of the balls red, and paint the other blue. Afterwards, the 2N balls will be classified according to color. Then, we will define the following:  - R_{max}: the maximum integer written on a ball painted in red  - R_{min}: the minimum integer written on a ball painted in red  - B_{max}: the maximum integer written on a ball painted in blue  - B_{min}: the minimum integer written on a ball painted in blue Find the minimum possible value of (R_{max} - R_{min}) \times (B_{max} - B_{min}). -----Constraints-----  - 1   N   200,000  - 1   x_i, y_i   10^9 
tl;dr: There are N bags, each containing two white balls. The i-th box contains two balls with integers x_i and y_i written on them, respectively. For each of these bags, you will paint one of the balls red, and paint the other blue. Afterwards, the 2N balls will be classified according to color. Then, we will define the following:  - R_{max}: the maximum integer written on a ball painted in red  - R_{min}: the minimum integer written on a ball painted in red  - B_{max}: the maximum integer written on a ball painted in blue  - B_{min}: the minimum integer written on a ball painted in blue Find the minimum possible value of (R_{max} - R_{min}) \times (B_{max} - B_{min}). -----Constraints-----  - 1   N   200,000  - 1   x_i, y_i   10^9 

Matryoshkas are sets of traditional Russian wooden dolls of decreasing size placed one inside the other. A matryoshka doll can be opened to reveal a smaller figure of the same sort inside, which has, in turn, another figure inside, and so on.The Russian Matryoshka Museum recently exhibited a collection of similarly designed matryoshka sets, differing only in the number of nested dolls in each set. Unfortunately, some over-zealous (and obviously unsupervised) children separated these sets, placing all the individual dolls in a row. There are $n$ dolls in the row, each with an integer size. You need to reassemble the matryoshka sets, knowing neither the number of sets nor the number of dolls in each set. You know only that every complete set consists of dolls with consecutive sizes from $1$ to some number $m$, which may vary between the different sets.  When reassembling the sets, you must follow these rules:  - You can put a doll or a nested group of dolls only inside a larger doll.  - You can combine two groups of dolls only if they are adjacent in the row.  - Once a doll becomes a member of a group, it cannot be transferred to another group or permanently separated from the group. It can be temporarily separated only when combining two groups. Your time is valuable, and you want to do this reassembly process as quickly as possible. The only time-consuming part of this task is opening and subsequently closing a doll, so you want to minimize how often you do this. For example, the minimum number of openings (and subsequent closings) when combining group [1, 2, 6] with the group [4] is two, since you have to open the dolls with sizes 6 and 4. When combining group [1, 2, 5] with the group [3, 4], you need to perform three openings. Write a program to calculate the minimum number of openings required to combine all disassembled matryoshka sets. 
tl;dr: