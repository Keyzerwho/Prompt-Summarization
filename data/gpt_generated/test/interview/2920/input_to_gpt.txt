Chef loves triangles. But the chef is poor at maths. Given three random lengths Chef wants to find if the three sides form a right-angled triangle or not. Can you help Chef in this endeavour  
tl;dr: Given lengths $A,B and C$ return YES if they can form a right angled triangle, NO otherwise. 

You have been recently hired as a developer in CodeChef. Your first mission is to implement a feature that will determine the number of submissions that were judged late in a contest. There are $N$ submissions, numbered $1$ through $N$. For each valid $i$, the $i$-th submission was submitted at time $S_i$ and judged at time $J_i$ (in minutes). Submitting and judging both take zero time. Please determine how many submissions received their verdicts after a delay of more than $5$ minutes. 
tl;dr: You are given $N$ submissions, numbered $1$ through $N$. For each valid $i$, the $i$-th submission was submitted at time $S_i$ and judged at time $J_i$ (in minutes). Submitting and judging both take zero time. Determine how many submissions received their verdicts after a delay of more than $5$ minutes. 

You have an array A of size N containing only positive numbers. You have to output the maximum possible value of A[i]%A[j] where 1<=i,j<=N.  
tl;dr: Find maximum possible value of A[i]%A[j] where 1<=i,j<=N for a given array A of size N containing positive numbers.  

You have recently made a grid traversing robot that can find its way from the top left corner of a grid to the bottom right corner. However, you had forgotten all your AI programming skills, so you only programmed your robot to go rightwards and downwards (that s after all where the goal is). You have placed your robot on a grid with some obstacles, and you sit and observe. However, after a while you get tired of observing it getting stuck, and ask yourself  How many paths are there from the start position to the goal position  , and  If there are none, could the robot have made it to the goal if it could walk upwards and leftwards   So you decide to write a program that, given a grid of size $n \times n$ with some obstacles marked on it where the robot cannot walk, counts the different ways the robot could go from the top left corner $s$ to the bottom right $t$, and if none, tests if it were possible if it could walk up and left as well. However, your program does not handle very large numbers, so the answer should be given modulo $2^{31} - 1$. 
tl;dr: