You are given a sequence a1, a2, ..., aN. Find the smallest possible value of ai + aj, where 1   i < j   N. 
tl;dr: You are given a sequence a1, a2, ..., aN. Find the smallest possible value of ai + aj, where 1   i < j   N. 

#Permutation  position In this kata you will have to permutate through a string of lowercase letters, each permutation will start at ```a``` and you must calculate how many iterations it takes to reach the current permutation. ##examples ``` input: 'a' result: 1 input: 'c' result: 3 input: 'z' result: 26 input: 'foo' result: 3759 input: 'aba' result: 27 input: 'abb' result: 28 ``
tl;dr: You will have to permutate through a string of lowercase letters, each permutation will start at a and you must calculate how many iterations it takes to reach the current permutation. 

This is the simple version of Shortest Code series. If you need some challenges, please try the [challenge version](http://www.codewars.com/kata/56f928b19982cc7a14000c9d) ## Task:    Every uppercase letter is Father, The corresponding lowercase letters is the Son.        Give you a string ```s```, If the father and son both exist, keep them. If it is a separate existence, delete them. Return the result.        For example:          ```sc("Aab")``` should return ```"Aa"```         ```sc("AabBc")``` should return ```"AabB"```        ```sc("AaaaAaab")``` should return ```"AaaaAaa"```(father can have a lot of son)         ```sc("aAAAaAAb")``` should return ```"aAAAaAA"```(son also can have a lot of father ;-)           ### Series:  - [Bug in Apple](http://www.codewars.com/kata/56fe97b3cc08ca00e4000dc9)  - [Father and Son](http://www.codewars.com/kata/56fe9a0c11086cd842000008)  - [Jumping Dutch act](http://www.codewars.com/kata/570bcd9715944a2c8e000009)  - [Planting Trees](http://www.codewars.com/kata/5710443187a36a9cee0005a1)  - [Give me the equation](http://www.codewars.com/kata/56fe9b65cc08cafbc5000de3)  - [Find the murderer](http://www.codewars.com/kata/570f3fc5b29c702c5500043e)  - [Reading a Book](http://www.codewars.com/kata/570ca6a520c69f39dd0016d4)  - [Eat watermelon](http://www.codewars.com/kata/570df12ce6e9282a7d000947)  - [Special factor](http://www.codewars.com/kata/570e5d0b93214b1a950015b1)  - [Guess the Hat](http://www.codewars.com/kata/570ef7a834e61306da00035b)  - [Symmetric Sort](http://www.codewars.com/kata/5705aeb041e5befba20010ba)  - [Are they symmetrical ](http://www.codewars.com/kata/5705cc3161944b10fd0004ba)  - [Max Value](http://www.codewars.com/kata/570771871df89cf59b000742)  - [Trypophobia](http://www.codewars.com/kata/56fe9ffbc25bf33fff000f7c)  - [Virus in Apple](http://www.codewars.com/kata/5700af83d1acef83fd000048)  - [Balance Attraction](http://www.codewars.com/kata/57033601e55d30d3e0000633)  - [Remove screws I](http://www.codewars.com/kata/5710a50d336aed828100055a)  - [Remove screws II](http://www.codewars.com/kata/5710a8fd336aed00d9000594)  - [Regular expression compression](http://www.codewars.com/kata/570bae4b0237999e940016e9)  - [Collatz Array(Split or merge)](http://www.codewars.com/kata/56fe9d579b7bb6b027000001)  - [Tidy up the room](http://www.codewars.com/kata/5703ace6e55d30d3e0001029)  - [Waiting for a Bus](http://www.codewars.com/kata/57070eff924f343280000015
tl;dr: Every uppercase letter is Father, The corresponding lowercase letters is the Son. Given a string s, if the father and son both exist, keep them. If it is a separate existence, delete them. Return the result.      

Jimmy is performing in ByteLand today! Anthony the Ant is a huge fan of Jimmy s music, so he can t wait to get to the concert. ByteLand consists of of $N$ intersections and $M$ roads. Every road is bidirectional and connects two distinct intersections. Anthony is currently on intersection $s$ and the concert is being held at intersection $t$. Anthony must get to the concert in $T$ seconds and he can travel at $1$ meter/second. Unfortunately for Anthony, he has a huge fear of spiders and ByteLand is full of spiders. Spiders reside at certain intersections in ByteLand. Anthony will choose a path from $s$ to $t$ that maximizes $D$, the minimum distance between any intersection on the path and any spider, such that the path can be travelled in no more than $T$ seconds. 
tl;dr: