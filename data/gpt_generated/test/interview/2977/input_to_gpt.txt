Cengiz recently learned Fibonacci numbers and now he is studying different algorithms to find them. After getting bored of reading them, he came with his own new type of numbers that he named XORinacci numbers. He defined them as follows:   $f(0) = a$;  $f(1) = b$;  $f(n) = f(n-1) \oplus f(n-2)$ when $n > 1$, where $\oplus$ denotes the bitwise XOR operation.  You are given three integers $a$, $b$, and $n$, calculate $f(n)$. You have to answer for $T$ independent test cases. 
tl;dr: $f(0) = a$;  $f(1) = b$;  $f(n) = f(n-1) \oplus f(n-2)$ when $n > 1$, where $\oplus$ denotes the bitwise XOR operation.  You are given three integers $a$, $b$, and $n$, calculate $f(n)$. 

Students are asked to stand in non-decreasing order of heights for an annual photo. Return the minimum number of students that must move in order for all students to be standing in non-decreasing order of height. Notice that when a group of students is selected they can reorder in any possible way between themselves and the non selected students remain on their seats.   
tl;dr: you are given an array of numbers. Find the minimum number of indexes in the array need to be reordered such that all the elements in array are in non-decreasing order  

In the intergalactic low budget streaming show  Flag quiz! , contestants need to answer questions along the lines of  What are the joint colors, symbols and shapes occurring on the flags of Empire $X$  . An empire in this context is simply some subset of entities on the same planet, or otherwise related, according to the fantasies of the Supreme Map Maker. For instance, according to the system set by the Supreme Map Maker,  Empire Earth Meridian 0  are all nations cut by the zeroth meridian on Earth. This is not necessarily the same system used locally on each planet, for instance the zeroth meridian goes through Stockholm in this system. Knowledge of geography, politics or culture can actually be an obstacle on your way to victory in this challenge!  However, sometimes (actually, most of the time) you can figure out the answer to a quiz question just by looking at the alternatives. Being a low budget show, the underpaid quiz question authors strive to minimize their effort in coming up with the alternatives for each question. They construct each alternative by making a small number of changes to the correct answer, where a change consists of replacing one part of the correct answer with something else. For example, transforming  green, blue, stripes  into  green, yellow, stripes  has one single change, while changing the same answer into  life, universe, stripes  has two changes. The question authors never permute the parts, so order matters. In other words, transforming  green, blue, stripes  into  stripes, blue, green  has two changes even though they are both technically the same answer. Note that the answers are case sensitive, so  green, blue, stripes  and  Green, Blue, Stripes  need 3 changes. Your task is to write a program that automatically finds the most likely answers to questions constructed in this way. Define the incongruousity of an alternative as the maximum number of changes needed to transform that alternative into any of the other alternatives. We then seek the alternative(s) with the smallest incongruousity. -----Task----- Given a question and a set of potential answers to it, find the answer that is easiest to change into any other answer. 
tl;dr: