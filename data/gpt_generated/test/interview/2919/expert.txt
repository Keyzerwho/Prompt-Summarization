 Whitespace is an esoteric programming language (esolang) created in 2003 by Edwin Brady and Chris Morris. Many elements of Whitespace are familiar, including the fact that it is imperative and stack-based, but it has one main distinguishing feature: the only significant characters in a Whitespace source code file are [Tab] (ASCII $9$), [Newline] (ASCII $10$), and [Space] (ASCII $32$). This, of course, has the intentionally humorous result that all source code files using only these characters appear completely blank in most text editors, which can be problematic if you have a boss who keeps looking over your shoulder for evidence of productivity. (A Whitespace source code file can, in fact, include other characters, but these are simply ignored, so we will not consider that possibility here.) For this problem, you will work with a simplified version of Whitespace that we call Whitespace Lite, affectionately known as Litespace. Let $W$ denote the $3$-character set $\{ $[Tab], [Newline], [Space]$\} $. A Litespace program is a sequence of instructions, each of which consists of two or more characters from $W$. There is a stack available that holds signed integers; when a Litespace program begins, the stack is initially empty. In the list of instructions, given below, only one instruction (the last) is specifically intended to produce output, but most other instructions produce output if an error condition is encountered. Litespace Instruction Set: - [Space][Space]<integer>   Push the specified integer onto the stack. - [Space][Newline][Space
-----Input----- Input consists of a single non-empty string of characters from $\{ $‘T’, ‘N’, ‘S’$\} $ representing a valid sequence of Litespace instructions. The length of the string is at most $10000$. It is guaranteed that the Litespace program produces at least one line of output. Also, any integer pushed onto the stack or generated by a successful arithmetic operation will be less than $2^{31}$ in absolute value. -----Output----- Print the output of the Litespace program. -----Examples----- Sample Input: SSSTTSNTNST Sample Output: 6