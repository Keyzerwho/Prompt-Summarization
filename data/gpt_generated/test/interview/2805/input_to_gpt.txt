# Invalid Login - Bug Fixing #11 Oh NO! Timmy has moved divisions... but now he's in the field of security. Timmy, being the top coder he is, has allowed some bad code through. You must help Timmy and filter out any injected code! ## Task Your task is simple, search the password string for any injected code (Injected code is any thing that would be used to exploit flaws in the current code, so basically anything that contains `||` or `//`) if you find any you must return `"Wrong username or password!"` because no one likes someone trying to cheat their way in! ## Preloaded You will be given a preloaded class called `Database` with a method `login` this takes two parameters `username` and `password`. This is a generic login function which will check the database for the user it will return either `'Successfully Logged in!'` if it passes the test or `'Wrong username or password!'` if either the password is wrong or username does not exist. ## Usage ```python database = Database() database.login('Timmy', 'password') ``
tl;dr: # Invalid Login - Bug Fixing #11 Oh NO! Timmy has moved divisions... but now he's in the field of security. Timmy, being the top coder he is, has allowed some bad code through. You must help Timmy and filter out any injected code! ## Task search the password string for any injected code  Injected code is any thing that contains `||` or `//`  If you find any ,return `"Wrong username or password!"`  ## Preloaded You will be given a preloaded class called `Database` with a method `login` this takes two parameters `username` and `password`. This is a generic login function which will check the database for the user it will return either `'Successfully Logged in!'` if it passes the test or `'Wrong username or password!'` if either the password is wrong or username does not exist. ## Usage ```python database = Database() database.login('Timmy', 'password') ``

Jzzhu has picked n apples from his big apple tree. All the apples are numbered from 1 to n. Now he wants to sell them to an apple store.  Jzzhu will pack his apples into groups and then sell them. Each group must contain two apples, and the greatest common divisor of numbers of the apples in each group must be greater than 1. Of course, each apple can be part of at most one group. Jzzhu wonders how to get the maximum possible number of groups. Can you help him  
tl;dr: You have n apples numbered from 1 to n. You have to group them. Each group must contain two apples, and the greatest common divisor of numbers of the apples in each group must be greater than 1. Each apple can be part of at most one group. Get the maximum possible number of groups. 

Given a string S. You have to return another string such that even-indexed and odd-indexed characters of S are grouped and groups are space-separated (see sample below) 
tl;dr: Given a string S, you have to return another string such that even-indexed and odd-indexed characters of S are grouped and groups are space-separated. 

Little Frane is already in tenth grade, but is still struggling with Pascal in computer class. For homework, his teacher wrote the following program into his notebook, and he needs to determine the output, given the integer $N$. readln(N); counter := 0; for i := N - 1 downto 1 do begin   counter := counter + 1;   if N mod i = 0 then break; end; writeln(counter); Write a program which solves Frane s problem. 
tl;dr: