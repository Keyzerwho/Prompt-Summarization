In Finite Encyclopedia of Integer Sequences (FEIS), all integer sequences of lengths between 1 and N (inclusive) consisting of integers between 1 and K (inclusive) are listed. Let the total number of sequences listed in FEIS be X. Among those sequences, find the (X/2)-th (rounded up to the nearest integer) lexicographically smallest one. -----Constraints-----  - 1 \leq N,K \leq 3   10^5  - N and K are integers. 
tl;dr: In FEIS, all integer sequences of lengths between 1 and N (inclusive) consisting of integers between 1 and K (inclusive) are listed. Let the total number of sequences listed in FEIS be X.  Find the (X/2)-th lexicographically smallest one. -----Constraints-----  - 1 \leq N,K \leq 3   10^5 

You are given three sequences: $a_1, a_2, \ldots, a_n$; $b_1, b_2, \ldots, b_n$; $c_1, c_2, \ldots, c_n$. For each $i$, $a_i \neq b_i$, $a_i \neq c_i$, $b_i \neq c_i$. Find a sequence $p_1, p_2, \ldots, p_n$, that satisfy the following conditions:  $p_i \in \{a_i, b_i, c_i\}$  $p_i \neq p_{(i \mod n) + 1}$. In other words, for each element, you need to choose one of the three possible values, such that no two adjacent elements (where we consider elements $i,i+1$ adjacent for $i<n$ and also elements $1$ and $n$) will have equal value. It can be proved that in the given constraints solution always exists. You don't need to minimize/maximize anything, you need to find any proper sequence. 
tl;dr: You are given three sequences: $a_1, a_2, \ldots, a_n$; $b_1, b_2, \ldots, b_n$; $c_1, c_2, \ldots, c_n$. For each $i$, $a_i \neq b_i$, $a_i \neq c_i$, $b_i \neq c_i$. Find a sequence $p_1, p_2, \ldots, p_n$, that satisfy the following conditions:  $p_i \in \{a_i, b_i, c_i\}$  $p_i \neq p_{(i \mod n) + 1}$. 

You are given two strings $s$ and $t$ both of length $n$ and both consisting of lowercase Latin letters. In one move, you can choose any length $len$ from $1$ to $n$ and perform the following operation:   Choose any contiguous substring of the string $s$ of length $len$ and reverse it;  at the same time choose any contiguous substring of the string $t$ of length $len$ and reverse it as well.  Note that during one move you reverse exactly one substring of the string $s$ and exactly one substring of the string $t$. Also note that borders of substrings you reverse in $s$ and in $t$ can be different, the only restriction is that you reverse the substrings of equal length. For example, if $len=3$ and $n=5$, you can reverse $s[1 \dots 3]$ and $t[3 \dots 5]$, $s[2 \dots 4]$ and $t[2 \dots 4]$, but not $s[1 \dots 3]$ and $t[1 \dots 2]$. Your task is to say if it is possible to make strings $s$ and $t$ equal after some (possibly, empty) sequence of moves. You have to answer $q$ independent test cases. 
tl;dr: You are given two strings s and t both of length n and both consisting of lowercase Latin letters. One move is defined as taking contiguous substring of both s and t and reversing it. You need to find if it is possible to make s and t after some sequence of moves 

Lisa works as a waitress in a restaurant. Tonight is her birthday so Lisa asked the chef to prepare his special meal for her friends. The chef s meal is made of $N$ ingredients. To prepare one serving of the meal he needs a certain amount of each ingredient. There are some ingredients already available in the kitchen and Lisa will buy the rest at the grocery store. The store has all the necessary ingredients, each coming in smaller and larger packages. Lisa has $M$ dollars and wants to spend them so that the chef can make the most servings of his meal. For example, consider the first sample data below. For $99$ dollars Lisa will buy three smaller and one larger package of the first ingredient, as well as one smaller and two larger packages of the second ingredient $(3\cdot 10 + 1 \cdot 11 + 1 \cdot 10 + 2 \cdot 24 = 99)$. The chef will then have $51$ units $(8 + 3 \cdot 10 + 1 \cdot 13)$ of the first ingredient and $60$ units $(20 + 1 \cdot 6 + 2 \cdot 17)$ of the second ingredient, enough for $5$ servings. 
tl;dr: