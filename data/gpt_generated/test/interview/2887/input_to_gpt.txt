# A History Lesson Soundex is an interesting phonetic algorithm developed nearly 100 years ago for indexing names as they are pronounced in English. The goal is for homophones to be encoded to the same representation so that they can be matched despite minor differences in spelling. Reference: https://en.wikipedia.org/wiki/Soundex # Preface I first read about Soundex over 30 years ago. At the time it seemed to me almost  like  A.I. that you could just type in somebody's name the way it sounded and there was still a pretty good chance it could match the correct person record. That was about the same year as the first "Terminator" movie so it was easy for me to put 2 and 2 together and conclude that Arnie must have had some kind of futuristic Soundex chip in his titanium skull helping him to locate ```Serah Coner```... or was it ```Sarh Connor```... or maybe ```Sayra Cunnarr```... :-) # Task In this Kata you will encode strings using a Soundex variation called "American Soundex" using the following (case insensitive) steps: * Save the first letter. Remove all occurrences of ```h``` and ```w``` except first letter. * Replace all consonants (include the first letter) with digits as follows:  * ```b```, ```f```, ```p```, ```v``` = 1  * ```c```, ```g```, ```j```, ```k```, ```q```, ```s```, ```x```, ```z``` = 2  * ```d```, ```t``` = 3  * ```l``` = 4  * ```m```, ```n``` = 5  * ```r``` = 6 * Replace all adjacent same digits with one digit. * Remove all occurrences of ```a```, ```e```, ```i```, ```o```, ```u```, ```y``` except first letter. * If first symbol is a digit replace it with letter saved on step 1. * Append 3 zeros if result contains less than 3 digits. Remove all except first letter and 3 digits after it ## Input A space separated string of one or more names. E.g. ```Sarah Connor``` ## Output Space separated string of equivalent Soundex codes (the first character of each code must be uppercase). E.g. ```S600 C560``
tl;dr: # Task Given case insensitive strings, you will encode strings using a Soundex variation called "American Soundex". # Input A space separated string of one or more names. E.g. Sarah Connor # Output Space separated string of equivalent Soundex codes, the first character of each code must be uppercase. E.g. S600 C56

This is a peculiar functioning setup. Two Tanks are separated from each other by a wall .There is a pipe in the wall which connects  both tanks  which allows flow of water between them . Due to this ,there is change in temperature of both tanks , every minute temperature of Tank with larger temperature among two decreases by one and temperature of Tank  with smaller temperature among two increases by two until equilibrium is reached , But there is a problem . The pipe can't control this flow of water if there is Non-equilibrium (inequality of temperature  on  both sides )  even after $m$ minutes and the pipe will burst after it , your task is to predict whether the pipe will burst or not . 
tl;dr: Given numbers $m$, $Tc$, $Th$.  If the difference between $Tc$ and $Th$ is not divisible by $3$, return "Yes". Else if the differnce divided by $3$ is more than $m$ return "Yes".  Else return "No". 

Ash like soup very much! So, on the Raksha Bandhan day, his sister gave him a soup maker as a gift. Soup maker in the ith hour will make volume  Vi liters of soup and pours it in a bowl. Each hour, the Volume of soup in every bowl is reduced due to evaporation. More precisely, when the temperature on a given hour is Ti, the Volume of soup in every bowl will reduce its volume by Ti. If this would reduce the volume of soup to or below zero, Bowl gets empty. All bowls are independent of each other. Note that the Volume of soup in every bowl made in an hour i already lose part of its volume at the same hour. In an extreme case, this may mean that there is no soup left in the bowl at the end of a particular hour. You are given the initial volumes of soup in bowls and the temperature on each hour. Determine the total volume of soup evaporated in each hour. Input The first line contains a single integer N (1   N   10^5)   the number of hours. The second line contains N integers V 1, V 2,  , V N (0   V i   10^9), where V i is the initial volume of soup made in an hour i. The third line contains N integers T 1, T 2,  , T N (0   T i   10^9), where T i is the temperature in an hour i. Output Output a single line with N integers, where the i-th integer represents the total volume of soup melted in an hour i. 
tl;dr: