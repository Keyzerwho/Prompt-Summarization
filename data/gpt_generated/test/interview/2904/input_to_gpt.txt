The Chef has one long loaf of bread of length 1. He wants to cut it into as many little loaves as he can. But he wants to adhere to the following rule: At any moment, the length of the longest loaf which he possesses may not be larger than the length of shortest one, times some constant factor. Every time, he is only allowed to cut exactly one loaf into two shorter ones. 
tl;dr: You are given a number of magnitude 1. You need to divide this number into as many positive parts as possible such that at any moment given a part A,  you can divide into only two parts B and C, such that B does not exceed C times some constant. 

The chef won a duet singing award at Techsurge & Mridang 2012. From that time he is obsessed with the number 2. He just started calculating the powers of two. And adding the digits of the results. But he got puzzled after a few calculations. So gave you the job to generate the solutions to 2^n and find their sum of digits. 
tl;dr: Obtain the solutions to 2^n for a given n and display their sum of digits. 

At some point or another, most computer science students have written a standard Sudoku solving program. This is yet another  put numbers in a grid  puzzle. Numbers are placed in the grid so that each outlined region contains the numbers $1$ to $n$, where $n$ is the number of squares in the region. The same number can never touch itself, not even diagonally. Incomplete Grid Solution Grid For this problem, you will write a program that takes as input an incomplete puzzle grid and outputs the puzzle solution grid. 
tl;dr: