You are given two strings $s$ and $t$ both of length $n$ and both consisting of lowercase Latin letters. In one move, you can choose any length $len$ from $1$ to $n$ and perform the following operation:   Choose any contiguous substring of the string $s$ of length $len$ and reverse it;  at the same time choose any contiguous substring of the string $t$ of length $len$ and reverse it as well.  Note that during one move you reverse exactly one substring of the string $s$ and exactly one substring of the string $t$. Also note that borders of substrings you reverse in $s$ and in $t$ can be different, the only restriction is that you reverse the substrings of equal length. For example, if $len=3$ and $n=5$, you can reverse $s[1 \dots 3]$ and $t[3 \dots 5]$, $s[2 \dots 4]$ and $t[2 \dots 4]$, but not $s[1 \dots 3]$ and $t[1 \dots 2]$. Your task is to say if it is possible to make strings $s$ and $t$ equal after some (possibly, empty) sequence of moves. You have to answer $q$ independent test cases. 
tl;dr: You are given two strings s and t both of length n and both consisting of lowercase Latin letters. One move is defined as taking contiguous substring of both s and t and reversing it. You need to find if it is possible to make s and t after some sequence of moves 

# Definition **_Strong number_** is the number that *the sum of the factorial of its digits is equal to number itself*. ## **_For example_**:  **_145_**, since  ``` 1! + 4! + 5! = 1 + 24 + 120 = 145 ``` So, **_145_** is a **_Strong number_**.  ____ # Task **_Given_** a number, **_Find if it is Strong or not_**. ____ # Warm-up (Highly recommended) # [Playing With Numbers Series](https://www.codewars.com/collections/playing-with-numbers) ___ 
tl;dr: You are given a positive number, find if it is strong or not. 

Gildong recently learned how to find the longest increasing subsequence (LIS) in $O(n\log{n})$ time for a sequence of length $n$. He wants to test himself if he can implement it correctly, but he couldn't find any online judges that would do it (even though there are actually many of them). So instead he's going to make a quiz for you about making permutations of $n$ distinct integers between $1$ and $n$, inclusive, to test his code with your output. The quiz is as follows. Gildong provides a string of length $n-1$, consisting of characters '<' and '>' only. The $i$-th (1-indexed) character is the comparison result between the $i$-th element and the $i+1$-st element of the sequence. If the $i$-th character of the string is '<', then the $i$-th element of the sequence is less than the $i+1$-st element. If the $i$-th character of the string is '>', then the $i$-th element of the sequence is greater than the $i+1$-st element. He wants you to find two possible sequences (not necessarily distinct) consisting of $n$ distinct integers between $1$ and $n$, inclusive, each satisfying the comparison results, where the length of the LIS of the first sequence is minimum possible, and the length of the LIS of the second sequence is maximum possible. 
tl;dr: Give a string of length $n-1$, consisting of characters '<' and '>' only. The $i$-th (1-indexed) character is the comparison result between the $i$-th element and the $i+1$-st element of the sequence. If the $i$-th character of the string is '<', then the $i$-th element of the sequence is less than the $i+1$-st element. If the $i$-th character of the string is '>', then the $i$-th element of the sequence is greater than the $i+1$-st element. Find two possible sequences consisting of $n$ distinct integers between $1$ and $n$, inclusive, each satisfying the comparison results, where the length of the Longest Increasing Subsequence of the first sequence is minimum possible, and the length of the Longest Increasing Subsequence of the second sequence is maximum possible. 

Gunnar and his friends like games which involve rolling dice. Gunnar has a huge collection of 6-sided, 12-sided and 20-sided dice. All the games with dice started to bore him, so he came up with a new game. He rolls an $s$-sided die $n$ times and wins if at least $k$ different numbers appear in the $n$ throws. An $s$-sided die contains $s$ distinct numbers $1, \dots , s$ on its sides. Since this is a game only for one person, Gunnar and his friends decided to make it more fun by letting other people bet on a particular game. Before you bet on a particular game, you would like to know how probable it is to throw at least $k$ different numbers in $n$ throws with an $s$-sided die. We assume that all numbers have the same probability of being thrown in each throw. 
tl;dr: