You have a total of n coins that you want to form in a staircase shape, where every k-th row must have exactly k coins.   Given n, find the total number of full staircase rows that can be formed. n is a non-negative integer and fits within the range of a 32-bit signed integer. 
tl;dr: You are given a total of n coins to form staircase rows where every k-th row must have exactly k coins.   The output should be the total number of such rows formed. n>=0 and has the range of a 32-bit signed integer. 

*** Nova polynomial multiply***  This kata is from a series on polynomial handling. ( [#1](http://www.codewars.com/kata/nova-polynomial-1-add-1)   [#2](http://www.codewars.com/kata/570eb07e127ad107270005fe)  [#3](http://www.codewars.com/kata/5714041e8807940ff3001140 )   [#4](http://www.codewars.com/kata/571a2e2df24bdfd4e20001f5)) Consider a polynomial in a list where each element in the list element corresponds to the factors. The factor order is the position in the list. The first element is the zero order factor (the constant). p = [a0, a1, a2, a3] signifies the polynomial a0 + a1x + a2x^2 + a3*x^3 In this kata multiply two polynomials: ```python  poly_multiply([1, 2], [1] ) = [1, 2] poly_multiply([2, 4], [4, 5] ) = [8, 26, 20] ``` The first kata of this series is preloaded in the code and can be used: [poly_add](http://www.codewars.com/kata/nova-polynomial-1-add-1
tl;dr: Consider a polynomial in a list where each element in the list element corresponds to the factors. The factor order is the position in the list. The first element is the zero order factor. 

Mike and Joe are fratboys that love beer and games that involve drinking. They play the following game: Mike chugs one beer, then Joe chugs 2 beers, then Mike chugs 3 beers, then Joe chugs 4 beers, and so on. Once someone can't drink what he is supposed to drink, he loses. Mike can chug at most A beers in total (otherwise he would pass out), while Joe can chug at most B beers in total. Who will win the game   Write the function ```game(A,B)``` that returns the winner, ```"Mike"``` or ```"Joe"``` accordingly, for any given integer values of A and B. 
tl;dr: Mike and Joe take turns chugging beers. Write the function game(A,B) that returns the winner, "Mike" or "Joe" accordingly. A is the total beers Mike can chug, while B is the total beers Joe can chug. If either A or B is smaller than 1, return the string  "Non-drinkers can't play"

Iskander the Baker is decorating a huge cake, covering the rectangular surface of the cake with frosting. For this purpose, he mixes frosting sugar with lemon juice and food coloring, in order to produce three kinds of frosting: yellow, pink, and white. These colors are identified by the numbers $0$ for yellow, $1$ for pink, and $2$ for white. To obtain a nice pattern, he partitions the cake surface into vertical stripes of width $A_1, A_2, \dots , A_ n$ centimeters, and horizontal stripes of height $B_1, B_2, \dots , B_ n$ centimeters, for some positive integer $n$. These stripes split the cake surface into $n\times n$ rectangles. The intersection of vertical stripe $i$ and horizontal stripe $j$ has color number $(i+j) \bmod 3$ for all $1 \leq i,j \leq n$. To prepare the frosting, Iskander wants to know the total surface in square centimeters to be colored for each of the three colors, and asks for your help.Input The input consists of the following integers:  - on the first line: the integer $n$,  - on the second line: the values of $A_1,\dots ,A_ n$, $n$ integers separated with single spaces,  - on the third line: the values of $B_1,\dots ,B_ n$, $n$ integers separated with single spaces.Limits The input satisfies $3\leq n \leq 100000$ and $1 \leq A_1,\ldots ,A_ n,B_1,\ldots ,B_ n \leq 10000$.Output The output should consist of three integers separated with single spaces, representing the total area for each color $0$, $1$, and $2$. -----
tl;dr: