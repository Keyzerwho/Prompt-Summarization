An element in an array is dominant if it is greater than all elements to its right. You will be given an array and your task will be to return a list of all dominant elements. For example: ```Haskell solve([1,21,4,7,5]) = [21,7,5] because 21, 7 and 5 are greater than elments to their right.  solve([5,4,3,2,1]) = [5,4,3,2,1] Notice that the last element is always included. ``` More examples in the test cases. Good luck
tl;dr: An element in an array is dominant if it is greater than all elements to its right. You will be given an array and your task will be to return a list of all dominant elements.  For example: 

Stuart is obsessed to numbers. He like all type of numbers in fact he is having a great collection of numbers in his room. His collection includes N different large numbers. But today he is searching for a number which is having maximum frequency of digit X. Numbers are large so he can t do the task on his own. Help him to find a number having maximum frequency of digit X. 
tl;dr: Write a code to search for a number which is having maximum frequency of digit X in given different numbers.  

Your are given a string $S$ containing only lowercase letter and a array of character $arr$. Find whether the given string only contains characters from the given character array.  Print $1$ if the string contains characters from the given array only else print $0$. 
tl;dr: You are given an array to check whether the characters of given string S belongs to it or not. Print 1 if it contains else print 0. 

You are playing a game in which a group of players take turns saying animal names. The animal name you say when it is your turn must start with the same letter as the previously said animal ends with and it must not have been said previously in this round of the game. If there is no valid name or you cannot come up with one you are eliminated.  Given the last animal name said before your turn and a list of all names not yet used, can you make it through this turn  If so, can you make sure to eliminate the next player  
tl;dr: