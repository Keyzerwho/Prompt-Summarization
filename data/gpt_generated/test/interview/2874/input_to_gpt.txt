Andrew and Eugene are playing a game. Initially, Andrew has string s, consisting of digits. Eugene sends Andrew multiple queries of type "d_{i}   t_{i}", that means "replace all digits d_{i} in string s with substrings equal to t_{i}". For example, if s = 123123, then query "2   00" transforms s to 10031003, and query "3   " meaning "replace 3 by an empty string" transforms it to s = 1212. After all the queries Eugene asks Andrew to find the remainder after division of number with decimal representation equal to s by 1000000007 (10^9 + 7). When you represent s as a decimal number, please ignore the leading zeroes; also if s is an empty string, then it's assumed that the number equals to zero. Andrew got tired of processing Eugene's requests manually and he asked you to write a program for that. Help him! 
tl;dr: Andrew and Eugene are playing a game. Initially, Andrew has string s, consisting of digits. Eugene sends Andrew multiple queries of type "d_{i}   t_{i}", that means "replace all digits d_{i} in string s with substrings equal to t_{i}". After all the queries Eugene asks Andrew to find the remainder after division of number with decimal representation equal to s by 1000000007. When you represent s as a decimal number, ignore the leading zeroes. 

You are given a sequence a consisting of n integers. Find the maximum possible value of $a_{i} \operatorname{mod} a_{j}$ (integer remainder of a_{i} divided by a_{j}), where 1   i, j   n and a_{i}   a_{j}. 
tl;dr: You are given a sequence a consisting of n integers. Find the maximum possible value of integer remainder of a_{i} divided by a_{j}, where 1   i, j   n and a_{i}   a_{j}. 

It s Christmas time and JW s $1$-dimensional shop is selling Christmas trees. However, the demand for trees is much higher than the number of trees available. Hence, JW has come up with a special strategy to help decide who gets what tree: a game of Musical Trees! Musical Trees is much like the game Musical Chairs. There s a set of trees lined up in a straight ($1$-dimensional) line. At first, everyone starts by wandering around the store while the music is playing. When the music stops, everyone runs to the nearest tree (the tree the smallest distance away) and whoever reaches a tree first gets to the claim that tree. Since people are lazy, they will only ever try to run to the closest tree to them, and hence multiple people may try to get the same tree. Note this means some trees may be unclaimed if they are closest to no one. Also, like in Musical Chairs, no tree can be claimed by more than one person. The music has just stopped in Musical Trees and as everyone is running to the closest tree, you want to figure out the number of people who won t get any tree. 
tl;dr: