We have a string of letters 'a' and 'b'. We want to perform some operations on it. On each step we choose one of substrings "ab" in the string and replace it with the string "bba". If we have no "ab" as a substring, our job is done. Print the minimum number of steps we should perform to make our job done modulo 10^9 + 7. The string "ab" appears as a substring if there is a letter 'b' right after the letter 'a' somewhere in the string. 
tl;dr: We have a string of letters 'a' and 'b'. We want to perform some operations on it. On each step we choose one of substrings "ab" in the string and replace it with the string "bba". If we have no "ab" as a substring, our job is done. Print the minimum number of steps we should perform to make our job done modulo 10^9 + 7. 

# Task  CodeBots decided to make a gift for CodeMaster's birthday. They got a pack of candies of various sizes from the store, but instead of giving the whole pack they are trying to make the biggest possible candy from them. On each turn it is possible:    ```  to pick any two candies of the same size and merge  them into a candy which will be two times bigger;  to pick a single candy of an even size and split it   into two equal candies half of this size each.``` What is the size of the biggest candy they can make as a gift  # 
tl;dr: # Task  Given a pack of candies of various sizes from the storetry to make the biggest possible candy from them. On each turn it is possible:    ```  to pick any two candies of the same size and merge  them into a candy which will be two times bigger;  to pick a single candy of an even size and split it   into two equal candies half of this size each.``` # 

In geometry, ellipses are defined by two focal points $f_1, f_2$ and a length $D$. The ellipse consists of all points $p$ such that $\mathop {\mathrm{distance}}(f_1, p) + \mathop {\mathrm{distance}}(f_2, p) = D$. When one normally thinks of ellipses, it is in the context of the Euclidean 2D plane, with the Euclidean distance as a distance measure. This problem explores a different kind of ellipse. The space we will work in is the space of words of length $n$ using an alphabet of $q$ different symbols, often denoted as $F_ q^n$. As you can probably see, for given values of $q$ and $n$, there are $q^n$ different words (points) in the space $F_ q^n$. For a distance measure, we use the Hamming distance. The Hamming distance between two words $x, y \in F_ q^n$ is simply the number of positions where the symbols that make up the words $x$ and $y$ differ. For example, the Hamming distance between words 01201 and 21210 is 3 because there are 3 positions where the words have different symbols. The Hamming distance between any two words in $F_ q^n$ will always be an integer between $0$ and $n$, inclusive. Within the space $F_ q^n$, we now define the Hamming ellipse as the set of all points $p$ such that $\mathop {\mathrm{hammingdistance}}(f_1, p) + \mathop {\mathrm{hammingdistance}}(f_2, p) = D$. Given values $q$ and $n$, focal points $f_1$ and $f_2$ and distance $D$, we ask you to determine the number of points $p \in F_ q^n$ that lie on this Hamming ellipse. 
tl;dr: