In this problem the input will consist of a number of lines of English text consisting of the letters of the English alphabet, the punctuation marks ' (apostrophe), . (full stop), , (comma), ; (semicolon), :(colon) and white space characters (blank, newline). Your task is print the words in the text in reverse order without any punctuation marks. For example consider the following candidate for the input text: $ $ This is a sample piece of text to illustrate this  problem.  If you are smart you will solve this right. $ $ The corresponding output would read as: $ $ right this solve will you smart are you If problem this illustrate to text of piece sample a is This $ $ That is, the lines are printed in reverse order and in each line the words are printed in reverse order. 
tl;dr: Print the words in the line in reveres order of a given line without any punctuation marks. 

Han Solo and Chewbacca start a space journey to planet Naboo on the Millennium Falcon. During the journey they land at a mysterious planet with high gravity where they find n diamond stones scattered all around. All the stones are of same weight. Each stone has a value according to its purity which can be detected by a special device. They choose to divide the stones fairly among themselves in two halves so that they carry almost equal weights such that the difference between the value of two halves is as small as possible. If n is even, then sizes of two halves must be strictly n/2 and if n is odd, then size of one half must be (n-1)/2 and size of the other half must be (n+1)/2. Given the value of stones, help them to divide the stones among themselves. 
tl;dr: Given a set of n numbers, divide them into subsets of sizes at most different by 1, such that difference in the sum of numbers in each subset is minimum. 

Polycarp analyzes the prices of the new berPhone. At his disposal are the prices for $n$ last days: $a_1, a_2, \dots, a_n$, where $a_i$ is the price of berPhone on the day $i$. Polycarp considers the price on the day $i$ to be bad if later (that is, a day with a greater number) berPhone was sold at a lower price. For example, if $n=6$ and $a=[3, 9, 4, 6, 7, 5]$, then the number of days with a bad price is $3$   these are days $2$ ($a_2=9$), $4$ ($a_4=6$) and $5$ ($a_5=7$). Print the number of days with a bad price. You have to answer $t$ independent data sets. 
tl;dr: you are given a list of of integers for every index print the index if there is a smaller value after that index 

A coin system $S$ is a finite (nonempty) set of distinct positive integers corresponding to coin values, also called denominations, in a real or imagined monetary system. For example, the coin system in common use in Canada is $\{ 1,5,10,25,100,200\} $, where $1$ corresponds to a $1$-cent coin and $200$ corresponds to a $200$-cent ($2$-dollar) coin. For any coin system $S$, we assume that there is an unlimited supply of coins of each denomination, and we also assume that $S$ contains $1$, since this guarantees that any positive integer can be written as a sum of (possibly repeated) values in $S$. Cashiers all over the world face (and solve) the following problem: For a given coin system and a positive integer amount owed to a customer, what is the smallest number of coins required to dispense exactly that amount  For example, suppose a cashier in Canada owes a customer $83$ cents. One possible solution is $25+25+10+10+10+1+1+1$, i.e., $8$ coins, but this is not optimal, since the cashier could instead dispense $25+25+25+5+1+1+1$, i.e., $7$ coins (which is optimal in this case). Fortunately, the Canadian coin system has the nice property that the greedy algorithm always yields an optimal solution, as do the coin systems used in most countries. The greedy algorithm involves repeatedly choosing a coin of the largest denomination that is less than or equal to the amount still owed, until the amount owed reaches zero. A coin system for which the greedy algorithm is always optimal is called canonical. Your challenge is this: Given a coin system $S = \{ c_1, c_2, \ldots , c_ n\} $, determine whether $S$ is canonical or non-canonical. Note that if $S$ is non-canonical then there exists at least one counterexample, i.e., a positive integer $x$ such that the minimum number of coins required to dispense exactly $x$ is less than the number of coins used by the greedy algorithm. An example of a non-canonical coin system is $\{ 1,3,4\} $, for which $6$ is a counterexample, since the greedy algorithm yields $4+1+1$ ($3$ coins), but an optimal solution is $3+3$ ($2$ coins). A useful fact (due to Dexter Kozen and Shmuel Zaks) is that if $S$ is non-canonical, then the smallest counterexample is less than the sum of the two largest denominations. 
tl;dr: