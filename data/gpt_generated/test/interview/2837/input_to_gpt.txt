In this Kata you need to write the method SharedBits that returns true if 2 integers share at least two '1' bits. For simplicity assume that all numbers are positive For example int seven = 7;    //0111 int ten = 10;     //1010 int fifteen = 15; //1111 SharedBits(seven, ten);     //false SharedBits(seven, fifteen); //true SharedBits(ten, fifteen);   //true - seven and ten share only a single '1' (at index 3) - seven and fifteen share 3 bits (at indexes 1, 2, and 3) - ten and fifteen  share 2 bits (at indexes 0 and 2) 
tl;dr: You need to write the method that returns true if 2 integers share at least two '1' bits. Assume that all numbers are positive For example int seven = 7;    //0111 int ten = 10;     //1010 int fifteen = 15; //1111 SharedBits(seven, ten);     //false SharedBits(seven, fifteen); //true SharedBits(ten, fifteen);   //true - seven and ten share only a single '1' (at index 3) - seven and fifteen share 3 bits (at indexes 1, 2, and 3) - ten and fifteen  share 2 bits (at indexes 0 and 2

Is every value in the array an array  This should only test the second array dimension of the array. The values of the nested arrays don't have to be arrays.  
tl;dr: Given an array, check whether every value in the array is an array. This should only test the second array dimension of the array. The values of the nested arrays don't have to be arrays.  

You are given a sequence a_1, a_2, ..., a_{n} consisting of different integers. It is required to split this sequence into the maximum number of subsequences such that after sorting integers in each of them in increasing order, the total sequence also will be sorted in increasing order. Sorting integers in a subsequence is a process such that the numbers included in a subsequence are ordered in increasing order, and the numbers which are not included in a subsequence don't change their places. Every element of the sequence must appear in exactly one subsequence. 
tl;dr: You are given a sequence a_1, a_2, ..., a_{n} consisting of different integers. It is required to split this sequence into the maximum number of subsequences such that after sorting integers in each of them in increasing order, the total sequence also will be sorted in increasing order. The numbers included in a subsequence are ordered in increasing order, and the numbers which are not included in a subsequence don't change their places. Every element of the sequence must appear in exactly one subsequence. 

Mirko has been a very good boy, so he got exactly what he wanted for his birthday, a  Young physicist  kit! In the kit, there are $N$ types of resistors, connecting wires and an ohmmeter. If a resistor is of type $i$, it provides a resistance of precisely $R_ i$ ohms. As we all know, resistors can be connected in two different ways, in series and parallel. Also, we know that the complete circuit of resistors can be replaced with one resistor of the resistance equal to the equivalent resistance of the circuit. When the circuit is series, it is written as (R1-R2-R3- -RK) and the following formula holds:\begin{equation*} R_{\mathrm{eq}} = R_1 + R_2 + R_3 + \cdots + R_ K \quad . \end{equation*} When the circuit is parallel, it is written as (R1|R2|R3| |RK) and the following formula holds:\begin{equation*} R_{\mathrm{eq}} = \frac{1}{1/R_1 + 1/R_2 + 1/R_3 + \cdots + 1/R_ K} \quad . \end{equation*} Mirko was excited to bring his new toy to school, where he showed it to all his friends. Unfortunately for him, the teacher also noticed the toy. She quickly connected a circuit and is now asking Mirko to tell her the equivalent resistance of the circuit. Help Mirko and answer the teacher s question! 
tl;dr: