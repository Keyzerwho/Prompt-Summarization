Based on the well known ['Eight Queens' problem](https://en.wikipedia.org/wiki/Eight_queens_puzzle). #### Summary Your challenge is to place N queens on a chess board such that none of the queens are attacking each other. #### Details A standard 8x8 chess board has its rows (aka ranks) labelled 1-8 from bottom to top, and its columns (aka files) labelled a-h from left to right. Any square can be denoted by a combination of letter and number. For example, the top left square is a8. A queen may attack any square on its rank or file. It may also attack any square diagonally. In this kata, chessboard may have any size from 1 to 10. Columns are marked with letters a-j, and rows with single digit from 1 to 0 (first row is marked with 1, ninth row is marked with 9, and tenth row is marked with 0, so `a1` denotes bottom left field of the chessboard, and `j0` - top right field on a 10x10 board). You will be given the position of one queen on the board (e.g. `'c3'`). Your challenge is to compute the position of the remaining queens and return the full solution (including the original input) as a comma-separated string (e.g. `'d8,a7,e6,h5,b4,g3,c2,f1'`). Fields do not have to be sorted in any particular way, but you have to adhere to above format (lowercase letters, no spaces, fields separated with commas). Note that there may be multiple valid solutions for a given starting position. Your function only needs to produce (any) one of these. All given starting positions produce valid solutions. If you wish to write more tests, the validity of a solution may be checked using preloaded function (see sample tests). 
tl;dr: You are given a chessboard of any size from 1 to 10, where columns are marked with letters a-j and rows with 1-0 (tenth row is marked with 0). The input given is the position of one queen on the chess board. Your need to return remaining queens positions such that none of the queens are attacking each other

Given are integer sequence of length N, A = (A_1, A_2, \cdots, A_N), and an integer K. For each X such that 1 \le X \le K, find the following value: \left(\displaystyle \sum_{L=1}^{N-1} \sum_{R=L+1}^{N} (A_L+A_R)^X\right) \bmod 998244353 -----Constraints-----  - All values in input are integers.  -  2 \le N \le 2 \times 10^5  -  1 \le K \le 300   -  1 \le A_i \le 10^8  
tl;dr: Given are integer sequence of length N, A = (A_1, A_2, \cdots, A_N), and an integer K. For each X such that 1 \le X \le K, find the following value: \left(\displaystyle \sum_{L=1}^{N-1} \sum_{R=L+1}^{N} (A_L+A_R)^X\right) \bmod 998244353 -----Constraints-----  - All values in input are integers.  -  2 \le N \le 2 \times 10^5  -  1 \le K \le 300   -  1 \le A_i \le 10^8  

A new student dorm has been opened! It consists of $M$ buildings, labeled with integers from $1$ to $M$. The dorm is initially empty, but soon $N$ students will be moving in at a rate of exactly one student per day. Each time a new student moves in a building, a big party is being held inside that building. The noise of the party is equal to the number of students located inside the building. The dorm management is not particularly fond of noise, so they will occasionally empty a certain building to keep the parties at a reasonable noise level. They do this by moving all its residents to a completely different student dorm. The management can decide to do this after any day, but they realized that it doesn t pay off to do it more than $K$ times. Help the management! Knowing which buildings are being moved in by students, determine the minimal possible total noise level (the sum of noise levels of all $N$ parties) that can be achieved with emptying some of the buildings at most $K$ times. 
tl;dr: