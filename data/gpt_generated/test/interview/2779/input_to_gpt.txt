Solve a given equation and return the value of x in the form of string "x=#value". The equation contains only '+', '-' operation, the variable x and its coefficient. If there is no solution for the equation, return "No solution". If there are infinite solutions for the equation, return "Infinite solutions". If there is exactly one solution for the equation, we ensure that the value of x is an integer. 
tl;dr: Solve a given equation and return the value of x in the form of string "x=#value". For the equation, if there is no solution, return "No solution" or if infinite solutions, return "Infinite solutions" or if exactly one solution for the equation, ensure that the value of x is an integer. 

Stuart is obsessed to numbers. He like all type of numbers in fact he is having a great collection of numbers in his room. His collection includes N different large numbers. But today he is searching for a number which is having maximum frequency of digit X. Numbers are large so he can t do the task on his own. Help him to find a number having maximum frequency of digit X. 
tl;dr: Write a code to search for a number which is having maximum frequency of digit X in given different numbers.  

The statement of this problem is the same as the statement of problem C2. The only difference is that, in problem C1, $n$ is always even, and in C2, $n$ is always odd. You are given a regular polygon with $2 \cdot n$ vertices (it's convex and has equal sides and equal angles) and all its sides have length $1$. Let's name it as $2n$-gon. Your task is to find the square of the minimum size such that you can embed $2n$-gon in the square. Embedding $2n$-gon in the square means that you need to place $2n$-gon in the square in such way that each point which lies inside or on a border of $2n$-gon should also lie inside or on a border of the square. You can rotate $2n$-gon and/or the square. 
tl;dr: You are given a regular polygon with $2 \cdot n$ vertices (it's convex and has equal sides and equal angles) and all its sides have length $1$. Let's name it as $2n$-gon. Your task is to find the square of the minimum size such that you can embed $2n$-gon in the square. Embedding $2n$-gon in the square means that you need to place $2n$-gon in the square in such way that each point which lies inside or on a border of $2n$-gon should also lie inside or on a border of the square. You can rotate $2n$-gon and/or the square. 

The First Universal Bank of Denview has just been robbed! You want to catch the robbers before they leave the state. The state of Calirado can be represented by a rectangular $n$-by-$m$ grid of characters, with the character in each grid cell denoting a terrain type. The robbers begin within the cell marked  B , indicating the Bank of Denview. They will then travel across the state by moving from grid cell to grid cell in the four cardinal directions (left, right, up, down). (Note that the robbers pass only through grid edges, and not corners.) If the robbers manage to leave the state (by crossing any boundary edge of the grid) they will go into hiding, never to be seen again. You must stop this. To catch the robbers, you can set up barricades. Barricades are placed inside a grid cell, and prevent the robbers from traveling into the cell (from any direction). Each grid square consists of a different type of terrain, with different cost for placing a barricade. You cannot place a barricade on the bank ( B ) or on any cell containing a dot ( . ), though the robbers can travel freely through these cells. Every other cell will contain a lowercase English letter, indicating a terrain type. Find the cheapest way to prevent the robbers from escaping Calirado. 
tl;dr: