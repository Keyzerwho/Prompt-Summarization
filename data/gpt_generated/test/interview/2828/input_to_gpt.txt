Saket loves to play with strings. One day , while he was having fun with Cyclic Permutations of available strings to him, he observed that despite being scarce in numbers Vowels were really clingy.Being clingy means for almost every given string, there was a Cyclic Permutation in which atleast two vowels were together. So he decided to check this property for all the available strings to him. As the number of strings can be very large, help Saket determine whether the given string is clingy or not. 
tl;dr: Given a string return "Yes" if there are two vowels adjacent in it (first and last letter are adjacent), "No" otherwise. 

Haiku is a short form of Japanese poetry. A Haiku consists of three phrases with 5, 7 and 5 syllables, in this order. Iroha is looking for X,Y,Z-Haiku (defined below) in integer sequences. Consider all integer sequences of length N whose elements are between 1 and 10, inclusive. Out of those 10^N sequences, how many contain an X,Y,Z-Haiku  Here, an integer sequence a_0, a_1, ..., a_{N-1} is said to contain an X,Y,Z-Haiku if and only if there exist four indices x, y, z, w (0   x < y < z < w   N) such that all of the following are satisfied:  - a_x + a_{x+1} + ... + a_{y-1} = X  - a_y + a_{y+1} + ... + a_{z-1} = Y  - a_z + a_{z+1} + ... + a_{w-1} = Z Since the answer can be extremely large, print the number modulo 10^9+7. -----Constraints-----  - 3   N   40  - 1   X   5  - 1   Y   7  - 1   Z   5 
tl;dr: Consider all integer sequences of length N whose elements are between 1 and 10, inclusive. Out of those 10^N sequences, how many contain an X,Y,Z-Haiku  Print the answer modulo 10^9+7. -----Constraints-----  - 3   N   40  - 1   X   5  - 1   Y   7  - 1   Z   5 

Mirko has an array of $N$ different words that he wants to encrypt using a substitution cypher. We encrypt the text using a substitution cypher by first choosing a key   a permutation of the English alphabet. Then we replace all occurrences of letter  a  with the first letter of the key, all occurrences of letter  b  with the second letter of the key, and so on until letter  z . Besides the words, Mirko has an array $A$ consisting of numbers from $1$ to $N$ given in a certain order (in other words, array $A$ is a permutation of numbers from $1$ to $N$). Mirko wants to pick a key such that the array of words after encrypting and lexicographic sorting corresponds to array $A$. More precisely, he wants the word initially located at $A_ i$ to be at location $i$ after encryption and sorting. Let s recall that the lexicographic word order is the order in which the words appear in the dictionary. If we are comparing two words, going from left to right, we search for the first position in both words where the letters differ and, based on that, we determine which word is lexicographically smaller. If word $X$ is the beginning of the word $Y$, then word $X$ is lexicographically smaller than word $Y$. Mirko is currently not in the mood for encrypting, so he kindly asks you to do it for him. 
tl;dr: