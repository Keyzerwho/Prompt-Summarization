Write a function that checks if all the letters in the second string are present in the first one at least once, regardless of how many times they appear: ``` ["ab", "aaa"]    =>  true ["trances", "nectar"]    =>  true ["compadres", "DRAPES"]  =>  true ["parses", "parsecs"]    =>  false ``` Function should not be case sensitive, as indicated in example #2. 
tl;dr: Write a function that checks if all the letters in the second string are present in the first one at least once, regardless of how many times they appear. Function should not be case sensitive. 

You are given two binary strings $a$ and $b$ of the same length. You can perform the following two operations on the string $a$: Swap any two bits at indices $i$ and $j$ respectively ($1 \le i, j \le n$), the cost of this operation is $|i - j|$, that is, the absolute difference between $i$ and $j$.  Select any arbitrary index $i$ ($1 \le i \le n$) and flip (change $0$ to $1$ or $1$ to $0$) the bit at this index. The cost of this operation is $1$.  Find the minimum cost to make the string $a$ equal to $b$. It is not allowed to modify string $b$. 
tl;dr: You are given two binary strings $a$ and $b$ of the same length. You can perform the following two operations on the string $a$: Swap any two bits at indices $i$ and $j$ respectively ($1 \le i, j \le n$), the cost of this operation is $|i - j|$. Select any arbitrary index $i$ ($1 \le i \le n$) and flip the bit at this index. The cost of this operation is $1$.  Find the minimum cost to make the string $a$ equal to $b$. It is not allowed to modify string $b$. 

# Scenario  *You're saying good-bye your best friend* , **_See you next happy year_** .  **_Happy Year_** *is the year with only distinct digits* , (e.g) **_2018_** ___ # Task **_Given_** a year, **_Find_** **_The next happy year_** or **_The closest year You'll see your best friend_**      ![!alt](https://i.imgur.com/mdX8dJP.png) ![!alt](https://i.imgur.com/mdX8dJP.png) ___ 
tl;dr: Given a year, find the next happy year or the closest year you'll see your best friend. Input Year with in range 1000     y     9000. 

The evil emperor Cactus has in his possession the Magic Keg and has flooded the Enchanted Forest! The Painter and the three little hedgehogs now have to return to the Beaver s den where they will be safe from the water as quickly as possible! The map of the Enchanted Forest consists of R rows and C columns. Empty fields are represented by  .  characters, flooded fields by  *  and rocks by  X . Additionally, the Beaver s den is represented by  D  and the Painter and the three little hedgehogs are shown as  S . Every minute the Painter and the three little hedgehogs can move to one of the four neighbouring fields (up, down, left or right). Every minute the flood expands as well so that all empty fields that have at least one common side with a flooded field become flooded as well. Neither water nor the Painter and the three little hedgehogs can pass through rocks. Naturally, the Painter and the three little hedgehogs cannot pass through flooded fields, and water cannot flood the Beaver s den. Write a program that will, given a map of the Enchanted Forest, output the shortest time needed for the Painter and the three little hedgehogs to safely reach the Beaver s den. 
tl;dr: