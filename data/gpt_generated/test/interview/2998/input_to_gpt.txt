Once N boys and M girls attended a party. You are given a matrix A of N rows and M columns where Aij is 1 if the i-th boy likes the j-th girl, otherwise it will be 0. Note that it is not necessary that if a boy x likes girl y, then girl y should like boy x. You know that if there are two different boys x and y, who both like girl z, then there will be a collision. Can you calculate the number of different collisions at this party  Note that order of boys in the collision doesn't matter. 
tl;dr: Calculate the number of different collisions if a matrix N x M of N boys and M girls are given where Aij is 1 if the i-th boy likes the j-th girl, otherwise it will be 0 and collison occurs when two boys like the same girl.  

You are given a directed graph of $n$ vertices and $m$ edges. Vertices are numbered from $1$ to $n$. There is a token in vertex $1$. The following actions are allowed:   Token movement. To move the token from vertex $u$ to vertex $v$ if there is an edge $u \to v$ in the graph. This action takes $1$ second.  Graph transposition. To transpose all the edges in the graph: replace each edge $u \to v$ by an edge $v \to u$. This action takes increasingly more time: $k$-th transposition takes $2^{k-1}$ seconds, i.e. the first transposition takes $1$ second, the second one takes $2$ seconds, the third one takes $4$ seconds, and so on.  The goal is to move the token from vertex $1$ to vertex $n$ in the shortest possible time. Print this time modulo $998\,244\,353$. 
tl;dr: You are given a directed graph of $n$ vertices and $m$ edges. Vertices are numbered from $1$ to $n$. There is a token in vertex $1$. The following actions are allowed: Token movement. To move the token from vertex $u$ to vertex $v$ if there is an edge $u \to v$ in the graph. This action takes $1$ second. To transpose all the edges in the graph: replace each edge $u \to v$ by an edge $v \to u$. This action takes increasingly more time: $k$-th transposition takes $2^{k-1}$ seconds. The goal is to move the token from vertex $1$ to vertex $n$ in the shortest possible time. Print this time modulo $998\,244\,353$. 

The current programming club president, Norbit, gives speeches at the weekly club meetings. Casual viewers are underwhelmed with the quality of Norbit s elocution. Specifically, Norbit often hesitates during his speeches with interjections like  umm.  You, however, are no casual viewer you are a computer scientist! You have noticed strange patterns in Norbit s speech. Norbit s interjections, when arranged together, form a binary code! By substituting $1$ s and $0$ s for u s and m s, respectively, you produce 7-bit binary ASCII codes that spell out secret messages. For example, the letter  a  has an ASCII code of $97$, which translates to a binary value of $1100001$ and an umm code of  uummmmu . An umm code can be split up in the speech. For example, an encoding of  a  could be stretched across three utterances:  uum ,  mmm ,  u  (possibly with other non-umm code words occurring between them). Now that you have discovered Norbit s secret, you go back through transcripts of his previous speeches to decode his cleverly concealed messages. 
tl;dr: