# Task A cake is sliced with `n` straight lines. Your task is to calculate the maximum number of pieces the cake can have. # 
tl;dr: A cake is sliced with n straight lines. Your task is to calculate the maximum number of pieces the cake can have. # 

You are given a sequence a = \{a_1, ..., a_N\} with all zeros, and a sequence b = \{b_1, ..., b_N\} consisting of 0 and 1. The length of both is N. You can perform Q kinds of operations. The i-th operation is as follows:  - Replace each of a_{l_i}, a_{l_i + 1}, ..., a_{r_i} with 1. Minimize the hamming distance between a and b, that is, the number of i such that a_i \neq b_i, by performing some of the Q operations. -----Constraints-----  - 1 \leq N \leq 200,000  - b consists of 0 and 1.  - 1 \leq Q \leq 200,000  - 1 \leq l_i \leq r_i \leq N  - If i \neq j, either l_i \neq l_j or r_i \neq r_j. 
tl;dr: You are given a sequence a = \{a_1, ..., a_N\} with all zeros, and a sequence b = \{b_1, ..., b_N\} consisting of 0 and 1. The length of both is N. You can perform Q kinds of operations. The i-th operation is as follows:  - Replace each of a_{l_i}, a_{l_i + 1}, ..., a_{r_i} with 1. Minimize the hamming distance between a and b. -----Constraints-----  - 1 \leq N \leq 200,000  - b consists of 0 and 1.  - 1 \leq Q \leq 200,000  - 1 \leq l_i \leq r_i \leq N  - If i \neq j, either l_i \neq l_j or r_i \neq r_j. 

Chef has an array of N natural numbers most of them are repeated. Cheffina challenges chef to find all numbers(in ascending order) whose frequency is strictly more than K. 
tl;dr: You are given an array of N natural numbers. find all numbers(in ascending order) whose frequency is strictly more than K. 

100 years have passed since the last victory of the man versus computer in Go. Technologies made a huge step forward and robots conquered the Earth! It's time for the final fight between human and robot that will decide the faith of the planet. The following game was chosen for the fights: initially there is a polynomial P(x) = a_{n}x^{n} + a_{n} - 1x^{n} - 1 + ... + a_1x + a_0,  with yet undefined coefficients and the integer k. Players alternate their turns. At each turn, a player pick some index j, such that coefficient a_{j} that stay near x^{j} is not determined yet and sets it to any value (integer or real, positive or negative, 0 is also allowed). Computer moves first. The human will be declared the winner if and only if the resulting polynomial will be divisible by Q(x) = x - k. Polynomial P(x) is said to be divisible by polynomial Q(x) if there exists a representation P(x) = B(x)Q(x), where B(x) is also some polynomial. Some moves have been made already and now you wonder, is it true that human can guarantee the victory if he plays optimally  
tl;dr: