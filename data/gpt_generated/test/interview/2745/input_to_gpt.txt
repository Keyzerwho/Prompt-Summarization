For "x", determine how many positive integers less than or equal to "x" are odd but not prime. Assume "x" is an integer between 1 and 10000. 
tl;dr: Given a number, determine how many positive integers less than or equal to the number are odd but not prime. Assume it is an integer between 1 and 10000. 

Create a function that takes a string and returns that string with the first half lowercased and the last half uppercased. eg: foobar == fooBAR If it is an odd number then 'round' it up to find which letters to uppercase. See example below.     sillycase("brian")       //         --^-- midpoint       //         bri    first half (lower-cased)       //            AN second half (upper-cased
tl;dr: Create a function that takes a string and returns that string with the first half lowercased and the last half uppercased. If it is an odd number then 'round' it up to find which letters to uppercase.  

Let's say take 2 strings, A and B, and define the similarity of the strings to be the length of the longest prefix common to both strings. For example, the similarity of strings `abc` and `abd` is 2, while the similarity of strings `aaa` and `aaab` is 3. write a function that calculates the sum of similarities of a string S with each of it's **suffixes**. ```python string_suffix('ababaa') => returns 11 string_suffix('abc') => returns 3 ``` Explanation: In the first case, the suffixes of the string are `ababaa`, `babaa`, `abaa`, `baa`, `aa` and `a`. The similarities of each of these strings with the string `ababaa` are 6,0,3,0,1,1 respectively. Thus the answer is 6 + 0 + 3 + 0 + 1 + 1 = 11. For the second case, the answer is simply 3 + 0 + 0 = 3. Note : Each string will have at least one character - no need to check for empty strings :
tl;dr: Write a function that calculates the sum of similarities of a string with each of its suffixes. 

You are given a string, s, and a list of words, words, that are all of the same length. Find all starting indices of substring(s) in s that is a concatenation of each word in words exactly once and without any intervening characters. 
tl;dr: