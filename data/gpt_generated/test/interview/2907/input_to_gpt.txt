Sasha is taking part in a programming competition. In one of the problems she should check if some rooted trees are isomorphic or not. She has never seen this problem before, but, being an experienced participant, she guessed that she should match trees to some sequences and then compare these sequences instead of trees. Sasha wants to match each tree with a sequence a_0, a_1, ..., a_{h}, where h is the height of the tree, and a_{i} equals to the number of vertices that are at distance of i edges from root.  Unfortunately, this time Sasha's intuition was wrong, and there could be several trees matching the same sequence. To show it, you need to write a program that, given the sequence a_{i}, builds two non-isomorphic rooted trees that match that sequence, or determines that there is only one such tree. Two rooted trees are isomorphic, if you can reenumerate the vertices of the first one in such a way, that the index of the root becomes equal the index of the root of the second tree, and these two trees become equal. The height of a rooted tree is the maximum number of edges on a path from the root to any other vertex. 
tl;dr: You need to write a program that, given the sequence a_{i}, build two non-isomorphic rooted trees that match that sequence, or determines that there is only one such tree. 

Theatre Square in the capital city of Berland has a rectangular shape with the size n   m meters. On the occasion of the city's anniversary, a decision was taken to pave the Square with square granite flagstones. Each flagstone is of the size a   a. What is the least number of flagstones needed to pave the Square  It's allowed to cover the surface larger than the Theatre Square, but the Square has to be covered. It's not allowed to break the flagstones. The sides of flagstones should be parallel to the sides of the Square. Input The input contains three positive integer numbers in the first line: n,  m and a (1    n, m, a   10^9). Output Print the needed number of flagstones in new line. 
tl;dr: Given n, m and a, calculate the number of squares of side length a required to completely cover a rectangle of length m and breadth n. Input The input contains three positive integer numbers in the first line: n,  m and a (1    n, m, a   10^9). Output Print the needed squares. 

Boris works at a secret communication station for the government training new employees on how to encode messages. Messages at this station are encoded with a rotation ( Caesar ) cipher that replaces each letter with one at a set offset in the alphabet, e.g., for offset $2$ an  a  is replaced by a  c  and  y  is replaced by  a . In order to encode a message, this cipher may be applied more than once. Each such application counts as a step in the encoding process. Boris teaches the new employees to encode messages by demonstrating each step of the encoding individually. However, Boris does not does not like seeing messages that contain at least half as many vowels as consonants after applying an encoding step. (Boris considers  a ,  e ,  i ,  o ,  u , and  y  as vowels.) He grows annoyed and more and more unhappy with each step where this situation occurs. Your job is to encode a given message and determine whether Boris will see fewer steps that annoy him than ones that don t. Since Boris wants to be happy in his job he will give a message that annoys him too much to a colleague. 
tl;dr: