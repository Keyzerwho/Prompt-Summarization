# Task  Vanya gets bored one day and decides to enumerate a large pile of rocks. He first counts the rocks and finds out that he has `n` rocks in the pile, then he goes to the store to buy labels for enumeration.     Each of the labels is a digit from 0 to 9 and each of the `n` rocks should be assigned a unique number from `1` to `n`.  If each label costs `$1`, how much money will Vanya spend on this project  # Input/Output  - `[input]` integer `n`   The number of rocks in the pile.   `1     n     10^9`  - `[output]` an integer   the cost of the enumeration.    # 
tl;dr: # Task  Vanya has `n` rocks in the pile, then he buy labels.    Each of the labels is a digit from 0 to 9 and each of the `n` rocks should be assigned a unique number from `1` to `n`.  If each label costs `$1`, how much money will Vanya spend on this project  # Input/Output  - `[input]` integer `n`   The number of rocks in the pile.   `1     n     10^9`  - `[output]` an integer   the cost of the enumeration.    # 

# A History Lesson The Pony Express was a mail service operating in the US in 1859-60. It reduced the time for messages to travel between the Atlantic and Pacific coasts to about 10 days, before it was made obsolete by the transcontinental telegraph. # How it worked There were a number of *stations*, where: * The rider switched to a fresh horse and carried on, or * The mail bag was handed over to the next rider # Kata Task `stations` is a list/array of distances (miles) from one station to the next along the Pony Express route. Implement the `riders` method/function, to return how many riders are necessary to get the mail from one end to the other. ##  Missing rider In this version of the Kata a rider may go missing. In practice, this could be for a number of reasons - a lame horse, an accidental fall, foul play...  After some time, the rider's absence would be noticed at the **next** station, so the next designated rider from there would have to back-track the mail route to look for his missing colleague. The missing rider is then safely escorted back to the station he last came from, and the mail bags are handed to his rescuer (or another substitute rider if necessary).  `stationX` is the number (2..N) of the station where the rider's absence was noticed. 
tl;dr: # Task Implement a method to return how many riders are necessary to get the mail from one end to the other. Each rider travels never more than 100 miles. A rider may go missing and the rider's absence would be noticed at the next station, so the next designated rider from there would have to back-track the mail route to look for his missing colleague. The missing rider is then safely escorted back to the station he last came from, and the mail bags are handed to his rescuer.  stations is a list of miles from one station to the next along the Pony Express route. stationX is the number of the station where the rider's absence was noticed. # 

You are given an array $a$ of $n$ integers. You want to make all elements of $a$ equal to zero by doing the following operation exactly three times:  Select a segment, for each number in this segment we can add a multiple of $len$ to it, where $len$ is the length of this segment (added integers can be different).  It can be proven that it is always possible to make all elements of $a$ equal to zero. 
tl;dr: You are given an array $a$ of $n$ integers. You want to make all elements of $a$ equal to zero by doing the following operation exactly three times:  Select a segment, for each number in this segment we can add a multiple of $len$ to it, where $len$ is the length of this segment.  It is always possible to make all elements of $a$ equal to zero. 

Boris works at a secret communication station for the government training new employees on how to encode messages. Messages at this station are encoded with a rotation ( Caesar ) cipher that replaces each letter with one at a set offset in the alphabet, e.g., for offset $2$ an  a  is replaced by a  c  and  y  is replaced by  a . In order to encode a message, this cipher may be applied more than once. Each such application counts as a step in the encoding process. Boris teaches the new employees to encode messages by demonstrating each step of the encoding individually. However, Boris does not does not like seeing messages that contain at least half as many vowels as consonants after applying an encoding step. (Boris considers  a ,  e ,  i ,  o ,  u , and  y  as vowels.) He grows annoyed and more and more unhappy with each step where this situation occurs. Your job is to encode a given message and determine whether Boris will see fewer steps that annoy him than ones that don t. Since Boris wants to be happy in his job he will give a message that annoys him too much to a colleague. 
tl;dr: