# Definition **_Strong number_** is the number that *the sum of the factorial of its digits is equal to number itself*. ## **_For example_**:  **_145_**, since  ``` 1! + 4! + 5! = 1 + 24 + 120 = 145 ``` So, **_145_** is a **_Strong number_**.  ____ # Task **_Given_** a number, **_Find if it is Strong or not_**. ____ # Warm-up (Highly recommended) # [Playing With Numbers Series](https://www.codewars.com/collections/playing-with-numbers) ___ 
tl;dr: You are given a positive number, find if it is strong or not. 

Give me Chocolate Anushka wants to buy chocolates.there are many chocolates in front of her, tagged with their prices. Anushka has only a certain amount to spend, and she wants to maximize the number of chocolates she buys with this money. Given a list of prices and an amount to spend, what is the maximum number of chocolates Anushka can buy   For example,  if prices =[1,2,3,4] and Anushka has k=7 to spend, she can buy items [1,2,3] for 6 , or [3,4] for 7 units of currency. she would choose the first group of 3 items. Input Format The first line contains two integers, n and k , the number of priced chocolates and the amount Anushka has to spend. The next line contains n space-separated integers prices[i] Constraints 1<= n <= 105 1<= k <= 109 1<= prices[i] <= 109 A chocolate can't be bought multiple times. Output Format An integer that denotes the maximum number of chocolates Anushka can buy for her. Sample Input 7 50 1 12 5 111 200 1000 10 Sample Output 4 Explanation she can buy only 4 chocolatess at most. These chocolates have the following prices: 1, 12, 5, 10
tl;dr: You are given an array of size n and a limiting number k. Find the maximum count of numbers from array whose sum is not greater than k. Input Format The first line contains two integers, n and k , the number of elements in array and a limiting number. The next line contains n space-separated integers array[i] Constraints 1<= n <= 105 1<= k <= 109 1<= array[i] <= 109 A number can't be repeated multiple times. Output Format An integer that denotes the maximum count of array numbers whose sum can't be greater than k. Sample Input 7 50 1 12 5 111 200 1000 10 Sample Output 

We have two special characters. The first character can be represented by one bit 0. The second character can be represented by two bits (10 or 11).   Now given a string represented by several bits. Return whether the last character must be a one-bit character or not. The given string will always end with a zero. 
tl;dr: You are given an array with some bits. there three possible combinations of bits 10, 11, 0. convert array to string and find if the last charecter should be a one bit charecter or not  

You are given a string $s$ consisting only of upper case letters A and B. For an integer $k$, a pair of indices $i$ and $j$ ($1 \le i<j \le n$) is called a $k$-inversion if and only if $s[i] = \textbf{B}$, $s[j] = \textbf{A}$ and $j-i = k$. Consider the string BABA. It has two $1$-inversions and one $3$-inversion. It has no $2$-inversions. For each $k$ between $1$ and $n-1$ (inclusive), print the number of $k$-inversions in the string $s$. 
tl;dr: