Write a program to check whether a triangle is valid or not, when the three angles of the triangle are the inputs. A triangle is valid if the sum of all the three angles is equal to 180 degrees. 
tl;dr: You are given three angles of a triangle.Check whether these angles form a valid triangle or not.  

Pikachu had an array with him. He wrote down all the non-empty subsequences of the array on paper. Note that an array of size n has 2^{n} - 1 non-empty subsequences in it.  Pikachu being mischievous as he always is, removed all the subsequences in which Maximum_element_of_the_subsequence  -  Minimum_element_of_subsequence    d Pikachu was finally left with X subsequences.  However, he lost the initial array he had, and now is in serious trouble. He still remembers the numbers X and d. He now wants you to construct any such array which will satisfy the above conditions. All the numbers in the final array should be positive integers less than 10^18.  Note the number of elements in the output array should not be more than 10^4. If no answer is possible, print  - 1. 
tl;dr: You are given two integers X and d. You should construct an array such that, removing all non-empty subsequences in which Maximum_element_of_the_subsequence  -  Minimum_element_of_subsequence    d from the set of all subsequences will give you X subsequences. 

The objective of this Kata is to write a function that creates a dictionary of factors for a range of numbers. The key for each list in the dictionary should be the number. The list associated with each key should possess the factors for the number. If a number possesses no factors (only 1 and the number itself), the list for the key should be `['None']` The function possesses two arguments (`n` and `m`). Where `n` is the starting number and `m` is the ending number. For example: All factors for 2 (`n`) through to 6 (`m`) with the number being the key in the dictionary: ```python {2: ['None'], 3: ['None'], 4: [2], 5: ['None'], 6: [2, 3]} ``
tl;dr: Given starting number and the ending number, creates a dictionary of factors for all numbers. If a number possesses no factors , the list for the key should be `['None']` For example: All factors for 2 (`n`) through to 6 (`m`) with the number being the key in the dictionary: ```python {2: ['None'], 3: ['None'], 4: [2], 5: ['None'], 6: [2, 3]} ``

Mario is making up silly games again instead of reading Dostoevsky for school. The rules of his newest game follow. First he chooses a random word from the book. Then he splits the word in two arbitrary places to get three separate words. After that he reverses the order of the letters in each of those three words (exchanges the first and last letters, the second and second last and so on). Finally, he puts the three words back together in the same order in which they were before splitting. The goal of the game is to obtain the lexicographically smallest word possible. In other words, of all words that can be obtained by the above procedure, find one which would be earliest in a dictionary. Write a program that plays Mario s game perfectly. 
tl;dr: