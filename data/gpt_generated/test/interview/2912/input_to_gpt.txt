$Neha$  is given a number $N$. She always looks for special thing , this time she is looking for $Special$ $Number$ and $Partial$ $Special$ $Number$. A $Special$ $Number$ is a number whose product of its digits is equal to number itself i.e. $N $, and in this number there is no digit $1$. $Partial$ $Special$ is a number having all the condition same as $Special$ except that it can also have digit $1$ in it .Neha have to count the number of $Special$ and $Partial$ $Special$ $Numbers $for a given  $N$ . She is not so good in programming , so go and help her. 
tl;dr: You have to find a $Special$ $Number$  and a $Partial$ special number for a number N.Special Number are those product of its digits is equal to number itself and there is no digit $1$. $Partial$ $Special$ is a number having all the condition same as $Special$ except that it can also have digit $1$ in it. Print the count of the $Special$ and $Partial$ $Special$ $Numbers $for a given  $N$ .  

Students are asked to stand in non-decreasing order of heights for an annual photo. Return the minimum number of students that must move in order for all students to be standing in non-decreasing order of height. Notice that when a group of students is selected they can reorder in any possible way between themselves and the non selected students remain on their seats.   
tl;dr: you are given an array of numbers. Find the minimum number of indexes in the array need to be reordered such that all the elements in array are in non-decreasing order  

You are given a collection of $N$ non-empty strings, denoted by $S_1, S_2, \ldots , S_ n$. Then you are given $N$-$1$ operations which you execute in the order they are given. The $i^{th}$ operation is has the following format:  $a$$b$  ($1$-based indexing, without the quotes), which means that you have to make the following changes:  - $S_ a = S_ a + S_ b$, i.e. concatenate $a^{th}$ string and $b^{th}$ string and store the result in $a^{th}$ string,  - $S_ b$ = "", i.e. make the $b^{th}$ string empty, after doing the previous step. You are ensured that after the $i^{th}$ operation, there will be no future operation that will be accessing $S_ b$. Given these operations to join strings, print the last string that will remain at the end of this process. 
tl;dr: