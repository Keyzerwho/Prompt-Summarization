You are the principal of the Cake school in chefland and today is your birthday. You want to treat each of the children with a small cupcake which is made by you. But there is a problem, You don't know how many students are present today. The students have gathered of the morning assembly in $R$ rows and $C$ columns. Now you have to calculate how many cakes you have to make such that each child gets a cupcake.  
tl;dr: You are given $R$ rows and $C$ columns of a matrix. Calculate the total number in the matrix.  

The magic sum of 3s is calculated on an array by summing up odd numbers which include the digit `3`. Write a function `magic_sum` which accepts an array of integers and returns the sum. *
tl;dr: The magic sum of 3s is calculated on an array by summing up odd numbers which include the digit 3. Write a function magic_sum which accepts an array of integers and returns the sum. If the sum cannot be calculated, 0 should be returned. 

# Task  You have some people who are betting money, and they all start with the same amount of money (this number>0).   Find out if the given end-state of amounts is possible after the betting is over and money is redistributed. # Input/Output  - `[input]` integer array arr   the proposed end-state showing final amounts for each player  - `[output]` a boolean value   `true` if this is a possible end-state and `false` otherwise    # 
tl;dr: # Task  Some people start with the same positive amount of money  and the money will be redistributed.   Find out if the given end-state of amounts is possible. # Input/Output  - `[input]` integer array arr   the proposed end-state showing final amounts for each player  - `[output]` a boolean value   `true` if this is a possible end-state and `false` otherwise    # 

As a new employee at the Northwestern Europe Routing Company (NWERC), you do a lot of thinking about wireless network architectures. Lately you learned about a multi-channel mesh network architecture (called Hyacinth) that equips each mesh network node with multiple network interface cards (NICs) to increase the network throughput. You can choose a channel frequency for each NIC. In order to communicate, for every two network nodes that are in range of each other, their NICs must share at least one common frequency. The theoretical throughput is optimal when the total number of used frequencies in the network is maximal.  Your bosses at NWERC want you to figure out a procedure for assigning frequencies to the NICs such that the number of frequencies in use is maximized, subject to the constraint that all pairs of adjacent nodes must be able to communicate. A frequency is considered used if any pair of nodes within range of each other share that frequency. In the mesh network that you will be dealing with, each node is equipped with exactly two NICs (i.e., each node can use at most two frequencies). Since you are new at NWERC, your bosses further restrict the network layouts to make your job easier: the network graph will form a tree. 
tl;dr: