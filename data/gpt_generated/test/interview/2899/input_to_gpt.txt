You are given an unweighted, undirected graph. Write a program to check if it's a tree topology. 
tl;dr: Write a program to check for a given unweighted, undirected graph whether it's a tree topology or not. 

We have two special characters. The first character can be represented by one bit 0. The second character can be represented by two bits (10 or 11).   Now given a string represented by several bits. Return whether the last character must be a one-bit character or not. The given string will always end with a zero. 
tl;dr: You are given an array with some bits. there three possible combinations of bits 10, 11, 0. convert array to string and find if the last charecter should be a one bit charecter or not  

As a new employee at the Northwestern Europe Routing Company (NWERC), you do a lot of thinking about wireless network architectures. Lately you learned about a multi-channel mesh network architecture (called Hyacinth) that equips each mesh network node with multiple network interface cards (NICs) to increase the network throughput. You can choose a channel frequency for each NIC. In order to communicate, for every two network nodes that are in range of each other, their NICs must share at least one common frequency. The theoretical throughput is optimal when the total number of used frequencies in the network is maximal.  Your bosses at NWERC want you to figure out a procedure for assigning frequencies to the NICs such that the number of frequencies in use is maximized, subject to the constraint that all pairs of adjacent nodes must be able to communicate. A frequency is considered used if any pair of nodes within range of each other share that frequency. In the mesh network that you will be dealing with, each node is equipped with exactly two NICs (i.e., each node can use at most two frequencies). Since you are new at NWERC, your bosses further restrict the network layouts to make your job easier: the network graph will form a tree. 
tl;dr: