A subsequence of a string S is a string that can be obtained by deleting zero or more characters from S without changing the order of the remaining characters. For example, arc, artistic and (an empty string) are all subsequences of artistic; abc and ci are not. You are given a string A consisting of lowercase English letters. Find the shortest string among the strings consisting of lowercase English letters that are not subsequences of A. If there are more than one such string, find the lexicographically smallest one among them. -----Constraints-----  - 1 \leq |A| \leq 2 \times 10^5  - A consists of lowercase English letters. 
tl;dr: You are given a string A consisting of lowercase English letters. Find the shortest string among the strings consisting of lowercase English letters that are not subsequences of A. If there are more than one such string, find the lexicographically smallest one among them. -----Constraints-----  - 1 \leq |A| \leq 2 \times 10^5  - A consists of lowercase English letters. 

Sereja has two integers   A and B   in 7-ary system. He wants to calculate the number C, such that B * C = A. It is guaranteed that B is a divisor of A. Please, help Sereja calculate the number C modulo 7L. 
tl;dr: You are given two positive integers   A and B   in 7-ary system such that B * C = A and  B is a divisor of A. Calculate the number C modulo 7L. 

You are given a special jigsaw puzzle consisting of $n\cdot m$ identical pieces. Every piece has three tabs and one blank, as pictured below. $\{3$  The jigsaw puzzle is considered solved if the following conditions hold:  The pieces are arranged into a grid with $n$ rows and $m$ columns.  For any two pieces that share an edge in the grid, a tab of one piece fits perfectly into a blank of the other piece.  Through rotation and translation of the pieces, determine if it is possible to solve the jigsaw puzzle. 
tl;dr: You are given a special jigsaw puzzle consisting of $n\cdot m$ identical pieces. Every piece has three tabs and one blank, as pictured below. $\{3$  The jigsaw puzzle is considered solved if the following conditions hold:  The pieces are arranged into a grid with $n$ rows and $m$ columns.  For any two pieces that share an edge in the grid, a tab of one piece fits perfectly into a blank of the other piece.  Through rotation and translation of the pieces, determine if it is possible to solve the jigsaw puzzle. 

Arthur and his sister Carol have been playing a game called Nim for some time now. Nim is played as follows:  - The starting position has a number of heaps, all containing some, not necessarily equal, number of beads.  - The players take turns chosing a heap and removing a positive number of beads from it.  - The first player not able to make a move, loses. Arthur and Carol really enjoyed playing this simple game until they recently learned an easy way to always be able to find the best move:  - Xor the number of beads in the heaps in the current position (i.e., if we have $2$, $4$ and $7$ the xor-sum will be $1$ since $2\ \mathbf{xor}\ 4\ \mathbf{xor}\ 7 = 1$).  - If the xor-sum is $0$, too bad, you will lose.  - Otherwise, move such that the xor-sum becomes $0$. This is always possible. It is quite easy to convince oneself that this works. Consider these facts:  - The player that takes the last bead wins.  - After the winning player s last move the xor-sum will be $0$.  - The xor-sum will change after every move. Which means that if you make sure that the xor-sum always is $0$ when you have made your move, your opponent will never be able to win, and, thus, you will win. Understandably it is no fun to play a game when both players know how to play perfectly (ignorance is bliss). Fortunately, Arthur and Carol soon came up with a similar game, $S$-Nim, that seemed to solve this problem. Each player is now only allowed to remove a number of beads in some predefined set $S$, e.g. if we have $S = \{ 2, 5\} $ each player is only allowed to remove $2$ or $5$ beads. Now it is not always possible to make the xor-sum $0$ and, thus, the strategy above is useless. Or is it  Your job is to write a program that determines if a position of $S$-Nim is a losing or a winning position. A position is a winning position if there is at least one move to a losing position. A position is a losing position if there are no moves to a losing position. This means, as expected, that a position with no legal moves is a losing position. 
tl;dr: