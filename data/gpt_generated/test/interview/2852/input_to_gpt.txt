# Task Elections are in progress! Given an array of numbers representing votes given to each of the candidates, and an integer which is equal to the number of voters who haven't cast their vote yet, find the number of candidates who still have a chance to win the election. The winner of the election must secure strictly more votes than any other candidate. If two or more candidates receive the same (maximum) number of votes, assume there is no winner at all. **Note**: big arrays will be tested. # 
tl;dr: # Task Given an array of numbers representing votes given to each of the candidates, and an integer which is equal to the number of voters who haven't cast their vote yet, find the number of candidates who still have a chance to win the election. If two or more candidates receive the same maximum number of votes, assume there is no winner at all. # 

You have unweighted tree of $n$ vertices. You have to assign a positive weight to each edge so that the following condition would hold:   For every two different leaves $v_{1}$ and $v_{2}$ of this tree, bitwise XOR of weights of all edges on the simple path between $v_{1}$ and $v_{2}$ has to be equal to $0$.  Note that you can put very large positive integers (like $10^{(10^{10})}$). It's guaranteed that such assignment always exists under given constraints. Now let's define $f$ as the number of distinct weights in assignment.  [Image] In this example, assignment is valid, because bitwise XOR of all edge weights between every pair of leaves is $0$. $f$ value is $2$ here, because there are $2$ distinct edge weights($4$ and $5$). [Image] In this example, assignment is invalid, because bitwise XOR of all edge weights between vertex $1$ and vertex $6$ ($3, 4, 5, 4$) is not $0$.  What are the minimum and the maximum possible values of $f$ for the given tree  Find and print both. 
tl;dr: You have unweighted tree of $n$ vertices. You have to assign a positive weight to each edge so that the following condition would hold: For every two different leaves $v_{1}$ and $v_{2}$ of this tree, bitwise XOR of weights of all edges on the simple path between $v_{1}$ and $v_{2}$ has to be equal to $0$.  You can put very large positive integers like $10^{(10^{10})}$. Let $f$ be the number of distinct weights in assignment. What are the minimum and the maximum possible values of $f$ for the given tree  Find and print both. 

Richik$Richik$ has just completed his engineering and has got a job in one of the firms at Sabrina$Sabrina$ which is ranked among the top seven islands in the world in terms of the pay scale.  Since Richik$Richik$ has to travel a lot to reach the firm, the owner assigns him a number X$X$, and asks him to come to work only on the day which is a multiple of X$X$. Richik joins the firm on 1-st day but starts working from X-th day. Richik$Richik$ is paid exactly the same amount in Dollars as the day number. For example, if Richik$Richik$ has been assigned X=3$X = 3$, then he will be paid 3$3$ dollars and 6$6$ dollars on the 3rd$3rd$ and 6th$6th$ day on which he comes for work.  On N th$N-th$ day, the owner calls up Richik$Richik$ and asks him not to come to his firm anymore. Hence Richik$Richik$ demands his salary of all his working days together. Since it will take a lot of time to add, Richik$Richik$ asks help from people around him, let's see if you can help him out.  
tl;dr: You are given a number X and limit N. You need to output the sum of multiples of X upto N. 

Angela is a new PhD student and she is nervous about the upcoming paper submission deadline of this year s research conference. She has been working on multiple projects throughout the past year. Luckily most of the projects concluded successfully, and she came up with $n$ candidate papers. However not all of the papers were born equal some have better results than others. Her advisor believes she should only submit the papers with  good enough  results so they have a high chance of getting accepted.  Angela s research group has a unique way of evaluating the success of paper submissions. They use the research productivity index, defined as $a^{a/s}$, where $s$ is the total number of papers submitted, and $a$ is the number of papers that are accepted by the conference. When $a = 0$, the index is defined to be zero. For example:  - if one paper is submitted and it gets accepted, the index is $1^{1/1} = 1$;  - if $4$ papers are submitted and all get accepted, the index is $4^{4/4} = 4$;  - if $10$ papers are submitted and $3$ get accepted, the index is $3^{3/10} \approx 1.390389$;  - if $5$ papers are submitted and $4$ get accepted, the index is $4^{4/5} \approx 3.031433$;  - if $3$ papers are submitted and all get rejected ($a=0$), the index is $0$. Intuitively, to get a high research productivity index one wants to get as many papers accepted as possible while keeping the acceptance rate high. For each of her $n$ papers, Angela knows exactly how likely it is that the conference would accept the paper. If she chooses wisely which papers to submit, what is the maximum expected value of her research productivity index  
tl;dr: