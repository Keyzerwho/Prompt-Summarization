You are given a prime number $p$, $n$ integers $a_1, a_2, \ldots, a_n$, and an integer $k$.  Find the number of pairs of indexes $(i, j)$ ($1 \le i < j \le n$) for which $(a_i + a_j)(a_i^2 + a_j^2) \equiv k \bmod p$. 
tl;dr: You are given a prime number $p$, $n$ integers $a_1, a_2, \ldots, a_n$, and an integer $k$.  Find the number of pairs of indexes $(i, j)$ where, $1 \le i < j \le n$, for which $(a_i + a_j)(a_i^2 + a_j^2) \equiv k \bmod p$. 

You are given an array $a$ of $n$ integers. You want to make all elements of $a$ equal to zero by doing the following operation exactly three times:  Select a segment, for each number in this segment we can add a multiple of $len$ to it, where $len$ is the length of this segment (added integers can be different).  It can be proven that it is always possible to make all elements of $a$ equal to zero. 
tl;dr: You are given an array $a$ of $n$ integers. You want to make all elements of $a$ equal to zero by doing the following operation exactly three times:  Select a segment, for each number in this segment we can add a multiple of $len$ to it, where $len$ is the length of this segment.  It is always possible to make all elements of $a$ equal to zero. 

A water company is trying to provide water from its pumping station to a mansion. The company owns $n$ water stations, numbered $1 \ldots n$, which are connected by a variety of pipes. Water can flow through both directions of a pipe, but the total amount of water that can flow through the pipe is bounded by the capacity of the pipe. The water company is constantly improving the pipes, increasing the capacity of various pipes. The water company is conducting $k$ improvements (each of which is permanent after it is executed). An improvement consists of taking a pipe between two locations and increasing its capacity by a fixed amount, or installing a pipe between two locations which are not directly connected by a pipe. After each improvement, the water company wants to know the maximum amount of water the mansion could receive. 
tl;dr: