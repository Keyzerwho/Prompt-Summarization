Konrad is a Human Relations consultant working for VoltModder, a large electrical equipment producer. Today, he has been tasked with evaluating the level of happiness in the company. There are $n$ people working for VoltModder, numbered from $1$ to $n$. Each employee earns a different amount of money in the company   initially, the $i$-th person earns $i$ rubles per day. On each of $q$ following days, the salaries will be revised. At the end of the $i$-th day, employee $v_i$ will start earning $n+i$ rubles per day and will become the best-paid person in the company. The employee will keep his new salary until it gets revised again. Some pairs of people don't like each other. This creates a great psychological danger in the company. Formally, if two people $a$ and $b$ dislike each other and $a$ earns more money than $b$, employee $a$ will brag about this to $b$. A dangerous triple is a triple of three employees $a$, $b$ and $c$, such that $a$ brags to $b$, who in turn brags to $c$. If $a$ dislikes $b$, then $b$ dislikes $a$. At the beginning of each day, Konrad needs to evaluate the number of dangerous triples in the company. Can you help him do it  
tl;dr: You have $n$ nodes in a graph. The $i$-th node starts with a value of $i$. The node values will be revised $q$ times. For the $j$-th revision, node $v_i$ will have a value of $n+i$. The node $v_i$ will have this value for the only the $j$-th revision, it will have value $i$ otherwise. Some nodes dislike with each other, if two nodes $a$ and $b$ dislike with each other and $a$ has a higher value than $b$ then $a$ conflicts with $b$. A dangerous triple is three nodes $a$, $b$, $c$ such that $a$ conflicts with $b$ and $b$ conflicts with $c$. You need to find the number of dangerous triples before the revisions and after each revision. 

The life goes up and down, just like nice sequences. Sequence t_1, t_2, ..., t_{n} is called nice if the following two conditions are satisfied:   t_{i} < t_{i} + 1 for each odd i < n;  t_{i} > t_{i} + 1 for each even i < n.  For example, sequences (2, 8), (1, 5, 1) and (2, 5, 1, 100, 99, 120) are nice, while (1, 1), (1, 2, 3) and (2, 5, 3, 2) are not. Bear Limak has a sequence of positive integers t_1, t_2, ..., t_{n}. This sequence is not nice now and Limak wants to fix it by a single swap. He is going to choose two indices i < j and swap elements t_{i} and t_{j} in order to get a nice sequence. Count the number of ways to do so. Two ways are considered different if indices of elements chosen for a swap are different. 
tl;dr: Sequence t_1, t_2, ..., t_{n} is called nice if the following two conditions are satisfied:   t_{i} < t_{i} + 1 for each odd i < n;  t_{i} > t_{i} + 1 for each even i < n.  You have a sequence of positive integers t_1, t_2, ..., t_{n}. This sequence is not nice now and you want to fix it by a single swap. Count the number of ways to do so. Two ways are considered different if indices of elements chosen for a swap are different. 

A haiku is a Japanese form of poetry. It consists of three phrases of $5$, $7$ and $5$ syllables each. Once a year, HiQ has a haiku contest, where employees submit their best poems. The poems are then judged based on a wide range of aspects, such as  - creativity  - simplicity  - beauty  - whether the poem is actually a haiku This last point turned out to be quite a challenge for the judges (many problems arose when half the judges indexed syllables starting at $0$ and the other half at $1$). Can you help the judges to determine whether a submitted poem is a haiku, given a set of syllables  Note that there may exist multiple decompositions of a single word in the poem into syllables. In this case, you should determine whether some decomposition is a haiku. 
tl;dr: