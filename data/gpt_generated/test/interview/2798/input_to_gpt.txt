In this kata, your job is to return the two distinct highest values in a list. If there're less than 2 unique values, return as many of them, as possible. The result should also be ordered from highest to lowest. 
tl;dr: Your job is to return the two distinct highest values in a list. If there're less than 2 unique values, return as many of them as possible. The result should also be ordered from highest to lowest. 

Given a permutation $p$ of length $n$, find its subsequence $s_1$, $s_2$, $\ldots$, $s_k$ of length at least $2$ such that:  $|s_1-s_2|+|s_2-s_3|+\ldots+|s_{k-1}-s_k|$ is as big as possible over all subsequences of $p$ with length at least $2$.  Among all such subsequences, choose the one whose length, $k$, is as small as possible.  If multiple subsequences satisfy these conditions, you are allowed to find any of them. A sequence $a$ is a subsequence of an array $b$ if $a$ can be obtained from $b$ by deleting some (possibly, zero or all) elements. A permutation of length $n$ is an array of length $n$ in which every element from $1$ to $n$ occurs exactly once. 
tl;dr: Given a permutation $p$ of length $n$, find its subsequence $s_1$, $s_2$, $\ldots$, $s_k$ of length at least $2$ such that:  $|s_1-s_2|+|s_2-s_3|+\ldots+|s_{k-1}-s_k|$ is as big as possible over all subsequences of $p$ with length at least $2$.  Among all such subsequences, choose the one whose length, $k$, is as small as possible.  

Ruben and Albert are what you can call abnormally smart. They are also both very fond of mathematically inspired games. Their only problem is that most games are too easy for them, and they end up beating everyone who dares challenge them. Because of that, they re now mostly playing against each other. To make things interesting, they had a professor design a new game for them. This new game was interesting at first. Nowadays, however, Albert often complains that it is impossible for him to win a particular round. After long discussions, they ve now decided to take this a step further, and actually figure out who d win if they both played optimally. They need you to write a computer program that does this for them. A state in the game consists of one or more $x\times y\times z$ cuboids. A (legal) move is choosing a cuboid, then a value for each of the three axes (basically choosing three planes), and then cutting the cuboid along these (thus removing a $1\times y\times z$, $x\times 1\times z$ and a $x\times y\times 1$, all overlapping, cuboid). In effect you ve created between $0$ and $8$ (inclusive) smaller cuboids. All three planes cut from the cuboid need to be on the cuboid (you can t cut away a hypothetical cuboid on the outside of the real one). An example might be in order. You ve chosen a $3\times 5\times 4$ cuboid, and are about to cut it. You now need to choose the three planes. This means you need an $x$ between $1$ and $3$, a $y$ between $1$ and $5$ and a $z$ between $1$ and $4$. Say you choose $2$, $1$ and $3$, respectively. The first cut would alone cut the cuboid into two $1\times 5\times 4$ cuboids, the second into a single $3\times 4\times 4$ cuboid, while the third would alone cut the cuboid into a $3\times 5\times 1$ and a $3\times 5\times 2$ cuboid. Put together these cuts produces $4$ new smaller cuboids, of sizes $1\times 4\times 1$,$1\times 4\times 1$,$1\times 4\times 2$ and $1\times 4\times 2$. Note that cutting a cuboid with an axis of size $1$ would remove it altogether. The players take turns making a move. The winner is the player that removes the last cuboid. 
tl;dr: