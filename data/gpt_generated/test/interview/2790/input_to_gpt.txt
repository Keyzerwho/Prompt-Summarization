In the computer world, use restricted resource you have to generate maximum benefit is what we always want to pursue. For now, suppose you are a dominator of m 0s and n 1s respectively. On the other hand, there is an array with strings consisting of only 0s and 1s. Now your task is to find the maximum number of strings that you can form with given m 0s and n 1s. Each 0 and 1 can be used at most once. 
tl;dr: You are given numbers m and n. You are given an array of strings of only 0's and 1's. Return the maximum number of strings that can be formed by using less than (m+1) 0's and (n+1) 1's in total. 

# Task A cake is sliced with `n` straight lines. Your task is to calculate the maximum number of pieces the cake can have. # 
tl;dr: A cake is sliced with n straight lines. Your task is to calculate the maximum number of pieces the cake can have. # 

Gerald s job is to welcome the teams for this year s NWERC at the airport in Link ping. One of his duties is to stand at the luggage carousel and collect all the knapsacks that the teams are bringing. Gerald is a lazy person, so he just stands at the same position of the carousel and waits for bags to pass by so he can pick them up.  The baggage carousel consists of $s$ luggage slots, numbered in ascending order from $0$ to $s-1$. Since the baggage carousel is cyclic, luggage slots $s-1$ and $0$ also lie side by side. The carousel turns in such a way that if Gerald stands in front of slot $i$ at some point in time, he will stand in front of slot $(i+1) \bmod s$ one time unit later. In the beginning Gerald prepares a huge baggage cart at some position and stands there to wait for luggage. When a knapsack arrives in front of Gerald, he needs $t$ time units to take it and put it on the baggage cart. After these $t$ time units he is ready to pick up another knapsack. As long as there are remaining knapsacks on the luggage carousel, Gerald always takes the next one to arrive at his position as soon as he is ready after putting away the previous one. Now Gerald wonders about the effect of his choice of position on the time it will take him to finish this task. It is up to you to help Gerald calculate the minimum, maximum, and average time to pick up all knapsacks, taken over all $s$ possible slots, which can appear in front of Gerald after preparation. Time starts when he has prepared the baggage cart at some slot of the baggage carousel and ends after he has put the last knapsack on the cart. 
tl;dr: