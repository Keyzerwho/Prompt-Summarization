Dreamoon likes coloring cells very much. There is a row of $n$ cells. Initially, all cells are empty (don't contain any color). Cells are numbered from $1$ to $n$. You are given an integer $m$ and $m$ integers $l_1, l_2, \ldots, l_m$ ($1 \le l_i \le n$) Dreamoon will perform $m$ operations. In $i$-th operation, Dreamoon will choose a number $p_i$ from range $[1, n-l_i+1]$ (inclusive) and will paint all cells from $p_i$ to $p_i+l_i-1$ (inclusive) in $i$-th color. Note that cells may be colored more one than once, in this case, cell will have the color from the latest operation. Dreamoon hopes that after these $m$ operations, all colors will appear at least once and all cells will be colored. Please help Dreamoon to choose $p_i$ in each operation to satisfy all constraints. 
tl;dr: You are given $n$ cells numbered from $1$ to $n$ and an integer $m$ and $m$ integers $l_1, l_2, \ldots, l_m$ ($1 \le l_i \le n$) You will perform $m$ operations. In $i$-th operation, You will choose a number $p_i$ from range $[1, n-l_i+1]$ and will paint all cells from $p_i$ to $p_i+l_i-1$ inclusive in $i$-th color. Cells may be colored more than once if they have the color from the latest operation. You hope that after these $m$ operations, all colors will appear at least once and all cells will be colored. Choose $p_i$ in each operation to satisfy all constraints. 

Your team is writing a fancy new text editor and you've been tasked with implementing the line numbering. Write a function which takes a list of strings and returns each line prepended by the correct number. The numbering starts at 1. The format is `n: string`. Notice the colon and space in between. **
tl;dr: Write a function which takes a list of strings and returns each line prepended by the correct number. The numbering starts at 1. The format is "n: string". 

Farmer Bob have a big farm, where he growths chickens, rabbits and cows. It is very difficult to count the number of animals for each type manually, so he diceded to buy a system to do it. But he bought a cheap system that can count only total number of heads, total number of legs and total number of horns of animals on the farm. Help Bob to figure out how many chickens, rabbits and cows does he have  All chickens have 2 legs, 1 head and no horns; all rabbits have 4 legs, 1 head and no horns; all cows have 4 legs, 1 head and 2 horns. Your task is to write a function  ```Python get_animals_count(legs_number, heads_number, horns_number) ``` ```Csharp Dictionary get_animals_count(int legs_number, int heads_number, int horns_number) ``` , which returns a dictionary  ```python {"rabbits" : rabbits_count, "chickens" : chickens_count, "cows" : cows_count} ```  ```Csharp new Dictionary(){{"rabbits", rabbits_count},{"chickens", chickens_count},{"cows", cows_count}} ``` Parameters `legs_number, heads_number, horns_number` are integer, all tests have valid input. 
tl;dr: Your task is to write a function get_animals_count(legs_number, heads_number, horns_number) which returns a dictionary {"rabbits" : rabbits_count, "chickens" : chickens_count, "cows" : cows_count} 

During the COVID-19 quarantine, Theta discovered Minecraft Dungeons which is an offshoot of the popular Minecraft game. In Minecraft Dungeons, players crawl through a dungeon, trying to accomplish a mission without getting killed by various mobs. At the end, a boss battle with the Arch-Illager awaits. Fortunately, the mobs  AI isn t particularly strong, so with some planning, it s possible to avoid the mobs. In this problem, you re given a dungeon map and you need to find out if it s possible for the player to reach the exit without being blown up by a creeper. You, the player, can move north, south, east, and west, except where there are obstacles. The player may also stay put. There is one creeper on the map. The player and the creeper take turns simultaneously, subject to the following simple AI:  - The creeper will only try to move towards the player, either horizontally or vertically, in a way that reduces the horizontal or vertical distance.  - If an obstacle prevents the creeper from moving vertically, it will try to move horizontally, and vice versa.  - If it can t move in either direction, it will stay put.  - If the creeper can move both horizontally and vertically, it will choose the direction in which it is farther away from the player. In the case of a tie, it will move vertically towards the player. After each such turn, the game checks if the creeper is too close to the player, in which case the creeper will explode and kill the player, even if the player has already reached the exit in that move. Obstacles do not protect the player from explosions. If the player did not explode and reached the exit, the mission is completed. 
tl;dr: