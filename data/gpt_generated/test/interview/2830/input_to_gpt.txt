The sequence of $m$ integers is called the permutation if it contains all integers from $1$ to $m$ exactly once. The number $m$ is called the length of the permutation. Dreamoon has two permutations $p_1$ and $p_2$ of non-zero lengths $l_1$ and $l_2$. Now Dreamoon concatenates these two permutations into another sequence $a$ of length $l_1 + l_2$. First $l_1$ elements of $a$ is the permutation $p_1$ and next $l_2$ elements of $a$ is the permutation $p_2$.  You are given the sequence $a$, and you need to find two permutations $p_1$ and $p_2$. If there are several possible ways to restore them, you should find all of them. (Note that it is also possible that there will be no ways.) 
tl;dr: The sequence of $m$ integers is called the permutation if it contains all integers from $1$ to $m$ exactly once. We hava two permutations $p_1$ and $p_2$ of non-zero lengths $l_1$ and $l_2$. Now we concatenate these two permutations into another sequence $a$ of length $l_1 + l_2$. First $l_1$ elements of $a$ is the permutation $p_1$ and next $l_2$ elements of $a$ is the permutation $p_2$.  You are given the sequence $a$, and you need to find two permutations $p_1$ and $p_2$. If there are several possible ways to restore them, you should find all of them. (Note that it is also possible that there will be no ways.) 

You are given an array $a_1, a_2 \dots a_n$. Calculate the number of tuples $(i, j, k, l)$ such that:   $1 \le i < j < k < l \le n$;  $a_i = a_k$ and $a_j = a_l$;  
tl;dr: You are given an array $a_1, a_2 \dots a_n$. Calculate the number of tuples $(i, j, k, l)$ such that:   $1 \le i < j < k < l \le n$;  $a_i = a_k$ and $a_j = a_l$;  

Failed Sort - Bug Fixing #4 Oh no, Timmy's Sort doesn't seem to be working  Your task is to fix the sortArray function to sort all numbers in ascending orde
tl;dr: Failed Sort - Bug Fixing #4 Your task is to fix the function to sort all numbers in ascending orde

You are on an $n \times m$ grid where each square on the grid has a digit on it. From a given square that has digit $k$ on it, a Move consists of jumping exactly $k$ squares in one of the four cardinal directions. A move cannot go beyond the edges of the grid; it does not wrap. What is the minimum number of moves required to get from the top-left corner to the bottom-right corner  
tl;dr: