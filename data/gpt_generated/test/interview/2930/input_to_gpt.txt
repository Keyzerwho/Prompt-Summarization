Chef is very organised in whatever he does and likes to maintain statistics of his work. Chef has expertise in web development and hence is a regular contributor on a forum. Chef sometimes makes multiple contributions in a single day.. Each day chef makes at least 1 contribution he is assigned a shade of green. The greater the number of contribution in a single day the darker shade of green he gets assigned and vice versa. Your job is to find out the number of days chef is assigned a same shade of green and print the number of times chef is assigned a unique shade of green. -----INPUT----- The first line of input contains an integer T denoting the number of test cases. T test cases follow. The first line of each test case contains an integer N denoting the number of days chef has contributed towards the forum. The next line contains N spaced integers the number of contributions chef has made if he has made any. -----OUTPUT----- The output will contain numbers on separate lines that show the number of individual green shades chef has earned in ascending order of intensity of the shades of green. -----CONSTRAINTS----- 1 <= T <= 25 5 <= N <= 50 1 <= Ai <= 50 -----EXAMPLE
tl;dr: Find the frequency of the unique values in a given array of size N. -----INPUT----- The first line of input contains an integer T denoting the number of test cases. T test cases follow. The first line of each test case contains an integer N denoting the number of days chef has contributed towards the forum. The next line contains N spaced integers the number of contributions chef has made if he has made any. -----OUTPUT----- The output will contain numbers on separate lines that show the number of individual green shades chef has earned in ascending order of intensity of the shades of green. -----CONSTRAINTS----- 1 <= T <= 25 5 <= N <= 50 1 <= Ai <= 50 -----EXAMPLE

# Description Write a function that accepts the current position of a knight in a chess board, it returns the possible positions that it will end up after 1 move. The resulted should be sorted.  ## 
tl;dr: # Description Given a current position of a knight in a chess board, find the possible positions that it will end up after 1 move. # 

Given the root of a tree, you are asked to find the most frequent subtree sum. The subtree sum of a node is defined as the sum of all the node values formed by the subtree rooted at that node (including the node itself). So what is the most frequent subtree sum value  If there is a tie, return all the values with the highest frequency in any order. 
tl;dr: You are given root of a tree. Find the most frequent subtree sum value if the  subtree sum of a node is defined as the sum of all the node values formed by the subtree rooted at that node (including the node itself). If there is a tie, return all the values with the highest frequency. 

A sequence of integers is said to Zigzag if adjacent elements alternate between strictly increasing and strictly decreasing. Note that the sequence may start by either increasing or decreasing. Given a sequence of integers, determine the length of the longest subsequence that Zigzags. For example, consider this sequence: 1 2 3 4 2 There are several Zigzagging subsequences of length $3$: 1 3 2        1 4 2        2 3 2        2 4 2        3 4 2 But there are none of length greater than $3$, so the answer is $3$. 
tl;dr: