# Task  Consider the following algorithm for constructing 26 strings S(1) .. S(26): ``` S(1) = "a"; For i in [2, 3, ..., 26]: S(i) = S(i - 1) + character(i) + S(i - 1).```  For example: ``` S(1) = "a" S(2) = S(1) + "b" + S(1) = "a" + "b" + "a" = "aba" S(3) = S(2) + "c" + S(2) = "aba" + "c" +"aba" = "abacaba" ... S(26) = S(25) + "z" + S(25)``` Finally, we got a long string S(26). Your task is to find the `k`th symbol (indexing from 1) in the string S(26). All strings consist of lowercase letters only. # Input / Output  - `[input]` integer `k`   1   k < 2^(26)  - `[output]` a string(char in C#)   the `k`th symbol of S(26
tl;dr: # Task  Consider the following algorithm for constructing strings S(1) .. S(26): ``` S(1) = "a"; For i in [2, 3, ..., 26]: S(i) = S(i - 1) + character(i) + S(i - 1).``` Your task is to find the `k`th symbol (indexing from 1) in the string S(26). # Input / Output  - `[input]` integer `k`   1   k < 2^(26)  - `[output]` a string(char in C#)   the `k`th symbol of S(26

Saket loves to play with strings. One day , while he was having fun with Cyclic Permutations of available strings to him, he observed that despite being scarce in numbers Vowels were really clingy.Being clingy means for almost every given string, there was a Cyclic Permutation in which atleast two vowels were together. So he decided to check this property for all the available strings to him. As the number of strings can be very large, help Saket determine whether the given string is clingy or not. 
tl;dr: Given a string return "Yes" if there are two vowels adjacent in it (first and last letter are adjacent), "No" otherwise. 

A sequence of integers is said to Zigzag if adjacent elements alternate between strictly increasing and strictly decreasing. Note that the sequence may start by either increasing or decreasing. Given a sequence of integers, determine the length of the longest subsequence that Zigzags. For example, consider this sequence: 1 2 3 4 2 There are several Zigzagging subsequences of length $3$: 1 3 2        1 4 2        2 3 2        2 4 2        3 4 2 But there are none of length greater than $3$, so the answer is $3$. 
tl;dr: