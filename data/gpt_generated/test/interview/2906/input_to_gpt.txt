There are N people, conveniently numbered 1 through N. We want to divide them into some number of groups, under the following two conditions:  - Every group contains between A and B people, inclusive.  - Let F_i be the number of the groups containing exactly i people. Then, for all i, either F_i=0 or C F_i D holds. Find the number of these ways to divide the people into groups. Here, two ways to divide them into groups is considered different if and only if there exists two people such that they belong to the same group in exactly one of the two ways. Since the number of these ways can be extremely large, print the count modulo 10^9+7. -----Constraints-----  - 1 N 10^3  - 1 A B N  - 1 C D N 
tl;dr: There are N people, numbered 1 through N. We want to divide them into some number of groups, under the following two conditions:  - Every group contains between A and B people, inclusive.  - Let F_i be the number of the groups containing exactly i people. Then, for all i, either F_i=0 or C F_i D holds. Find the number of these ways to divide the people into groups. Here, two ways to divide them into groups is considered different if and only if there exists two people such that they belong to the same group in exactly one of the two ways. print the answer modulo 10^9+7. -----Constraints-----  - 1 N 10^3  - 1 A B N  - 1 C D N 

Toad Zitz has an array of integers, each integer is between $0$ and $m-1$ inclusive. The integers are $a_1, a_2, \ldots, a_n$. In one operation Zitz can choose an integer $k$ and $k$ indices $i_1, i_2, \ldots, i_k$ such that $1 \leq i_1 < i_2 < \ldots < i_k \leq n$. He should then change $a_{i_j}$ to $((a_{i_j}+1) \bmod m)$ for each chosen integer $i_j$. The integer $m$ is fixed for all operations and indices. Here $x \bmod y$ denotes the remainder of the division of $x$ by $y$. Zitz wants to make his array non-decreasing with the minimum number of such operations. Find this minimum number of operations. 
tl;dr: You have an array of integers, each integer is between $0$ and $m-1$ inclusive. The integers are $a_1, a_2, \ldots, a_n$. In one operation you can choose an integer $k$ and $k$ indices $i_1, i_2, \ldots, i_k$ such that $1 \leq i_1 < i_2 < \ldots < i_k \leq n$. You should then change $a_{i_j}$ to $((a_{i_j}+1) \bmod m)$ for each chosen integer $i_j$. The integer $m$ is fixed for all operations and indices. You wants to make this array non-decreasing with the minimum number of such operations. Find this minimum number of operations. 

Let us define two functions f and g on positive integer numbers.  $f(n) = \text{product of non-zero digits of} n$ $g(n) = \left\{\begin{array}{ll}{n} & {\text{if} n < 10} \\{g(f(n))} & {\text{otherwise}} \end{array} \right.$  You need to process Q queries. In each query, you will be given three integers l, r and k. You need to print the number of integers x between l and r inclusive, such that g(x) = k.  
tl;dr: $f(n) = \text{product of non-zero digits of} n$ $g(n) = \left\{\begin{array}{ll}{n} & {\text{if} n < 10} \\{g(f(n))} & {\text{otherwise}} \end{array} \right.$  You need to process Q queries. In each query, you will be given three integers l, r and k. You need to print the number of integers x between l and r inclusive, such that g(x) = k.  

Marek and his schoolmates have just finished their studies at the university. They wanted to celebrate it with a game of paintball. After an hour of playing a very strange thing happened   everyone had exactly one bullet left. Marek, being a very curious person, wanted to know whether it s possible that everyone will be hit exactly once provided nobody moves. -----Task----- You are given a description of the situation during a paintball game when every player has only one bullet. The description of the game consists of pairs of players who can see each other. If a player can see another player, he can fire at him. Your task is to find a target for each player such that everyone will be hit. 
tl;dr: