A simple string contains a large repetition of letters within it. This problem is related to string handling and manipulation.  An original message is sent from planet Earth to planet Cybertron in form of a string. However, the letter position and string size is not important. The number of time each letter has occurred in the string is important. So the original string which is sent to Cybertron is encrypted in the new string which comprises the letters followed by each time it has occurred in the original string. Eg- original message is- abcdabf. Then the encrypted string is- a2b2c1d1f1 
tl;dr: You have find out the frequency of letters in a given string and print it as the new string which comprises of the letter followed by its frequency.For example string is- abcdabf. Then the new string is- a2b2c1d1f1 

The only difference between easy and hard versions is constraints. Now elections are held in Berland and you want to win them. More precisely, you want everyone to vote for you. There are $n$ voters, and two ways to convince each of them to vote for you. The first way to convince the $i$-th voter is to pay him $p_i$ coins. The second way is to make $m_i$ other voters vote for you, and the $i$-th voter will vote for free. Moreover, the process of such voting takes place in several steps. For example, if there are five voters with $m_1 = 1$, $m_2 = 2$, $m_3 = 2$, $m_4 = 4$, $m_5 = 5$, then you can buy the vote of the fifth voter, and eventually everyone will vote for you. Set of people voting for you will change as follows: ${5} \rightarrow {1, 5} \rightarrow {1, 2, 3, 5} \rightarrow {1, 2, 3, 4, 5}$. Calculate the minimum number of coins you have to spend so that everyone votes for you. 
tl;dr: There are $n$ voters, and two ways to convince each of them to vote for you. The first way to convince the $i$-th voter is to pay him $p_i$ coins. The second way is to make $m_i$ other voters vote for you, and the $i$-th voter will vote for free. Calculate the minimum number of coins you have to spend so that everyone votes for you. 

In this problem the input will consist of a number of lines of English text consisting of the letters of the English alphabet, the punctuation marks ' (apostrophe), . (full stop), , (comma), ; (semicolon), :(colon) and white space characters (blank, newline). Your task is print the words in the text in lexicographic order (that is, dictionary order). Each word should appear exactly once in your list. You can ignore the case (for instance, "The" and "the" are to be treated as the same word). There should be no uppercase letters in the output. For example, consider the following candidate for the input text:  This is a sample piece of text to illustrate this  problem. The corresponding output would read as: a illustrate is of piece problem sample text this to 
tl;dr: You have to print the words in the given text in lexicographic order. Each word should appear exactly once and there should be no uppercase letters in the output. 

In the card game Wolf (a variant of the famous card games War and Sv lta r v), two players both have a pile of cards, which together form a normal deck of playing cards. Such a deck contains $52$ cards, with each card being a unique combination of one of $4$ suits and $13$ ranks. During a turn, each player picks the topmost card from their piles, and shows it. This process is repeated until the two cards have the same suit. Then, the player whose card had the highest rank receives all the cards that have been shown by the players during the turn (including the two that had the same suit), and these cards are shuffled into that player s pile. The turn then ends. The turn also ends if any player, when they are supposed to pick a card from their pile, has an empty pile. A player wins if, after the end of a turn, she has cards remaining in her pile but the opposing player has no cards remaining in their pile. This means that the game is tied if neither player has cards in their pile after the end of a turn. Your opponent is currently taking a bathroom break, so you have the opportunity to reshuffle your piles. You cannot exchange any cards, since your opponent knows the set of cards in their pile. Is it possible to reshuffle each of the two piles, so that you have won the game after the next turn  
tl;dr: