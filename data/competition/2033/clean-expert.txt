You need to write a program that, given the sequence a_{i}, build two non-isomorphic rooted trees that match that sequence, or determines that there is only one such tree. Input: The first line contains a single integer h (2 ≤ h ≤ 10^5) — the height of the tree. The second line contains h + 1 integers — the sequence a_0, a_1, ..., a_{h} (1 ≤ a_{i} ≤ 2·10^5). The sum of all a_{i} does not exceed 2·10^5. It is guaranteed that there is at least one tree matching this sequence. Output: If there is only one tree matching this sequence, print "perfect". Otherwise print "ambiguous" in the first line. In the second and in the third line print descriptions of two trees in the following format: in one line print $\sum_{i = 0}^{h} a_{i}$ integers, the k-th of them should be the parent of vertex k or be equal to zero, if the k-th vertex is the root. These treese should be non-isomorphic and should match the given sequence. Examples: Input 2 1 1 1 Output perfect Input 2 1 2 2 Output ambiguous 0 1 1 3 3 0 1 1 3 2
