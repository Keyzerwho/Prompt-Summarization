You are given a connected graph of $n$ nodes and $m$ bidirectional edges.For each node $p = 1, 2, \dots, n$, you need to find a minimum spanning tree. Then output the minimum cost required to travel between node $1$ and node $p$.Input:The first line of the input contains four integers $n$, $m$, $a$ and $b$ ($2 \leq n \leq 70$, $n - 1 \leq m \leq 200$, $1 \leq a < b \leq 10^7$) â€” the number of nodes and edges in the graph, and two possible travel times. Each of the following lines contains three integers $u, v, c$ ($1 \leq u, v \leq n$, $u \neq v$, $c \in \{a, b\}$) denoting an edge between the nodes $u$ and $v$, which has cost $c$.You can assume that the graph is connected and has no loops or multiedges.Output:Output a single line containing $n$ integers. The $p$-th of them should denote the minimum possible post required to travel from $1$ to $p$ after the selected edges are abandoned. Note that for each $p$ you can abandon a different set of edges.Examples:Input5 5 20 251 2 252 3 253 4 204 5 205 1 20Output0 25 60 40 20Input6 7 13 221 2 132 3 131 4 223 4 134 5 135 6 136 1 13Output0 13 26 39 26 13