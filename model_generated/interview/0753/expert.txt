 You are given a number of magnitude 1. You need to divide this number into as many positive parts as possible such that at any moment given a part A,  you can divide into only two parts B and C, such that B does not exceed C times some constant. summary :  
-----Input----- IThe first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows." The first line of each test case contains three space-separated integers MG MY MR denoting the number of green, yellow and red maple leaves respectively. The second line contains three space-separated integers OG OY OR denoting the number of green, yellow and red oak leaves respectively. The third line of each test case contains three space-separated integers PG PY PR denoting the number of green, yellow and red poplar leaves respectively. -----Output----- For each test case, output a single line containing the maximal amount of flowers in nice bouquet, satisfying all conditions or 0 if it's impossible to create any bouquet, satisfying the conditions. -----Constraints----- - 1 ≤ T ≤ 10000 - Subtask 1 (50 points): 0 ≤ MG, MY, MR, OG, OY, OR, PG, PY, PR ≤ 5 - Subtask 2 (50 points): 0 ≤ MG, MY, MR, OG, OY, OR, PG, PY, PR ≤ 109 -----Example----- Input:1 1 2 3 3 2 1 1 3 4 Output:7 -----Explanation----- Example case 1. We can create a bouquet with 7 leaves, for example, by collecting all yellow leaves. This is not the only way to create the nice bouquet with 7 leaves (for example, Sergey can use all but one red leaves), but it is impossible to create a nice bouquet with more than 7 leaves.