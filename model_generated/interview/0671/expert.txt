 The input given is a non-empty list of $N$ non-negative integers. The $i$-th number represents the price of a $i$-th player. The sum of all players' prices is $S$.  You need to output whether Chef can buy a defender and a forward such that he does not exceed the given total price limit  
-----Input----- - The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows. - The first line of each test case contains two space-separated integers $N$ and $S$. - The second line contains $N$ space-separated integers $P_1, P_2, \ldots, P_N$. - The last line contains $N$ space-separated integers. For each valid $i$, the $i$-th of these integers is $0$ if the $i$-th player is a defender or $1$ if the $i$-th player is a forward. -----Output----- For each test case, print a single line containing the string "yes" if it is possible to build a complete team or "no" otherwise (without quotes). -----Constraints----- - $1 \le T \le 100$ - $1 \le N \le 100$ - $13 \le S \le 100$ - $1 \le P_i \le 100$ for each valid $i$ -----Subtasks----- Subtask #1 (100 points): original constraints -----Example Input----- 2 4 90 3 8 6 5 0 1 1 0 4 90 5 7 6 5 0 1 1 0 -----Example Output----- yes no -----Explanation----- Example case 1: If Chef buys the $1$-st and $3$-rd player, the total price of his team is $90 + 9 = 99$, which is perfectly fine. There is no other valid way to pick two players. Example case 2: Chef cannot buy two players in such a way that all conditions are satisfied.