 You are given a string S (of M characters), each of which belongs to the set {'D', 'U', 'L', 'R'} (corresponding to it moving down, up, left, and right, respectively). To estimate Tuzik's level of safety, you need to output the sum of the distances from each cell on his path to all the dog-catchers 
-----Input----- The first line of the input contains two integers N and M. The following N lines contain two integers xi and yi each, describing coordinates of the dog-catchers. The last line of the input contains string S of M characters on the set {'D', 'U', 'L', 'R'}. - 'D' - decrease y by 1 - 'U' - increase y by 1 - 'L' - decrease x by 1 - 'R' - increase x by 1 -----Output----- Output M lines: for each cell of the path (except the starting cell), output the required sum of the distances. -----Constraints----- - 1 ≤ N ≤ 3 ✕ 105 - 1 ≤ M ≤ 3 ✕ 105 - -106 ≤ xi, yi ≤ 106 -----Example----- Input: 2 3 1 2 0 1 RDL Output: 4 6 6 -----Explanation----- Initially Tuzik stays at cell (0, 0). Let's consider his path: - Move 'R' to the cell (1, 0). Distance to the catcher (1, 2) equals 2, distance to the catcher (0, 1) equals 2, so the total distance equals 4 - Move 'D' to the cell (1, -1). Distance to the catcher (1, 2) equals 3, distance to the catcher (0, 1) equals 3, so the total distance equals 6 - Move 'L' to the cell (0, -1). Distance to the catcher (1, 2) equals 4, distance to the catcher (0, 1) equals 2, so the total distance equals 6