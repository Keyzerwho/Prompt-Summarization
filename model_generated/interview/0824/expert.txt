 You are given a graph having N$N$ nodes and N 1$N-1$ edges. The nodes are numbered from 1$1$ to N$N$, and the tree is rooted at node 1$1$. These nodes represent the corrupt officials and each corrupt official works under some other corrupt official except the Boss who is represented by node 1$1$. Gru believes in divide and conquer and thinks that this network needs to be divided into as many sub-networks as possible. He commands the minions to kill some of the corrupt officials in order to break the network into maximum sub-network
Note: After each operation, the topmost node (node with the lowest level. It can be proved that there will always be a unique node with the lowest level in each tree) of each of the remaining trees becomes the root of that particular tree (that is, after the first operation it can be visualized that the graph converts into a forest of rooted trees) -----Input:----- - First line will contain N$N$, number of nodes in the tree.  - Next N−1$N-1$ lines contains 2 integers U$U$, V$V$ denoting the endpoints of the ith$i^{th}$ edge. -----Output:----- - Print the maximum number of connected components you can obtain after doing the operation any number of times. -----Constraints----- - 1≤N≤106$1 \leq N \leq 10^6$ - 1≤U,V≤N$1 \leq U,V \leq N$ -----Sample Input:----- 7 1 2 1 3 2 4 2 5 3 6 3 7 -----Sample Output:----- 2 -----EXPLANATION:----- We have 4 leaf nodes in this tree: 4 5 6 7. Suppose we delete node 5, then along with it we also delete node 2 and node 1. so after the deletion we are left with 2 trees, one consisting of only node 4 as the root node of that particular tree, and the other consisting of node 3,6,7 with node 3 as the root node. This can also be achieved by deleting any of the other leaf nodes and it can be proved that we cannot obtain more than 2 connected components in this example.