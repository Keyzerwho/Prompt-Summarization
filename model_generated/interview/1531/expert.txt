 You are given N different numbers you want to make combinations of L different numbers. Create combinations so that: every number is used atleast once a number can only be repeated only if K other numbers have been used Return the number of possible combinations. As the answer can be very large, return it modulo 10^9 + 7. 
-----Input:----- The first line of the input contains an integer N$N$. The next line contains a list of space-separated integers a1, a2, …, an. The third line contains an integer M$M$. Each of the next M$M$ lines contains two integers x[i]$x[i]$ and y[i]$y[i]$. The integers mean that for the i-th time Bobby shoot the y[i]-th (from left) parrot on the x[i]-th branch. It's guaranteed there will be at least y[i] parrot on the x[i]-th branch at that moment.    -----Output:----- On the i−th$i-th$ line of the output print the number of parrots on the i−th$i-th$ branch. -----Constraints----- - 1≤N≤100$1 \leq N \leq 100$ - 0≤a[i]≤100$0 \leq a[i] \leq 100$ - 0≤M≤100$0 \leq M \leq 100$ - 1≤x[i]≤n$1 \leq x[i] \leq n$, 1≤y[i]$1 \leq y[i] $ -----Sample Input:----- 5 10 10 10 10 10 5 2 5 3 13 2 12 1 13 4 6    3 2 4 1 1 2 2    -----Sample Output:----- 0 12 5 0 16    3 0 3