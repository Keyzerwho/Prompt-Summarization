 You are given 12*N keys.    You have a pattern that consists of letters 'T' and 'S', where 'T' means move forward for two keys (from key x to key x + 2, and 'S' means move forward for one key (from key x to key x + 1).    Now, you can start playing from any of the 12*N keys. In one play, you can repeat the pattern as many times as you want, but you cannot go outside the keyboard. Repeating pattern means that if, for example, you have pattern S
-----Input----- The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. First line of each test case contains scale’s pattern – string s consisting of letters ‘T’ and ‘S’ only. Second line contains one integer N – number of octaves he’ll be using. -----Output----- For each test case output a single number in a line corresponding to number of different scales he’ll play.  -----Constraints----- - 1 ≤ T ≤ 105 - 1 ≤ |S| ≤ 100 - 1 ≤ n ≤ 7 -----Subtasks----- Subtask 1: T < 10 4, N = 1  Subtask 2: No additional constraints. -----Example----- Input: 2  TTTT 1 TTSTTTS 3 Output: 4 36 -----Explanation----- Example case 1. In the first case there is only one octave and Chef can play scale (not in cycle each time) starting with notes C, C#, D, D# - four together.