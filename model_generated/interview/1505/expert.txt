 Given a sequence of opening and closing brackets, compute the nesting depth and the position of the first opening bracket at this nesting depth, where the positions are numbered starting with 1. 
-----Input format----- The input consists of two lines. The first line is a single integer N, the length of the bracket sequence. Positions in the sequence are numbered 1,2,…,N. The second line is a sequence of N space-separated integers that encode the bracket expression as follows: 1 denotes an opening bracket ( and 2 denotes a closing bracket ).  Nothing other than 1 or 2 appears in the second line of input and the corresponding expression is guaranteed to be well-bracketed. -----Output format----- Your program should print 4 space-separated integers in a line, denoting the four quantities asked for in the following order: nesting depth, first position that achieves the nesting depth, length of the maximum sequence between matching brackets and the first position where such a maximum length sequence occurs.   -----Testdata----- You may assume that 2 ≤ N ≤ 105.  In 30% of the test cases, 2 ≤ N ≤ 103. - Subtask 1 (30 marks) - Subtask 2 (70 marks) -----Sample Input----- 20 1 2 1 1 2 2 1 2 1 1 2 1 2 2 1 1 2 1 2 2 -----Sample Output----- 2 4 6 9