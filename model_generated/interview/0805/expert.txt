 You are given $N$ types of street food, $S_i$ stores that sell each type, and $P_i$ people willing to buy each type. Chef wants to open a store and offer food of one of these $N$ types. Chef assumes that the people who want to buy the type of food he'd offer will split equally among all stores that offer it, and if this is impossible, i.e. the number of these people $p$ is not divisible by the number of these stores $s$, then only $\left\lfloor\frac{p}{s}\right\rfloor$ people will buy food from Chef. Chef wants to maximise his daily profit
-----Input----- - The first line of the input contains a single integer $T$ denoting the number of test cases. The description of $T$ test cases follows. - The first line of each test case contains a single integer $N$.  - $N$ lines follow. For each $i$ ($1 \le i \le N$), the $i$-th of these lines contains three space-separated integers $S_i$, $P_i$ and $V_i$. -----Output----- For each test case, print a single line containing one integer â€• the maximum profit. -----Constraints----- - $1 \le T \le 100$ - $1 \le N \le 100$ - $1 \le S_i, V_i, P_i \le 10,000$ for each valid $i$ -----Subtasks----- Subtask #1 (100 points): original constraints -----Example Input----- 2 3 4 6 8 2 6 6 1 4 3 1 7 7 4 -----Example Output----- 12 0 -----Explanation----- Example case 1: Chef should offer food of the second type. On each day, two people would buy from him, so his daily profit would be $12$. Example case 2: Chef has no option other than to offer the only type of food, but he does not expect anyone to buy from him anyway, so his daily profit is $0$.