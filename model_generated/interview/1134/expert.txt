 You are given N, A[i], M, and Dragons. Return the number of possible attacks Daario can make. As the answer can be very large, return it modulo 10^9 + 7. Example 1: Input: N = 3, A[i] = 10, M = 3, Dragons = 3 Output: 6 Explanation: There are 6 possible attacks. [1, 2, 3], [1, 3, 2], [2, 1,
-----Input----- First line has 'T' which is the number of test cases. For each test cases there are two space separated integers 'N' and 'M' denoting the number of nations and the number of nations he has Dragon's help for respectively. Follows N space separated integers denoting the size of army of each nation. -----Output----- Print 'VICTORY' if Daario conquers all nations and 'DEFEAT' if he doesn't.   -----Constraints----- - 1 ≤ T ≤ 500 - 1 ≤ M ≤N ≤ 100000 - 1 ≤ A[i] ≤ 100000 -----Example----- Input: 3 5 3 1 2 3 4 5 6 2 4 4 4 4 4 4 7 4  10 10 10 10 50 60 70 Output: VICTORY VICTORY DEFEAT  -----Explanation----- Example case 1. First 3 attacks add 1,2,3 to his army making it 6. (1+2+3 = 6) Then he looses 2 and 3 making it 1. (6-2-3 = 1) He conquers all so VICTORY. Example case 2. First 2 attacks add 4,4 to his army making it 8. (4+4 = 8) Then he looses 2,2,2,2 making it 0. (8-2-2-2-2 = 0) He conquers all so VICTORY. Example case 3. First 4 attacks add 10,10,10,10 to his army making it 40. (10+10+10+10 = 40) Then he looses 25 and then all 15 out of possible 30 making it 0. (40-25-15 = 0) He is defeated on 6th attack so DEFEAT.