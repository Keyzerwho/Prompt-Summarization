 You are given a sequence of coins, each coin having release year from 1 to n. Initially, Rohit's coins were in the sequence 1 2 3 4 5 6 7 8. Rohit's younger brother made a change   he took all the coins whose release year dated from l to r inclusively and put them in the reverse order. That is, he took a certain segment [l, r] and reversed it. At that, the segment's endpoints did not coincide. For example, if n = 8,
-----Input:----- - The first line contains an integer N which is the number of coins in Rohit's collection.  - The second line contains space-separated n integers which are the spoilt sequence of coins. It is guaranteed that the given sequence is a permutation, i.e. it contains only integers from 1 to n, and every number is used exactly 1 time. -----Output:----- If it is impossible to obtain the given permutation from the original one in exactly one action, print 0 0. Otherwise, print two numbers l, r (1 ≤ l < r ≤ n) which are the endpoints of the segment that needs to be reversed to obtain from permutation 1 2 … n the given one. -----Constraints----- - $1 \leq N \leq 1000$ - $1 \leq A[N] \leq 10^9$ -----Sample Input:----- 8 1 6 5 4 3 2 7 8 -----Sample Output:----- 2 6